desc: I1 cache:         32768 B, 64 B, 8-way associative
desc: D1 cache:         32768 B, 64 B, 8-way associative
desc: LL cache:         8388608 B, 64 B, direct-mapped
cmd: ./metrics.test -test.bench .
events: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw 
fl=.//home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics/metrics.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.AverageAge
37 140 4 4 40 0 0 20 0 0
39 14000380 6 6 6000060 610680 380086 4000120 3 1
40 10000000 0 0 4000000 2 1 2000000 0 0
41 18000000 0 0 6000000 2000000 1094443 2000000 0 0
43 4000080 0 0 40 0 0 2000020 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.AveragePaymentAmount
46 91 5 5 26 0 0 13 0 0
48 11700247 10 10 6500039 396955 384801 2600078 10 4
49 214500000 5 5 80600000 10318633 10064409 78000000 7 3
50 28600000 0 0 13000000 5 0 1300000 0 0
51 169000000 10 10 39000000 5 0 0 0 0
52 53300078 5 5 1300000 0 0 1300000 0 0
55 52 2 2 26 0 0 13 6 6
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.LoadData
73 7 1 1 2 0 0 1 0 0
74 1 0 0 0 0 0 0 0 0
75 2 0 0 0 0 0 0 0 0
78 1 1 1 0 0 0 0 0 0
79 9 2 2 4 0 0 4 2 2
80 2 0 0 0 0 0 0 0 0
84 8 2 2 2 0 0 5 1 0
85 1600001 17 6 500001 37614 35069 400000 3 3
86 900000 0 0 300000 51050 42777 400000 0 0
87 800000 7 3 400000 24509 20569 200000 0 0
88 900000 3 2 300000 24509 20562 400000 0 0
89 800000 0 0 400000 25490 21375 200000 0 0
90 500000 2 1 100000 0 0 400000 61 2
91 4256166 14 9 1499999 514 11 1700000 176028 115178
94 1 0 0 0 0 0 0 0 0
95 2 0 0 0 0 0 0 0 0
98 1 1 1 0 0 0 0 0 0
99 9 2 2 4 0 0 4 2 2
100 2 0 0 0 0 0 0 0 0
104 14000002 1070 104 5000001 377361 374608 3000000 104 3
105 9000000 970 33 3000000 753727 751596 4000000 227 2
106 9000000 32719 88 4000000 1793 60 4000000 0 0
107 3000000 0 0 3000000 0 0 0 0 0
108 53955179 49317 394 18863776 2255151 1723584 21508444 1037665 843375
109 12000000 22027 98 1000000 1362 39 2000000 0 0
110 6000000 13396 69 3000000 0 0 3000000 0 0
114 5 0 0 3 0 0 1 1 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.StdDevPaymentAmount
59 42 6 6 12 0 0 6 0 0
60 30 0 0 12 0 0 18 4 0
62 6000120 10 10 3600024 183210 174652 1200036 0 0
63 99000000 6 6 37200000 4762446 4601079 36000000 1 1
64 13200000 3 3 6000000 0 0 600000 0 0
65 78000000 0 0 18000000 0 0 0 0 0
66 6000000 0 0 0 0 0 0 0 0
67 18600036 3 3 600000 0 0 600000 0 0
70 36 0 0 12 0 0 6 0 0
fl=.//home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics/metrics_test.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics
8 6 2 2 2 0 0 1 0 0
9 3 1 1 1 0 0 2 1 0
11 17 1 1 4 0 0 9 0 0
22 17 3 3 4 0 0 9 0 0
34 17 2 2 4 0 0 9 0 0
45 3 1 1 2 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func1
11 20 2 2 6 0 0 4 0 0
13 128 2 2 64 60 20 20 0 0
14 80 0 0 40 0 0 40 0 0
17 28 4 4 8 4 1 0 0 0
18 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func2
22 20 4 4 6 0 0 4 0 0
24 50 2 2 25 21 21 7 0 0
25 28 0 0 14 0 0 14 0 0
29 22 2 2 6 2 2 0 0 0
30 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func3
34 30 6 6 9 0 0 6 0 0
36 48 5 5 24 18 18 6 0 0
37 24 0 0 12 0 0 12 0 0
40 42 6 6 12 6 6 0 0 0
41 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/bufio/bufio.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.LoadData
55 10 2 2 2 0 0 6 0 0
56 12 0 0 2 0 0 8 0 0
62 2 0 0 0 0 0 0 0 0
75 56 7 7 12 0 0 26 2 2
fn=bufio.(*Reader).ReadSlice
117 4 0 0 4 0 0 0 0 0
118 8 0 0 2 0 0 4 0 0
318 57750 2 2 23100 0 0 11550 0 0
330 6600012 160 60 2200004 2 0 1100002 0 0
332 4400008 0 0 2200004 0 0 0 0 0
334 21142588 38 20 4446208 1333 43 1111552 0 0
335 2200000 287 40 1100000 0 0 0 0 0
336 18700000 287 37 4400000 0 0 0 0 0
337 1100000 0 0 0 0 0 1100000 0 0
338 1100000 33 24 0 0 0 0 0 0
342 34656 0 0 23104 0 0 0 0 0
343 30 2 2 8 0 0 0 0 0
344 2 0 0 0 0 0 2 0 0
345 2 0 0 0 0 0 0 0 0
346 2 0 0 0 0 0 0 0 0
350 23100 0 0 11550 0 0 0 0 0
359 57750 12 7 34650 23 8 23100 0 0
363 8800014 40 23 0 0 0 0 0 0
364 3300000 0 0 1100000 0 0 1100000 111 2
365 1100000 56 28 0 0 0 1100000 0 0
368 8800020 0 0 2200004 0 0 5500010 0 0
fn=bufio.(*Reader).fill
86 69300 304 63 23100 0 0 11550 0 0
88 46200 0 0 23100 0 0 0 0 0
89 265489 685 85 46192 0 0 46100 0 0
90 46169 0 0 34621 0 0 11548 0 0
91 11548 0 0 0 0 0 11548 0 0
94 57750 2 2 23100 0 0 0 0 0
99 34650 72 33 0 0 0 11550 0 0
100 277200 46 23 115500 4563 35 57750 1 1
101 34648 0 0 0 0 0 0 0 0
104 23100 0 0 23100 11 0 0 0 0
105 23100 162 29 0 0 0 0 0 0
106 8 0 0 2 0 0 4 0 0
107 6 0 0 4 0 0 0 0 0
109 11548 0 0 0 0 0 0 0 0
110 34644 0 0 23096 0 0 0 0 0
fn=bufio.init
22 16 2 2 5 0 0 6 1 1
23 10 1 1 3 0 0 5 0 0
24 10 1 1 3 0 0 5 0 0
25 10 1 1 3 0 0 5 0 0
83 10 1 1 3 0 0 5 0 0
522 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/bufio/scan.go
fn=bufio.init
69 10 1 1 3 0 0 5 0 0
70 10 1 1 3 0 0 5 0 0
71 10 1 1 3 0 0 5 0 0
123 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/bytes/buffer.go
fn=bytes.init
44 16 2 2 5 0 0 6 1 1
45 10 1 1 3 0 0 5 1 1
385 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/bytes/bytes.go
fn=bufio.(*Reader).ReadSlice
91 6680862 95 35 1111552 0 0 5557760 54 14
fn=bytes.IndexRune
91 30600000 34 26 13600000 0 0 17000000 63 17
155 20400003 78 55 6800002 0 0 3400000 0 0
156 3400000 0 0 0 0 0 0 0 0
157 13600000 0 0 3400000 0 0 0 0 0
158 13600000 43 31 6800000 0 0 3400000 0 0
fn=encoding/csv.(*Reader).readRecord
91 24500000 89 50 6900000 0 0 17600000 0 0
fl=.//usr/lib/golang/src/compress/flate/huffman_bit_writer.go
fn=compress/flate.init.0
611 7 1 1 2 0 0 1 0 0
612 8 1 1 1 0 0 3 0 0
613 1 0 0 0 0 0 1 0 0
614 1 0 0 0 0 0 1 0 0
615 7 0 0 0 0 0 6 0 0
616 3 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/compress/flate/huffman_code.go
fn=compress/flate.(*huffmanEncoder).generate
53 1 0 0 0 0 0 1 0 0
54 1 0 0 0 0 0 1 0 0
274 6 1 1 2 0 0 1 0 0
275 3 0 0 2 0 0 0 0 0
279 13 2 2 3 0 0 7 1 1
281 7 1 1 3 0 0 0 0 0
285 213 0 0 31 0 0 0 0 0
286 60 0 0 0 0 0 0 0 0
287 6 1 1 0 0 0 2 1 1
288 2 0 0 0 0 0 0 0 0
290 174 0 0 0 0 0 58 0 0
291 174 1 1 58 0 0 29 2 2
294 5 0 0 0 0 0 2 1 1
296 31 0 0 0 0 0 0 0 0
297 3 0 0 0 0 0 0 0 0
300 9 1 1 1 0 0 0 0 0
302 5 0 0 2 0 0 0 0 0
304 3 0 0 2 0 0 0 0 0
fn=compress/flate.generateFixedLiteralEncoding
60 16 2 2 4 0 0 10 1 1
64 6 1 1 2 0 0 1 0 0
65 1 0 0 0 0 0 0 0 0
66 2 0 0 1 0 0 0 0 0
68 861 0 0 0 0 0 0 0 0
72 572 0 0 0 0 0 0 0 0
74 288 0 0 0 0 0 0 0 0
77 284 1 1 0 0 0 0 0 0
79 224 0 0 0 0 0 0 0 0
81 112 0 0 0 0 0 0 0 0
82 60 0 0 0 0 0 0 0 0
84 48 0 0 0 0 0 0 0 0
86 24 0 0 0 0 0 0 0 0
89 12 0 0 0 0 0 0 0 0
90 6 0 0 0 0 0 0 0 0
92 2002 0 0 0 0 0 572 18 18
94 4 0 0 2 0 0 1 0 0
348 2002 1 1 0 0 0 0 0 0
fn=compress/flate.generateFixedOffsetEncoding
60 16 1 1 4 0 0 10 2 2
97 6 2 2 2 0 0 1 0 0
98 1 0 0 0 0 0 0 0 0
99 2 0 0 1 0 0 0 0 0
100 93 1 1 0 0 0 0 0 0
101 120 0 0 0 0 0 60 2 2
103 4 1 1 2 0 0 1 0 0
348 60 0 0 0 0 0 0 0 0
fn=compress/flate.init
106 11 1 1 4 0 0 3 0 0
107 8 1 1 4 0 0 2 0 0
fn=compress/flate.init.0
60 17 2 2 4 0 0 10 1 1
fl=.//usr/lib/golang/src/compress/gzip/gunzip.go
fn=compress/gzip.init
32 16 2 2 5 0 0 6 0 0
34 10 1 1 3 0 0 5 0 0
37 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/context/context.go
fn=context.init
157 16 2 2 5 0 0 6 1 1
200 7 1 1 2 0 0 3 0 0
201 7 0 0 2 0 0 3 0 0
333 11 1 1 4 0 0 4 0 0
fn=context.init.0
335 6 1 1 2 0 0 1 0 0
336 3 0 0 1 0 0 2 0 0
337 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/encoding/binary/varint.go
fn=encoding/binary.init
103 19 2 2 7 0 0 6 0 0
fl=.//usr/lib/golang/src/encoding/csv/reader.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.LoadData
171 30 3 3 4 0 0 16 2 1
173 2 0 0 0 0 0 0 0 0
fn=encoding/csv.(*Reader).ReadAll
200 20 4 4 4 0 0 2 0 0
201 2 0 0 0 0 0 0 0 0
202 15400032 63 34 6600012 860 37 7700018 875 24
203 2200018 0 0 1100006 836 15 8 0 0
204 22 2 2 10 0 0 8 0 0
206 2200000 0 0 0 0 0 0 0 0
209 21212240 522 119 4400504 102 26 6600438 413149 394471
fn=encoding/csv.(*Reader).readLine
217 7700014 415 55 2200004 0 0 1100002 1 0
218 11000030 559 48 7700014 1 0 3300016 103 27
219 3300020 2 2 1100006 744 32 8 0 0
227 13200020 92 67 1100006 66 19 0 0 0
234 2200004 2 2 2200004 560 17 0 0 0
236 11000008 59 41 1100000 0 0 0 0 0
240 14300024 0 0 2200008 0 0 5500010 63 17
fn=encoding/csv.(*Reader).readRecord
96 11000020 62 27 0 0 0 0 0 0
245 13200000 0 0 3300000 0 0 0 0 0
253 500000 0 0 100000 0 0 400000 0 0
257 7700022 180 63 2200008 84 20 1100002 0 0
258 12100022 90 28 3300006 51 13 0 0 0
265 2200004 20 14 0 0 0 0 0 0
266 7700014 18 6 5500010 0 0 2200004 50 13
267 6600012 0 0 2200004 12 4 0 0 0
271 4400004 56 29 0 0 0 0 0 0
278 2200022 2 2 1100006 0 0 12 0 0
279 20 4 4 8 0 0 8 0 0
285 3300000 37 21 1100000 0 0 1100000 748 34
286 2200000 0 0 1100000 0 0 1100000 460 23
287 1100000 0 0 0 0 0 1100000 64 18
288 1100000 0 0 0 0 0 1100000 0 0
289 1100000 0 0 0 0 0 0 0 0
291 9500000 0 0 5900000 0 0 0 0 0
292 7500000 8 5 0 0 0 0 0 0
294 26400000 59 41 4600000 1 0 10200000 1069 39
296 29500000 33 21 6800000 1 0 20400000 62 17
298 19200000 37 24 6800000 0 0 0 0 0
299 6900000 0 0 2300000 0 0 0 0 0
301 5500000 0 0 1100000 0 0 0 0 0
304 10200000 48 22 6800000 1 0 0 0 0
305 14700000 0 0 0 0 0 3400000 0 0
311 89402335 170 77 37400020 508 7 34000035 0 0
312 30934230 4 4 10200042 707 33 6800056 59 17
313 3400000 0 0 0 0 0 0 0 0
314 38100000 38 24 15000000 0 0 0 0 0
315 4500000 0 0 0 0 0 0 0 0
320 700000 16 8 0 0 0 0 0 0
321 100000 0 0 0 0 0 0 0 0
322 300000 21 9 0 0 0 300000 0 0
323 200000 19 9 0 0 0 0 0 0
325 3023030 55 22 1100004 0 0 1100007 0 0
326 1700000 149 20 400000 0 0 300000 0 0
327 100000 0 0 0 0 0 0 0 0
328 200000 0 0 0 0 0 0 0 0
332 300000 32 9 200000 0 0 0 0 0
334 1300000 14 7 400000 0 0 0 0 0
335 1000000 11 7 400000 0 0 200000 0 0
336 100000 0 0 0 0 0 0 0 0
364 28500006 289 39 7200000 0 0 10800006 403 9
365 2400000 0 0 2400000 0 0 0 0 0
374 5500000 2 0 1100000 269 7 2200000 0 0
375 21200000 333 63 7000000 0 0 9400000 0 0
380 13557110 62 39 5500000 0 0 7700000 0 0
382 5500000 33 19 3300000 555 18 1100000 0 0
383 7700000 3 2 1100000 0 0 4400000 0 0
385 10257110 30 18 4400000 788 10 1100000 0 0
387 17300000 0 0 3500000 686 15 0 0 0
388 70128440 64 39 5700000 275 7 7000000 384516 272880
393 3300000 30 19 1100000 1340 16 0 0 0
394 13199992 27 19 4400000 1201 25 2200000 0 0
397 2 0 0 0 0 0 0 0 0
398 4 0 0 0 0 0 2 0 0
400 13400000 53 28 6800000 394 5 5500000 0 0
fn=encoding/csv.init
87 16 3 3 5 0 0 6 1 0
88 10 1 1 3 0 0 5 0 0
89 10 1 1 3 0 0 5 0 0
90 10 1 1 3 0 0 5 0 0
93 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/errors/errors.go
fn=errors.New
58 354 3 1 118 0 0 59 0 0
59 944 3 1 354 0 0 354 17 15
fl=.//usr/lib/golang/src/errors/wrap.go
fn=errors.init
103 24 3 3 10 1 0 8 1 1
fl=.//usr/lib/golang/src/flag/flag.go
fn=flag.(*FlagSet).Bool
112 8 0 0 4 0 0 4 0 0
624 56 1 1 20 0 0 32 0 0
635 24 2 2 8 0 0 4 0 0
636 20 0 0 4 0 0 12 0 0
637 4 0 0 0 0 0 0 0 0
638 20 1 1 12 0 0 4 0 0
fn=flag.(*FlagSet).Duration
264 2 1 1 1 0 0 1 0 0
807 14 0 0 5 0 0 8 0 0
820 6 1 1 2 0 0 1 0 0
821 5 0 0 1 0 0 3 0 0
822 1 0 0 0 0 0 0 0 0
823 5 0 0 3 0 0 1 0 0
fn=flag.(*FlagSet).Int
142 8 0 0 4 0 0 4 0 0
650 56 1 1 20 0 0 32 0 0
661 24 0 0 8 0 0 4 0 0
662 20 1 1 4 0 0 12 0 0
663 4 0 0 0 0 0 0 0 0
664 20 0 0 12 0 0 4 0 0
fn=flag.(*FlagSet).Parse
967 6 1 1 2 0 0 1 0 0
968 2 0 0 1 0 0 1 0 0
969 8 1 1 4 0 0 3 0 0
970 1 0 0 0 0 0 0 0 0
971 11 1 1 7 0 0 4 0 0
972 2 0 0 0 0 0 0 0 0
975 2 0 0 0 0 0 0 0 0
987 5 1 1 2 0 0 1 0 0
fn=flag.(*FlagSet).String
226 72 1 1 36 0 0 24 3 3
754 168 1 1 60 0 0 96 0 0
765 72 2 2 24 0 0 12 0 0
766 60 0 0 12 0 0 36 0 0
767 12 0 0 0 0 0 0 0 0
768 60 0 0 36 0 0 12 0 0
fn=flag.(*FlagSet).Uint
184 2 1 1 1 0 0 1 0 0
702 14 0 0 5 0 0 8 0 0
713 6 1 1 2 0 0 1 0 0
714 5 0 0 1 0 0 3 0 0
715 1 0 0 0 0 0 0 0 0
716 5 0 0 3 0 0 1 0 0
fn=flag.(*FlagSet).Var
839 161 2 2 46 0 0 23 0 0
841 874 3 3 414 6 0 345 23 23
842 207 1 1 69 1 0 115 0 0
843 23 0 0 0 0 0 0 0 0
853 69 0 0 46 0 0 0 0 0
854 7 1 1 3 0 0 2 0 0
856 346 2 2 138 0 0 138 4 4
857 69 0 0 46 0 0 0 0 0
fn=flag.(*FlagSet).parseOne
889 14 1 1 4 0 0 2 0 0
890 14 1 1 8 0 0 1 0 0
891 6 1 1 2 0 0 2 0 0
893 4 0 0 2 1 0 1 0 0
894 4 0 0 1 1 0 0 0 0
898 3 0 0 1 0 0 0 0 0
901 1 1 1 0 0 0 0 0 0
905 11 3 3 0 0 0 2 0 0
906 7 1 1 1 0 0 0 0 0
911 11 0 0 1 0 0 3 0 0
914 31 0 0 0 0 0 0 0 0
915 27 0 0 9 0 0 0 0 0
922 1 0 0 1 0 0 0 0 0
923 15 3 3 3 0 0 7 0 0
924 1 0 0 0 0 0 0 0 0
932 14 1 1 5 0 0 4 0 0
944 10 3 3 5 0 0 1 0 0
947 14 0 0 3 1 0 3 0 0
949 2 0 0 0 0 0 0 0 0
952 19 2 2 6 0 0 8 0 0
956 3 1 1 2 0 0 0 0 0
957 7 2 2 3 0 0 2 0 0
959 16 1 1 6 0 0 6 1 1
960 6 0 0 2 0 0 2 0 0
fn=flag.(*boolValue).String
127 24 2 2 12 0 0 8 0 0
fn=flag.(*durationValue).String
279 17 2 2 8 0 0 5 0 0
fn=flag.(*intValue).String
157 52 1 1 24 0 0 12 0 0
fn=flag.(*stringValue).Set
230 6 2 2 2 0 0 1 0 0
231 7 0 0 4 0 0 2 0 0
232 5 0 0 2 0 0 1 0 0
fn=flag.(*stringValue).String
237 12 1 1 12 0 0 0 0 0
fn=flag.(*uintValue).String
199 18 2 2 8 0 0 6 0 0
fn=flag.NewFlagSet
1027 6 1 1 2 0 0 1 0 0
1028 5 0 0 1 0 0 3 0 0
1029 6 1 1 3 0 0 2 1 0
1030 2 0 0 1 0 0 1 1 1
1032 11 1 1 3 0 0 5 1 1
1033 4 0 0 2 0 0 1 0 0
fn=flag.init
84 16 2 2 5 0 0 6 0 0
88 10 1 1 3 0 0 5 0 0
92 10 1 1 3 0 0 5 0 0
1010 17 1 1 8 1 0 5 1 1
fn=flag.init.0
1012 6 1 1 2 0 0 1 0 0
1017 6 1 1 2 0 0 1 0 0
1018 3 0 0 2 0 0 0 0 0
fn=testing.(*M).Run
992 1 0 0 1 1 0 0 0 0
999 18 1 1 4 0 0 5 0 0
1004 1 0 0 1 0 0 0 0 0
fn=testing.Init
644 33 4 4 6 0 0 21 0 0
670 44 4 4 8 0 0 28 0 0
722 11 1 1 2 0 0 7 0 0
774 132 13 13 22 0 0 77 0 0
830 11 1 1 2 0 0 7 0 0
fn=testing.initBenchmarkFlags
644 11 1 1 2 0 0 7 0 0
774 11 1 1 1 0 0 7 0 0
866 13 2 2 1 0 0 8 0 0
fn=testing.runBenchmarks
992 1 0 0 1 1 0 0 0 0
1004 1 0 0 1 0 0 0 0 0
fn=testing.runTests
992 1 0 0 1 0 0 0 0 0
1004 1 0 0 1 0 0 0 0 0
fl=.//usr/lib/golang/src/fmt/format.go
fn=fmt.(*fmt).fmtFloat
490 21 6 6 6 0 0 3 0 0
492 9 0 0 6 0 0 0 0 0
493 3 0 0 3 0 0 0 0 0
496 6 3 3 0 0 0 3 0 0
497 21 3 3 3 0 0 0 0 0
500 6 0 0 0 0 0 3 0 0
504 9 3 3 6 0 0 0 0 0
505 6 3 3 0 0 0 0 0 0
509 21 3 3 3 0 0 0 0 0
522 9 0 0 3 0 0 0 0 0
568 21 9 9 9 0 0 0 0 0
572 6 3 3 0 0 0 0 0 0
581 36 3 3 0 0 0 15 0 0
582 9 0 0 6 0 0 0 0 0
fn=fmt.(*fmt).fmtInteger
194 64 14 14 24 0 0 8 0 0
195 48 7 7 8 0 0 0 0 0
196 8 0 0 0 0 0 0 0 0
200 24 0 0 16 0 0 0 0 0
203 28 4 4 5 0 0 0 0 0
205 9 0 0 6 0 0 0 0 0
206 9 3 3 0 0 0 0 0 0
216 16 4 4 8 0 0 0 0 0
226 24 7 7 8 0 0 0 0 0
228 8 7 7 0 0 0 0 0 0
236 8 7 7 0 0 0 0 0 0
239 16 0 0 8 0 0 0 0 0
240 24 7 7 0 0 0 0 0 0
241 34 0 0 0 0 0 0 0 0
242 18 0 0 0 0 0 0 0 0
243 18 0 0 0 0 0 0 0 0
244 42 5 5 0 0 0 6 1 1
253 8 0 0 0 0 0 0 0 0
268 8 0 0 0 0 0 0 0 0
269 64 15 14 24 7 7 8 0 0
270 56 0 0 0 0 0 0 0 0
276 24 7 7 8 0 0 0 0 0
297 32 7 7 8 0 0 0 0 0
304 8 0 0 0 0 0 0 0 0
307 16 8 7 8 0 0 0 0 0
310 24 0 0 8 0 0 0 0 0
311 16 7 7 0 0 0 0 0 0
317 16 7 7 8 0 0 8 0 0
318 8 0 0 0 0 0 8 0 0
319 112 0 0 0 0 0 40 0 0
320 24 0 0 16 0 0 8 0 0
321 24 0 0 16 0 0 0 0 0
fn=fmt.(*fmt).fmtS
357 138 18 16 46 0 0 23 0 0
358 207 0 0 115 0 0 92 0 0
359 115 9 8 23 0 0 92 0 0
360 69 0 0 46 0 0 0 0 0
fn=fmt.(*fmt).pad
90 66 14 14 22 0 0 11 0 0
91 45 0 0 28 0 0 0 0 0
92 10 0 0 5 0 0 5 0 0
93 15 0 0 10 0 0 0 0 0
95 60 9 6 36 0 0 24 0 0
96 12 0 0 6 0 0 0 0 0
98 18 6 3 0 0 0 18 0 0
99 18 6 3 12 0 0 6 0 0
103 18 3 3 12 0 0 0 0 0
fn=fmt.(*fmt).padString
108 138 20 14 46 0 0 23 0 0
109 75 0 0 49 0 0 0 0 0
110 40 0 0 20 0 0 20 0 0
111 60 0 0 40 0 0 0 0 0
113 27 3 3 15 0 0 12 0 0
114 6 0 0 3 0 0 0 0 0
120 6 3 3 3 0 0 3 0 0
121 24 3 3 12 0 0 9 0 0
fn=fmt.(*fmt).truncateString
324 138 10 8 46 0 0 23 0 0
325 92 0 0 46 0 0 0 0 0
334 161 10 8 92 0 0 46 0 0
fn=fmt.(*fmt).writePadding
64 54 13 12 18 0 0 9 0 0
65 27 0 0 9 0 0 0 0 0
68 57 0 0 45 0 0 3 0 0
70 12 3 3 0 0 0 3 1 1
72 18 0 0 0 0 0 0 0 0
73 27 6 6 3 0 0 18 1 1
74 48 0 0 15 0 0 12 0 0
78 33 0 0 12 0 0 0 0 0
82 108 6 6 12 0 0 0 0 0
83 162 0 0 3 0 0 0 0 0
84 44 0 0 0 0 0 44 1 1
86 63 6 3 18 0 0 27 0 0
87 27 0 0 18 0 0 0 0 0
fn=fmt.(*pp).doPrintf
55 60 0 0 0 0 0 60 0 0
fn=fmt.newPrinter
55 46 0 0 0 0 0 46 0 0
59 69 8 8 23 0 0 23 5 4
60 23 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/fmt/print.go
fn=fmt.(*fmt).pad
78 320 23 17 122 0 0 131 0 0
fn=fmt.(*fmt).padString
82 640 30 24 250 0 0 265 2 0
fn=fmt.(*pp).argNumber
953 126 6 6 42 0 0 21 0 0
954 210 6 6 84 0 0 0 0 0
955 147 0 0 63 0 0 63 0 0
fn=fmt.(*pp).doPrintf
82 470 20 19 164 1 1 208 0 0
86 66 13 8 47 0 0 0 0 0
978 133 16 16 38 0 0 19 0 0
982 38 0 0 19 0 0 19 0 0
983 95 0 0 38 0 0 0 0 0
984 349 9 8 108 0 0 0 0 0
985 74 9 8 9 0 0 35 0 0
987 611 25 24 105 15 15 18 0 0
988 60 0 0 0 0 0 0 0 0
990 70 0 0 0 0 0 0 0 0
991 188 3 3 0 0 0 8 0 0
993 35 0 0 0 0 0 0 0 0
999 48 0 0 0 0 0 0 0 0
1002 30 0 0 0 0 0 0 0 0
1004 108 8 8 18 0 0 21 0 0
1005 84 0 0 51 0 0 0 0 0
1006 33 0 0 0 0 0 0 0 0
1007 33 0 0 0 0 0 0 0 0
1009 60 0 0 0 0 0 0 0 0
1011 66 9 8 0 0 0 0 0 0
1013 66 0 0 0 0 0 0 0 0
1014 3 0 0 0 0 0 3 0 0
1015 6 0 0 0 0 0 3 0 0
1021 195 10 8 21 0 0 0 0 0
1022 63 0 0 0 0 0 0 0 0
1030 210 9 8 63 0 0 105 0 0
1031 42 0 0 21 0 0 0 0 0
1032 42 0 0 21 0 0 0 0 0
1041 132 15 15 42 0 0 84 0 0
1044 72 0 0 27 0 0 0 0 0
1045 9 0 0 3 0 0 0 0 0
1046 45 3 3 21 0 0 21 0 0
1048 3 0 0 0 0 0 0 0 0
1054 9 3 3 3 0 0 0 0 0
1061 72 3 3 24 0 0 42 0 0
1062 12 3 3 0 0 0 0 0 0
1068 81 6 6 21 0 0 0 0 0
1070 6 0 0 0 0 0 0 0 0
1073 39 3 3 12 0 0 27 0 0
1074 24 3 3 9 0 0 0 0 0
1087 36 3 3 12 0 0 21 0 0
1088 3 0 0 0 0 0 0 0 0
1095 21 3 3 3 0 0 0 0 0
1096 99 12 12 27 0 0 63 0 0
1099 30 0 0 12 0 0 0 0 0
1104 36 3 3 24 0 0 0 0 0
1105 27 0 0 0 0 0 0 0 0
1108 18 6 6 0 0 0 9 0 0
1111 18 0 0 0 0 0 0 0 0
1113 18 6 6 9 0 0 0 0 0
1115 36 12 12 9 0 0 0 0 0
1117 18 0 0 0 0 0 0 0 0
1125 9 0 0 0 0 0 0 0 0
1126 90 6 6 27 0 0 45 0 0
1127 27 0 0 9 0 0 0 0 0
1134 95 18 16 38 0 0 0 0 0
1137 113 0 0 27 0 0 44 0 0
fn=fmt.(*pp).doPrintln
86 32 0 0 8 0 0 8 0 0
1168 24 4 3 8 0 0 4 0 0
1169 60 8 6 24 0 0 8 0 0
1170 12 0 0 0 0 0 0 0 0
1173 24 6 4 4 0 0 20 0 0
1175 20 0 0 16 0 0 0 0 0
fn=fmt.(*pp).fmtFloat
405 18 6 6 6 0 0 3 0 0
406 9 3 3 3 0 0 0 0 0
409 9 0 0 0 0 0 0 0 0
411 12 0 0 0 0 0 0 0 0
412 42 3 3 15 0 0 18 0 0
fn=fmt.(*pp).fmtInteger
370 48 14 14 16 0 0 8 0 0
371 24 7 7 8 0 0 0 0 0
378 16 0 0 0 0 0 0 0 0
379 120 7 7 24 0 0 64 0 0
382 8 0 0 0 0 0 0 0 0
383 24 7 7 16 0 0 0 0 0
388 8 0 0 0 0 0 0 0 0
fn=fmt.(*pp).fmtString
441 138 9 8 46 0 0 23 0 0
442 46 0 0 23 0 0 0 0 0
443 8 0 0 0 0 0 0 0 0
444 12 0 0 8 0 0 0 0 0
447 32 3 3 8 0 0 16 0 0
449 46 8 8 0 0 0 0 0 0
450 190 9 8 57 0 0 76 0 0
455 23 0 0 0 0 0 0 0 0
458 69 10 8 46 0 0 0 0 0
fn=fmt.(*pp).free
146 138 22 16 46 0 0 23 0 0
153 69 0 0 46 0 0 0 0 0
157 23 0 0 0 0 0 23 0 0
158 92 0 0 23 2 0 46 0 0
159 115 8 8 23 0 0 46 0 0
160 92 0 0 23 0 0 46 3 3
161 138 8 8 0 0 0 92 0 0
162 69 0 0 46 0 0 0 0 0
fn=fmt.(*pp).printArg
638 238 20 16 68 0 0 34 0 0
639 272 13 8 136 0 0 68 4 3
640 170 0 0 34 0 0 68 0 0
642 102 10 8 0 0 0 0 0 0
655 102 13 8 34 0 0 0 0 0
658 68 10 8 0 0 0 0 0 0
664 753 87 72 159 19 18 0 0 0
670 15 3 3 0 0 0 15 0 0
676 40 7 7 0 0 0 40 0 0
698 115 0 0 0 0 0 115 0 0
fn=fmt.Fprintf
202 66 12 12 22 0 0 11 0 0
203 33 0 0 11 0 0 22 0 0
204 121 6 6 55 0 0 66 0 0
205 198 10 6 110 6 6 88 0 0
206 33 0 0 11 0 0 22 0 0
207 99 9 4 55 0 0 33 0 0
fn=fmt.Fprintln
262 24 8 6 8 0 0 4 0 0
263 12 0 0 4 0 0 8 0 0
264 28 0 0 12 0 0 16 0 0
265 72 7 6 40 4 3 32 0 0
266 12 0 0 4 0 0 8 0 0
267 36 4 3 20 0 0 12 0 0
fn=fmt.Sprintf
217 48 12 11 16 0 0 8 0 0
218 24 0 0 8 0 0 16 0 0
219 88 7 7 40 0 0 48 0 0
220 104 7 7 48 0 0 56 0 0
221 24 0 0 8 0 0 16 0 0
222 56 7 7 32 0 0 16 0 0
fn=fmt.glob..func1
132 80 10 10 25 0 0 25 0 0
fn=fmt.intFromArg
302 9 3 3 0 0 0 0 0 0
893 18 3 3 6 0 0 3 0 0
895 12 3 3 6 0 0 0 0 0
896 30 0 0 12 0 0 0 0 0
897 6 0 0 0 0 0 0 0 0
916 3 0 0 0 0 0 0 0 0
917 6 0 0 0 0 0 0 0 0
922 21 0 0 6 0 0 9 0 0
fn=fmt.newPrinter
136 138 23 16 46 0 0 23 0 0
137 184 0 0 46 0 0 46 1 1
138 23 0 0 0 0 0 23 5 4
140 23 0 0 0 0 0 23 0 0
141 23 0 0 0 0 0 0 0 0
142 92 0 0 46 0 0 23 0 0
fn=fmt.parsenum
302 36 0 0 0 0 0 0 0 0
306 27 3 3 0 0 0 9 0 0
307 36 3 3 18 0 0 0 0 0
310 246 3 3 39 0 0 0 0 0
311 12 0 0 0 0 0 0 0 0
314 60 0 0 0 0 0 0 0 0
317 54 3 3 18 0 0 27 0 0
fn=testing.(*M).Run
274 9 0 0 1 1 1 6 0 0
fl=.//usr/lib/golang/src/fmt/scan.go
fn=fmt.init
465 16 2 2 5 0 0 6 1 0
466 13 1 1 5 0 0 5 1 1
fl=.//usr/lib/golang/src/hash/crc32/crc32.go
fn=hash/crc32.init
99 15 2 2 6 0 0 4 0 0
fl=.//usr/lib/golang/src/hash/crc32/crc32_generic.go
fn=hash/crc32.simpleMakeTable
18 6 1 1 2 0 0 1 0 0
19 5 1 1 1 0 0 3 0 0
20 3 0 0 1 0 0 2 0 0
21 5 0 0 3 0 0 1 0 0
fn=hash/crc32.simplePopulateTable
27 1285 1 1 1 0 0 0 0 0
29 6912 0 0 0 0 0 0 0 0
30 4096 0 0 0 0 0 0 0 0
31 3072 0 0 0 0 0 0 0 0
33 2048 0 0 0 0 0 0 0 0
36 768 0 0 256 0 0 256 16 16
fl=.//usr/lib/golang/src/internal/bytealg/count_amd64.s
fn=countbody
37 7 0 0 0 0 0 0 0 0
38 7 0 0 0 0 0 0 0 0
39 7 0 0 0 0 0 0 0 0
40 7 0 0 0 0 0 0 0 0
42 7 0 0 0 0 0 0 0 0
43 7 0 0 0 0 0 0 0 0
45 5 0 0 0 0 0 0 0 0
47 5 0 0 0 0 0 0 0 0
49 5 0 0 0 0 0 0 0 0
50 5 0 0 0 0 0 0 0 0
52 5 5 4 0 0 0 0 0 0
53 5 0 0 0 0 0 0 0 0
57 6 0 0 6 2 1 0 0 0
59 6 0 0 0 0 0 0 0 0
61 6 0 0 0 0 0 0 0 0
63 6 0 0 0 0 0 0 0 0
65 6 0 0 0 0 0 0 0 0
67 6 0 0 0 0 0 0 0 0
69 11 0 0 0 0 0 0 0 0
70 11 0 0 0 0 0 0 0 0
73 5 0 0 0 0 0 0 0 0
74 5 0 0 0 0 0 0 0 0
78 2 0 0 0 0 0 0 0 0
79 2 0 0 0 0 0 0 0 0
80 2 0 0 0 0 0 0 0 0
81 2 0 0 0 0 0 0 0 0
82 2 0 0 0 0 0 0 0 0
86 2 0 0 2 0 0 0 0 0
87 2 2 2 0 0 0 0 0 0
88 2 0 0 0 0 0 0 0 0
90 2 0 0 0 0 0 0 0 0
91 2 0 0 0 0 0 0 0 0
92 2 0 0 0 0 0 0 0 0
94 5 3 1 0 0 0 5 0 0
95 5 0 0 5 0 0 0 0 0
99 2 2 1 0 0 0 0 0 0
100 2 0 0 0 0 0 0 0 0
103 1 0 0 0 0 0 0 0 0
104 1 0 0 0 0 0 0 0 0
105 1 0 0 0 0 0 0 0 0
109 1 0 0 0 0 0 0 0 0
110 1 0 0 0 0 0 0 0 0
111 1 0 0 0 0 0 0 0 0
112 1 0 0 0 0 0 0 0 0
115 1 0 0 1 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
119 1 1 0 0 0 0 0 0 0
121 1 0 0 0 0 0 0 0 0
122 1 0 0 0 0 0 0 0 0
125 1 0 0 0 0 0 1 0 0
126 1 0 0 1 0 0 0 0 0
128 1 1 1 0 0 0 1 0 0
129 1 0 0 1 0 0 0 0 0
fn=internal/bytealg.CountString
1 7 0 0 0 0 0 0 0 0
19 7 7 4 7 2 1 0 0 0
20 7 0 0 0 0 0 0 0 0
22 7 0 0 7 0 0 0 0 0
23 7 0 0 7 0 0 0 0 0
24 7 0 0 7 0 0 0 0 0
25 7 7 4 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/bytealg/equal_amd64.s
fn=memeqbody
39 123 19 10 0 0 0 0 0 0
40 123 0 0 0 0 0 0 0 0
41 108 0 0 0 0 0 0 0 0
42 108 17 10 0 0 0 0 0 0
100 109 16 10 0 0 0 0 0 0
101 109 18 10 0 0 0 0 0 0
102 9 0 0 9 0 0 0 0 0
103 9 0 0 9 2 2 0 0 0
104 9 0 0 0 0 0 0 0 0
105 9 0 0 0 0 0 0 0 0
106 9 0 0 0 0 0 0 0 0
107 9 0 0 0 0 0 0 0 0
108 9 0 0 0 0 0 0 0 0
109 8 0 0 0 0 0 8 0 0
110 8 0 0 8 0 0 0 0 0
114 100 0 0 100 0 0 0 0 0
115 100 0 0 100 17 11 0 0 0
116 100 0 0 0 0 0 0 0 0
117 100 0 0 0 0 0 100 0 0
118 100 0 0 100 0 0 0 0 0
121 15 1 0 0 0 0 0 0 0
122 15 0 0 0 0 0 0 0 0
124 15 0 0 0 0 0 0 0 0
125 15 0 0 0 0 0 0 0 0
127 15 2 2 0 0 0 0 0 0
128 15 0 0 0 0 0 0 0 0
131 15 0 0 15 1 0 0 0 0
132 15 0 0 0 0 0 0 0 0
140 15 0 0 0 0 0 0 0 0
141 15 0 0 0 0 0 0 0 0
142 15 0 0 15 2 2 0 0 0
143 15 0 0 0 0 0 0 0 0
149 15 0 0 0 0 0 0 0 0
150 15 0 0 0 0 0 0 0 0
152 15 0 0 0 0 0 15 0 0
fn=runtime.memequal
1 5 0 0 5 0 0 0 0 0
10 128 18 10 128 0 0 0 0 0
11 128 0 0 128 0 0 0 0 0
12 128 0 0 0 0 0 0 0 0
13 128 0 0 0 0 0 0 0 0
14 123 0 0 123 0 0 0 0 0
15 123 0 0 0 0 0 0 0 0
16 123 0 0 0 0 0 0 0 0
18 5 0 0 0 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/bytealg/index_amd64.go
fn=internal/bytealg.init.0
12 2 1 1 1 0 0 0 0 0
13 2 0 0 1 0 0 1 0 0
fl=.//usr/lib/golang/src/internal/bytealg/indexbyte_amd64.s
fn=indexbytebody
30 8011725 62 29 0 0 0 0 0 0
31 8011725 0 0 0 0 0 0 0 0
32 8011725 0 0 0 0 0 0 0 0
33 8011725 0 0 0 0 0 0 0 0
35 8011725 0 0 0 0 0 0 0 0
36 8011725 0 0 0 0 0 0 0 0
38 4515086 0 0 0 0 0 0 0 0
40 4515086 0 0 0 0 0 0 0 0
41 4515086 0 0 0 0 0 0 0 0
43 2017494 0 0 0 0 0 0 0 0
44 2017494 0 0 0 0 0 0 0 0
48 2013355 0 0 2013355 70 65 0 0 0
50 2013355 0 0 0 0 0 0 0 0
52 2013355 0 0 0 0 0 0 0 0
54 2013355 0 0 0 0 0 0 0 0
55 2013355 0 0 0 0 0 0 0 0
57 2013181 0 0 0 0 0 0 0 0
59 4030675 5 4 0 0 0 0 0 0
60 4030675 0 0 0 0 0 0 0 0
64 2017320 0 0 0 0 0 0 0 0
65 2017320 0 0 2017320 0 0 0 0 0
66 2017320 0 0 0 0 0 0 0 0
67 2017320 0 0 0 0 0 0 0 0
68 2017320 0 0 0 0 0 0 0 0
69 2017320 0 0 0 0 0 0 0 0
72 4510753 0 0 0 0 0 4510753 0 0
73 4510753 0 0 4510753 0 0 0 0 0
80 1003380 0 0 0 0 0 0 0 0
81 1003380 0 0 0 0 0 0 0 0
82 1003380 0 0 0 0 0 1003380 0 0
83 1003380 0 0 1003380 0 0 0 0 0
87 3496639 51 27 0 0 0 0 0 0
88 3496639 0 0 0 0 0 0 0 0
91 3496610 0 0 0 0 0 0 0 0
92 3496610 0 0 0 0 0 0 0 0
93 3496610 0 0 0 0 0 0 0 0
95 3491630 0 0 3491630 1712 35 0 0 0
96 3491630 0 0 0 0 0 0 0 0
97 3491630 0 0 0 0 0 0 0 0
98 3491630 0 0 0 0 0 0 0 0
99 3491630 0 0 0 0 0 0 0 0
100 1239676 0 0 0 0 0 0 0 0
101 1239676 0 0 0 0 0 0 0 0
106 4980 0 0 4980 0 0 0 0 0
107 4980 0 0 0 0 0 0 0 0
108 4980 0 0 0 0 0 0 0 0
109 4980 0 0 0 0 0 0 0 0
110 4980 0 0 0 0 0 0 0 0
111 4980 0 0 0 0 0 0 0 0
112 4980 0 0 0 0 0 0 0 0
113 4980 0 0 0 0 0 0 0 0
118 2497657 57 34 2497657 719 36 0 0 0
119 2497657 0 0 0 0 0 0 0 0
120 2497592 57 34 0 0 0 0 0 0
121 2497592 0 0 0 0 0 0 0 0
122 2497592 0 0 0 0 0 0 0 0
124 3613135 0 0 3613135 185219 2546 0 0 0
125 3613135 0 0 0 0 0 0 0 0
126 3613135 0 0 0 0 0 0 0 0
127 3613135 0 0 0 0 0 0 0 0
128 1177971 0 0 0 0 0 0 0 0
129 1177971 0 0 0 0 0 0 0 0
130 1177971 0 0 0 0 0 0 0 0
131 62428 0 0 0 0 0 0 0 0
132 62428 0 0 62428 1 0 0 0 0
133 62428 0 0 0 0 0 0 0 0
134 62428 0 0 0 0 0 0 0 0
135 62428 0 0 0 0 0 0 0 0
136 801 0 0 0 0 0 0 0 0
137 801 0 0 0 0 0 801 0 0
138 801 0 0 801 0 0 0 0 0
141 2496791 58 34 0 0 0 0 0 0
142 2496791 0 0 0 0 0 0 0 0
143 2496791 0 0 0 0 0 0 0 0
144 2496791 0 0 0 0 0 0 0 0
145 2496791 0 0 0 0 0 2496791 0 0
146 2496791 0 0 0 0 0 0 0 0
fn=internal/bytealg.IndexByte
1 8011552 0 0 0 0 0 0 0 0
9 8011552 22 15 8011552 0 0 0 0 0
10 8011552 0 0 8011552 0 0 0 0 0
11 8011552 0 0 8011552 0 0 0 0 0
12 8011552 0 0 0 0 0 0 0 0
fn=internal/bytealg.IndexByteString
1 173 0 0 0 0 0 0 0 0
16 173 19 9 173 0 0 0 0 0
17 173 0 0 173 0 0 0 0 0
18 173 0 0 173 0 0 0 0 0
19 173 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu.go
fn=internal/cpu.Initialize
141 6 1 1 2 0 0 1 0 0
142 1 0 0 0 0 0 1 0 0
143 5 0 0 2 0 0 3 0 0
144 3 0 0 2 0 0 0 0 0
fn=internal/cpu.processOptions
167 7 1 1 2 0 0 1 0 0
169 4 1 1 2 0 0 0 0 0
217 189 3 3 64 0 0 61 0 0
218 30 0 0 15 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu_x86.go
fn=internal/cpu.doinit
41 6 1 1 2 0 0 1 0 0
42 5 1 1 1 0 0 3 1 1
43 5 0 0 2 0 0 1 0 0
44 2 0 0 0 0 0 1 0 0
45 2 1 1 0 0 0 1 0 0
46 2 0 0 0 0 0 1 0 0
47 2 0 0 0 0 0 1 0 0
48 2 0 0 0 0 0 1 0 0
49 2 0 0 0 0 0 1 0 0
50 2 1 1 0 0 0 1 0 0
51 2 0 0 0 0 0 1 0 0
52 2 0 0 0 0 0 1 0 0
53 2 0 0 0 0 0 1 0 0
54 2 1 1 0 0 0 1 0 0
55 2 0 0 0 0 0 1 0 0
56 2 0 0 0 0 0 1 0 0
59 12 1 1 2 0 0 6 0 0
62 4 0 0 1 0 0 3 0 0
64 2 0 0 0 0 0 0 0 0
68 5 2 2 2 0 0 3 0 0
69 2 0 0 0 0 0 1 0 0
71 2 0 0 0 0 0 1 0 0
72 2 0 0 0 0 0 1 0 0
73 2 0 0 0 0 0 1 0 0
74 2 1 1 0 0 0 1 0 0
75 2 0 0 0 0 0 1 0 0
76 2 0 0 0 0 0 1 0 0
77 2 0 0 0 0 0 1 0 0
78 2 0 0 0 0 0 1 0 0
79 1 0 0 0 0 0 1 0 0
83 1 0 0 0 0 0 0 0 0
84 2 0 0 1 0 0 1 0 0
86 2 0 0 0 0 0 0 0 0
89 2 0 0 0 0 0 1 0 0
91 3 0 0 1 0 0 0 0 0
95 3 0 0 1 0 0 2 0 0
96 2 1 1 0 0 0 1 0 0
97 5 0 0 1 0 0 2 0 0
98 2 0 0 0 0 0 1 0 0
99 2 0 0 0 0 0 1 0 0
100 2 0 0 0 0 0 1 0 0
101 3 0 0 2 0 0 0 0 0
104 10 1 1 1 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu_x86.s
fn=internal/cpu.cpuid
1 3 0 0 3 0 0 0 0 0
11 3 1 1 3 0 0 0 0 0
12 3 0 0 3 0 0 0 0 0
13 3 0 0 0 0 0 0 0 0
14 3 0 0 0 0 0 3 0 0
15 3 1 1 0 0 0 3 0 0
16 3 0 0 0 0 0 3 0 0
17 3 0 0 0 0 0 3 0 0
fn=internal/cpu.xgetbv
22 1 0 0 0 0 0 0 0 0
23 1 0 0 0 0 0 0 0 0
24 1 0 0 0 0 0 1 0 0
25 1 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/internal/oserror/errors.go
fn=internal/oserror.init
13 16 3 3 5 0 0 6 1 1
14 10 1 1 3 0 0 5 1 1
15 10 1 1 3 0 0 5 0 0
16 10 1 1 3 0 0 5 0 0
17 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/poll/errno_unix.go
fn=internal/poll.(*pollDesc).init
22 6 0 0 2 0 0 0 0 0
29 2 0 0 0 0 0 0 0 0
32 8 2 2 2 0 0 4 0 0
fl=.//usr/lib/golang/src/internal/poll/fd.go
fn=internal/poll.init
20 16 3 3 5 0 0 6 0 0
24 10 1 1 3 0 0 5 0 0
28 10 1 1 3 0 0 5 0 0
51 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_mutex.go
fn=internal/poll.(*FD).Read
221 103950 0 0 34650 1249 32 34650 598 29
fn=internal/poll.(*FD).Write
239 81 7 6 27 7 5 27 0 0
fn=internal/poll.(*FD).decref
211 12 2 2 4 0 0 2 0 0
212 12 0 0 6 0 0 4 1 1
213 20 2 2 10 0 0 8 0 0
fn=internal/poll.(*FD).readUnlock
230 69300 60 34 23100 0 0 11550 0 0
231 115500 59 33 57750 12 0 34650 0 0
fn=internal/poll.(*FD).writeUnlock
248 54 7 6 18 0 0 9 0 0
249 90 6 6 45 0 0 27 0 0
fn=internal/poll.(*fdMutex).decref
102 12 4 4 4 0 0 2 0 0
103 2 0 0 2 0 0 0 0 0
104 2 0 0 2 0 0 0 0 0
105 4 0 0 0 0 0 0 0 0
108 2 0 0 0 0 0 0 0 0
109 10 0 0 2 0 0 0 0 0
110 12 1 1 4 0 0 2 0 0
fn=internal/poll.(*fdMutex).increfAndClose
71 12 2 2 4 0 0 2 0 0
72 2 0 0 2 0 0 0 0 0
73 4 0 0 2 0 0 2 0 0
74 4 2 2 0 0 0 0 0 0
78 6 0 0 0 0 0 0 0 0
79 4 0 0 0 0 0 0 0 0
83 4 0 0 0 0 0 0 0 0
84 10 0 0 2 0 0 0 0 0
87 10 2 2 2 0 0 0 0 0
91 6 2 2 0 0 0 0 0 0
95 8 0 0 4 0 0 2 0 0
fn=internal/poll.(*fdMutex).rwlock
117 92472 512 91 34677 0 0 11559 282 18
120 11559 0 0 0 0 0 0 0 0
124 69300 0 0 23100 0 0 0 0 0
129 63 12 12 18 0 0 0 0 0
132 11559 0 0 11559 0 0 0 0 0
133 23118 0 0 0 0 0 0 0 0
137 69354 0 0 0 0 0 11559 0 0
139 34677 0 0 0 0 0 0 0 0
140 23118 0 0 0 0 0 0 0 0
145 11559 0 0 0 0 0 11559 0 0
146 11559 0 0 0 0 0 11559 0 0
150 57795 1160 67 11559 0 0 0 0 0
151 11559 0 0 0 0 0 0 0 0
152 46236 570 51 23118 0 0 11559 0 0
154 11559 108 31 0 0 0 11559 0 0
fn=internal/poll.(*fdMutex).rwunlock
162 92472 1360 113 34677 0 0 11559 0 0
165 11559 0 0 0 0 0 0 0 0
169 80859 0 0 11550 0 0 0 0 0
174 63 16 12 18 0 0 0 0 0
177 11559 0 0 11559 0 0 0 0 0
178 46236 713 61 0 0 0 0 0 0
182 46236 0 0 0 0 0 0 0 0
183 34677 0 0 0 0 0 0 0 0
184 23118 0 0 0 0 0 0 0 0
186 57795 0 0 11559 0 0 0 0 0
187 11559 0 0 0 0 0 0 0 0
190 69354 75 41 23118 0 0 11559 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_poll_runtime.go
fn=internal/poll.(*FD).Close
61 8 0 0 4 0 0 0 0 0
fn=internal/poll.(*FD).Read
76 69300 58 32 23100 0 0 46200 0 0
fn=internal/poll.(*FD).Write
80 54 6 6 18 0 0 36 0 0
fn=internal/poll.(*FD).destroy
52 4 0 0 0 0 0 0 0 0
fn=internal/poll.(*pollDesc).init
37 12 2 2 4 0 0 2 0 0
38 2 0 0 2 2 1 0 0 0
39 16 4 4 8 0 0 8 0 0
40 4 0 0 0 0 0 0 0 0
41 4 0 0 0 0 0 0 0 0
42 4 0 0 0 0 0 4 0 0
43 8 0 0 2 0 0 4 0 0
45 12 0 0 4 0 0 4 0 0
fn=internal/poll.(*pollDesc).prepare
67 69354 293 53 23118 0 0 11559 0 0
68 46236 0 0 23118 0 0 0 0 0
69 57795 403 58 23118 0 0 11559 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_posix.go
fn=internal/poll.(*FD).Read
17 23110 34 23 4 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_unix.go
fn=internal/poll.(*FD).Close
86 12 2 2 4 0 0 2 0 0
87 12 2 2 6 2 2 4 1 1
100 8 0 0 4 0 0 4 0 0
108 6 0 0 4 0 0 0 0 0
112 10 2 2 4 0 0 4 0 0
fn=internal/poll.(*FD).Init
54 40 4 2 15 0 0 5 0 0
56 30 3 2 15 3 2 0 0 0
57 10 0 0 5 0 0 5 0 0
59 5 0 0 0 0 0 0 0 0
60 3 1 1 0 0 0 3 0 0
61 15 0 0 6 0 0 3 0 0
63 14 0 0 6 0 0 6 0 0
64 4 0 0 0 0 0 0 0 0
67 4 2 1 2 0 0 2 0 0
69 10 0 0 4 0 0 4 0 0
fn=internal/poll.(*FD).Read
145 138600 16474 98 23100 0 0 57750 0 0
146 23100 340 44 0 0 0 0 0 0
149 57750 0 0 11550 0 0 34650 0 0
150 34650 0 0 11550 0 0 0 0 0
158 57750 0 0 11550 776 2 11550 0 0
161 69300 61 36 34650 0 0 0 0 0
165 34650 0 0 11550 0 0 11550 0 0
166 34650 0 0 0 0 0 0 0 0
180 46206 64 49 4 0 0 0 0 0
181 115500 0 0 34650 0 0 69300 588 23
fn=internal/poll.(*FD).Write
254 108 13 12 18 0 0 45 0 0
255 18 0 0 0 0 0 0 0 0
258 45 0 0 9 0 0 27 0 0
259 99 8 6 45 7 5 9 0 0
265 63 7 6 9 0 0 0 0 0
266 9 0 0 0 0 0 9 0 0
268 117 13 12 9 0 0 0 0 0
269 18 0 0 0 0 0 0 0 0
270 18 0 0 9 0 0 0 0 0
272 27 6 6 9 0 0 0 0 0
273 90 8 6 27 0 0 54 0 0
fn=internal/poll.(*FD).destroy
74 12 2 2 4 0 0 2 0 0
77 4 0 0 4 0 0 0 0 0
78 18 2 2 10 2 2 8 1 1
79 4 0 0 2 0 0 2 0 0
80 6 2 2 0 0 0 4 0 0
81 14 0 0 8 0 0 4 0 0
fl=.//usr/lib/golang/src/internal/reflectlite/type.go
fn=internal/reflectlite.(*rtype).Elem
490 2 0 0 1 1 1 0 0 0
547 6 1 1 2 0 0 1 0 0
548 3 1 1 1 0 0 0 0 0
555 2 1 1 0 0 0 0 0 0
558 2 1 1 0 0 0 0 0 0
560 6 1 1 3 0 0 2 0 0
916 3 0 0 0 0 0 0 0 0
fn=internal/reflectlite.TypeOf
664 1 1 1 1 0 0 0 0 0
665 3 0 0 1 0 0 2 0 0
916 3 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/syscall/unix/nonblocking.go
fn=internal/syscall/unix.IsNonblock
15 18 1 1 6 0 0 3 0 0
16 27 1 1 12 1 1 15 0 0
17 6 0 0 0 0 0 0 0 0
20 21 1 1 6 0 0 6 0 0
fl=.//usr/lib/golang/src/internal/testlog/log.go
fn=internal/testlog.Open
43 8 0 0 4 0 0 4 0 0
44 4 2 2 0 0 0 0 0 0
58 15 4 4 6 0 0 2 1 1
59 14 0 0 4 0 0 0 0 0
60 4 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/io/io.go
fn=io.init
28 16 2 2 5 0 0 6 1 1
31 10 1 1 3 0 0 5 0 0
38 10 1 1 3 0 0 5 1 1
42 10 1 1 3 0 0 5 1 1
47 10 1 1 3 0 0 5 0 0
483 10 1 1 3 0 0 5 0 0
484 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/io/pipe.go
fn=io.init
36 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/log/log.go
fn=log.New
65 6 1 1 2 0 0 1 0 0
66 22 2 2 10 0 0 8 1 1
fn=log.init
76 21 3 3 7 1 0 7 0 0
fl=.//usr/lib/golang/src/math/abs.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func1
13 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func2
13 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func3
13 3 0 0 0 0 0 0 0 0
fn=testing.prettyPrint
13 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/math/bits.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func1
39 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func2
39 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func3
39 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/math/bits/bits.go
fn=compress/flate.generateFixedLiteralEncoding
234 2574 0 0 572 4 4 0 0 0
fn=compress/flate.generateFixedOffsetEncoding
234 210 0 0 60 0 0 0 0 0
fl=.//usr/lib/golang/src/math/exp_asm.go
fn=math.init
11 5 1 1 3 1 0 1 0 0
fl=.//usr/lib/golang/src/math/unsafe.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func1
23 2 2 2 0 0 0 0 0 0
29 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func2
23 2 0 0 0 0 0 0 0 0
29 8 2 2 2 2 2 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.BenchmarkMetrics.func3
23 3 0 0 0 0 0 0 0 0
29 3 0 0 0 0 0 0 0 0
fn=testing.prettyPrint
29 3 3 3 0 0 0 0 0 0
fl=.//usr/lib/golang/src/os/error.go
fn=os.errClosed
32 1 1 1 1 0 0 0 0 0
fn=os.errExist
30 1 1 1 1 0 0 0 0 0
fn=os.errInvalid
28 1 1 1 1 0 0 0 0 0
fn=os.errNoDeadline
33 1 0 0 1 0 0 0 0 0
fn=os.errNotExist
31 1 0 0 1 0 0 0 0 0
fn=os.errPermission
29 1 0 0 1 0 0 0 0 0
fn=os.init
19 13 2 2 5 0 0 4 1 1
21 7 0 0 3 0 0 3 1 1
22 7 1 1 3 0 0 3 0 0
23 7 1 1 3 0 0 3 0 0
24 7 0 0 3 0 0 3 0 0
25 7 1 1 3 0 0 3 0 0
fl=.//usr/lib/golang/src/os/exec_unix.go
fn=os.init
53 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/os/executable_procfs.go
fn=os.glob..func1
17 6 1 1 2 0 0 1 0 0
29 15 1 1 6 0 0 7 0 0
fn=os.init
17 12 1 1 6 1 0 4 1 1
30 1 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/os/file.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.LoadData
287 19 2 2 6 0 0 12 1 1
fn=os.(*File).Read
112 69300 1019 76 23100 0 0 11550 0 0
113 34650 0 0 11550 0 0 0 0 0
116 11550 0 0 0 0 0 0 0 0
117 69304 0 0 23104 0 0 34650 507 18
340 69314 8213 71 6 0 0 8 0 0
343 2 0 0 2 0 0 0 0 0
fn=os.(*File).Write
149 54 7 6 18 0 0 9 0 0
150 27 0 0 9 0 0 0 0 0
153 9 0 0 0 0 0 0 0 0
154 18 0 0 0 0 0 0 0 0
157 54 0 0 9 0 0 9 0 0
161 9 6 6 0 0 0 0 0 0
163 18 6 6 0 0 0 0 0 0
167 72 7 6 18 0 0 27 0 0
346 9 0 0 9 0 0 0 0 0
fn=os.OpenFile
305 12 2 2 4 0 0 2 0 0
306 10 2 2 4 0 0 6 1 1
307 24 2 2 14 0 0 10 0 0
308 4 0 0 0 0 0 0 0 0
311 8 0 0 4 0 0 2 0 0
313 12 2 1 4 0 0 4 0 0
fn=os.Readlink
330 4 1 1 0 0 0 0 0 0
fn=os.init
63 10 1 1 3 0 0 5 1 1
64 10 1 1 3 1 1 5 1 0
65 10 1 1 3 0 0 5 0 0
170 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/os/file_posix.go
fn=os.(*File).Read
175 46200 0 0 0 0 0 0 0 0
fn=os.(*File).Write
175 36 0 0 0 0 0 0 0 0
fn=os.openFileNolog
18 2 0 0 0 0 0 0 0 0
19 4 2 2 0 0 0 0 0 0
20 4 0 0 0 0 0 0 0 0
22 2 0 0 0 0 0 0 0 0
23 4 0 0 0 0 0 0 0 0
25 2 0 0 0 0 0 0 0 0
26 4 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/os/file_unix.go
fn=os.(*File).Read
263 196350 775 37 92400 5900 54 92400 449 37
fn=os.(*File).Write
178 45 7 6 0 0 0 0 0 0
280 144 12 12 72 6 2 63 0 0
fn=os.(*file).close
240 12 4 4 4 0 0 2 0 0
241 6 0 0 2 0 0 0 0 0
248 14 0 0 4 0 0 4 1 1
256 18 4 4 2 0 0 8 0 0
257 18 2 2 8 0 0 8 0 0
fn=os.NewFile
87 18 1 1 6 0 0 3 0 0
89 30 2 2 9 0 0 6 0 0
92 39 0 0 18 0 0 18 0 0
fn=os.Readlink
406 7 2 2 2 0 0 1 0 0
407 2 0 0 0 0 0 0 0 0
408 17 1 1 2 0 0 12 0 0
409 4 0 0 0 0 0 0 0 0
414 2 0 0 0 0 0 0 0 0
417 6 0 0 2 0 0 0 0 0
418 16 1 1 5 0 0 8 0 0
fn=os.newFile
108 30 5 3 10 0 0 5 0 0
110 15 0 0 5 0 0 0 0 0
113 65 3 2 20 0 0 30 2 1
115 10 0 0 5 0 0 5 3 2
117 5 0 0 0 0 0 5 2 2
119 30 3 2 15 1 0 10 2 2
120 38 3 2 5 0 0 10 0 0
123 47 8 5 8 0 0 5 0 0
155 40 0 0 5 0 0 25 0 0
162 3 0 0 0 0 0 0 0 0
170 50 2 1 10 0 0 25 0 0
171 25 0 0 15 0 0 5 0 0
fn=os.openFileNolog
189 12 4 4 4 0 0 2 0 0
200 12 0 0 2 0 0 2 1 1
201 2 2 2 0 0 0 0 0 0
226 28 4 4 10 0 0 14 0 0
fl=.//usr/lib/golang/src/os/proc.go
fn=os.Exit
61 6 2 2 2 0 0 1 0 0
62 3 0 0 1 0 0 0 0 0
65 2 0 0 0 0 0 1 0 0
67 3 0 0 1 0 0 2 0 0
fn=os.init.0
17 6 1 1 2 0 0 1 0 0
22 9 1 1 4 0 0 4 1 1
23 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/os/types.go
fn=os.openFileNolog
105 6 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/path/filepath/match.go
fn=path/filepath.init
17 16 3 3 5 0 0 6 1 0
fl=.//usr/lib/golang/src/path/filepath/path.go
fn=path/filepath.init
336 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/reflect/type.go
fn=reflect.TypeOf
1366 1 1 1 1 0 0 0 0 0
1367 3 0 0 1 0 0 2 0 0
2963 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/reflect/value.go
fn=reflect.init
918 24 3 3 8 1 0 5 1 0
fl=.//usr/lib/golang/src/regexp/backtrack.go
fn=regexp.(*Regexp).backtrack
50 46 6 4 12 0 0 12 1 0
51 6 0 0 0 0 0 0 0 0
52 24 4 4 4 0 0 8 0 0
307 42 6 4 12 0 0 6 0 0
308 18 6 4 12 0 0 6 1 0
309 12 0 0 0 0 0 0 0 0
312 24 0 0 6 2 0 0 0 0
317 6 6 4 0 0 0 6 0 0
318 48 1 0 0 0 0 18 0 0
319 48 5 4 18 0 0 30 0 0
322 54 10 8 36 3 0 0 0 0
339 24 5 4 0 0 0 0 0 0
340 12 0 0 6 2 0 0 0 0
350 18 0 0 12 0 0 0 0 0
351 6 5 4 0 0 0 6 0 0
353 72 0 0 18 4 0 42 0 0
364 108 10 8 36 2 0 42 0 0
365 18 5 4 6 0 0 12 0 0
366 54 5 4 30 0 0 18 0 0
fn=regexp.(*Regexp).tryBacktrack
121 66 10 8 30 0 0 0 0 0
122 108 5 4 48 4 2 12 0 0
125 36 5 4 24 0 0 24 0 0
134 78 5 4 24 4 3 0 0 0
135 96 5 4 36 0 0 24 5 2
140 42 5 4 12 0 0 6 0 0
141 30 5 4 24 2 0 6 0 0
143 6 0 0 0 0 0 0 0 0
144 36 5 4 12 0 0 6 0 0
145 6 0 0 0 0 0 0 0 0
147 18 6 4 6 0 0 0 0 0
148 6 0 0 6 0 0 0 0 0
149 6 0 0 6 0 0 0 0 0
150 6 0 0 0 0 0 6 0 0
159 6 0 0 0 0 0 0 0 0
161 18 0 0 0 0 0 0 0 0
166 216 10 8 78 4 3 42 0 0
168 60 6 4 12 0 0 0 0 0
217 12 5 4 0 0 0 0 0 0
226 12 0 0 0 0 0 0 0 0
227 36 0 0 18 5 3 18 0 0
228 24 0 0 0 0 0 0 0 0
231 12 0 0 6 0 0 0 0 0
232 6 0 0 6 0 0 0 0 0
233 6 0 0 0 0 0 0 0 0
235 12 5 4 0 0 0 0 0 0
244 12 5 4 0 0 0 0 0 0
245 24 0 0 6 0 0 12 0 0
259 12 5 4 0 0 0 0 0 0
260 12 0 0 12 0 0 0 0 0
274 24 5 4 12 0 0 0 0 0
275 24 0 0 12 0 0 6 0 0
294 12 0 0 0 0 0 12 0 0
fn=regexp.(*bitState).reset
80 36 6 4 12 0 0 6 0 0
81 18 0 0 12 0 0 6 2 1
83 12 0 0 6 2 1 0 0 0
84 52 8 8 12 0 0 28 0 0
86 2 2 0 0 0 0 2 0 0
89 68 8 8 16 4 3 4 0 0
90 22 0 0 6 0 0 0 0 0
91 56 0 0 16 2 0 28 2 0
93 6 1 0 0 0 0 2 0 0
94 16 1 0 2 0 0 6 0 0
99 30 4 4 14 2 0 0 0 0
102 18 0 0 0 0 0 6 0 0
104 30 5 4 6 0 0 0 0 0
108 18 0 0 6 0 0 0 0 0
111 18 0 0 0 0 0 6 0 0
113 48 5 4 18 0 0 0 0 0
fn=regexp.compile
65 1 0 0 0 0 0 0 0 0
68 5 0 0 0 0 0 0 0 0
74 3 0 0 2 0 0 0 0 0
fn=regexp.freeBitState
57 36 5 4 12 0 0 6 0 0
58 12 0 0 12 0 0 0 0 0
59 36 0 0 0 0 0 24 0 0
60 18 0 0 12 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/exec.go
fn=regexp.(*Regexp).backtrack
62 36 0 0 18 0 0 12 2 1
63 6 0 0 0 0 0 0 0 0
89 18 0 0 6 0 0 0 0 0
92 6 6 4 0 0 0 0 0 0
fn=regexp.(*Regexp).doExecute
521 42 11 8 12 0 0 6 0 0
522 18 0 0 6 0 0 0 0 0
527 54 12 8 30 4 3 0 0 0
531 18 0 0 12 4 3 0 0 0
534 36 11 8 18 4 3 0 0 0
535 156 11 8 60 1 0 90 3 0
547 66 10 8 12 0 0 18 0 0
fn=regexp.freeBitState
76 6 0 0 0 0 0 0 0 0
78 12 5 4 6 0 0 0 0 0
81 30 5 4 6 0 0 12 0 0
fn=testing/internal/testdeps.TestDeps.MatchString
514 84 10 8 18 0 0 60 0 0
fl=.//usr/lib/golang/src/regexp/onepass.go
fn=regexp.compileOnePass
465 6 2 2 2 0 0 1 0 0
466 4 0 0 2 0 0 0 0 0
470 10 0 0 3 0 0 0 0 0
472 4 2 2 2 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/regexp.go
fn=regexp.(*inputString).step
365 36 10 8 12 0 0 6 0 0
366 36 0 0 24 2 0 0 0 0
367 12 0 0 6 3 1 0 0 0
368 12 0 0 0 0 0 0 0 0
369 30 0 0 12 0 0 12 0 0
fn=regexp.compile
169 7 2 2 2 0 0 1 0 0
170 11 1 1 6 0 0 5 0 0
171 2 0 0 0 0 0 0 0 0
174 4 0 0 1 0 0 3 0 0
175 9 1 1 4 0 0 5 0 0
177 5 0 0 2 0 0 3 0 0
178 7 1 1 3 0 0 3 0 0
179 2 0 0 0 0 0 0 0 0
182 2 0 0 1 0 0 1 0 0
183 3 0 0 1 0 0 0 0 0
186 5 0 0 1 0 0 3 0 0
187 6 1 1 3 0 0 2 1 1
188 2 0 0 1 0 0 1 0 0
189 6 1 1 2 0 0 4 0 0
190 2 0 0 1 0 0 1 1 1
191 8 0 0 4 0 0 3 0 0
192 7 2 2 3 0 0 4 1 1
193 2 0 0 1 0 0 1 0 0
194 3 0 0 0 0 0 1 0 0
195 7 0 0 3 0 0 4 0 0
197 1 0 0 1 0 0 0 0 0
198 11 2 2 5 0 0 5 0 0
199 2 1 1 0 0 0 1 0 0
203 5 1 1 2 0 0 0 0 0
210 3 1 1 2 0 0 0 0 0
212 9 0 0 1 1 1 0 0 0
215 1 0 0 0 0 0 1 0 0
217 6 1 1 2 0 0 2 0 0
fn=regexp.init.0
693 1 1 1 0 0 0 0 0 0
694 73 1 1 14 1 1 0 0 0
695 168 0 0 14 0 0 14 0 0
fn=regexp.minInputLen
270 6 1 1 2 0 0 1 0 0
271 4 0 0 2 0 0 0 0 0
274 3 1 1 0 0 0 0 0 0
275 4 1 1 2 0 0 1 0 0
276 2 0 0 0 0 0 0 0 0
fn=testing/internal/testdeps.TestDeps.MatchString
133 8 1 1 3 0 0 5 0 0
507 6 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/compile.go
fn=regexp/syntax.(*compiler).compile
98 7 2 2 2 0 0 1 0 0
99 8 1 1 2 0 0 0 0 0
120 2 0 0 0 0 0 0 0 0
121 17 2 2 8 2 1 8 0 0
fn=regexp/syntax.(*compiler).rune
172 4 0 0 3 0 0 1 0 0
173 46 4 4 13 0 0 17 1 1
266 7 2 2 2 0 0 1 0 0
267 1 0 0 0 0 0 0 0 0
268 9 1 1 5 0 0 0 0 0
269 10 0 0 4 0 0 3 0 0
270 2 0 0 1 0 0 0 0 0
271 5 1 1 0 0 0 0 0 0
275 6 0 0 0 0 0 1 0 0
276 1 0 0 0 0 0 0 0 0
279 1 0 0 0 0 0 0 0 0
280 4 1 1 0 0 0 0 0 0
282 2 0 0 0 0 0 0 0 0
284 9 1 1 4 1 1 0 0 0
285 3 0 0 0 0 0 1 0 0
288 5 0 0 2 0 0 2 0 0
fn=regexp/syntax.Compile
80 7 2 2 2 0 0 1 0 0
81 1 0 0 0 0 0 1 0 0
82 1 0 0 0 0 0 0 0 0
83 9 1 1 3 0 0 5 0 0
84 7 0 0 3 0 0 4 0 0
85 4 0 0 3 0 0 1 0 0
86 7 1 1 3 0 0 2 0 0
90 5 1 1 1 0 0 3 0 0
91 1 0 0 0 0 0 1 0 0
92 1 0 0 0 0 0 0 0 0
172 5 0 0 3 0 0 1 0 0
173 93 8 8 26 0 0 34 1 1
fn=regexp/syntax.patchList.patch
29 3 1 1 0 0 0 1 0 0
30 10 0 0 5 0 0 0 0 0
31 7 1 1 2 0 0 0 0 0
32 2 0 0 0 0 0 0 0 0
33 1 0 0 1 0 0 0 0 0
34 2 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/syntax/parse.go
fn=regexp/syntax.(*parser).alternate
89 1 0 0 1 0 0 0 0 0
317 6 1 1 2 0 0 1 0 0
320 5 0 0 4 0 0 0 0 0
321 9 0 0 2 0 0 0 0 0
324 13 2 2 0 0 0 3 0 0
325 1 0 0 0 0 0 1 0 0
329 4 0 0 1 0 0 0 0 0
330 4 1 1 1 0 0 2 0 0
335 1 0 0 0 0 0 0 0 0
339 18 1 1 7 0 0 10 0 0
fn=regexp/syntax.(*parser).collapse
369 14 1 1 4 0 0 2 0 0
370 6 1 1 2 0 0 0 0 0
371 12 2 2 8 0 0 2 0 0
fn=regexp/syntax.(*parser).concat
297 6 1 1 2 0 0 1 0 0
298 5 0 0 1 0 0 4 0 0
301 5 1 1 4 0 0 0 0 0
302 9 0 0 2 0 0 0 0 0
305 10 1 1 0 0 0 0 0 0
306 1 0 0 0 0 0 1 0 0
309 2 0 0 0 0 0 0 0 0
313 16 2 2 5 0 0 10 0 0
fn=regexp/syntax.(*parser).maybeConcat
152 28 2 2 8 0 0 4 0 0
153 12 0 0 12 0 0 0 0 0
154 8 0 0 0 0 0 0 0 0
155 16 2 2 8 0 0 4 0 0
fn=regexp/syntax.(*parser).op
89 1 0 0 1 0 0 0 0 0
90 2 0 0 0 0 0 0 0 0
94 5 2 2 1 0 0 2 0 0
96 2 1 1 1 0 0 1 1 1
215 6 2 2 2 0 0 1 0 0
216 1 0 0 1 0 0 0 0 0
217 3 0 0 2 0 0 1 0 0
218 8 0 0 3 0 0 4 0 0
fn=regexp/syntax.(*parser).push
108 18 2 2 6 0 0 3 0 0
109 12 0 0 6 0 0 0 0 0
117 18 1 1 0 0 0 0 0 0
119 9 1 1 0 0 0 0 0 0
120 12 2 2 0 0 0 0 0 0
121 18 2 2 3 0 0 0 0 0
123 9 0 0 0 0 0 0 0 0
136 18 1 1 3 0 0 12 0 0
139 63 3 3 24 0 0 14 1 0
140 12 0 0 6 0 0 3 0 0
fn=regexp/syntax.(*parser).swapVerticalBar
1174 6 1 1 2 0 0 1 0 0
1177 4 0 0 3 0 0 1 0 0
1178 2 0 0 0 0 0 0 0 0
1192 2 1 1 0 0 0 0 0 0
1206 4 1 1 2 0 0 1 0 0
fn=regexp/syntax.Parse
701 12 1 1 2 0 0 1 0 0
702 3 1 1 1 0 0 0 0 0
712 5 0 0 1 0 0 3 1 1
718 2 0 0 1 0 0 1 1 1
719 6 1 1 3 0 0 2 0 0
721 12 1 1 1 0 0 2 0 0
724 4 0 0 1 0 0 0 0 0
731 1 1 1 0 0 0 0 0 0
747 2 1 1 0 0 0 0 0 0
753 1 0 0 0 0 0 0 0 0
766 2 0 0 0 0 0 0 0 0
767 3 0 0 1 0 0 0 0 0
770 4 1 1 0 0 0 3 0 0
772 9 0 0 2 0 0 0 0 0
777 3 1 1 0 0 0 0 0 0
788 5 0 0 1 0 0 1 0 0
807 2 0 0 0 0 0 0 0 0
891 2 1 1 0 0 0 2 0 0
892 6 1 1 2 0 0 2 0 0
896 3 1 1 1 0 0 2 0 0
898 3 0 0 3 0 0 0 0 0
899 1 1 1 0 0 0 0 0 0
900 2 0 0 2 0 0 0 0 0
902 7 0 0 3 0 0 2 0 0
fn=regexp/syntax.cleanAlt
343 6 1 1 2 0 0 1 0 0
344 2 0 0 2 0 0 0 0 0
345 4 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/perl_groups.go
fn=regexp/syntax.init
27 119 11 11 39 0 0 58 4 4
28 6 1 1 3 1 1 3 0 0
29 6 1 1 3 0 0 3 0 0
30 6 0 0 3 2 2 3 0 0
31 6 1 1 3 0 0 3 0 0
32 6 1 1 3 0 0 3 0 0
33 6 1 1 3 0 0 3 0 0
105 511 48 48 171 0 0 255 14 14
106 6 1 1 3 1 1 3 0 0
107 6 1 1 3 0 0 3 0 0
108 6 0 0 3 0 0 3 0 0
109 6 0 0 3 0 0 3 0 0
110 6 1 1 3 1 1 3 0 0
111 6 1 1 3 0 0 3 0 0
112 6 0 0 3 0 0 3 0 0
113 6 0 0 3 0 0 3 0 0
114 6 1 1 3 1 1 3 0 0
115 6 1 1 3 0 0 3 0 0
116 6 0 0 3 0 0 3 0 0
117 6 0 0 3 0 0 3 0 0
118 6 1 1 3 1 1 3 0 0
119 6 1 1 3 0 0 3 0 0
120 6 0 0 3 0 0 3 0 0
121 6 0 0 3 0 0 3 0 0
122 6 1 1 3 1 1 3 0 0
123 6 1 1 3 0 0 3 0 0
124 6 0 0 3 0 0 3 0 0
125 6 0 0 3 0 0 3 0 0
126 6 1 1 3 1 1 3 0 0
127 6 1 1 3 0 0 3 0 0
128 6 1 1 3 0 0 3 0 0
129 6 1 1 3 0 0 3 0 0
130 6 0 0 3 0 0 3 0 0
131 6 0 0 3 0 0 3 0 0
132 6 0 0 3 0 0 3 0 0
133 6 1 1 3 0 0 3 0 0
fl=.//usr/lib/golang/src/regexp/syntax/prog.go
fn=regexp/syntax.(*Prog).Prefix
136 1 0 0 1 0 0 0 0 0
138 4 0 0 0 0 0 0 0 0
147 6 2 2 2 0 0 1 0 0
148 6 0 0 3 0 0 3 0 0
151 4 1 1 1 0 0 0 0 0
152 7 1 1 2 0 0 2 0 0
fn=regexp/syntax.(*Prog).StartCond
166 3 1 1 0 0 0 1 0 0
168 2 0 0 2 0 0 0 0 0
169 7 0 0 2 0 0 0 0 0
170 1 0 0 0 0 0 0 0 0
172 3 1 1 1 0 0 0 0 0
175 2 0 0 0 0 0 0 0 0
177 3 1 1 0 0 0 0 0 0
185 4 0 0 2 0 0 1 0 0
fn=regexp/syntax.(*Prog).skipNop
126 3 1 1 0 0 0 1 0 0
127 8 1 1 4 0 0 0 0 0
128 6 0 0 1 0 0 0 0 0
131 4 0 0 2 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/syntax/regexp.go
fn=regexp/syntax.(*Regexp).CapNames
307 6 1 1 2 0 0 1 0 0
308 13 0 0 3 0 0 8 0 0
309 7 1 1 2 0 0 5 0 0
310 8 0 0 4 0 0 3 0 0
fn=regexp/syntax.(*Regexp).MaxCap
293 12 2 2 4 0 0 2 0 0
295 8 0 0 4 0 0 0 0 0
298 16 1 1 4 0 0 4 0 0
303 10 1 1 4 0 0 2 0 0
fn=regexp/syntax.(*Regexp).capNames
313 6 1 1 2 0 0 1 0 0
314 4 0 0 2 0 0 0 0 0
317 11 2 2 4 0 0 2 0 0
318 2 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/simplify.go
fn=regexp/syntax.(*Regexp).Simplify
14 7 2 2 2 0 0 1 0 0
15 3 0 0 1 0 0 0 0 0
18 3 0 0 1 0 0 0 0 0
19 2 0 0 0 0 0 0 0 0
37 3 1 1 0 0 0 0 0 0
116 4 1 1 2 0 0 1 0 0
fl=.//usr/lib/golang/src/runtime/alg.go
fn=runtime.alginit
347 6 1 1 2 0 0 1 0 0
349 1 0 0 0 0 0 0 0 0
350 2 0 0 1 0 0 0 0 0
351 2 1 1 1 0 0 0 0 0
352 1 0 0 1 0 0 0 0 0
353 1 1 1 0 0 0 0 0 0
354 3 0 0 2 0 0 0 0 0
368 1 0 0 0 0 0 1 0 0
370 5 1 1 0 0 0 4 0 0
fn=runtime.ifaceeq
295 600036 9 6 200012 0 0 100006 0 0
296 300018 0 0 100006 0 0 0 0 0
299 100006 0 0 100006 145 6 0 0 0
300 100006 0 0 100006 146 5 0 0 0
301 200012 0 0 0 0 0 0 0 0
304 100006 0 0 0 0 0 0 0 0
306 700042 10 6 400024 0 0 100006 0 0
fn=runtime.mcommoninit
326 80 0 0 16 0 0 48 0 0
fn=runtime.memhash64Fallback
379 4 0 0 4 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/asm_amd64.s
fn=_rt0_amd64
1 1 0 0 0 0 0 0 0 0
15 1 1 1 1 1 1 0 0 0
16 1 0 0 0 0 0 0 0 0
fn=aeshashbody
917 912 1 1 912 0 0 0 0 0
918 912 0 0 0 0 0 0 0 0
919 912 0 0 0 0 0 0 0 0
920 912 7 5 0 0 0 0 0 0
921 912 0 0 912 4 3 0 0 0
922 912 0 0 0 0 0 0 0 0
924 912 0 0 0 0 0 0 0 0
925 912 0 0 0 0 0 0 0 0
926 148 0 0 0 0 0 0 0 0
927 108 0 0 0 0 0 0 0 0
928 108 0 0 0 0 0 0 0 0
929 2 0 0 0 0 0 0 0 0
930 2 0 0 0 0 0 0 0 0
936 764 0 0 0 0 0 0 0 0
937 764 0 0 0 0 0 0 0 0
939 764 2 0 0 0 0 0 0 0
940 764 0 0 0 0 0 0 0 0
941 764 0 0 0 0 0 0 0 0
945 764 0 0 764 67 50 0 0 0
946 764 0 0 0 0 0 0 0 0
947 764 0 0 0 0 0 0 0 0
948 764 0 0 764 11 8 0 0 0
950 804 2 2 0 0 0 0 0 0
951 804 0 0 0 0 0 0 0 0
952 804 0 0 0 0 0 0 0 0
953 804 0 0 0 0 0 0 0 0
954 804 0 0 0 0 0 804 0 0
955 804 0 0 804 0 0 0 0 0
974 40 3 2 40 7 4 0 0 0
975 40 0 0 0 0 0 0 0 0
979 106 6 3 106 0 0 0 0 0
980 106 0 0 0 0 0 0 0 0
983 106 0 0 106 21 17 0 0 0
984 106 0 0 106 1 1 0 0 0
987 106 0 0 0 0 0 0 0 0
988 106 0 0 0 0 0 0 0 0
991 106 8 5 0 0 0 0 0 0
992 106 0 0 0 0 0 0 0 0
993 106 0 0 0 0 0 0 0 0
994 106 0 0 0 0 0 0 0 0
995 106 0 0 0 0 0 0 0 0
996 106 0 0 0 0 0 0 0 0
999 106 0 0 0 0 0 0 0 0
1000 106 0 0 0 0 0 106 0 0
1001 106 0 0 106 0 0 0 0 0
1005 2 0 0 0 0 0 0 0 0
1006 2 0 0 0 0 0 0 0 0
1007 2 0 0 2 0 0 0 0 0
1008 2 0 0 2 1 0 0 0 0
1009 2 1 1 2 0 0 0 0 0
1010 2 0 0 0 0 0 0 0 0
1011 2 0 0 0 0 0 0 0 0
1012 2 0 0 0 0 0 0 0 0
1014 2 0 0 2 1 1 0 0 0
1015 2 0 0 2 1 1 0 0 0
1016 2 0 0 2 0 0 0 0 0
1017 2 0 0 2 0 0 0 0 0
1019 2 0 0 0 0 0 0 0 0
1020 2 0 0 0 0 0 0 0 0
1021 2 0 0 0 0 0 0 0 0
1022 2 0 0 0 0 0 0 0 0
1024 2 0 0 0 0 0 0 0 0
1025 2 1 1 0 0 0 0 0 0
1026 2 0 0 0 0 0 0 0 0
1027 2 0 0 0 0 0 0 0 0
1029 2 0 0 0 0 0 0 0 0
1030 2 0 0 0 0 0 0 0 0
1031 2 0 0 0 0 0 0 0 0
1032 2 0 0 0 0 0 0 0 0
1034 2 0 0 0 0 0 0 0 0
1035 2 0 0 0 0 0 0 0 0
1036 2 0 0 0 0 0 0 0 0
1037 2 0 0 0 0 0 0 0 0
1039 2 0 0 0 0 0 0 0 0
1040 2 0 0 0 0 0 0 0 0
1041 2 0 0 0 0 0 0 0 0
1042 2 1 1 0 0 0 2 0 0
1043 2 0 0 2 0 0 0 0 0
fn=callRet
1 6 0 0 4 0 0 0 0 0
530 6 2 2 0 0 0 2 0 0
532 2 0 0 0 0 0 2 0 0
533 2 0 0 0 0 0 2 0 0
534 2 0 0 0 0 0 2 0 0
535 2 0 0 0 0 0 2 0 0
536 2 0 0 0 0 0 2 0 0
fn=runtime.asminit
1 8 2 1 8 0 0 0 0 0
fn=runtime.call32
1 112 2 2 86 2 2 70 1 1
539 6 2 2 4 0 0 0 0 0
fn=runtime.checkASM
1 1 0 0 1 0 0 0 0 0
1311 1 1 1 0 0 0 0 0 0
1312 1 0 0 0 0 0 0 0 0
1313 1 0 0 0 0 0 0 0 0
1314 1 0 0 0 0 0 0 0 0
1315 1 0 0 0 0 0 1 0 0
fn=runtime.cputicks
1 8 0 0 8 0 0 0 0 0
875 8 7 2 8 0 0 0 0 0
876 8 0 0 0 0 0 0 0 0
877 8 0 0 0 0 0 0 0 0
878 8 0 0 0 0 0 0 0 0
882 8 7 2 0 0 0 0 0 0
883 8 0 0 0 0 0 0 0 0
884 8 0 0 0 0 0 0 0 0
885 8 0 0 0 0 0 8 0 0
fn=runtime.gcWriteBarrier
1 5542 0 0 0 0 0 0 0 0
1394 4261887 51 32 0 0 0 1420629 0 0
1397 1420629 0 0 0 0 0 1420629 67 8
1398 1420629 0 0 0 0 0 1420629 0 0
1402 1420629 19 18 1420629 8 6 0 0 0
1403 1420629 0 0 1420629 8 3 0 0 0
1404 1420629 0 0 1420629 12 6 0 0 0
1405 1420629 0 0 1420629 2227 110 0 0 0
1407 1420629 0 0 0 0 0 0 0 0
1408 1420629 0 0 0 0 0 1420629 0 0
1409 1420629 0 0 1420629 0 0 0 0 0
1411 1420629 0 0 0 0 0 1420629 2116 44
1418 1420629 0 0 1420629 44019 30632 0 0 0
1419 1420629 0 0 0 0 0 1420629 85150 2374
1421 1420629 0 0 0 0 0 0 0 0
1423 1420629 0 0 1420629 0 0 0 0 0
1424 1420629 0 0 1420629 0 0 0 0 0
1426 1420629 0 0 0 0 0 1420629 504 2
1427 4261887 24 21 2841258 681 0 0 0 0
1442 5542 0 0 0 0 0 5542 6 0
1443 5542 0 0 0 0 0 5542 1 0
1444 5542 0 0 0 0 0 5542 3 0
1445 5542 0 0 0 0 0 5542 1 0
1446 5542 0 0 0 0 0 5542 1 0
1448 5542 0 0 0 0 0 5542 3 0
1449 5542 0 0 0 0 0 5542 0 0
1450 5542 0 0 0 0 0 5542 0 0
1451 5542 0 0 0 0 0 5542 0 0
1452 5542 0 0 0 0 0 5542 0 0
1453 5542 0 0 0 0 0 5542 0 0
1454 5542 35 18 0 0 0 5542 0 0
1457 5542 0 0 0 0 0 5542 0 0
1460 5542 0 0 0 0 0 5542 0 0
1462 5542 0 0 5542 0 0 0 0 0
1463 5542 0 0 5542 0 0 0 0 0
1464 5542 0 0 5542 0 0 0 0 0
1465 5542 0 0 5542 2 0 0 0 0
1466 5542 0 0 5542 1 0 0 0 0
1467 5542 0 0 5542 1 0 0 0 0
1468 5542 0 0 0 0 0 0 0 0
1469 5542 0 0 5542 430 1 0 0 0
1470 5542 0 0 5542 0 0 0 0 0
1471 5542 0 0 5542 0 0 0 0 0
1472 5542 35 20 5542 0 0 0 0 0
1473 5542 0 0 5542 1 0 0 0 0
1474 5542 0 0 5542 1 0 0 0 0
fn=runtime.goexit
1374 8 8 7 0 0 0 8 0 0
fn=runtime.gogo
1 278910 0 0 0 0 0 0 0 0
272 836730 76 45 0 0 0 278910 17 9
273 278910 65 42 278910 0 0 0 0 0
274 278910 0 0 278910 116 90 0 0 0
275 278910 0 0 278910 0 0 0 0 0
277 278910 0 0 0 0 0 278910 0 0
278 278910 0 0 278910 0 0 0 0 0
279 278910 0 0 278910 0 0 0 0 0
280 278910 0 0 278910 0 0 0 0 0
281 278910 0 0 278910 0 0 0 0 0
282 278910 0 0 0 0 0 278910 0 0
283 278910 0 0 0 0 0 278910 0 0
284 278910 0 0 0 0 0 278910 0 0
285 278910 70 40 0 0 0 278910 0 0
286 278910 0 0 278910 0 0 0 0 0
fn=runtime.mcall
294 278820 14 8 278820 0 0 0 0 0
297 278820 0 0 278820 0 0 0 0 0
298 278820 0 0 278820 0 0 0 0 0
299 278820 0 0 0 0 0 278820 65 4
300 278820 0 0 0 0 0 0 0 0
301 278820 0 0 0 0 0 278820 0 0
302 278820 0 0 0 0 0 278820 0 0
303 278820 0 0 0 0 0 278820 0 0
306 278820 0 0 278820 0 0 0 0 0
307 278820 61 36 278820 0 0 0 0 0
308 278820 0 0 278820 87 5 0 0 0
309 278820 0 0 0 0 0 0 0 0
310 278820 0 0 0 0 0 0 0 0
313 278820 0 0 0 0 0 278820 0 0
314 278820 0 0 278820 59 11 0 0 0
315 278820 0 0 0 0 0 278820 78 16
316 278820 0 0 0 0 0 0 0 0
317 278820 0 0 278820 174 52 0 0 0
318 278820 0 0 0 0 0 278820 0 0
fn=runtime.memhash
891 14 1 0 14 0 0 0 0 0
892 14 0 0 0 0 0 0 0 0
893 14 0 0 14 0 0 0 0 0
894 14 0 0 14 0 0 0 0 0
895 14 0 0 0 0 0 0 0 0
896 14 0 0 0 0 0 0 0 0
fn=runtime.memhash64
1 2 0 0 0 0 0 0 0 0
1260 2100016 22960 99 2100016 11 1 0 0 0
1261 2100016 0 0 0 0 0 0 0 0
1262 2100014 0 0 2100014 0 0 0 0 0
1263 2100014 0 0 2100014 0 0 0 0 0
1264 2100014 0 0 2100014 0 0 0 0 0
1265 2100014 0 0 2100014 3567 144 0 0 0
1266 2100014 0 0 2100014 0 0 0 0 0
1267 2100014 703 86 2100014 2727 86 0 0 0
1268 2100014 0 0 0 0 0 2100014 0 0
1269 2100014 0 0 2100014 0 0 0 0 0
fn=runtime.morestack
410 89 45 32 89 0 0 0 0 0
411 89 0 0 89 0 0 0 0 0
412 89 0 0 89 15 2 0 0 0
413 89 0 0 89 0 0 0 0 0
414 89 0 0 0 0 0 0 0 0
419 89 0 0 89 23 4 0 0 0
420 89 0 0 89 0 0 0 0 0
421 89 0 0 0 0 0 0 0 0
428 89 45 32 89 0 0 0 0 0
429 89 0 0 0 0 0 89 0 0
430 89 0 0 0 0 0 0 0 0
431 89 0 0 0 0 0 89 0 0
433 89 0 0 89 0 0 0 0 0
434 89 0 0 0 0 0 89 0 0
437 89 0 0 89 0 0 0 0 0
438 89 0 0 0 0 0 89 26 13
439 89 0 0 0 0 0 89 0 0
440 89 0 0 0 0 0 0 0 0
441 89 0 0 0 0 0 89 0 0
442 89 0 0 0 0 0 89 0 0
443 89 0 0 0 0 0 89 0 0
446 89 0 0 89 0 0 0 0 0
447 89 0 0 0 0 0 89 0 0
448 89 0 0 89 6 2 0 0 0
449 89 0 0 0 0 0 89 6 1
fn=runtime.morestack_noctxt
1 89 0 0 0 0 0 0 0 0
455 89 45 31 0 0 0 0 0 0
fn=runtime.procyield
1 44 0 0 44 0 0 0 0 0
567 44 4 2 44 0 0 0 0 0
569 1160 0 0 0 0 0 0 0 0
570 1160 0 0 0 0 0 0 0 0
571 1160 0 0 0 0 0 0 0 0
fn=runtime.publicationBarrier
1 5868261 77 42 5868261 0 0 0 0 0
fn=runtime.reflectcall
472 2 2 2 2 0 0 0 0 0
473 8 2 2 0 0 0 0 0 0
fn=runtime.rt0_go
89 1 0 0 0 0 0 0 0 0
90 1 0 0 0 0 0 0 0 0
91 1 0 0 0 0 0 0 0 0
92 1 0 0 0 0 0 0 0 0
93 1 0 0 0 0 0 1 1 1
94 1 0 0 0 0 0 1 0 0
98 1 0 0 0 0 0 0 0 0
99 1 0 0 0 0 0 0 0 0
100 1 0 0 0 0 0 1 1 1
101 1 0 0 0 0 0 1 0 0
102 1 1 1 0 0 0 1 0 0
103 1 0 0 0 0 0 1 0 0
106 1 0 0 0 0 0 0 0 0
107 1 0 0 0 0 0 0 0 0
108 1 0 0 0 0 0 0 0 0
109 1 0 0 0 0 0 0 0 0
110 1 0 0 0 0 0 0 0 0
115 1 0 0 0 0 0 0 0 0
116 1 0 0 0 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
118 1 0 0 0 0 0 0 0 0
119 1 0 0 0 0 0 0 0 0
120 1 0 0 0 0 0 0 0 0
121 1 0 0 0 0 0 1 1 1
122 1 0 0 0 0 0 1 0 0
126 1 0 0 0 0 0 0 0 0
127 1 1 1 0 0 0 0 0 0
128 1 0 0 0 0 0 1 1 1
132 1 0 0 1 1 1 0 0 0
133 1 0 0 0 0 0 0 0 0
134 1 0 0 0 0 0 0 0 0
183 1 1 1 0 0 0 0 0 0
184 1 0 0 0 0 0 1 0 0
188 1 0 0 0 0 0 1 1 1
189 1 0 0 1 0 0 0 0 0
190 1 0 0 0 0 0 0 0 0
191 1 0 0 0 0 0 0 0 0
196 1 0 0 0 0 0 0 0 0
197 1 1 1 0 0 0 1 0 0
198 1 0 0 0 0 0 0 0 0
201 1 0 0 0 0 0 1 1 1
203 1 0 0 0 0 0 1 0 0
205 1 0 0 0 0 0 0 0 0
206 1 0 0 0 0 0 1 0 0
208 1 0 0 1 0 0 0 0 0
209 1 0 0 0 0 0 1 0 0
210 1 0 0 1 0 0 0 0 0
211 1 0 0 0 0 0 1 0 0
212 1 0 0 0 0 0 1 0 0
213 1 0 0 0 0 0 1 0 0
214 1 0 0 0 0 0 1 0 0
217 1 1 0 0 0 0 0 0 0
218 1 0 0 0 0 0 1 0 0
219 1 0 0 0 0 0 1 0 0
220 1 1 1 0 0 0 1 0 0
221 1 0 0 0 0 0 0 0 0
222 1 0 0 1 0 0 0 0 0
225 1 0 0 0 0 0 1 0 0
fn=runtime.setg
1 138 0 0 138 0 0 0 0 0
835 138 34 27 138 0 0 0 0 0
847 138 0 0 0 0 0 138 0 0
fn=runtime.stackcheck
1 7 0 0 7 0 0 0 0 0
864 7 4 1 7 0 0 0 0 0
865 7 0 0 7 0 0 0 0 0
866 7 0 0 0 0 0 0 0 0
868 7 0 0 7 0 0 0 0 0
869 7 0 0 0 0 0 0 0 0
fn=runtime.strhash
902 898 7 4 898 0 0 0 0 0
903 898 0 0 0 0 0 0 0 0
904 898 0 0 898 0 0 0 0 0
905 898 0 0 898 0 0 0 0 0
906 898 0 0 898 0 0 0 0 0
907 898 0 0 0 0 0 0 0 0
908 898 0 0 0 0 0 0 0 0
fn=runtime.systemstack
334 82432 664 52 82432 0 0 0 0 0
336 82432 0 0 82432 0 0 0 0 0
337 82432 0 0 82432 0 0 0 0 0
339 82432 0 0 82432 417 96 0 0 0
340 82432 0 0 0 0 0 0 0 0
342 82432 0 0 82432 22553 291 0 0 0
343 82432 0 0 0 0 0 0 0 0
344 82432 0 0 0 0 0 0 0 0
346 80529 0 0 80529 6627 90 0 0 0
347 80529 0 0 0 0 0 0 0 0
352 80529 0 0 0 0 0 0 0 0
353 80529 21 9 0 0 0 80529 17725 229
354 80529 0 0 0 0 0 80529 0 0
355 80529 0 0 0 0 0 80529 0 0
356 80529 0 0 0 0 0 80529 0 0
359 80529 0 0 0 0 0 80529 0 0
360 80529 0 0 80529 13916 213 0 0 0
362 80529 0 0 0 0 0 0 0 0
363 80529 0 0 0 0 0 0 0 0
364 80529 0 0 0 0 0 80529 19612 142
365 80529 0 0 0 0 0 0 0 0
368 80529 0 0 0 0 0 0 0 0
369 80529 0 0 80529 187 90 0 0 0
370 80529 0 0 0 0 0 80529 0 0
374 80529 1 0 80529 40 8 0 0 0
375 80529 130 43 80529 26 1 0 0 0
376 80529 0 0 80529 460 20 0 0 0
377 80529 0 0 0 0 0 80529 0 0
378 80529 0 0 80529 835 95 0 0 0
379 80529 0 0 0 0 0 80529 0 0
380 80529 0 0 80529 2834 76 0 0 0
386 1903 7 5 0 0 0 0 0 0
387 1903 0 0 1903 46 40 0 0 0
388 1903 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/atomic_pointer.go
fn=runtime.atomicstorep
31 75 8 2 0 0 0 25 0 0
32 50 0 0 25 0 0 0 0 0
33 15 2 1 6 0 0 9 0 0
35 75 5 1 100 2 0 0 0 0
36 75 0 0 50 0 0 0 0 0
fn=runtime.atomicwb
21 9 2 1 0 0 0 3 0 0
23 36 2 1 24 0 0 0 0 0
fn=sync/atomic.StorePointer
47 39 11 7 0 0 0 13 0 0
48 26 11 8 13 0 0 0 0 0
51 78 0 0 26 0 0 52 0 0
52 39 0 0 26 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cgo_mmap.go
fn=runtime.mmap
28 357 57 45 0 0 0 119 7 0
29 238 0 0 119 67 41 0 0 0
44 1547 154 123 714 0 0 833 153 27
fn=runtime.munmap
47 30 5 5 10 10 3 5 0 0
48 10 0 0 5 5 0 0 0 0
52 25 5 5 10 0 0 15 5 0
53 15 0 0 10 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cgo_sigaction.go
fn=runtime.sigaction
20 342 1 1 0 0 0 114 0 0
31 228 0 0 114 1 0 0 0 0
32 1140 1 1 570 0 0 456 0 0
fl=.//usr/lib/golang/src/runtime/chan.go
fn=runtime.(*waitq).dequeue
748 144 17 8 48 0 0 24 0 0
749 24 0 0 24 0 0 0 0 0
750 24 0 0 24 0 0 0 0 0
751 48 0 0 0 0 0 0 0 0
752 60 9 2 30 0 0 15 0 0
754 9 0 0 9 8 7 0 0 0
755 18 0 0 0 0 0 0 0 0
756 27 9 7 9 0 0 0 0 0
757 18 7 6 0 0 0 9 0 0
772 45 9 7 9 0 0 0 0 0
776 54 0 0 18 0 0 9 0 0
fn=runtime.chanparkcommit
609 54 9 7 18 0 0 9 0 0
615 18 9 7 9 0 0 9 0 0
619 27 0 0 18 0 0 0 0 0
625 27 0 0 9 0 0 18 0 0
626 36 0 0 18 0 0 9 0 0
fn=runtime.chanrecv
121 2 1 1 1 0 0 0 0 0
427 106 17 14 38 0 0 10 1 1
435 30 0 0 10 0 0 0 0 0
455 40 10 7 0 0 0 0 0 0
456 30 0 0 0 0 0 0 0 0
458 10 10 7 0 0 0 0 0 0
462 30 0 0 10 2 0 0 0 0
466 40 0 0 0 0 0 30 1 1
468 30 0 0 20 1 0 0 0 0
479 60 10 7 10 0 0 20 0 0
484 14 2 2 2 0 0 9 0 0
485 5 1 1 2 0 0 2 0 0
488 27 0 0 18 0 0 0 0 0
490 1 0 0 1 0 0 0 0 0
495 3 0 0 1 0 0 0 0 0
498 4 0 0 1 0 0 3 0 0
499 4 0 0 2 0 0 1 0 0
500 2 0 0 1 0 0 0 0 0
503 1 1 1 1 0 0 0 0 0
504 3 0 0 1 0 0 2 0 0
505 5 0 0 2 0 0 2 0 0
508 8 0 0 0 0 0 0 0 0
514 16 8 7 8 0 0 8 0 0
515 24 0 0 8 0 0 16 0 0
516 8 0 0 0 0 0 8 0 0
517 34 8 7 8 0 0 10 1 1
522 32 0 0 16 0 0 8 0 0
523 8 0 0 0 0 0 8 5 3
524 56 8 7 16 0 0 16 4 2
525 8 0 0 0 0 0 8 1 0
526 8 0 0 0 0 0 8 0 0
527 48 0 0 16 0 0 16 0 0
528 24 8 7 0 0 0 16 0 0
529 8 0 0 0 0 0 0 0 0
534 24 0 0 16 0 0 0 0 0
535 56 8 2 8 0 0 40 0 0
538 32 8 6 24 17 17 0 0 0
541 24 8 7 8 0 0 8 0 0
542 8 0 0 0 0 0 8 0 0
543 24 0 0 8 1 0 0 0 0
546 40 0 0 16 0 0 8 0 0
547 24 0 0 8 0 0 8 0 0
548 8 0 0 0 0 0 8 7 6
549 16 8 7 0 0 0 16 0 0
550 40 0 0 16 4 3 16 8 7
735 24 0 0 8 0 0 8 0 0
736 16 0 0 8 0 0 0 0 0
737 16 8 7 0 0 0 0 0 0
738 32 8 7 8 0 0 8 0 0
739 8 0 0 0 0 0 8 0 0
740 8 0 0 0 0 0 8 0 0
fn=runtime.chanrecv.func1
484 11 1 1 3 0 0 3 0 0
fn=runtime.chanrecv1
411 30 10 7 0 0 0 10 0 0
412 60 8 2 20 0 0 40 0 0
fn=runtime.chansend
121 2 0 0 1 0 0 0 0 0
142 82 9 7 31 0 0 10 0 0
143 30 0 0 10 0 0 0 0 0
173 10 0 0 0 0 0 0 0 0
179 30 9 7 10 6 4 0 0 0
183 40 9 7 0 0 0 30 1 1
185 30 0 0 20 7 7 0 0 0
190 60 0 0 10 0 0 20 0 0
193 112 16 14 16 0 0 72 0 0
194 32 0 0 16 0 0 8 0 0
197 8 2 1 6 1 0 0 0 0
199 1 1 1 1 0 0 0 0 0
204 6 0 0 2 0 0 4 0 0
205 4 1 1 2 0 0 1 0 0
206 2 0 0 1 0 0 0 0 0
209 1 0 0 1 0 0 0 0 0
210 3 0 0 1 0 0 2 0 0
211 4 0 0 2 0 0 1 0 0
214 1 0 0 0 0 0 0 0 0
220 2 1 1 1 0 0 1 0 0
221 3 0 0 1 0 0 2 0 0
222 1 0 0 0 0 0 1 0 0
223 13 0 0 1 0 0 10 1 1
228 4 0 0 2 0 0 1 0 0
229 1 1 1 0 0 0 1 1 0
230 2 0 0 1 0 0 1 0 0
231 1 0 0 0 0 0 1 0 0
232 6 0 0 2 0 0 2 0 0
233 6 2 2 1 0 0 2 1 0
234 3 0 0 0 0 0 2 0 0
235 1 0 0 0 0 0 0 0 0
240 3 1 1 2 0 0 0 0 0
241 7 0 0 1 0 0 5 0 0
249 4 1 1 3 0 0 0 0 0
252 3 0 0 1 0 0 1 0 0
253 1 0 0 0 0 0 1 0 0
254 2 0 0 1 0 0 0 0 0
260 3 1 1 1 0 0 1 0 0
261 3 0 0 1 0 0 0 0 0
264 3 0 0 1 0 0 1 0 0
265 2 0 0 0 0 0 2 0 0
266 4 0 0 2 0 0 1 0 0
735 3 0 0 1 0 0 1 0 0
736 2 0 0 1 0 0 0 0 0
737 2 0 0 0 0 0 0 0 0
738 4 1 1 1 0 0 1 0 0
739 1 0 0 0 0 0 1 0 0
740 1 0 0 0 0 0 1 0 0
fn=runtime.chansend.func1
193 88 16 14 24 0 0 24 7 6
fn=runtime.chansend1
126 30 9 7 0 0 0 10 0 0
127 80 9 7 30 0 0 50 1 1
fn=runtime.closechan
340 12 4 2 4 0 0 2 0 0
341 6 0 0 2 0 0 0 0 0
345 8 0 0 0 0 0 6 0 0
346 6 0 0 4 1 0 0 0 0
357 2 0 0 0 0 0 2 0 0
359 2 0 0 0 0 0 2 0 0
362 2 1 1 0 0 0 0 0 0
363 8 0 0 2 0 0 4 0 0
364 4 0 0 0 0 0 0 0 0
384 10 1 1 4 0 0 4 0 0
385 4 0 0 0 0 0 0 0 0
399 6 1 1 2 0 0 4 0 0
402 10 2 2 4 0 0 0 0 0
fn=runtime.makechan
71 60 8 4 20 0 0 10 0 0
72 30 0 0 20 8 6 10 0 0
75 30 0 0 10 7 6 0 0 0
78 20 8 4 10 0 0 0 0 0
82 20 0 0 10 0 0 0 0 0
83 70 0 0 10 0 0 0 0 0
93 20 0 0 0 0 0 0 0 0
95 45 7 4 9 0 0 36 0 0
97 45 0 0 9 0 0 9 8 7
98 2 1 1 1 0 0 0 0 0
101 6 0 0 1 0 0 4 0 0
102 4 0 0 1 0 0 1 1 1
109 30 8 4 20 0 0 10 0 0
110 30 0 0 10 0 0 10 4 4
111 20 0 0 10 0 0 10 1 0
116 40 0 0 20 0 0 10 0 0
786 9 0 0 0 0 0 0 0 0
fn=runtime.recv
566 6 2 2 2 0 0 1 0 0
567 3 0 0 2 0 0 0 0 0
571 3 0 0 1 0 0 0 0 0
599 5 1 1 2 0 0 1 0 0
600 2 0 0 1 0 0 1 0 0
601 3 0 0 2 0 0 1 1 1
602 6 0 0 3 0 0 1 0 0
603 2 0 0 1 0 0 0 0 0
606 5 1 1 1 0 0 3 0 0
607 3 0 0 2 0 0 0 0 0
fn=runtime.send
275 48 16 14 16 0 0 8 0 0
295 24 0 0 16 1 1 0 0 0
299 16 0 0 8 0 0 8 0 0
300 24 0 0 16 0 0 8 1 1
301 48 0 0 24 0 0 8 7 7
302 16 8 7 8 0 0 0 0 0
305 40 0 0 8 0 0 24 0 0
306 24 0 0 16 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cpuflags_amd64.go
fn=runtime.init.0
15 2 1 1 1 0 0 0 0 0
17 2 0 0 1 0 0 0 0 0
18 2 0 0 0 0 0 0 0 0
19 2 0 0 0 0 0 0 0 0
20 2 1 1 0 0 0 0 0 0
21 1 0 0 0 0 0 0 0 0
23 4 0 0 1 0 0 1 0 0
24 1 0 0 1 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/debug.go
fn=runtime.GOMAXPROCS
17 132 14 8 44 0 0 22 0 0
22 66 0 0 0 0 0 44 0 0
23 44 0 0 22 0 0 22 0 0
24 66 13 8 0 0 0 44 0 0
25 78 0 0 26 0 0 0 0 0
26 110 0 0 66 0 0 22 0 0
fl=.//usr/lib/golang/src/runtime/defs_linux_amd64.go
fn=runtime.futexsleep
105 402 0 0 0 0 0 134 0 0
106 938 64 36 0 0 0 134 0 0
fl=.//usr/lib/golang/src/runtime/duff_amd64.s
fn=runtime.duffcopy
277 1 1 1 1 1 1 0 0 0
278 1 1 1 0 0 0 0 0 0
279 1 0 0 0 0 0 1 1 1
280 1 0 0 0 0 0 0 0 0
282 1 0 0 1 0 0 0 0 0
283 1 0 0 0 0 0 0 0 0
284 1 0 0 0 0 0 1 0 0
285 1 0 0 0 0 0 0 0 0
287 1 0 0 1 1 1 0 0 0
288 1 0 0 0 0 0 0 0 0
289 1 0 0 0 0 0 1 0 0
290 1 0 0 0 0 0 0 0 0
292 1 0 0 1 0 0 0 0 0
293 1 0 0 0 0 0 0 0 0
294 1 0 0 0 0 0 1 0 0
295 1 0 0 0 0 0 0 0 0
297 1 0 0 1 0 0 0 0 0
298 1 0 0 0 0 0 0 0 0
299 1 0 0 0 0 0 1 1 1
300 1 1 1 0 0 0 0 0 0
302 1 0 0 1 0 0 0 0 0
303 1 0 0 0 0 0 0 0 0
304 1 0 0 0 0 0 1 0 0
305 1 0 0 0 0 0 0 0 0
307 1 0 0 1 1 1 0 0 0
308 1 0 0 0 0 0 0 0 0
309 1 0 0 0 0 0 1 0 0
310 1 0 0 0 0 0 0 0 0
312 1 0 0 1 0 0 0 0 0
313 1 0 0 0 0 0 0 0 0
314 1 0 0 0 0 0 1 0 0
315 1 0 0 0 0 0 0 0 0
317 1 0 0 1 0 0 0 0 0
318 1 0 0 0 0 0 0 0 0
319 1 0 0 0 0 0 1 1 1
320 1 0 0 0 0 0 0 0 0
322 1 0 0 1 0 0 0 0 0
323 1 1 1 0 0 0 0 0 0
324 1 0 0 0 0 0 1 0 0
325 1 0 0 0 0 0 0 0 0
327 1 0 0 1 1 1 0 0 0
328 1 0 0 0 0 0 0 0 0
329 1 0 0 0 0 0 1 0 0
330 1 0 0 0 0 0 0 0 0
332 1 0 0 1 0 0 0 0 0
333 1 0 0 0 0 0 0 0 0
334 1 0 0 0 0 0 1 0 0
335 1 0 0 0 0 0 0 0 0
337 1 0 0 1 0 0 0 0 0
338 1 0 0 0 0 0 0 0 0
339 1 0 0 0 0 0 1 1 1
340 1 0 0 0 0 0 0 0 0
342 1 0 0 1 0 0 0 0 0
343 1 0 0 0 0 0 0 0 0
344 1 0 0 0 0 0 1 0 0
345 1 0 0 0 0 0 0 0 0
347 1 1 1 1 1 1 0 0 0
348 1 0 0 0 0 0 0 0 0
349 1 0 0 0 0 0 1 0 0
350 1 0 0 0 0 0 0 0 0
352 1 0 0 1 0 0 0 0 0
353 1 0 0 0 0 0 0 0 0
354 1 0 0 0 0 0 1 0 0
355 1 0 0 0 0 0 0 0 0
357 1 0 0 1 0 0 0 0 0
358 1 0 0 0 0 0 0 0 0
359 1 0 0 0 0 0 1 1 1
360 1 0 0 0 0 0 0 0 0
362 1 0 0 1 0 0 0 0 0
363 1 0 0 0 0 0 0 0 0
364 1 0 0 0 0 0 1 0 0
365 1 0 0 0 0 0 0 0 0
367 1 0 0 1 1 1 0 0 0
368 1 0 0 0 0 0 0 0 0
369 1 1 1 0 0 0 1 0 0
370 1 0 0 0 0 0 0 0 0
372 1 0 0 1 0 0 0 0 0
373 1 0 0 0 0 0 0 0 0
374 1 0 0 0 0 0 1 0 0
375 1 0 0 0 0 0 0 0 0
377 1 0 0 1 0 0 0 0 0
378 1 0 0 0 0 0 0 0 0
379 1 0 0 0 0 0 1 1 1
380 1 0 0 0 0 0 0 0 0
382 1 0 0 1 0 0 0 0 0
383 1 0 0 0 0 0 0 0 0
384 1 0 0 0 0 0 1 0 0
385 1 0 0 0 0 0 0 0 0
387 1 0 0 1 1 1 0 0 0
388 1 0 0 0 0 0 0 0 0
389 1 0 0 0 0 0 1 0 0
390 1 0 0 0 0 0 0 0 0
392 1 1 1 1 0 0 0 0 0
393 1 0 0 0 0 0 0 0 0
394 1 0 0 0 0 0 1 0 0
395 1 0 0 0 0 0 0 0 0
397 2 1 1 2 0 0 0 0 0
398 2 0 0 0 0 0 0 0 0
399 2 0 0 0 0 0 2 1 1
400 2 0 0 0 0 0 0 0 0
402 8 3 1 8 1 1 0 0 0
403 8 0 0 0 0 0 0 0 0
404 8 0 0 0 0 0 8 1 1
405 8 0 0 0 0 0 0 0 0
407 8 0 0 8 1 1 0 0 0
408 8 0 0 0 0 0 0 0 0
409 8 0 0 0 0 0 8 0 0
410 8 0 0 0 0 0 0 0 0
412 8 0 0 8 1 1 0 0 0
413 8 0 0 0 0 0 0 0 0
414 8 0 0 0 0 0 8 1 1
415 8 0 0 0 0 0 0 0 0
417 8 0 0 8 0 0 0 0 0
418 8 0 0 0 0 0 0 0 0
419 8 0 0 0 0 0 8 2 2
420 8 0 0 0 0 0 0 0 0
422 8 0 0 8 0 0 0 0 0
423 8 0 0 0 0 0 0 0 0
424 8 0 0 0 0 0 8 1 1
425 8 0 0 0 0 0 0 0 0
fn=runtime.duffzero
1 4145 0 0 4145 0 0 0 0 0
27 3 3 3 0 0 0 3 3 3
28 3 0 0 0 0 0 3 0 0
29 3 0 0 0 0 0 3 0 0
30 3 0 0 0 0 0 0 0 0
32 3 0 0 0 0 0 3 0 0
33 3 0 0 0 0 0 3 3 3
34 3 0 0 0 0 0 3 0 0
35 3 0 0 0 0 0 3 0 0
36 3 0 0 0 0 0 0 0 0
38 3 3 3 0 0 0 3 0 0
39 3 0 0 0 0 0 3 3 3
40 3 0 0 0 0 0 3 0 0
41 3 0 0 0 0 0 3 0 0
42 3 0 0 0 0 0 0 0 0
44 3 0 0 0 0 0 3 0 0
45 3 0 0 0 0 0 3 3 3
46 3 0 0 0 0 0 3 0 0
47 3 0 0 0 0 0 3 0 0
48 3 0 0 0 0 0 0 0 0
50 3 0 0 0 0 0 3 0 0
51 3 0 0 0 0 0 3 3 3
52 3 0 0 0 0 0 3 0 0
53 3 0 0 0 0 0 3 0 0
54 3 0 0 0 0 0 0 0 0
56 3 0 0 0 0 0 3 0 0
57 3 0 0 0 0 0 3 3 3
58 3 0 0 0 0 0 3 0 0
59 3 0 0 0 0 0 3 0 0
60 3 0 0 0 0 0 0 0 0
62 3 0 0 0 0 0 3 0 0
63 3 0 0 0 0 0 3 3 3
64 3 0 0 0 0 0 3 0 0
65 3 0 0 0 0 0 3 0 0
66 3 0 0 0 0 0 0 0 0
68 4 1 1 0 0 0 4 0 0
69 4 0 0 0 0 0 4 3 3
70 4 0 0 0 0 0 4 0 0
71 428 19 15 0 0 0 428 19 7
72 428 0 0 0 0 0 0 0 0
74 428 0 0 0 0 0 428 0 0
75 428 0 0 0 0 0 428 8 3
76 437 6 4 0 0 0 437 12 5
77 437 0 0 0 0 0 437 4 0
78 437 26 13 0 0 0 0 0 0
80 2441 717 123 0 0 0 2441 986 74
81 2441 0 0 0 0 0 2441 316 20
82 2441 0 0 0 0 0 2441 36 6
83 2441 0 0 0 0 0 2441 6 1
84 2441 0 0 0 0 0 0 0 0
86 2441 0 0 0 0 0 2441 470 31
87 2441 0 0 0 0 0 2441 315 17
88 2441 0 0 0 0 0 2441 24 6
89 2441 0 0 0 0 0 2441 6 1
90 2441 0 0 0 0 0 0 0 0
92 2445 0 0 0 0 0 2445 469 29
93 2446 1 0 0 0 0 2446 309 19
94 2488 7 7 0 0 0 2488 38 8
95 4145 6 0 0 0 0 4145 57 2
96 4145 0 0 0 0 0 0 0 0
98 4145 0 0 0 0 0 4145 472 20
99 4145 694 132 0 0 0 4145 306 16
100 4145 0 0 0 0 0 4145 13 6
101 4145 0 0 0 0 0 4145 2 2
102 4145 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/env_posix.go
fn=runtime.gogetenv
11 24 2 2 8 0 0 4 0 0
12 12 0 0 8 0 0 4 0 0
13 8 0 0 0 0 0 0 0 0
16 1874 1 1 550 7 0 56 0 0
17 2004 2 2 253 47 0 0 0 0
18 28 0 0 28 0 0 0 0 0
21 20 0 0 8 0 0 4 0 0
37 84 1 1 28 0 0 56 0 0
fl=.//usr/lib/golang/src/runtime/extern.go
fn=testing.(*B).Run
215 24 0 0 4 0 0 20 0 0
fn=testing.callerName
215 6 1 1 1 0 0 5 0 0
fl=.//usr/lib/golang/src/runtime/fastlog2.go
fn=runtime.fastexprand
18 799 0 0 0 0 0 0 0 0
21 3196 0 0 0 0 0 0 0 0
22 2397 0 0 0 0 0 0 0 0
23 1598 600 113 0 0 0 0 0 0
25 4794 0 0 1598 895 416 0 0 0
26 7990 558 121 799 775 117 0 0 0
fl=.//usr/lib/golang/src/runtime/float.go
fn=runtime.fastexprand
46 799 0 0 0 0 0 0 0 0
fn=runtime.float64frombits
52 1 1 1 1 0 0 0 0 0
fn=runtime.init
9 11 2 2 3 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/hash64.go
fn=runtime.memhash64Fallback
94 6 2 2 4 1 1 0 0 0
95 2 0 0 0 0 0 0 0 0
96 8 0 0 0 0 0 0 0 0
97 6 0 0 0 0 0 0 0 0
98 4 1 1 0 0 0 0 0 0
99 6 0 0 0 0 0 0 0 0
100 2 0 0 0 0 0 2 0 0
107 2 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/iface.go
fn=runtime.(*itab).init
191 7 1 1 2 0 0 1 0 0
192 3 0 0 2 0 0 1 0 0
193 2 1 1 1 0 0 1 0 0
194 4 0 0 1 0 0 3 0 0
200 3 0 0 2 0 0 1 0 0
201 2 0 0 1 1 1 1 0 0
202 6 0 0 1 0 0 0 0 0
204 2 1 1 0 0 0 0 0 0
206 1 0 0 0 0 0 0 0 0
207 3 1 1 0 0 0 1 0 0
208 5 0 0 2 0 0 1 0 0
209 1 0 0 1 1 1 0 0 0
210 3 0 0 3 0 0 0 0 0
211 6 0 0 2 0 0 4 0 0
212 5 0 0 3 0 0 2 0 0
213 2 1 1 0 0 0 0 0 0
214 7 1 1 4 0 0 2 0 0
216 30 1 1 12 0 0 4 0 0
217 9 0 0 0 0 0 3 0 0
218 6 0 0 3 1 0 0 0 0
219 27 1 1 15 0 0 0 0 0
224 13 0 0 10 0 0 2 0 0
238 2 1 1 1 0 0 1 0 0
239 7 0 0 4 0 0 2 0 0
241 1 0 0 0 0 0 1 0 0
fn=runtime.(*itabTableType).add
30 104 0 0 104 64 64 0 0 0
161 156 0 0 104 0 0 0 0 0
162 260 4 2 156 40 40 0 0 0
163 55 0 0 0 0 0 0 0 0
164 55 0 0 0 0 0 0 0 0
165 55 0 0 55 36 36 0 0 0
166 110 0 0 0 0 0 0 0 0
173 110 0 0 0 0 0 0 0 0
178 52 0 0 104 0 0 0 0 0
179 52 0 0 52 0 0 0 0 0
180 52 0 0 52 0 0 0 0 0
182 6 0 0 0 0 0 0 0 0
183 3 0 0 0 0 0 0 0 0
fn=runtime.(*itabTableType).find
30 8 1 1 8 1 1 0 0 0
100 6 1 1 4 1 0 0 0 0
101 4 0 0 0 0 0 0 0 0
102 2 0 0 0 0 0 0 0 0
103 2 0 0 0 0 0 0 0 0
107 2 0 0 2 1 1 0 0 0
108 4 0 0 0 0 0 0 0 0
109 2 1 0 0 0 0 2 0 0
fn=runtime.assertI2I2
459 6 1 1 2 0 0 1 0 0
461 3 0 0 1 0 0 0 0 0
464 3 0 0 2 0 0 0 0 0
465 6 1 1 2 0 0 4 0 0
466 2 0 0 0 0 0 0 0 0
467 6 1 1 2 0 0 2 0 0
fn=runtime.convT64
353 96 19 16 32 0 0 16 0 0
354 48 0 0 16 0 0 0 0 0
357 96 5 4 32 6 4 64 0 0
358 48 0 0 16 0 0 16 0 0
360 64 0 0 32 0 0 16 0 0
fn=runtime.convTslice
373 18 3 3 6 0 0 3 0 0
375 6 0 0 3 0 0 0 0 0
376 3 0 0 0 0 0 0 0 0
381 12 3 3 6 0 0 3 0 0
fn=runtime.convTstring
363 120 22 13 40 0 0 20 0 0
364 60 0 0 20 0 0 0 0 0
365 1 0 0 0 0 0 0 0 0
367 114 13 8 38 5 4 76 0 0
368 133 0 0 57 0 0 38 0 0
370 99 0 0 40 0 0 20 0 0
fn=runtime.getitab
33 8 2 1 3 0 0 1 0 0
34 4 0 0 3 1 1 0 0 0
39 4 0 0 2 1 0 0 0 0
53 1 1 1 1 1 0 0 0 0
54 7 0 0 1 0 0 4 0 0
59 3 1 1 0 0 0 2 0 0
60 10 1 1 4 0 0 4 0 0
66 12 1 1 3 0 0 5 0 0
67 5 0 0 2 0 0 1 1 1
68 2 0 0 1 0 0 1 0 0
74 1 1 1 0 0 0 1 0 0
75 2 0 0 0 0 0 2 0 0
76 3 0 0 1 0 0 2 0 0
77 3 0 0 0 0 0 2 0 0
78 1 0 0 0 0 0 0 0 0
79 3 0 0 2 0 0 0 0 0
82 1 0 0 0 0 0 0 0 0
83 4 1 1 2 0 0 1 0 0
fn=runtime.init
303 8 1 1 3 1 1 3 1 1
304 8 1 1 3 0 0 3 0 0
305 8 0 0 3 0 0 3 0 0
306 8 1 1 3 0 0 3 0 0
307 8 1 1 3 1 1 3 0 0
fn=runtime.itabAdd
121 312 1 1 104 0 0 52 0 0
126 208 2 1 156 0 0 0 0 0
130 52 0 0 52 1 1 0 0 0
131 312 0 0 104 1 1 0 0 0
153 208 0 0 52 0 0 156 0 0
154 156 2 1 104 0 0 0 0 0
fn=runtime.itabsinit
245 6 2 2 2 0 0 1 0 0
246 3 0 0 0 0 0 2 0 0
247 164 1 1 154 0 0 3 0 0
248 416 1 1 206 8 8 53 0 0
249 102 0 0 0 0 0 102 0 0
252 3 0 0 0 0 0 2 0 0
253 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/atomic/asm_amd64.s
fn=runtime/internal/atomic.Store
1 5 0 0 5 0 0 0 0 0
131 5 4 1 5 0 0 0 0 0
132 5 0 0 5 0 0 0 0 0
133 5 0 0 10 1 0 0 0 0
fn=runtime/internal/atomic.Store64
146 13 11 8 13 0 0 0 0 0
147 13 0 0 13 0 0 0 0 0
148 13 0 0 26 0 0 0 0 0
fn=runtime/internal/atomic.Storeuintptr
1 13 11 8 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/sys/intrinsics.go
fn=runtime.adjustpointers
58 570 0 0 190 21 18 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/sys/intrinsics_common.go
fn=runtime.(*pageBits).popcntRange
92 8995 0 0 0 0 0 0 0 0
93 8995 30 24 0 0 0 0 0 0
94 7455 453 105 0 0 0 0 0 0
95 4620 0 0 0 0 0 0 0 0
96 4620 21 2 0 0 0 0 0 0
97 4620 0 0 0 0 0 0 0 0
98 1540 30 24 0 0 0 0 0 0
fn=runtime.(*pageCache).alloc
126 381056 19433 116 47632 18007 210 0 0 0
fn=runtime.(*pageCache).allocN
92 498 0 0 0 0 0 0 0 0
93 498 42 18 0 0 0 0 0 0
94 415 0 0 0 0 0 0 0 0
95 249 0 0 0 0 0 0 0 0
96 249 0 0 0 0 0 0 0 0
97 249 40 18 0 0 0 0 0 0
98 83 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).find1
112 1824 0 0 0 0 0 0 0 0
126 6384 591 126 912 390 5 0 0 0
fn=runtime.(*pallocBits).findLargeN
49 45 6 5 0 0 0 0 0 0
50 8 0 0 0 0 0 0 0 0
53 41 4 4 0 0 0 0 0 0
54 3 1 1 0 0 0 0 0 0
55 3 0 0 0 0 0 0 0 0
57 24 0 0 0 0 0 0 0 0
58 3 0 0 0 0 0 0 0 0
59 12 1 1 0 0 0 0 0 0
61 60 1 0 12 9 1 0 0 0
112 91 5 4 0 0 0 0 0 0
126 71 12 10 10 2 0 0 0 0
130 36 1 1 0 0 0 0 0 0
fn=runtime.(*pallocBits).findSmallN
49 98 0 0 24 0 0 0 0 0
50 44 0 0 0 0 0 0 0 0
53 50 2 1 0 0 0 0 0 0
54 24 0 0 0 0 0 0 0 0
55 24 0 0 0 0 0 0 0 0
57 48 8 7 0 0 0 0 0 0
58 24 0 0 0 0 0 0 0 0
59 24 0 0 0 0 0 0 0 0
61 96 0 0 24 16 2 0 0 0
112 1478 0 0 0 0 0 0 0 0
126 5249 34 17 700 1 0 0 0 0
130 72 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
133 1742038 0 0 0 0 0 0 0 0
137 3571968 0 0 1190656 2727 396 0 0 0
142 1742038 0 0 871019 1956 291 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
49 154 14 9 0 0 0 0 0 0
50 116 0 0 0 0 0 0 0 0
53 120 13 8 0 0 0 0 0 0
54 44 0 0 0 0 0 0 0 0
55 44 0 0 0 0 0 0 0 0
57 120 0 0 0 0 0 0 0 0
58 36 0 0 0 0 0 0 0 0
59 36 9 6 0 0 0 0 0 0
61 240 2 0 60 16 12 0 0 0
130 180 0 0 0 0 0 0 0 0
fn=runtime.findBitRange64
112 10795 0 0 0 0 0 0 0 0
126 35812 104 41 4850 376 13 0 0 0
fl=.//usr/lib/golang/src/runtime/lfstack.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
56 70 19 15 35 19 8 0 0 0
fn=runtime.(*lfstack).pop
42 36653 27 23 36653 0 0 0 0 0
43 36653 0 0 36653 0 0 0 0 0
44 73306 0 0 0 0 0 0 0 0
45 551 15 10 0 0 0 551 0 0
47 36102 0 0 0 0 0 0 0 0
48 36102 0 0 36102 35052 11889 0 0 0
49 144408 0 0 36102 0 0 0 0 0
50 72204 0 0 36102 0 0 36102 0 0
fn=runtime.(*lfstack).push
25 253188 2623 90 84396 0 0 42198 0 0
26 168792 0 0 84396 0 0 42198 0 0
27 42198 0 0 0 0 0 0 0 0
28 126594 0 0 42198 0 0 0 0 0
33 42198 0 0 42198 7628 402 0 0 0
34 42198 0 0 0 0 0 42198 0 0
35 210990 0 0 42198 0 0 0 0 0
36 126594 0 0 84396 0 0 0 0 0
fn=runtime.findrunnable
56 216 0 0 108 67 9 0 0 0
fn=runtime.gcAssistAlloc1
56 4226 0 0 2113 64 3 0 0 0
fn=runtime.gcBgMarkWorker
56 48 21 15 24 0 0 0 0 0
fn=runtime.gcMarkDone
56 88 0 0 44 10 0 0 0 0
fn=runtime.handoffp
56 10 5 0 5 4 0 0 0 0
fn=runtime.lfnodeValidate
61 36576 19 18 12192 0 0 6096 0 0
62 36576 0 0 18288 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/lfstack_64bit.go
fn=runtime.(*lfstack).pop
52 108306 0 0 0 0 0 0 0 0
fn=runtime.(*lfstack).push
45 210990 0 0 0 0 0 0 0 0
52 126594 1117 48 0 0 0 0 0 0
fn=runtime.lfnodeValidate
45 18288 24 18 0 0 0 0 0 0
52 12192 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/lock_futex.go
fn=runtime.forEachP
127 45 0 0 0 0 0 45 0 0
fn=runtime.gcBgMarkStartWorkers
127 16 0 0 0 0 0 16 0 0
fn=runtime.lock
46 4954866 976 31 1651622 132 19 825811 228 24
47 825811 0 0 825811 0 0 0 0 0
49 3303244 962 29 1651622 700 75 0 0 0
52 1651622 0 0 0 0 0 825811 0 0
55 2477433 0 0 2477433 40990 1938 0 0 0
56 1651622 0 0 0 0 0 0 0 0
57 2477409 10147 127 1651606 0 0 0 0 0
72 16 0 0 8 0 0 0 0 0
77 424 6 6 126 0 0 44 0 0
78 133 2 1 89 4 2 0 0 0
79 76 0 0 8 0 0 0 0 0
80 24 0 0 16 0 0 0 0 0
83 72 0 0 0 0 0 72 0 0
87 81 3 3 18 0 0 9 0 0
88 27 0 0 18 0 0 0 0 0
89 43 0 0 0 0 0 17 0 0
93 9 0 0 0 0 0 9 0 0
97 18 0 0 18 0 0 0 0 0
98 18 0 0 0 0 0 0 0 0
102 36 0 0 0 0 0 36 0 0
fn=runtime.notesleep
139 2832 357 55 944 0 0 472 0 0
140 944 0 0 472 0 0 472 0 0
141 1416 0 0 944 389 57 0 0 0
145 1416 14 8 944 9 0 0 0 0
149 5150 328 37 2808 316 65 0 0 0
150 944 16 9 472 0 0 472 0 0
151 4242 0 0 466 0 0 2360 422 16
152 1864 330 52 932 351 36 0 0 0
155 1398 320 52 932 709 152 466 311 58
fn=runtime.notetsleep
210 792 75 36 264 0 0 132 0 0
211 132 39 30 132 0 0 0 0 0
212 396 0 0 264 54 19 0 0 0
216 1315 83 44 657 0 0 527 40 13
fn=runtime.notetsleep_internal
164 444 44 14 0 0 0 148 0 0
165 296 77 35 148 0 0 148 0 0
167 444 0 0 148 0 0 0 0 0
168 48 0 0 32 2 0 0 0 0
172 120 1 1 60 0 0 0 0 0
173 28 0 0 14 0 0 14 0 0
174 118 0 0 14 0 0 72 0 0
175 56 1 1 28 0 0 0 0 0
178 42 0 0 28 0 0 14 0 0
180 64 0 0 32 0 0 16 0 0
183 528 80 36 264 1 1 0 0 0
184 2 0 0 0 0 0 2 0 0
187 390 71 37 130 0 0 130 0 0
188 130 0 0 0 0 0 0 0 0
189 410 0 0 268 123 43 0 0 0
192 402 47 29 268 0 0 134 16 0
193 670 0 0 134 0 0 536 0 0
194 532 13 6 266 34 1 0 0 0
197 399 0 0 266 53 32 133 38 13
198 532 73 37 266 71 11 0 0 0
201 28 0 0 0 0 0 0 0 0
202 88 0 0 28 0 0 0 0 0
205 8 0 0 0 0 0 0 0 0
207 903 0 0 516 0 0 129 3 1
fn=runtime.notetsleepg
221 96 5 2 32 0 0 16 0 0
222 16 0 0 16 0 0 0 0 0
223 48 0 0 32 0 0 0 0 0
227 16 0 0 0 0 0 16 0 0
228 112 1 1 48 0 0 64 0 0
229 16 0 0 0 0 0 16 0 0
230 80 0 0 48 0 0 16 0 0
fn=runtime.notewakeup
130 3546 284 63 1182 0 0 591 0 0
131 1773 0 0 1773 0 0 0 0 0
132 1182 0 0 0 0 0 0 0 0
136 1773 239 52 0 0 0 1773 211 4
137 1773 28 9 1182 86 12 0 0 0
fn=runtime.stopTheWorldWithSema
127 30 0 0 0 0 0 30 0 0
fn=runtime.sysmon
127 32 16 10 0 0 0 32 0 0
fn=runtime.unlock
106 4954866 10141 104 1651622 296 73 825811 7 0
107 2477433 0 0 2477433 686 4 0 0 0
108 1651622 0 0 0 0 0 0 0 0
111 1651622 0 0 0 0 0 0 0 0
112 56 0 0 0 0 0 42 0 0
115 825811 0 0 825811 0 0 0 0 0
116 1651622 0 0 1651622 200 71 0 0 0
117 3303244 10047 88 1651622 0 0 0 0 0
120 2117517 0 0 645853 1451 223 0 0 0
121 2477457 0 0 1651622 0 0 24 0 0
fl=.//usr/lib/golang/src/runtime/malloc.go
fn=runtime.(*hmap).newoverflow
1165 10182 1 1 3394 61 1 6788 0 0
fn=runtime.(*linearAlloc).alloc
1393 84 7 7 28 0 0 14 0 0
1394 28 0 0 28 6 5 0 0 0
1395 56 7 7 28 0 0 0 0 0
1396 56 7 7 28 0 0 14 0 0
fn=runtime.(*mcache).nextFree
858 708240 2901 259 236082 0 0 118039 9 1
859 826273 0 0 354117 0 0 118039 6 6
861 354117 958 61 118039 0 0 236078 30 25
862 540885 0 0 236078 0 0 0 0 0
864 147930 0 0 49310 846 53 0 0 0
868 246550 0 0 98620 0 0 147930 0 0
870 197240 766 100 147930 97 37 49310 0 0
872 147930 0 0 49310 0 0 98620 0 0
875 334698 799 41 167349 0 0 0 0 0
879 354117 0 0 236078 162 2 0 0 0
880 354117 93 47 118039 0 0 118039 0 0
881 472156 0 0 118039 0 0 0 0 0
885 776963 69 26 236078 0 0 354117 27 2
fn=runtime.(*mheap).sysAlloc
617 49 7 7 14 0 0 7 0 0
618 7 0 0 0 0 0 0 0 0
621 70 14 14 14 0 0 35 1 0
622 35 0 0 14 0 0 0 0 0
628 28 7 7 7 0 0 7 1 0
630 7 0 0 7 6 6 0 0 0
631 14 0 0 7 0 0 0 0 0
632 21 0 0 7 0 0 0 0 0
634 42 7 7 0 0 0 14 0 0
637 14 7 7 0 0 0 0 0 0
641 7 7 7 0 0 0 0 0 0
643 49 0 0 7 0 0 0 0 0
645 7 7 7 7 0 0 0 0 0
648 28 0 0 7 0 0 7 0 0
661 14 0 0 14 0 0 0 0 0
665 14 0 0 0 0 0 0 0 0
694 14 0 0 0 0 0 7 0 0
695 28 7 7 0 0 0 7 0 0
697 14 0 0 0 0 0 0 0 0
699 14 0 0 0 0 0 0 0 0
702 70 0 0 0 0 0 0 0 0
710 14 0 0 0 0 0 0 0 0
715 35 7 7 0 0 0 28 0 0
719 156 7 7 37 0 0 21 0 0
720 14 0 0 7 7 6 0 0 0
721 14 0 0 0 0 0 0 0 0
723 5 1 1 1 0 0 4 0 0
724 2 0 0 0 0 0 0 0 0
727 4 1 1 3 0 0 0 0 0
730 57 7 7 8 7 2 7 0 0
734 56 7 7 7 0 0 35 0 0
735 14 0 0 0 0 0 0 0 0
736 42 13 13 7 0 0 28 0 0
737 14 0 0 0 0 0 0 0 0
743 28 0 0 21 0 0 0 0 0
744 1 0 0 0 0 0 0 0 0
745 2 0 0 0 0 0 0 0 0
746 1 0 0 1 0 0 0 0 0
748 7 1 1 1 0 0 5 0 0
749 2 0 0 0 0 0 0 0 0
753 7 1 1 4 0 0 2 0 0
754 12 0 0 1 0 0 4 0 0
760 43 6 6 15 0 0 7 0 0
761 35 0 0 14 0 0 7 7 7
767 16 1 1 22 0 0 1 0 0
775 35 6 6 14 0 0 14 0 0
fn=runtime.allocmcache
1215 64 0 0 32 1 1 32 0 0
fn=runtime.fastexprand
1220 2397 532 107 0 0 0 799 0 0
1223 799 0 0 0 0 0 0 0 0
1224 2397 0 0 799 0 0 0 0 0
1226 1598 255 96 0 0 0 0 0 0
1239 1598 0 0 0 0 0 0 0 0
1240 3196 508 111 799 747 77 0 0 0
1241 3196 0 0 0 0 0 0 0 0
1245 10387 0 0 2397 778 107 799 0 0
fn=runtime.largeAlloc
1136 294 68 48 98 0 0 49 0 0
1139 196 0 0 49 0 0 0 0 0
1142 98 0 0 0 0 0 0 0 0
1143 98 0 0 0 0 0 0 0 0
1144 49 0 0 0 0 0 0 0 0
1150 343 17 14 0 0 0 196 4 0
1152 539 0 0 196 2 0 294 0 0
1153 49 0 0 0 0 0 0 0 0
1156 147 0 0 49 7 1 49 0 0
1157 294 46 24 0 0 0 294 0 0
1158 245 0 0 147 21 1 49 17 3
fn=runtime.mallocgc
832 23472848 20 10 5868212 41855 697 0 0 0
833 11736424 0 0 0 0 0 0 0 0
834 11722686 0 0 5861343 10843 167 0 0 0
835 17584029 30 20 5861343 0 0 0 0 0
836 11637794 0 0 0 0 0 0 0 0
837 23344312 10 2 0 0 0 0 0 0
840 34501038 26 11 0 0 0 5750173 0 0
841 5750173 5 3 0 0 0 5750173 0 0
842 17250519 0 0 5750173 19179 295 5750173 0 0
843 17250519 0 0 11500346 17521 291 0 0 0
891 52814417 247 130 17604760 0 0 5868299 1 1
892 11736598 0 0 5868299 634 15 0 0 0
896 17604897 0 0 5868299 0 0 0 0 0
897 5 1 1 2 0 0 1 0 0
900 11736596 0 0 5868298 3630 117 0 0 0
926 17132555 8181 149 5868298 133 14 0 0 0
928 472339 0 0 472339 0 0 0 0 0
929 7285324 18 10 944678 0 0 0 0 0
934 1419334 118 27 472339 1194 13 474647 8 2
936 944678 0 0 0 0 0 0 0 0
940 6924 0 0 0 0 0 4616 11 8
945 5868298 0 0 0 0 0 0 0 0
946 11736596 0 0 5868298 20 1 0 0 0
949 17604894 0 0 11736596 3011 318 0 0 0
952 5868298 6272 112 0 0 0 5868298 0 0
955 11736596 14448 145 5868298 2110 69 5868298 147 8
956 5868298 0 0 0 0 0 0 0 0
958 45988690 0 0 10778939 1872 110 5868298 508 37
959 11736596 0 0 0 0 0 0 0 0
960 17604747 0 0 0 0 0 0 0 0
990 87 0 0 87 1 0 0 0 0
992 174 22 10 0 0 0 0 0 0
993 39 0 0 0 0 0 0 0 0
994 96 1 0 0 0 0 0 0 0
995 5 0 0 0 0 0 0 0 0
996 86 0 0 0 0 0 0 0 0
997 8 0 0 0 0 0 0 0 0
999 408 0 0 49 0 0 0 0 0
1001 37 0 0 0 0 0 0 0 0
1002 37 0 0 0 0 0 37 0 0
1003 37 0 0 37 0 0 0 0 0
1004 37 0 0 0 0 0 37 0 0
1005 37 0 0 0 0 0 0 0 0
1006 148 0 0 74 0 0 37 0 0
1009 50 18 10 50 2 1 0 0 0
1010 100 10 8 0 0 0 0 0 0
1011 140 10 8 0 0 0 0 0 0
1012 60 10 8 20 0 0 30 1 1
1015 100 0 0 0 0 0 50 24 18
1019 206 1 0 133 1 0 0 0 0
1020 78 0 0 0 0 0 39 0 0
1021 78 2 0 39 0 0 39 0 0
1023 61 0 0 0 0 0 50 0 0
1026 11736324 353 41 0 0 0 0 0 0
1027 35192226 14066 158 5865371 4186 232 0 0 0
1029 19537 29 20 2791 22 15 0 0 0
1031 29340810 0 0 5868162 4023 393 5868162 0 0
1032 5868162 0 0 0 0 0 0 0 0
1033 29340810 0 0 5868162 35470 781 0 0 0
1034 5848743 32 23 0 0 0 0 0 0
1035 17486457 33 22 0 0 0 0 0 0
1036 826203 571 134 354087 0 0 354087 21 16
1038 24407 0 0 0 0 0 24407 0 0
1039 15404308 147 61 4768073 0 0 0 0 0
1040 122035 0 0 24407 0 0 73221 1 1
1044 49 24 19 0 0 0 49 0 0
1046 735 27 21 49 0 0 441 0 0
1049 98 26 21 49 0 0 49 22 0
1050 98 0 0 49 0 0 49 20 0
1051 49 0 0 49 0 0 0 0 0
1052 1100348 4 4 98 11 0 49 25 9
1056 7968451 0 0 0 0 0 0 0 0
1063 7678637 13833 119 3910566 3795 182 0 0 0
1066 33912639 301 90 3768071 0 0 22608426 157 2
1067 15072284 0 0 11304213 64 2 0 0 0
1071 3132154 0 0 1566077 0 0 0 0 0
1072 4698231 55 25 0 0 0 0 0 0
1075 4403988 352 66 2201994 0 0 0 0 0
1077 16638361 0 0 7536142 2420 62 0 0 0
1086 5868261 0 0 0 0 0 5868261 179 2
1092 11736522 51 32 5868261 1941 90 0 0 0
1093 13414988 18 13 1416996 0 0 7757589 0 0
1104 11879017 51 5 6010756 0 0 5868261 19 2
1105 5868261 0 0 0 0 0 0 0 0
1107 11736522 45 32 5868261 1291 100 0 0 0
1111 17604783 0 0 5868261 3021 256 0 0 0
1112 41220312 0 0 17747268 1005 95 0 0 0
1113 11734956 47 30 0 0 0 5867478 0 0
1115 783 0 0 0 0 0 0 0 0
1116 4698 635 130 1566 0 0 3132 0 0
1117 783 0 0 0 0 0 0 0 0
1121 23617884 14 12 6013064 2112 46 5868298 0 0
1124 13870177 0 0 1559512 18 0 5868261 0 0
1127 35258182 0 0 5892668 0 0 5892668 0 0
1128 144129 0 0 0 0 0 0 0 0
1129 50 0 0 0 0 0 30 0 0
1133 46970308 112 66 17629190 1 1 11736522 567 40
fn=runtime.mallocgc.func1
1046 539 49 22 294 0 0 98 0 0
1047 392 48 7 147 0 0 245 29 6
1048 147 0 0 98 10 0 0 0 0
fn=runtime.mallocinit
415 6 1 1 2 2 0 1 0 0
416 2 0 0 1 1 1 0 0 0
420 2 1 1 0 0 0 1 0 0
422 1 0 0 0 0 0 0 0 0
429 203 0 0 0 0 0 0 0 0
430 335 0 0 67 2 2 67 26 26
434 3 0 0 1 1 0 0 0 0
438 2 1 1 0 0 0 0 0 0
442 2 0 0 0 0 0 0 0 0
446 3 0 0 0 0 0 0 0 0
450 4 0 0 1 0 0 0 0 0
454 2 0 0 0 0 0 0 0 0
461 2 1 1 1 0 0 0 0 0
464 176 0 0 44 0 0 0 0 0
465 42 0 0 0 0 0 21 0 0
470 3 1 1 0 0 0 2 0 0
471 2 0 0 1 0 0 1 0 0
472 6 0 0 3 0 0 2 1 1
475 1 0 0 0 0 0 0 0 0
509 517 2 2 2 0 0 128 0 0
532 640 0 0 128 0 0 0 0 0
534 512 0 0 128 0 0 256 0 0
535 128 0 0 0 0 0 128 17 17
536 384 0 0 128 1 1 256 32 32
fn=runtime.mapassign_faststr
1165 72 0 0 24 6 6 48 0 0
fn=runtime.newarray
1179 182 8 6 52 0 0 26 0 0
1180 78 0 0 26 0 0 0 0 0
1183 78 8 6 52 0 0 0 0 0
1184 156 0 0 0 0 0 0 0 0
1187 234 8 6 78 0 0 130 0 0
fn=runtime.newobject
1164 19201683 26090 215 6400562 0 0 3200280 0 0
1165 35203080 1 1 16001400 7753 301 16001400 1000 71
fn=runtime.persistentalloc
1288 3648 414 122 1216 0 0 608 2 1
1289 608 0 0 0 0 0 608 319 16
1290 10336 703 213 1824 0 0 6080 233 23
1293 3040 0 0 1824 0 0 608 0 0
fn=runtime.persistentalloc.func1
1290 6688 1053 251 3648 0 0 1216 252 23
1291 4256 531 118 1216 0 0 3040 54 2
1292 1824 0 0 1216 0 0 0 0 0
fn=runtime.persistentalloc1
1299 3648 428 117 1216 0 0 608 155 12
1304 1824 0 0 608 0 0 0 0 0
1307 2265 0 0 608 0 0 0 0 0
1308 501 0 0 0 0 0 0 0 0
1311 334 0 0 0 0 0 0 0 0
1318 1216 441 124 0 0 0 0 0 0
1319 521 149 72 32 0 0 40 0 0
1322 600 0 0 0 0 0 0 0 0
1324 3000 0 0 600 1 1 0 0 0
1325 1180 477 120 0 0 0 0 0 0
1327 30 1 1 0 0 0 20 1 0
1328 20 0 0 0 0 0 0 0 0
1330 2400 1 1 600 519 135 1800 308 28
1331 3529 491 111 585 0 0 0 0 0
1332 248 31 29 62 0 0 155 25 0
1333 62 0 0 31 0 0 0 0 0
1342 31 0 0 31 29 22 0 0 0
1343 62 0 0 31 0 0 31 31 31
1344 217 28 10 62 0 0 31 0 0
1348 31 0 0 0 0 0 31 0 0
1350 1769 468 109 1200 0 0 0 0 0
1351 1800 0 0 600 0 0 600 0 0
1352 600 0 0 0 0 0 0 0 0
1353 1800 520 118 0 0 0 0 0 0
1354 40 1 1 0 0 0 20 0 0
1357 2400 0 0 600 0 0 0 0 0
1358 1792 0 0 10 0 0 1782 374 27
1359 3564 518 121 594 0 0 1782 0 0
1361 3004 0 0 1804 0 0 600 0 0
1421 1200 0 0 0 0 0 600 0 0
fn=runtime.profilealloc
1195 4707 370 91 1572 0 0 783 0 0
1196 3132 517 118 2349 22 3 783 0 0
1197 3915 0 0 1566 0 0 2349 0 0
1198 2349 0 0 1566 0 0 0 0 0
1215 2349 0 0 783 0 0 1566 0 0
fl=.//usr/lib/golang/src/runtime/map.go
fn=runtime.(*hmap).incrnoverflow
230 10896 5 5 5448 0 0 0 0 0
231 8172 5 5 2724 0 0 2724 0 0
fn=runtime.(*hmap).newoverflow
208 4108 0 0 3081 1026 1012 0 0 0
212 16354 18 12 8174 0 0 2726 0 0
245 16344 4 4 5448 0 0 2724 0 0
247 19034 12 7 8160 342 4 0 0 0
251 1027 0 0 0 0 0 0 0 0
253 4100 0 0 1025 0 0 1025 0 0
258 2 0 0 0 0 0 0 0 0
259 10 0 0 4 0 0 2 0 0
262 5091 4 2 3394 0 0 0 0 0
264 7145 0 0 1697 0 0 5448 0 0
265 13620 24 7 8172 271 4 0 0 0
267 2724 19 7 0 0 0 2724 0 0
269 2724 0 0 0 0 0 0 0 0
270 10896 12 5 5448 0 0 2724 0 0
fn=runtime.advanceEvacuationMark
203 50 0 0 50 0 0 0 0 0
204 150 0 0 0 0 0 0 0 0
1116 100 0 0 50 0 0 0 0 0
1117 50 0 0 0 0 0 0 0 0
1242 276 2 2 92 0 0 46 0 0
1243 184 2 2 92 0 0 46 0 0
1246 46 0 0 0 0 0 0 0 0
1247 184 0 0 92 0 0 0 0 0
1250 306 0 0 70 0 0 0 0 0
1251 48 0 0 0 0 0 24 0 0
1253 92 2 2 0 0 0 0 0 0
1255 60 0 0 20 0 0 20 0 0
1259 60 0 0 20 0 0 0 0 0
1260 9 0 0 3 0 0 3 0 0
1262 198 2 2 112 0 0 20 0 0
fn=runtime.evacuate_faststr
111 680 0 0 0 0 0 0 0 0
185 386 2 2 0 0 0 70 0 0
203 82 0 0 82 0 0 0 0 0
204 246 0 0 0 0 0 0 0 0
208 170 0 0 170 8 8 0 0 0
1087 1696 2 2 1080 0 0 0 0 0
1092 82 0 0 82 0 0 0 0 0
1093 82 0 0 0 0 0 0 0 0
1094 164 6 4 0 0 0 0 0 0
1096 70 0 0 0 0 0 70 0 0
fn=runtime.growWork_faststr
185 132 0 0 0 0 0 0 0 0
1082 88 0 0 88 0 0 0 0 0
1087 88 0 0 44 0 0 0 0 0
1092 44 0 0 44 0 0 0 0 0
1093 44 0 0 0 0 0 0 0 0
1094 88 2 2 0 0 0 0 0 0
1096 44 0 0 0 0 0 0 0 0
1101 44 0 0 0 0 0 0 0 0
fn=runtime.hashGrow
185 40 2 2 0 0 0 0 0 0
1017 120 2 2 40 0 0 20 0 0
1022 120 0 0 60 0 0 0 0 0
1026 40 0 0 20 0 0 20 0 0
1027 202 2 2 80 0 0 102 0 0
1029 80 0 0 40 0 0 0 0 0
1030 40 0 0 0 0 0 0 0 0
1034 80 0 0 40 0 0 20 0 0
1035 20 0 0 0 0 0 20 0 0
1036 80 2 2 40 0 0 20 0 0
1037 20 0 0 0 0 0 20 0 0
1038 20 0 0 0 0 0 20 1 1
1039 20 0 0 0 0 0 20 0 0
1041 63 0 0 21 0 0 0 0 0
1049 40 2 2 0 0 0 0 0 0
1050 6 0 0 3 0 0 0 0 0
1051 18 2 2 6 0 0 6 0 0
1053 79 3 2 48 0 0 3 1 1
1062 120 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
185 89 8 6 0 0 0 26 0 0
212 38 1 0 4 1 0 4 3 3
344 156 8 6 52 0 0 26 0 0
345 26 0 0 26 0 0 0 0 0
349 74 0 0 0 0 0 0 0 0
353 8 3 3 0 0 0 0 0 0
354 20 0 0 12 0 0 0 0 0
355 4 0 0 0 0 0 0 0 0
356 9 3 3 0 0 0 0 0 0
357 15 0 0 0 0 0 0 0 0
361 78 0 0 26 0 0 0 0 0
362 156 16 11 52 0 0 78 0 0
368 71 7 5 22 0 0 26 0 0
376 149 16 12 52 0 0 0 0 0
382 12 0 0 8 1 0 0 0 0
383 8 0 0 0 0 0 0 0 0
384 4 0 0 0 0 0 0 0 0
386 130 0 0 52 0 0 52 0 0
fn=runtime.makemap
185 60 0 0 0 0 0 0 0 0
303 36 12 9 12 0 0 6 0 0
304 30 0 0 24 12 10 0 0 0
305 30 6 5 0 0 0 0 0 0
310 18 0 0 6 0 0 0 0 0
311 30 0 0 6 0 0 12 0 0
313 18 6 5 0 0 0 12 2 2
318 48 6 5 0 0 0 6 0 0
319 30 0 0 0 0 0 0 0 0
321 6 0 0 0 0 0 6 0 0
326 12 0 0 0 0 0 0 0 0
328 67 1 1 30 0 0 31 2 1
329 12 0 0 0 0 0 0 0 0
330 8 0 0 3 0 0 3 0 0
331 3 0 0 1 0 0 1 0 0
335 25 0 0 12 0 0 6 0 0
1062 198 0 0 6 0 0 0 0 0
fn=runtime.makemap_small
292 84 4 2 28 0 0 14 0 0
293 56 7 2 14 0 0 28 0 0
294 14 0 0 0 0 0 14 4 4
295 56 0 0 28 0 0 14 0 0
fn=runtime.mapaccess1_fast64
111 2000000 0 0 0 0 0 0 0 0
185 6000000 0 0 0 0 0 0 0 0
190 2000000 0 0 0 0 0 0 0 0
208 453080 0 0 339810 56442 25243 0 0 0
216 2113270 0 0 0 0 0 0 0 0
fn=runtime.mapaccess2_faststr
111 2 2 2 0 0 0 0 0 0
185 210 0 0 0 0 0 0 0 0
190 70 0 0 0 0 0 0 0 0
195 70 0 0 0 0 0 0 0 0
196 140 2 2 0 0 0 0 0 0
197 2 0 0 0 0 0 0 0 0
203 4 0 0 4 0 0 0 0 0
204 12 0 0 0 0 0 0 0 0
208 148 2 2 148 2 2 0 0 0
216 93 1 1 0 0 0 0 0 0
1087 8 0 0 4 0 0 0 0 0
fn=runtime.mapassign_fast64
111 402859 0 0 0 0 0 0 0 0
185 499984 0 0 0 0 0 0 0 0
190 100000 0 0 0 0 0 0 0 0
195 102707 0 0 2707 0 0 0 0 0
196 200000 0 0 0 0 0 0 0 0
197 1902 0 0 0 0 0 0 0 0
208 5669 0 0 5669 5632 1615 0 0 0
1062 599968 0 0 0 0 0 0 0 0
1073 200000 0 0 0 0 0 0 0 0
1077 400000 0 0 0 0 0 0 0 0
1082 200000 4 4 200000 0 0 0 0 0
fn=runtime.mapassign_faststr
111 2064 0 0 0 0 0 0 0 0
185 2007 0 0 0 0 0 0 0 0
190 384 5 5 0 0 0 0 0 0
195 812 0 0 44 0 0 0 0 0
196 1144 0 0 0 0 0 0 0 0
197 8 0 0 0 0 0 0 0 0
208 90 0 0 90 0 0 0 0 0
1062 1935 0 0 0 0 0 0 0 0
1073 755 0 0 0 0 0 0 0 0
1077 1360 0 0 0 0 0 0 0 0
1082 768 0 0 768 0 0 0 0 0
fn=runtime.mapclear
973 24 4 4 8 0 0 4 0 0
980 20 0 0 8 4 4 0 0 0
981 12 0 0 8 0 0 0 0 0
fn=runtime.mapiterinit
185 78 0 0 0 0 0 0 0 0
190 39 0 0 0 0 0 0 0 0
797 252 20 19 84 0 0 42 0 0
803 210 0 0 84 7 7 0 0 0
804 9 0 0 6 0 0 0 0 0
810 234 0 0 117 0 0 39 0 0
811 39 0 0 0 0 0 39 0 0
814 78 7 7 39 0 0 39 0 0
815 156 0 0 78 0 0 39 0 0
816 117 0 0 78 46 14 0 0 0
827 39 0 0 0 0 0 0 0 0
828 78 0 0 39 0 0 0 0 0
831 117 7 7 39 0 0 39 0 0
832 273 0 0 39 0 0 39 0 0
835 78 8 8 39 0 0 39 0 0
839 157 0 0 39 0 0 0 0 0
840 2 0 0 2 0 0 0 0 0
843 78 0 0 0 0 0 78 7 6
844 117 0 0 78 0 0 0 0 0
fn=runtime.mapiternext
111 5956392 0 0 0 0 0 0 0 0
185 1277952 0 0 0 0 0 0 0 0
208 2978196 0 0 1489098 296806 221622 0 0 0
846 23400237 14 14 7800080 0 0 3900039 0 0
847 11700117 0 0 7800078 0 0 3900039 1 0
852 11700117 0 0 3900039 0 0 0 0 0
855 7800078 0 0 3900039 0 0 3900039 8 5
856 3900039 0 0 3900039 0 0 0 0 0
857 3900039 0 0 3900039 0 0 0 0 0
858 3900039 0 0 3900039 0 0 0 0 0
859 3900039 0 0 3900039 0 0 0 0 0
861 3900039 0 0 0 0 0 0 0 0
862 9289176 7 7 0 0 0 0 0 0
863 1278186 0 0 639093 0 0 0 0 0
865 78 0 0 39 0 0 0 0 0
866 78 0 0 0 0 0 39 0 0
867 117 7 7 78 0 0 0 0 0
869 638976 0 0 0 0 0 0 0 0
883 1277952 7 7 638976 0 0 0 0 0
884 638976 0 0 0 0 0 0 0 0
886 638976 7 7 0 0 0 0 0 0
887 2555865 0 0 638976 0 0 0 0 0
889 78 0 0 0 0 0 39 0 0
893 19358274 7 7 0 0 0 3900000 0 0
894 11912784 0 0 5956392 0 0 0 0 0
895 41694744 0 0 5956392 265151 197651 0 0 0
900 15600000 0 0 3900000 0 0 0 0 0
901 3900000 0 0 0 0 0 0 0 0
904 11700000 0 0 3900000 0 0 0 0 0
905 17622501 0 0 0 0 0 4644549 0 0
933 31200000 14 14 3900000 0 0 0 0 0
939 11700000 7 7 3900000 2 2 3900000 0 0
940 7800000 0 0 0 0 0 0 0 0
943 19500000 0 0 3900000 0 0 3900000 0 0
952 7800000 0 0 0 0 0 3900000 0 0
959 25422462 14 14 3900000 0 0 8544549 1 1
960 11700000 0 0 7800000 0 0 0 0 0
961 2229786 0 0 743262 0 0 743262 0 0
963 11700000 0 0 3900000 0 0 3900000 0 0
964 11700000 0 0 3900000 0 0 3900000 0 0
965 11700000 0 0 7800000 0 0 0 0 0
967 10567050 0 0 0 0 0 4644549 0 0
1082 1277952 0 0 638976 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/map_fast32.go
fn=runtime.mapaccess1_fast32
12 24 1 1 8 0 0 4 0 0
17 12 0 0 4 0 0 0 0 0
18 20 2 2 8 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/map_fast64.go
fn=runtime.mapaccess1_fast64
12 14000000 41994 142 4000000 0 0 2000000 0 0
17 10000000 0 0 4000000 2171 77 0 0 0
20 6000000 0 0 2000000 0 0 0 0 0
24 4000000 0 0 2000000 0 0 0 0 0
28 18000000 27345 180 10000000 4975 123 6000000 0 0
29 4000000 0 0 4000000 0 0 0 0 0
30 10000000 381 69 4000000 0 0 0 0 0
31 6000000 0 0 2000000 0 0 0 0 0
42 8226540 0 0 0 0 0 0 0 0
43 24675630 32221 95 0 0 0 0 0 0
44 28335820 0 0 18223880 1492146 810887 0 0 0
45 14000000 0 0 8000000 0 0 2000000 0 0
fn=runtime.mapassign_fast64
92 700003 4 2 200002 0 0 100000 0 0
93 300000 0 0 100000 0 0 0 0 0
100 300000 0 0 100000 144 6 0 0 0
103 1000000 6 4 500000 287 11 400000 0 0
106 400000 0 0 200000 0 0 100000 0 0
108 400000 1 1 200000 0 0 0 0 0
113 200000 3 3 100000 0 0 0 0 0
114 100000 0 0 0 0 0 0 0 0
117 500000 0 0 200000 0 0 0 0 0
125 1936716 0 0 0 0 0 0 0 0
126 1819709 0 0 402859 102614 44015 0 0 0
127 97293 0 0 0 0 0 0 0 0
131 194586 0 0 0 0 0 0 0 0
136 305566 0 0 305566 32247 12599 0 0 0
137 611132 0 0 305566 0 0 0 0 0
138 305566 0 0 0 0 0 0 0 0
144 5669 0 0 0 0 0 0 0 0
145 11338 0 0 0 0 0 0 0 0
146 2707 0 0 0 0 0 0 0 0
155 699992 0 0 300000 0 0 0 0 0
160 1008425 25 4 0 0 0 0 0 0
162 16242 0 0 2707 0 0 10828 0 0
163 2707 0 0 0 0 0 0 0 0
165 1311387 3 3 0 0 0 100000 2136 1942
167 100000 0 0 0 0 0 0 0 0
169 200000 0 0 100000 0 0 100000 11442 4101
171 105414 0 0 102707 0 0 0 0 0
174 202707 0 0 102707 0 0 0 0 0
175 300000 0 0 100000 0 0 0 0 0
178 200000 0 0 0 0 0 100000 0 0
179 400000 0 0 200000 0 0 100000 0 0
fl=.//usr/lib/golang/src/runtime/map_faststr.go
fn=runtime.evacuate_faststr
393 574 2 2 164 0 0 82 0 0
394 492 0 0 410 0 0 0 0 0
395 82 0 0 0 0 0 0 0 0
396 82 0 0 0 0 0 0 0 0
401 350 3 2 0 0 0 280 0 0
403 210 0 0 70 0 0 70 0 0
404 70 0 0 0 0 0 70 0 0
405 70 0 0 0 0 0 70 0 0
407 70 0 0 0 0 0 0 0 0
411 280 0 0 70 0 0 70 0 0
412 70 0 0 0 0 0 70 0 0
413 140 0 0 0 0 0 70 0 0
416 395 6 2 0 0 0 85 0 0
417 85 0 0 0 0 0 0 0 0
418 85 0 0 0 0 0 0 0 0
419 4367 0 0 1144 0 0 928 0 0
420 1608 2 2 1144 0 0 464 0 0
421 680 0 0 0 0 0 0 0 0
422 216 0 0 0 0 0 216 0 0
423 216 0 0 0 0 0 0 0 0
425 928 0 0 0 0 0 0 0 0
429 464 0 0 0 0 0 0 0 0
432 3248 9 4 1856 0 0 1392 0 0
433 3248 0 0 1392 0 0 464 0 0
438 1856 0 0 928 0 0 464 0 0
439 2320 0 0 0 0 0 464 0 0
441 1392 2 2 464 0 0 0 0 0
442 464 0 0 464 0 0 0 0 0
447 2784 0 0 1392 0 0 464 106 105
450 4176 2 2 2320 0 0 1392 81 81
452 3712 0 0 1856 0 0 1856 0 0
453 1856 0 0 928 0 0 464 0 0
458 928 0 0 464 0 0 464 0 0
459 2320 2 2 1392 0 0 464 0 0
463 420 6 2 210 0 0 0 0 0
464 210 7 2 70 0 0 0 0 0
467 70 0 0 0 0 0 0 0 0
468 70 0 0 0 0 0 0 0 0
469 280 0 0 0 0 0 210 0 0
473 1478 0 0 1314 0 0 0 0 0
474 1298 0 0 1068 0 0 184 0 0
fn=runtime.growWork_faststr
382 264 6 4 88 0 0 44 0 0
385 352 2 2 132 0 0 176 0 0
388 176 0 0 88 0 0 0 0 0
389 266 0 0 76 0 0 152 0 0
fn=runtime.mapaccess2_faststr
107 724 6 6 218 0 0 109 0 0
112 537 0 0 214 4 4 0 0 0
113 126 12 6 42 0 0 42 0 0
115 264 4 4 88 0 0 0 0 0
119 176 0 0 88 0 0 0 0 0
121 36 0 0 18 0 0 18 0 0
122 54 0 0 18 0 0 0 0 0
124 277 7 7 2 0 0 2 0 0
125 2 0 0 0 0 0 2 0 0
126 275 0 0 182 2 2 0 0 0
127 348 0 0 87 0 0 0 0 0
132 24 0 0 6 0 0 8 0 0
136 102 0 0 34 0 0 34 0 0
140 6 0 0 0 0 0 0 0 0
142 4 0 0 2 2 2 0 0 0
143 8 0 0 2 0 0 0 0 0
165 2 0 0 0 0 0 0 0 0
171 6 1 1 2 0 0 2 0 0
174 630 4 4 350 0 0 210 0 0
175 140 0 0 140 0 0 0 0 0
176 350 0 0 140 0 0 0 0 0
177 210 2 2 70 0 0 0 0 0
178 4 0 0 0 0 0 0 0 0
180 8 1 1 0 0 0 0 0 0
182 8 0 0 0 0 0 0 0 0
183 4 0 0 0 0 0 0 0 0
184 4 0 0 0 0 0 0 0 0
187 70 0 0 0 0 0 70 0 0
188 437 2 2 0 0 0 75 0 0
189 2006 0 0 1 0 0 1 0 0
190 1 0 0 0 0 0 1 0 0
191 1859 0 0 1215 5 4 0 0 0
194 12 1 1 3 0 0 4 0 0
195 8 0 0 4 0 0 2 0 0
199 414 0 0 138 0 0 138 0 0
fn=runtime.mapassign_faststr
202 2568 5 5 728 0 0 364 0 0
203 1092 0 0 364 0 0 0 0 0
210 1092 5 5 364 0 0 0 0 0
214 3640 0 0 1820 13 10 1456 0 0
217 1456 5 5 728 0 0 364 0 0
219 1456 0 0 728 3 3 0 0 0
220 84 10 6 48 0 0 12 0 0
224 857 5 5 397 0 0 44 0 0
225 384 0 0 0 0 0 0 0 0
226 220 0 0 0 0 0 176 0 0
228 1304 0 0 920 0 0 0 0 0
229 1528 7 5 0 0 0 384 0 0
237 6737 1 1 1 0 0 1 0 0
238 8288 0 0 2072 6 5 0 0 0
239 6192 5 5 0 0 0 0 0 0
241 358 0 0 0 0 0 0 0 0
243 4128 0 0 0 0 0 0 0 0
248 12 0 0 0 0 0 0 0 0
249 18 0 0 12 0 0 0 0 0
250 5 0 0 0 0 0 0 0 0
252 13 0 0 3 0 0 4 0 0
253 1 0 0 0 0 0 0 0 0
260 806 6 5 0 0 0 403 0 0
261 90 0 0 0 0 0 0 0 0
262 26 0 0 0 0 0 0 0 0
271 2453 6 5 1060 0 0 0 0 0
272 60 0 0 0 0 0 60 0 0
273 60 0 0 40 0 0 0 0 0
276 1088 5 5 1 0 0 1 0 0
278 111 0 0 17 0 0 68 0 0
279 17 0 0 0 0 0 0 0 0
281 2234 0 0 18 0 0 365 6 6
283 728 0 0 0 0 0 0 0 0
285 2184 0 0 1092 0 0 728 31 31
286 381 0 0 381 0 0 0 0 0
289 746 0 0 382 0 0 0 0 0
290 1093 6 5 365 0 0 0 0 0
293 728 0 0 0 0 0 364 0 0
294 1456 0 0 728 0 0 364 0 0
fl=.//usr/lib/golang/src/runtime/mbarrier.go
fn=runtime.memclrHasPointers
345 210 2 2 0 0 0 70 0 0
346 420 2 2 140 0 0 280 0 0
347 350 0 0 140 0 0 210 0 0
fn=runtime.reflectcallmove
225 6 2 2 0 0 0 2 0 0
226 4 0 0 2 0 0 0 0 0
229 14 4 4 6 0 0 8 0 0
230 6 0 0 4 0 0 0 0 0
fn=runtime.typedmemclr
319 3 1 0 0 0 0 1 0 0
320 3 1 1 2 0 0 0 0 0
323 5 0 0 2 0 0 3 0 0
324 3 0 0 2 0 0 0 0 0
fn=runtime.typedmemmove
156 186522 86 17 0 0 0 62174 0 0
157 248696 0 0 124348 0 0 0 0 0
160 186522 0 0 124348 1002 59 0 0 0
161 372444 154 21 62074 0 0 248296 0 0
170 497092 84 17 248396 179 1 248696 0 0
171 310870 0 0 186522 0 0 0 0 0
fn=runtime.typedslicecopy
233 9 3 1 0 0 0 3 0 0
235 12 2 1 6 0 0 0 0 0
238 11 0 0 0 0 0 2 0 0
239 1 1 1 0 0 0 1 0 0
259 4 0 0 2 0 0 0 0 0
263 8 2 1 4 0 0 0 0 0
271 6 0 0 4 0 0 0 0 0
272 4 0 0 2 0 0 0 0 0
277 8 0 0 0 0 0 8 0 0
278 10 2 1 6 0 0 2 0 0
fl=.//usr/lib/golang/src/runtime/mbitmap.go
fn=runtime.(*mcentral).grow
339 47727 0 0 0 0 0 0 0 0
340 238635 3782 70 95454 4 0 0 0 0
344 95454 0 0 0 0 0 0 0 0
349 190908 0 0 0 0 0 0 0 0
350 95454 31327 142 0 0 0 0 0 0
352 47727 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).countAlloc
910 1848156 676 30 616052 0 0 0 0 0
911 18790774 1245 29 0 0 0 0 0 0
912 8933348 0 0 8933348 115722 69556 0 0 0
913 13400022 0 0 4466674 1741 176 0 0 0
915 868361 0 0 0 0 0 0 0 0
916 504618 0 0 504618 498 267 0 0 0
917 1009236 0 0 0 0 0 0 0 0
918 252309 0 0 0 0 0 0 0 0
919 1009236 0 0 252309 428 18 0 0 0
921 671769 14 7 308026 0 0 308026 0 0
fn=runtime.(*mspan).nextFreeIndex
195 2999946 645 114 999982 0 0 499991 34 3
196 999982 0 0 999982 5 0 0 0 0
197 879155 0 0 499991 0 0 379164 18 2
198 999982 0 0 0 0 0 0 0 0
199 483308 592 55 241654 0 0 120827 0 0
201 758328 0 0 0 0 0 0 0 0
205 379164 0 0 379164 0 0 0 0 0
207 1137492 0 0 0 0 0 0 0 0
208 2907777 1169 126 354057 0 0 0 0 0
210 1158867 7 3 0 0 0 354057 0 0
211 1158867 0 0 0 0 0 0 0 0
212 48348 0 0 0 0 0 48348 0 0
213 193392 0 0 96696 0 0 48348 0 0
215 354057 0 0 0 0 0 0 0 0
217 1062171 0 0 0 0 0 1062171 7 4
218 708114 0 0 708114 0 0 0 0 0
219 1062171 0 0 0 0 0 0 0 0
223 753597 2915 140 354057 0 0 68724 0 0
224 661632 0 0 0 0 0 0 0 0
225 173488 16 3 0 0 0 173488 0 0
226 693952 0 0 346976 0 0 173488 0 0
229 1101296 1403 104 157328 0 0 157328 0 0
230 383380 0 0 0 0 0 68724 0 0
232 629312 0 0 0 0 0 0 0 0
238 68724 0 0 0 0 0 0 0 0
239 274896 975 60 0 0 0 206172 1 0
241 294776 0 0 137448 0 0 157328 0 0
242 698036 0 0 383380 0 0 157328 0 0
fn=runtime.(*mspan).refillAllocCache
178 2340351 0 0 2340351 29 1 0 0 0
180 780117 0 0 780117 146691 103436 0 0 0
188 1560234 0 0 0 0 0 780117 11 0
fn=runtime.(*mspan).sweep
102 4445 0 0 4445 0 0 0 0 0
277 4445 0 0 0 0 0 0 0 0
287 8890 0 0 4445 1457 851 0 0 0
300 6 0 0 4 0 0 4 2 1
fn=runtime.adjustpointers
102 434 0 0 434 0 0 0 0 0
fn=runtime.bulkBarrierPreWrite
122 156920 0 0 0 0 0 0 0 0
340 246836 0 0 123418 0 0 0 0 0
344 123418 0 0 0 0 0 0 0 0
349 246836 0 0 0 0 0 0 0 0
350 185127 1345 17 0 0 0 0 0 0
352 61709 0 0 0 0 0 0 0 0
448 617333 6 3 243 0 0 0 0 0
449 460170 0 0 0 0 0 0 0 0
450 157406 0 0 486 0 0 0 0 0
451 78460 0 0 0 0 0 0 0 0
536 308545 2163 16 308545 39542 34086 0 0 0
551 308545 0 0 308545 0 0 308545 50 0
608 186432 2 0 0 0 0 62144 0 0
609 497152 1819 27 186432 0 0 0 0 0
612 124288 0 0 62144 0 0 0 0 0
613 1305 2 2 870 0 0 0 0 0
615 185127 0 0 0 0 0 0 0 0
631 308545 0 0 61709 10408 3504 0 0 0
641 246836 2080 19 185127 0 0 0 0 0
643 185127 0 0 0 0 0 0 0 0
648 246836 81 18 123418 0 0 0 0 0
654 1358084 0 0 486 0 0 308545 128 0
655 309517 54 12 0 0 0 972 0 0
656 61952 0 0 243 0 0 0 0 0
657 61952 0 0 243 0 0 0 0 0
658 185127 0 0 123418 58520 56944 0 0 0
659 972 409 37 0 0 0 486 2 0
662 243 0 0 243 113 0 0 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
122 2558006 0 0 0 0 0 0 0 0
339 22438 0 0 0 0 0 0 0 0
340 112190 3424 20 44876 5 0 0 0 0
344 44876 0 0 0 0 0 0 0 0
349 89752 0 0 0 0 0 0 0 0
350 44876 0 0 0 0 0 0 0 0
352 22438 0 0 0 0 0 0 0 0
448 10264472 2943 19 6442 0 0 0 0 0
449 7700024 0 0 0 0 0 0 0 0
450 2570890 0 0 12884 132 0 0 0 0
451 1279003 0 0 0 0 0 0 0 0
536 5129015 0 0 5129015 18492 11746 0 0 0
551 5129015 0 0 5129015 0 0 5129015 633 14
676 67314 19 15 0 0 0 22438 0 0
677 179504 0 0 67314 0 0 0 0 0
680 44876 0 0 22438 0 0 0 0 0
683 89752 2036 23 67314 0 0 0 0 0
685 20663572 6149 56 57760 0 0 5129015 0 0
686 5154783 338 24 0 0 0 25768 0 0
687 1657567 0 0 6442 4 2 0 0 0
688 3302250 0 0 1651125 643523 517317 0 0 0
689 25768 0 0 0 0 0 12884 0 0
692 6442 33 7 6442 154 2 0 0 0
fn=runtime.findObject
397 156166062 2473 45 0 0 0 52055354 16 2
398 155222061 5 3 52055354 0 0 0 0 0
401 104110708 0 0 0 0 0 0 0 0
402 3997500 0 0 1332500 0 0 1998750 0 0
408 359723376 0 0 51389016 5883638 1612059 0 0 0
410 176 0 0 0 0 0 0 0 0
411 528 30 27 176 0 0 264 0 0
422 154167048 0 0 51389016 3288895 994669 0 0 0
425 79179816 390 34 0 0 0 0 0 0
426 158359632 0 0 26393272 0 0 0 0 0
432 100260639 664 34 24995744 0 0 0 0 0
434 346053134 48 25 74154243 0 0 0 0 0
435 49436162 0 0 0 0 0 0 0 0
438 384154317 18 13 102778032 1 1 154167048 1 1
fn=runtime.gcmarknewobject
295 472332 101 34 944664 9319 510 0 0 0
fn=runtime.getStackMap
102 3826 0 0 0 0 0 0 0 0
fn=runtime.greyobject
102 47993633 1357 41 0 0 0 0 0 0
277 95987266 0 0 95987266 0 0 0 0 0
287 95987266 1407 48 47993633 23435484 4826183 0 0 0
295 30701693 0 0 61403386 0 0 0 0 0
fn=runtime.heapBits.forward
493 143355 1819 103 0 0 0 47785 1 0
494 143355 0 0 95570 0 0 0 0 0
495 238925 0 0 47785 0 0 0 0 0
496 47785 0 0 0 0 0 0 0 0
497 191140 0 0 47785 0 0 0 0 0
498 47773 33934 138 0 0 0 0 0 0
499 382184 0 0 143319 0 0 191092 0 0
503 24 9 9 0 0 0 0 0 0
504 60 0 0 12 0 0 0 0 0
506 96 0 0 24 0 0 0 0 0
508 16 0 0 0 0 0 0 0 0
509 8 4 1 0 0 0 0 0 0
511 4 0 0 0 0 0 0 0 0
513 92 3 0 24 0 0 48 0 0
fn=runtime.heapBits.forwardOrBoundary
519 286713 34783 263 95572 18 0 47785 3 3
520 334495 0 0 95570 0 0 0 0 0
521 238925 29516 117 143355 0 0 0 0 0
524 955700 695 98 334495 0 0 573420 16981 149
fn=runtime.heapBits.initSpan
122 512 0 0 0 0 0 0 0 0
802 286656 31649 109 95552 12 6 47776 0 0
804 191104 0 0 95552 2 1 0 0 0
805 95552 2938 126 0 0 0 0 0 0
808 143328 0 0 47776 0 0 0 0 0
811 334442 0 0 143332 0 0 47776 0 0
812 477772 19426 96 95552 0 0 47779 0 0
813 1337785 56690 393 573331 48 2 573338 15536 167
814 95558 0 0 0 0 0 0 0 0
815 47779 0 0 0 0 0 0 0 0
817 1546 0 0 2 0 0 0 0 0
818 512 0 0 0 0 0 512 8 8
819 512 0 0 0 0 0 0 0 0
822 238885 0 0 47777 0 0 143331 0 0
825 143335 0 0 95556 0 0 0 0 0
fn=runtime.heapBitsSetType
102 18 0 0 12 0 0 0 0 0
122 16603001 0 0 0 0 0 0 0 0
339 3768051 0 0 0 0 0 0 0 0
340 44951303 492 142 24102456 842 70 0 0 0
344 7536108 0 0 0 0 0 0 0 0
349 28870640 3 3 13798424 3 0 0 0 0
350 11304162 0 0 0 0 0 0 0 0
352 3768054 0 0 0 0 0 0 0 0
947 27942578 13840 115 7536148 0 0 3768071 191 2
958 11304213 837 100 3768071 0 0 0 0 0
972 60 11 9 40 0 0 0 0 0
976 10668246 26811 140 7536102 3658 418 0 0 0
983 7536102 52 36 0 0 0 0 0 0
984 210 7 2 105 0 0 0 0 0
1000 45 0 0 5 0 0 5 0 0
1002 15 1 1 10 0 0 0 0 0
1012 100 0 0 100 6 2 0 0 0
1013 200 0 0 0 0 0 0 0 0
1018 800 0 0 100 8 7 0 0 0
1019 600 12 7 0 0 0 100 0 0
1020 300 7 3 200 0 0 0 0 0
1031 50778422 98 27 5334104 1 0 3767946 108 11
1039 6 0 0 0 0 0 0 0 0
1059 7535886 321 117 0 0 0 0 0 0
1065 11303838 0 0 3767946 57 6 0 0 0
1117 17273658 0 0 7535892 0 0 0 0 0
1122 6264288 0 0 1566072 0 0 0 0 0
1134 14095164 33256 154 1566158 0 0 1566158 0 0
1135 14095336 0 0 3132316 1889 67 0 0 0
1136 1566158 0 0 0 0 0 0 0 0
1138 4698213 32323 160 0 0 0 0 0 0
1146 4698302 0 0 0 0 0 3132230 70 16
1148 7830357 0 0 1566069 0 0 0 0 0
1149 20060778 0 0 0 0 0 0 0 0
1150 50785920 0 0 8464320 0 0 0 0 0
1151 8464320 0 0 0 0 0 0 0 0
1156 15660690 3058 136 0 0 0 0 0 0
1157 20992872 0 0 0 0 0 8464320 0 0
1173 17909460 2292 84 0 0 0 0 0 0
1174 2201874 0 0 2201874 4808 148 0 0 0
1175 2201874 0 0 0 0 0 0 0 0
1179 15707586 0 0 3767946 0 0 0 0 0
1181 4403748 42 27 2201874 0 0 0 0 0
1186 15660720 331 46 1566072 0 0 0 0 0
1188 7535892 38 23 0 0 0 0 0 0
1194 7535892 0 0 0 0 0 0 0 0
1205 1244000 0 0 0 0 0 0 0 0
1209 3767946 0 0 0 0 0 0 0 0
1224 5047892 0 0 0 0 0 0 0 0
1225 2523946 0 0 0 0 0 0 0 0
1226 6047913 5 3 0 0 0 0 0 0
1229 1523925 612 43 0 0 0 1523925 38978 3150
1230 1523925 0 0 0 0 0 0 0 0
1231 1523925 0 0 0 0 0 0 0 0
1232 9017670 14675 208 1523925 0 0 3767946 79 1
1234 1244000 21 12 0 0 0 0 0 0
1241 5298072 0 0 0 0 0 0 0 0
1244 1244000 0 0 0 0 0 0 0 0
1245 1243999 5 2 0 0 0 0 0 0
1246 3731997 0 0 1243999 0 0 0 0 0
1249 2488000 0 0 1244000 7348 158 0 0 0
1250 2488000 0 0 0 0 0 1244000 0 0
1251 1244000 0 0 0 0 0 0 0 0
1252 11267891 0 0 0 0 0 0 0 0
1257 2 0 0 0 0 0 0 0 0
1258 1 0 0 0 0 0 0 0 0
1268 2767924 1882 9 0 0 0 0 0 0
1269 2767924 0 0 0 0 0 0 0 0
1275 19260518 0 0 0 0 0 0 0 0
1276 7342814 12192 140 0 0 0 0 0 0
1277 26603332 0 0 0 0 0 0 0 0
1278 2416496 0 0 0 0 0 0 0 0
1280 4926318 0 0 0 0 0 4926318 6371 324
1281 4926318 0 0 0 0 0 0 0 0
1282 4926318 0 0 0 0 0 0 0 0
1285 25299648 0 0 0 0 0 0 0 0
1290 2112658 0 0 0 0 0 0 0 0
1291 4225316 0 0 1056329 2 2 0 0 0
1292 1056329 0 0 0 0 0 0 0 0
1300 7739978 30 17 0 0 0 0 0 0
1303 11196400 27 15 0 0 0 0 0 0
1304 8980682 0 0 3 0 0 0 0 0
1305 5111786 122 26 0 0 0 0 0 0
1307 7739978 0 0 0 0 0 0 0 0
1311 12314868 1269 124 0 0 0 0 0 0
1314 2201874 0 0 0 0 0 0 0 0
1323 9852636 0 0 0 0 0 0 0 0
1324 4926318 8260 118 0 0 0 0 0 0
1325 14778954 0 0 0 0 0 0 0 0
1328 4574890 0 0 0 0 0 4574890 106720 21238
1329 4574890 0 0 0 0 0 0 0 0
1330 4574890 0 0 0 0 0 0 0 0
1335 13137218 588 148 0 0 0 0 0 0
1339 36861440 0 0 0 0 0 0 0 0
1340 13404160 27 17 0 0 0 0 0 0
1344 9737769 10 9 0 0 0 0 0 0
1348 9160486 1 0 0 0 0 0 0 0
1349 2560258 0 0 0 0 0 2560258 18895 612
1350 2560258 0 0 0 0 0 0 0 0
1352 12801932 0 0 0 0 0 0 0 0
1353 214 0 0 0 0 0 214 0 0
1354 214 0 0 0 0 0 0 0 0
1366 15021777 0 0 0 0 0 0 0 0
1367 17814996 96 58 1257695 15902 254 1257695 0 0
1372 3767946 40 24 0 0 0 0 0 0
1378 3 0 0 0 0 0 0 0 0
1379 3 0 0 0 0 0 0 0 0
1393 6 0 0 0 0 0 0 0 0
1402 24 3 3 0 0 0 6 0 0
1405 108 3 3 30 0 0 66 3 3
1408 12 0 0 0 0 0 6 0 0
1409 36 3 3 12 0 0 24 0 0
1410 18 0 0 12 12 0 0 0 0
1412 6 0 0 0 0 0 0 0 0
1419 9 0 0 0 0 0 0 0 0
1420 30 3 3 24 0 0 6 0 0
1436 11303871 129 89 7535898 26 1 18 0 0
fn=runtime.largeAlloc
339 49 0 0 0 0 0 0 0 0
340 245 0 0 98 8 3 0 0 0
344 98 32 20 0 0 0 0 0 0
349 196 0 0 0 0 0 0 0 0
350 98 0 0 0 0 0 0 0 0
352 49 0 0 0 0 0 0 0 0
fn=runtime.markBitsForAddr
102 472332 0 0 472332 2 0 0 0 0
259 944664 0 0 0 0 0 0 0 0
260 948578 0 0 0 0 0 0 0 0
263 936836 47 29 468418 0 0 0 0 0
265 718785 0 0 143757 0 0 0 0 0
267 4545254 0 0 973983 0 0 0 0 0
271 944664 0 0 0 0 0 0 0 0
272 936836 0 0 0 0 0 0 0 0
273 1889328 0 0 472332 0 0 1416996 0 0
277 472332 0 0 0 0 0 0 0 0
fn=runtime.progToPointerMask
1608 12 1 1 4 0 0 2 0 0
1609 10 1 1 2 0 0 2 0 0
1610 26 1 1 4 0 0 12 0 0
1611 8 0 0 2 0 0 2 2 2
1612 14 1 1 4 0 0 10 0 0
1613 10 0 0 6 0 0 0 0 0
1616 10 0 0 4 0 0 4 0 0
fn=runtime.runGCProg
122 5378 0 0 0 0 0 0 0 0
134 6 0 0 0 0 0 0 0 0
1641 8 1 1 0 0 0 2 0 0
1653 1021 3 3 136 0 0 0 0 0
1654 216 0 0 0 0 0 0 0 0
1655 108 0 0 0 0 0 108 0 0
1656 108 0 0 0 0 0 0 0 0
1657 216 0 0 0 0 0 0 0 0
1671 542 1 1 138 4 4 0 0 0
1672 136 0 0 0 0 0 0 0 0
1673 272 0 0 0 0 0 0 0 0
1674 272 0 0 0 0 0 0 0 0
1676 262 0 0 0 0 0 0 0 0
1678 274 0 0 2 0 0 0 0 0
1685 258 1 1 0 0 0 0 0 0
1686 9957 0 0 0 0 0 0 0 0
1687 7656 1 1 1914 30 30 0 0 0
1688 1914 0 0 0 0 0 0 0 0
1689 3828 0 0 0 0 0 0 0 0
1690 1914 0 0 0 0 0 1914 30 30
1691 1914 0 0 0 0 0 0 0 0
1692 3828 0 0 0 0 0 0 0 0
1704 387 1 1 0 0 0 0 0 0
1705 508 0 0 127 1 1 0 0 0
1706 127 0 0 0 0 0 0 0 0
1707 127 0 0 0 0 0 0 0 0
1709 129 0 0 0 0 0 0 0 0
1713 15 1 1 0 0 0 0 0 0
1726 2 0 0 0 0 0 0 0 0
1727 12 1 1 7 0 0 0 0 0
1728 7 0 0 0 0 0 0 0 0
1729 65 0 0 0 0 0 0 0 0
1730 14 0 0 0 0 0 0 0 0
1734 20 2 2 0 0 0 0 0 0
1745 10 0 0 0 0 0 0 0 0
1751 15 0 0 0 0 0 0 0 0
1752 5 0 0 0 0 0 0 0 0
1753 17 0 0 0 0 0 0 0 0
1754 1 0 0 0 0 0 0 0 0
1755 2 0 0 1 0 0 0 0 0
1756 1 0 0 0 0 0 0 0 0
1757 1 0 0 0 0 0 0 0 0
1773 10 1 1 0 0 0 0 0 0
1774 30 0 0 0 0 0 0 0 0
1779 10 0 0 0 0 0 0 0 0
1786 10 0 0 0 0 0 0 0 0
1790 5 0 0 0 0 0 0 0 0
1813 30 2 2 0 0 0 0 0 0
1814 40 0 0 0 0 0 0 0 0
1815 5 1 1 0 0 0 0 0 0
1816 5 0 0 0 0 0 0 0 0
1817 2350 0 0 0 0 0 0 0 0
1818 1170 0 0 0 0 0 1170 18 18
1819 1170 0 0 0 0 0 0 0 0
1820 1170 0 0 0 0 0 0 0 0
1821 1170 0 0 0 0 0 0 0 0
1834 15 0 0 0 0 0 0 0 0
1835 10 0 0 0 0 0 0 0 0
1836 5 0 0 0 0 0 0 0 0
1839 5 0 0 0 0 0 0 0 0
1897 4 0 0 0 0 0 0 0 0
1898 8 0 0 2 0 0 0 0 0
1899 8 0 0 0 0 0 0 0 0
1900 12 1 1 0 0 0 0 0 0
1901 2 0 0 0 0 0 2 0 0
1902 2 0 0 0 0 0 0 0 0
1903 2 0 0 0 0 0 0 0 0
1906 4 0 0 2 0 0 0 0 0
1909 10 0 0 0 0 0 0 0 0
1915 8 0 0 4 0 0 2 0 0
fn=runtime.scanobject
122 88964448 0 0 0 0 0 0 0 0
339 20274427 0 0 0 0 0 0 0 0
340 101372135 1120 42 40548854 237 26 0 0 0
344 40548854 0 0 0 0 0 0 0 0
349 81097708 1544 53 0 0 0 0 0 0
350 60823281 0 0 0 0 0 0 0 0
352 20274427 0 0 0 0 0 0 0 0
448 411862146 0 0 0 0 0 0 0 0
449 161448849 0 0 0 0 0 0 0 0
450 88964448 898 30 0 0 0 0 0 0
451 44482224 0 0 0 0 0 0 0 0
536 904822000 0 0 226205500 17669879 11060128 0 0 0
fn=runtime.wbBufFlush1
277 3395376 0 0 3395376 0 0 0 0 0
287 6790752 92 41 3395376 156493 49956 0 0 0
295 1556132 0 0 3112264 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mcache.go
fn=runtime.(*mcache).prepareForSweep
170 250080 421 108 83360 0 0 41680 1 0
178 41680 0 0 41680 89 26 0 0 0
179 166720 0 0 83360 753 87 0 0 0
180 124128 136 58 82752 0 0 0 0 0
181 912 0 0 0 0 0 0 0 0
185 608 0 0 0 0 0 608 0 0
186 912 0 0 304 3 3 608 0 0
187 912 16 4 1216 5 0 0 0 0
188 912 0 0 608 0 0 0 0 0
fn=runtime.(*mcache).refill
122 295860 3710 150 98620 0 0 49310 0 0
124 295860 0 0 147930 0 0 0 0 0
126 147930 189 57 98620 0 0 0 0 0
129 147930 0 0 0 0 0 0 0 0
131 196072 0 0 98036 11374 174 0 0 0
134 49018 0 0 98036 0 0 0 0 0
138 295860 471 55 49310 0 0 98620 36 15
139 98620 0 0 0 0 0 0 0 0
143 147930 0 0 98620 0 0 0 0 0
149 147930 0 0 49310 2 0 49310 0 0
151 147930 0 0 98620 68 37 49310 99 30
152 147930 0 0 98620 0 0 0 0 0
fn=runtime.(*mcache).releaseAll
154 3552 33 21 1184 0 0 592 0 0
155 241236 0 0 592 0 0 292 1 0
156 158656 0 0 79328 10211 6592 0 0 0
157 237984 34 21 0 0 0 0 0 0
158 1752 0 0 0 0 0 876 2 0
159 1460 1 0 584 5 3 292 5 0
163 1184 0 0 0 0 0 592 98 39
165 1776 0 0 1184 0 0 0 0 0
fn=runtime.allocmcache
85 112 7 2 32 0 0 16 0 0
86 16 0 0 0 0 0 16 0 0
87 144 0 0 0 0 0 80 0 0
93 6480 2 1 0 0 0 0 0 0
94 8576 0 0 2144 0 0 2144 279 279
96 32 0 0 16 0 0 16 0 0
97 80 2 1 48 0 0 16 0 0
fn=runtime.allocmcache.func1
87 128 3 1 48 0 0 32 0 0
88 48 0 0 0 0 0 32 0 0
89 96 0 0 32 0 0 48 0 0
90 32 0 0 16 1 1 16 16 16
91 48 2 1 0 0 0 32 0 0
92 48 0 0 32 0 0 0 0 0
fn=runtime.stackalloc
74 80 0 0 0 0 0 0 0 0
fn=runtime.stackcache_clear
74 2426 0 0 0 0 0 0 0 0
fn=runtime.stackcacherefill
74 88 0 0 0 0 0 0 0 0
fn=runtime.stackfree
74 10 0 0 0 0 0 0 0 0
fn=runtime.stackpoolalloc
74 140 0 0 0 0 0 0 0 0
fn=runtime.stackpoolfree
74 70 0 0 12 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mcentral.go
fn=runtime.(*mcentral).cacheSpan
40 295860 1028 191 98620 0 0 49310 15 11
42 443790 0 0 147930 55831 1402 49310 12 10
43 147930 0 0 0 0 0 147930 258 38
45 147930 172 76 49310 1 0 98620 0 0
47 98620 0 0 49310 1967 118 0 0 0
50 98620 0 0 49310 10 1 49310 0 0
51 49310 0 0 0 0 0 0 0 0
53 363701 866 134 145348 6 0 331 0 0
54 25360 133 67 23700 307 209 0 0 0
55 20 1 1 0 0 0 15 0 0
56 30 0 0 10 0 0 15 0 0
57 15 0 0 5 0 0 10 0 0
58 25 0 0 5 0 0 15 0 0
59 331 43 16 0 0 0 0 0 0
61 978 0 0 326 0 0 0 0 0
66 1304 0 0 0 0 0 978 0 0
67 1956 36 17 652 0 0 978 0 0
68 1304 0 0 326 0 0 652 0 0
72 313988 22170 263 72343 0 0 24616 0 0
73 482828 0 0 96882 66732 14652 0 0 0
76 123080 0 0 0 0 0 98464 0 0
78 123080 21 16 49232 0 0 73848 0 0
79 73848 0 0 24616 0 0 49232 0 0
80 98464 0 0 24616 0 0 73848 0 0
81 98464 0 0 49232 3 0 49232 0 0
82 73848 0 0 49232 0 0 0 0 0
83 2504 0 0 0 0 0 1252 0 0
84 48902 0 0 0 0 0 0 0 0
86 70092 0 0 23364 2 0 46728 0 0
91 142950 0 0 47650 0 0 0 0 0
99 190908 1762 52 47727 0 0 47727 0 0
103 95454 0 0 0 0 0 95454 0 0
106 238635 1 0 95454 0 0 143181 62 34
107 95454 0 0 0 0 0 0 0 0
110 143181 0 0 47727 21 0 95454 0 0
111 286362 19953 175 95454 0 0 143181 0 0
112 143181 0 0 47727 0 0 95454 0 0
116 47727 0 0 0 0 0 0 0 0
117 146999 0 0 97037 2 0 0 0 0
120 294608 1464 168 146678 77 52 49310 0 0
121 295860 0 0 49310 0 0 0 0 0
126 98620 0 0 147930 0 0 0 0 0
127 147930 0 0 98620 36 26 0 0 0
128 197240 24592 200 147930 146 3 0 0 0
129 98620 0 0 49310 0 0 0 0 0
133 98620 0 0 49310 15 0 0 0 0
135 15672 501 44 0 0 0 7836 0 0
137 102538 0 0 53228 0 0 0 0 0
138 49310 0 0 0 0 0 0 0 0
140 147930 0 0 0 0 0 147930 0 0
144 345170 556 95 147930 0 0 49310 0 0
146 197240 0 0 98620 0 0 49310 0 0
fn=runtime.(*mcentral).freeSpan
209 255712 1892 59 102034 0 0 25822 0 0
210 232398 0 0 77466 7 1 0 0 0
213 25822 0 0 0 0 0 25822 1 0
215 25822 0 0 0 0 0 0 0 0
218 1254 0 0 0 0 0 0 0 0
221 2508 1235 8 3762 0 0 0 0 0
222 5016 0 0 2508 0 0 1254 0 0
225 98272 30 13 49136 133 46 49136 0 0
228 24568 0 0 0 0 0 0 0 0
229 129930 34 15 43310 0 0 64965 0 0
230 151585 0 0 43310 0 0 64965 0 0
237 73704 0 0 98272 0 0 0 0 0
239 49136 30 16 24568 0 0 0 0 0
240 26145 0 0 8715 0 0 17430 0 0
241 34860 0 0 17430 0 0 8715 0 0
244 79265 0 0 15853 0 0 47559 0 0
245 47559 8 6 15853 0 0 31706 0 0
246 79265 0 0 15853 0 0 47559 0 0
247 63412 0 0 31706 0 0 15853 0 0
fn=runtime.(*mcentral).grow
251 286362 62910 263 95454 0 0 47727 0 0
252 381816 0 0 143181 16 0 47727 182 1
253 143181 3481 61 47727 14 3 47727 0 0
255 381816 0 0 47727 0 0 286362 209 17
256 95454 0 0 0 0 0 0 0 0
262 715905 40511 151 190908 39 13 0 0 0
263 190908 0 0 95454 2 0 47727 2 0
264 286362 0 0 0 0 0 286362 0 0
265 238635 0 0 143181 0 0 47727 21 2
fn=runtime.(*mcentral).uncacheSpan
150 1752 26 18 584 0 0 292 0 0
151 876 0 0 584 216 64 0 0 0
155 292 0 0 292 0 0 0 0 0
156 3114 27 18 1404 26 13 556 0 0
157 292 25 18 0 0 0 0 0 0
164 536 0 0 536 0 0 0 0 0
167 48 8 1 48 0 0 0 0 0
170 1168 0 0 584 134 36 0 0 0
171 584 0 0 0 0 0 0 0 0
176 1112 0 0 834 217 100 278 0 0
178 556 0 0 0 0 0 556 2 0
179 1668 0 0 556 0 0 834 0 0
180 1668 29 18 556 0 0 834 0 0
181 278 0 0 0 0 0 0 0 0
189 168 0 0 120 0 0 0 0 0
191 1112 20 17 278 0 0 556 0 0
194 1168 0 0 584 2 0 0 0 0
197 1350 0 0 278 0 0 804 0 0
fn=runtime.(*mheap).init
34 134 0 0 0 0 0 134 133 133
35 134 0 0 0 0 0 0 0 0
36 134 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mem_linux.go
fn=runtime.(*mheap).allocSpan
128 130868 0 0 32717 0 0 98151 0 0
fn=runtime.(*mheap).sysAlloc
157 63 7 7 14 0 0 35 0 0
158 7 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow
128 20 0 0 5 0 0 15 0 0
fn=runtime.(*pageAlloc).sysInit
157 45 1 1 10 0 0 25 0 0
158 5 0 0 0 0 0 0 0 0
fn=runtime.sysAlloc
20 285 77 61 0 0 0 95 0 0
21 1045 109 90 285 0 0 570 86 9
22 190 0 0 0 0 0 0 0 0
33 475 0 0 190 0 0 285 0 0
34 95 34 28 95 0 0 0 0 0
fn=runtime.sysFree
147 15 3 1 0 0 0 5 0 0
148 25 5 5 10 0 0 15 4 0
149 25 0 0 10 0 0 15 0 0
fn=runtime.sysHugePage
131 196332 2718 138 65444 0 0 32722 0 0
132 98166 0 0 32722 17329 148 0 0 0
134 32722 0 0 32722 0 0 0 0 0
136 65444 0 0 32722 0 0 0 0 0
138 163610 26576 128 65444 0 0 0 0 0
139 63 9 5 0 0 0 36 0 0
fn=runtime.sysMap
164 72 7 7 24 0 0 12 0 0
165 60 0 0 24 0 0 36 0 0
167 132 7 7 48 0 0 60 0 0
168 24 0 0 0 0 0 0 0 0
171 96 7 7 36 0 0 0 0 0
fn=runtime.sysUnused
39 180 12 7 60 0 0 30 0 0
65 90 13 8 30 0 0 0 0 0
71 150 0 0 30 0 0 0 0 0
73 30 0 0 0 0 0 0 0 0
75 120 0 0 30 0 0 0 0 0
77 60 0 0 0 0 0 0 0 0
83 210 0 0 0 0 0 30 0 0
89 30 0 0 0 0 0 0 0 0
90 180 12 8 30 0 0 120 1 1
92 210 11 8 60 0 0 30 0 0
98 270 12 8 90 0 0 0 0 0
106 60 0 0 30 5 4 0 0 0
109 60 13 8 30 8 4 0 0 0
111 480 0 0 120 1 0 150 0 0
fl=.//usr/lib/golang/src/runtime/memclr_amd64.s
fn=runtime.memclrNoHeapPointers
14 89410 40451 160 89410 0 0 0 0 0
15 89410 0 0 89410 0 0 0 0 0
16 89410 0 0 0 0 0 0 0 0
21 89410 0 0 0 0 0 0 0 0
22 89410 39102 145 0 0 0 0 0 0
23 89399 0 0 0 0 0 0 0 0
24 89399 0 0 0 0 0 0 0 0
25 89397 0 0 0 0 0 0 0 0
26 89397 0 0 0 0 0 0 0 0
27 89395 0 0 0 0 0 0 0 0
28 89395 0 0 0 0 0 0 0 0
29 89378 0 0 0 0 0 0 0 0
30 89355 0 0 0 0 0 0 0 0
31 89355 0 0 0 0 0 0 0 0
32 88333 0 0 0 0 0 0 0 0
33 88333 0 0 0 0 0 0 0 0
34 88333 38428 141 0 0 0 0 0 0
35 87716 0 0 0 0 0 0 0 0
36 87716 0 0 0 0 0 0 0 0
37 83318 0 0 0 0 0 0 0 0
38 83318 0 0 0 0 0 0 0 0
39 79775 0 0 0 0 0 0 0 0
40 79775 0 0 0 0 0 0 0 0
41 21742 0 0 21742 5187 72 0 0 0
42 21742 0 0 0 0 0 0 0 0
69 21742 998 77 0 0 0 0 0 0
73 21742 238 43 0 0 0 0 0 0
74 21742 0 0 0 0 0 0 0 0
76 1343008 0 0 0 0 0 1343008 1342907 1301522
77 1343008 0 0 0 0 0 1343008 6 6
78 1343008 0 0 0 0 0 1343008 1342984 1301655
79 1343008 0 0 0 0 0 1343008 4 4
80 1343008 0 0 0 0 0 0 0 0
81 1343008 0 0 0 0 0 0 0 0
82 1343008 0 0 0 0 0 0 0 0
83 1343008 0 0 0 0 0 0 0 0
84 21742 0 0 0 0 0 21742 4677 4677
85 21742 0 0 0 0 0 21742 0 0
86 21742 0 0 0 0 0 21742 0 0
87 21742 1037 64 0 0 0 21742 0 0
88 21742 0 0 0 0 0 0 0 0
89 21742 0 0 21742 112 4 0 0 0
120 2 0 0 0 0 0 2 1 1
121 2 0 0 0 0 0 2 0 0
122 2 0 0 2 0 0 0 0 0
124 11 2 0 11 0 0 0 0 0
126 2 1 1 0 0 0 2 1 1
127 2 0 0 0 0 0 2 0 0
128 2 0 0 2 0 0 0 0 0
130 17 1 1 0 0 0 17 7 3
131 17 0 0 0 0 0 17 0 0
132 17 0 0 17 0 0 0 0 0
135 23 18 12 0 0 0 23 13 9
136 23 0 0 23 0 0 0 0 0
138 1022 7 5 0 0 0 1022 273 272
139 1022 0 0 0 0 0 1022 0 0
140 1022 0 0 1022 0 0 0 0 0
142 617 50 18 0 0 0 617 276 270
143 617 0 0 0 0 0 617 11 6
144 617 0 0 617 0 0 0 0 0
146 4398 15 9 0 0 0 4398 1438 1085
147 4398 0 0 0 0 0 4398 1103 1027
148 4398 0 0 0 0 0 4398 0 0
149 4398 0 0 0 0 0 4398 1077 1001
150 4398 0 0 4398 0 0 0 0 0
152 3543 79 27 0 0 0 3543 2603 989
153 3543 0 0 0 0 0 3543 870 870
154 3543 0 0 0 0 0 3543 867 866
155 3543 0 0 0 0 0 3543 903 902
156 3543 4 1 0 0 0 3543 0 0
157 3543 0 0 0 0 0 3543 1 1
158 3543 0 0 0 0 0 3543 4 4
159 3543 0 0 0 0 0 3543 898 898
160 3543 0 0 3543 0 0 0 0 0
162 58033 561 96 0 0 0 58033 55325 53385
163 58033 0 0 0 0 0 58033 0 0
164 58033 0 0 0 0 0 58033 5059 5059
165 58033 0 0 0 0 0 58033 9 9
166 58033 0 0 0 0 0 58033 52906 52784
167 58033 0 0 0 0 0 58033 0 0
168 58033 0 0 0 0 0 58033 5056 5056
169 58033 0 0 0 0 0 58033 8 8
170 58033 1229 131 0 0 0 58033 47703 47581
171 58033 0 0 0 0 0 58033 0 0
172 58033 0 0 0 0 0 58033 0 0
173 58033 0 0 0 0 0 58033 1 1
174 58033 0 0 0 0 0 58033 47704 47582
175 58033 0 0 0 0 0 58033 2 2
176 58033 0 0 0 0 0 58033 5206 5197
177 58033 0 0 0 0 0 58033 1 1
fl=.//usr/lib/golang/src/runtime/memmove_amd64.s
fn=runtime.memmove
36 5154202 835 107 5154202 0 0 0 0 0
37 5154202 0 0 5154202 0 0 0 0 0
38 5154202 0 0 5154202 0 0 0 0 0
51 5154203 0 0 0 0 0 0 0 0
52 5154203 0 0 0 0 0 0 0 0
53 5054149 0 0 0 0 0 0 0 0
54 5054149 0 0 0 0 0 0 0 0
55 4969577 0 0 0 0 0 0 0 0
56 4969577 0 0 0 0 0 0 0 0
57 4941932 0 0 0 0 0 0 0 0
58 4833856 0 0 0 0 0 0 0 0
59 4833856 0 0 0 0 0 0 0 0
60 3652625 595 68 0 0 0 0 0 0
61 2749034 0 0 0 0 0 0 0 0
62 2749034 0 0 0 0 0 0 0 0
63 2652435 0 0 0 0 0 0 0 0
64 2652435 0 0 0 0 0 0 0 0
65 1585696 0 0 0 0 0 0 0 0
66 1585696 0 0 0 0 0 0 0 0
67 283732 0 0 0 0 0 0 0 0
68 283732 0 0 0 0 0 0 0 0
69 179306 0 0 0 0 0 0 0 0
70 179306 0 0 0 0 0 0 0 0
72 81064 1651 143 81064 540 29 0 0 0
73 81064 0 0 0 0 0 0 0 0
78 1 0 0 0 0 0 0 0 0
79 1 0 0 0 0 0 0 0 0
85 1 0 0 0 0 0 0 0 0
86 1 0 0 0 0 0 0 0 0
115 1 1 1 0 0 0 0 0 0
116 1 0 0 0 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
118 1 0 0 0 0 0 0 0 0
146 84572 0 0 84572 5 5 0 0 0
147 84572 0 0 84572 0 0 0 0 0
148 84572 0 0 0 0 0 84572 14 0
149 84572 0 0 0 0 0 84572 0 0
150 84572 0 0 84572 0 0 0 0 0
152 100054 108 49 100054 0 0 0 0 0
154 108076 1 0 108076 1 1 0 0 0
155 108076 0 0 0 0 0 108076 23 0
156 108076 0 0 108076 0 0 0 0 0
158 27645 0 0 27645 0 0 0 0 0
159 27645 0 0 27645 0 0 0 0 0
160 27645 0 0 0 0 0 27645 7 0
161 27645 0 0 0 0 0 27645 0 0
162 27645 0 0 27645 0 0 0 0 0
164 1181231 15 6 1181231 5 5 0 0 0
165 1181231 0 0 1181231 0 0 0 0 0
166 1181231 0 0 0 0 0 1181231 244 8
167 1181231 0 0 0 0 0 1181231 70 1
168 1181231 0 0 1181231 0 0 0 0 0
171 903591 26 16 903591 8 2 0 0 0
172 903591 0 0 0 0 0 903591 524 170
173 903591 0 0 903591 0 0 0 0 0
175 96599 4 3 96599 5 4 0 0 0
176 96599 0 0 96599 0 0 0 0 0
177 96599 13 7 0 0 0 96599 683 14
178 96599 0 0 0 0 0 96599 0 0
179 96599 0 0 96599 0 0 0 0 0
181 1066739 19 13 1066739 7 3 0 0 0
182 1066739 0 0 1066739 0 0 0 0 0
183 1066739 0 0 0 0 0 1066739 2075 112
184 1066739 0 0 0 0 0 1066739 8 8
185 1066739 0 0 1066739 0 0 0 0 0
187 1301964 376 91 1301964 99923 79749 0 0 0
188 1301964 0 0 1301964 24929 19832 0 0 0
189 1301964 0 0 1301964 1 0 0 0 0
190 1301964 0 0 1301964 24144 19462 0 0 0
191 1301964 0 0 0 0 0 1301964 218435 138638
192 1301964 0 0 0 0 0 1301964 136829 79556
193 1301964 0 0 0 0 0 1301964 39 24
194 1301964 56 23 0 0 0 1301964 135083 77919
195 1301964 0 0 1301964 0 0 0 0 0
197 104426 64 35 104426 97027 80900 0 0 0
198 104426 0 0 104426 23127 19735 0 0 0
199 104426 0 0 104426 23084 18947 0 0 0
200 104426 0 0 104426 24100 19775 0 0 0
201 104426 0 0 104426 0 0 0 0 0
202 104426 0 0 104426 0 0 0 0 0
203 104426 0 0 104426 0 0 0 0 0
204 104426 0 0 104426 24032 19787 0 0 0
205 104426 0 0 0 0 0 104426 85756 50303
206 104426 0 0 0 0 0 104426 1059 526
207 104426 0 0 0 0 0 104426 43159 25094
208 104426 17 13 0 0 0 104426 1083 539
209 104426 0 0 0 0 0 104426 37 26
210 104426 0 0 0 0 0 104426 1 1
211 104426 0 0 0 0 0 104426 37 26
212 104426 0 0 0 0 0 104426 43909 25902
213 104426 0 0 104426 0 0 0 0 0
215 98242 26 21 98242 91592 87991 0 0 0
216 98242 0 0 98242 17 8 0 0 0
217 98242 0 0 98242 42325 41620 0 0 0
218 98242 0 0 98242 38 11 0 0 0
219 98242 0 0 98242 43862 39576 0 0 0
220 98242 0 0 98242 13 7 0 0 0
221 98242 0 0 98242 42284 37758 0 0 0
222 98242 394 76 98242 37 11 0 0 0
223 98242 0 0 98242 0 0 0 0 0
224 98242 0 0 98242 0 0 0 0 0
225 98242 0 0 98242 2 2 0 0 0
226 98242 0 0 98242 39 12 0 0 0
227 98242 0 0 98242 3 1 0 0 0
228 98242 0 0 98242 0 0 0 0 0
229 98242 0 0 98242 43844 38690 0 0 0
230 98242 0 0 98242 1 1 0 0 0
231 98242 624 110 0 0 0 98242 91837 84341
232 98242 0 0 0 0 0 98242 140 89
233 98242 0 0 0 0 0 98242 663 458
234 98242 0 0 0 0 0 98242 159 89
235 98242 0 0 0 0 0 98242 91627 84351
236 98242 0 0 0 0 0 98242 142 89
237 98242 0 0 0 0 0 98242 666 459
238 98242 0 0 0 0 0 98242 158 89
239 98242 0 0 0 0 0 98242 33 25
240 98242 0 0 0 0 0 98242 14 1
241 98242 0 0 0 0 0 98242 46 25
242 98242 0 0 0 0 0 98242 97 44
243 98242 24742 124 0 0 0 98242 351 243
244 98242 0 0 0 0 0 98242 97 53
245 98242 0 0 0 0 0 98242 91657 84342
246 98242 0 0 0 0 0 98242 174 89
247 98242 0 0 98242 0 0 0 0 0
249 6 1 1 0 0 0 0 0 0
250 6 0 0 6 0 0 0 0 0
251 6 0 0 6 0 0 0 0 0
252 6 0 0 6 0 0 0 0 0
253 6 0 0 6 0 0 0 0 0
254 6 0 0 6 0 0 0 0 0
255 6 1 1 6 0 0 0 0 0
256 6 0 0 6 0 0 0 0 0
257 6 0 0 6 0 0 0 0 0
258 6 0 0 6 0 0 0 0 0
259 6 0 0 6 0 0 0 0 0
260 6 0 0 6 0 0 0 0 0
261 6 0 0 6 0 0 0 0 0
262 6 0 0 6 0 0 0 0 0
263 6 1 1 6 0 0 0 0 0
264 6 0 0 6 0 0 0 0 0
265 6 0 0 6 0 0 0 0 0
266 6 0 0 0 0 0 6 6 6
267 6 0 0 0 0 0 6 0 0
268 6 0 0 0 0 0 6 0 0
269 6 0 0 0 0 0 6 0 0
270 6 0 0 0 0 0 6 6 6
271 6 0 0 0 0 0 6 0 0
272 6 0 0 0 0 0 6 0 0
273 6 0 0 0 0 0 6 0 0
274 6 1 1 0 0 0 6 6 6
275 6 0 0 0 0 0 6 0 0
276 6 0 0 0 0 0 6 0 0
277 6 0 0 0 0 0 6 0 0
278 6 0 0 0 0 0 6 6 6
279 6 0 0 0 0 0 6 0 0
280 6 0 0 0 0 0 6 0 0
281 6 1 1 0 0 0 6 0 0
282 6 0 0 0 0 0 0 0 0
283 6 0 0 0 0 0 0 0 0
284 6 0 0 0 0 0 0 0 0
285 6 0 0 0 0 0 0 0 0
286 1 0 0 0 0 0 0 0 0
292 81063 18870 114 0 0 0 0 0 0
293 81063 0 0 0 0 0 0 0 0
295 81063 0 0 0 0 0 0 0 0
297 81063 0 0 0 0 0 0 0 0
300 81063 0 0 0 0 0 0 0 0
301 81063 0 0 0 0 0 0 0 0
329 81045 19645 146 0 0 0 0 0 0
330 81045 0 0 0 0 0 0 0 0
332 81045 0 0 81045 65483 64709 0 0 0
333 81045 0 0 81045 11 7 0 0 0
334 81045 0 0 0 0 0 0 0 0
336 81045 0 0 0 0 0 0 0 0
337 81045 0 0 0 0 0 0 0 0
339 81045 0 0 81045 10 4 0 0 0
340 81045 0 0 81045 10 8 0 0 0
342 81045 0 0 0 0 0 0 0 0
343 81045 0 0 0 0 0 0 0 0
345 81045 0 0 81045 65370 57924 0 0 0
346 81045 0 0 81045 2 0 0 0 0
348 81045 0 0 0 0 0 0 0 0
350 81045 19751 155 81045 8 2 0 0 0
351 81045 0 0 81045 0 0 0 0 0
354 81045 0 0 81045 65933 65368 0 0 0
356 81045 0 0 0 0 0 0 0 0
357 81045 0 0 0 0 0 0 0 0
360 320131 0 0 320131 195 39 0 0 0
361 320131 0 0 320131 163300 81399 0 0 0
362 320131 0 0 320131 123 56 0 0 0
363 320131 0 0 320131 160489 78677 0 0 0
364 320131 0 0 0 0 0 0 0 0
365 320131 0 0 0 0 0 320131 93370 90207
366 320131 0 0 0 0 0 320131 296546 281581
367 320131 0 0 0 0 0 320131 22877 20710
368 320131 0 0 0 0 0 320131 296584 281601
369 320131 0 0 0 0 0 0 0 0
370 320131 3789 144 0 0 0 0 0 0
371 320131 0 0 0 0 0 0 0 0
373 81045 0 0 0 0 0 0 0 0
374 81045 0 0 0 0 0 0 0 0
375 81045 0 0 0 0 0 81045 759 23
376 81045 0 0 0 0 0 0 0 0
377 81045 0 0 0 0 0 81045 1403 1249
378 81045 0 0 0 0 0 81045 87 18
379 81045 0 0 0 0 0 81045 800 607
380 81045 0 0 0 0 0 81045 807 580
381 81045 0 0 0 0 0 81045 7515 7108
382 81045 0 0 0 0 0 81045 900 651
383 81045 0 0 0 0 0 81045 1600 1227
384 81045 0 0 0 0 0 81045 1641 1213
385 81045 69 41 81045 43 3 0 0 0
391 18 12 10 0 0 0 0 0 0
392 18 0 0 18 14 4 0 0 0
393 18 0 0 18 6 0 0 0 0
394 18 0 0 18 0 0 0 0 0
395 18 0 0 18 0 0 0 0 0
396 18 0 0 18 8 3 0 0 0
397 18 0 0 18 6 0 0 0 0
398 18 0 0 18 0 0 0 0 0
399 18 0 0 18 0 0 0 0 0
400 18 0 0 18 18 10 0 0 0
401 18 0 0 0 0 0 0 0 0
402 18 0 0 0 0 0 0 0 0
403 18 18 16 0 0 0 0 0 0
404 18 0 0 0 0 0 0 0 0
405 18 0 0 0 0 0 0 0 0
406 18 0 0 0 0 0 0 0 0
407 18 0 0 0 0 0 0 0 0
408 18 0 0 0 0 0 0 0 0
409 18 0 0 0 0 0 0 0 0
411 883630 0 0 0 0 0 0 0 0
412 883630 0 0 0 0 0 0 0 0
417 883630 0 0 883630 0 0 0 0 0
418 883630 0 0 883630 883630 704359 0 0 0
419 883630 0 0 883630 0 0 0 0 0
420 883630 0 0 883630 883630 704365 0 0 0
421 883630 18 13 0 0 0 0 0 0
422 883630 0 0 0 0 0 883630 18 12
423 883630 0 0 0 0 0 883630 883630 845140
424 883630 0 0 0 0 0 883630 0 0
425 883630 0 0 0 0 0 883630 883630 845145
426 883630 0 0 0 0 0 0 0 0
427 883630 0 0 0 0 0 0 0 0
428 883630 0 0 0 0 0 0 0 0
431 18 0 0 0 0 0 0 0 0
432 18 0 0 0 0 0 18 18 7
433 18 0 0 0 0 0 0 0 0
434 18 0 0 0 0 0 18 0 0
435 18 0 0 0 0 0 18 0 0
436 18 0 0 0 0 0 18 0 0
437 18 18 17 0 0 0 18 0 0
438 18 0 0 0 0 0 18 12 11
439 18 0 0 0 0 0 18 6 6
440 18 0 0 0 0 0 18 0 0
441 18 0 0 0 0 0 18 0 0
442 18 0 0 18 18 10 0 0 0
fl=.//usr/lib/golang/src/runtime/mfinal.go
fn=runtime.SetFinalizer
309 49 6 3 14 0 0 7 0 0
310 14 5 3 7 1 1 0 0 0
316 14 0 0 7 0 0 7 0 0
317 14 0 0 0 0 0 0 0 0
320 28 0 0 7 3 2 0 0 0
324 14 0 0 7 0 0 0 0 0
329 42 5 3 14 0 0 21 0 0
331 14 0 0 0 0 0 0 0 0
356 35 6 3 7 0 0 0 0 0
365 12 5 3 7 0 0 5 0 0
366 14 0 0 0 0 0 0 0 0
368 18 2 1 0 0 0 10 0 0
371 6 0 0 4 0 0 0 0 0
374 20 0 0 5 3 2 0 0 0
378 5 0 0 0 0 0 0 0 0
381 15 3 2 5 0 0 0 0 0
384 20 0 0 5 0 0 5 0 0
386 17 5 3 7 0 0 0 0 0
390 5 3 2 0 0 0 0 0 0
409 35 0 0 5 3 2 0 0 0
410 10 0 0 10 3 1 0 0 0
412 5 0 0 0 0 0 5 0 0
415 5 0 0 0 0 0 5 0 0
417 90 3 2 10 0 0 55 0 0
422 20 4 2 10 0 0 0 0 0
fn=runtime.SetFinalizer.func1
368 14 2 2 6 0 0 2 0 0
369 6 0 0 2 0 0 4 0 0
370 6 2 1 4 0 0 0 0 0
fn=runtime.SetFinalizer.func2
417 55 6 4 35 0 0 5 0 0
418 65 0 0 25 0 0 30 0 0
fn=runtime.createfing
153 30 6 4 10 0 0 5 0 0
155 44 0 0 16 0 0 0 0 0
156 9 3 2 0 0 0 3 0 0
fn=runtime.queuefinalizer
77 12 2 2 4 0 0 2 0 0
78 4 0 0 2 0 0 0 0 0
88 6 2 2 0 0 0 4 1 0
89 6 0 0 2 2 1 0 0 0
90 4 0 0 2 1 1 0 0 0
91 7 1 1 1 0 0 5 0 0
92 2 0 0 1 1 1 1 1 1
93 2 0 0 1 0 0 1 0 0
94 4 1 1 1 1 1 0 0 0
105 258 0 0 0 0 0 0 0 0
106 1024 1 1 64 2 1 64 0 0
110 2 1 1 2 0 0 0 0 0
111 4 0 0 2 1 1 2 0 0
112 4 0 0 2 0 0 2 0 0
113 2 0 0 0 0 0 2 0 0
115 10 2 2 4 0 0 0 0 0
116 4 0 0 4 0 0 0 0 0
117 12 0 0 4 0 0 2 0 0
118 4 0 0 2 0 0 2 0 0
119 12 0 0 4 0 0 2 0 0
120 8 0 0 2 0 0 2 0 0
121 8 4 4 2 0 0 2 0 0
122 2 0 0 0 0 0 2 0 0
123 6 0 0 0 0 0 4 0 0
124 6 0 0 4 0 0 0 0 0
fn=runtime.runfinq
161 8 2 1 2 0 0 1 1 0
168 15 0 0 0 0 0 10 1 0
169 7 0 0 5 2 0 2 0 0
170 5 0 0 0 0 0 5 0 0
171 10 0 0 0 0 0 0 0 0
172 3 0 0 3 0 0 0 0 0
173 9 3 3 3 0 0 3 0 0
174 3 0 0 0 0 0 3 0 0
175 3 0 0 0 0 0 0 0 0
176 2 0 0 0 0 0 0 0 0
178 6 0 0 0 0 0 4 0 0
179 8 2 2 6 0 0 0 0 0
182 18 2 2 6 0 0 2 0 0
183 18 0 0 6 1 0 0 0 0
184 12 2 2 0 0 0 4 0 0
186 8 0 0 2 0 0 2 0 0
187 22 2 2 2 2 2 9 0 0
192 5 1 1 1 0 0 4 0 0
193 1 0 0 0 0 0 0 0 0
196 8 0 0 4 0 0 0 0 0
203 19 4 4 2 0 0 11 4 3
204 6 2 2 4 2 1 0 0 0
205 4 2 2 0 0 0 0 0 0
207 10 0 0 4 0 0 2 0 0
208 4 0 0 0 0 0 0 0 0
221 2 2 2 0 0 0 2 0 0
222 23 0 0 7 0 0 12 0 0
223 2 2 2 0 0 0 2 0 0
229 8 0 0 2 0 0 2 0 0
230 6 2 2 0 0 0 2 0 0
231 6 0 0 0 0 0 2 0 0
232 7 0 0 7 0 0 0 0 0
234 4 0 0 2 0 0 2 0 0
235 6 0 0 0 0 0 4 0 0
236 6 0 0 4 0 0 2 0 0
237 2 0 0 0 0 0 2 0 0
238 6 0 0 0 0 0 4 0 0
fn=runtime.wakefing
136 12 2 2 4 0 0 2 0 0
138 6 2 2 0 0 0 4 1 1
139 8 0 0 4 0 0 0 0 0
140 2 0 0 0 0 0 2 0 0
141 2 0 0 0 0 0 2 0 0
142 2 0 0 2 0 0 0 0 0
144 6 1 1 0 0 0 4 0 0
145 12 0 0 6 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/mfixalloc.go
fn=runtime.(*fixalloc).alloc
64 294108 1399 134 98036 0 0 49018 95 0
65 196072 1269 129 98036 1520 335 0 0 0
70 147154 0 0 49018 747 177 100 0 0
72 3626 0 0 1813 1811 1305 1813 0 0
73 3626 0 0 3626 0 0 0 0 0
74 3626 0 0 1813 1 0 0 0 0
75 500 97 18 100 0 0 300 0 0
77 7352 0 0 3726 0 0 1813 0 0
79 141615 1127 109 47205 0 0 0 0 0
80 3144 253 104 1179 1 0 1965 0 0
81 786 0 0 0 0 0 393 0 0
84 93971 98 26 47205 0 0 46373 381 23
85 141615 0 0 47205 0 0 0 0 0
86 278238 0 0 92746 727 118 139119 0 0
88 140783 0 0 140783 15 4 0 0 0
89 94410 0 0 94410 0 0 0 0 0
90 94410 0 0 94410 0 0 0 0 0
91 235193 102 43 140783 0 0 47205 0 0
fn=runtime.(*mheap).freeSpanLocked
95 63352 0 0 47514 53 15 15838 0 0
97 31676 0 0 15838 0 0 15838 0 0
98 15838 0 0 0 0 0 15838 0 0
fn=runtime.(*mheap).init
53 5 0 0 0 0 0 5 2 2
54 12 3 3 5 1 0 1 1 1
55 5 0 0 0 0 0 5 0 0
57 6 0 0 0 0 0 5 1 1
58 5 2 2 0 0 0 5 0 0
59 5 0 0 0 0 0 5 1 1
60 18 2 2 5 0 0 5 1 1
61 5 0 0 0 0 0 5 1 1
fn=runtime.freespecial
95 1050 0 0 700 142 13 350 0 0
97 1050 28 18 700 0 0 350 0 0
98 350 0 0 0 0 0 350 0 0
fl=.//usr/lib/golang/src/runtime/mgc.go
fn=runtime.(*gcControllerState).endCycle
559 141 38 36 56 0 0 19 0 0
560 38 0 0 19 0 0 0 0 0
565 45 1 1 27 8 6 9 0 0
584 10 10 10 0 0 0 10 0 0
585 150 10 10 40 10 3 20 0 0
586 20 10 10 20 0 0 0 0 0
591 20 0 0 0 0 0 0 0 0
592 100 0 0 30 10 10 0 0 0
595 120 0 0 30 0 0 0 0 0
599 40 10 10 10 0 0 10 0 0
601 20 0 0 10 0 0 0 0 0
626 50 10 10 30 0 0 10 0 0
903 130 10 10 20 16 4 0 0 0
904 30 0 0 0 0 0 0 0 0
fn=runtime.(*gcControllerState).enlistWorker
634 106584 1150 95 35528 0 0 17764 0 0
645 53292 0 0 35528 5212 27 0 0 0
646 852 0 0 568 0 0 0 0 0
649 34960 0 0 17480 0 0 0 0 0
652 17480 0 0 17480 0 0 0 0 0
653 139840 601 48 34960 5102 163 0 0 0
656 52440 0 0 17480 11668 212 17480 0 0
657 367291 679 36 35636 0 0 1138 0 0
658 174142 726 54 87071 0 0 0 0 0
659 180034 0 0 984 0 0 0 0 0
660 82163 0 0 0 0 0 0 0 0
662 527334 7 7 261213 19736 1033 0 0 0
663 174142 0 0 87071 68178 3631 0 0 0
666 5536 0 0 1138 0 0 2276 0 0
667 462 0 0 308 3 2 0 0 0
fn=runtime.(*gcControllerState).findRunnableGCWorker
674 282 52 44 94 0 0 47 0 0
675 94 0 0 47 0 0 0 0 0
678 188 0 0 94 8 2 0 0 0
682 40 16 13 20 0 0 10 0 0
685 107 18 13 0 0 0 0 0 0
690 115 11 10 46 0 0 23 0 0
694 14 0 0 0 0 0 0 0 0
695 84 0 0 28 0 0 0 0 0
704 56 0 0 28 0 0 0 0 0
707 14 13 12 0 0 0 14 0 0
726 14 0 0 14 0 0 0 0 0
727 56 0 0 0 0 0 42 0 0
728 28 0 0 14 0 0 0 0 0
731 70 13 11 42 0 0 14 0 0
2018 7 0 0 0 0 0 0 0 0
2021 35 0 0 0 0 0 0 0 0
2024 105 9 8 64 0 0 0 0 0
fn=runtime.(*gcControllerState).revise
489 7851 128 42 7851 61 0 0 0 0
490 15702 0 0 0 0 0 0 0 0
495 7851 0 0 7851 0 0 0 0 0
499 7851 0 0 7851 2469 49 0 0 0
510 99617 177 71 15702 2484 41 0 0 0
512 36073 0 0 10810 748 14 0 0 0
517 25865 0 0 3695 1175 15 0 0 0
530 19858 0 0 15702 624 6 0 0 0
531 7851 84 36 0 0 0 0 0 0
544 12007 0 0 0 0 0 0 0 0
545 7851 0 0 0 0 0 0 0 0
554 54957 0 0 0 0 0 7851 1641 12
555 47106 14 5 0 0 0 7851 0 0
556 7851 0 0 7851 0 0 0 0 0
fn=runtime.(*gcControllerState).startCycle
412 114 19 18 38 0 0 19 0 0
413 57 0 0 19 0 0 19 19 16
416 19 0 0 0 0 0 19 0 0
418 19 0 0 0 0 0 19 0 0
427 76 19 18 38 19 0 0 0 0
428 3 0 0 0 0 0 3 0 0
436 95 0 0 38 19 7 0 0 0
437 76 0 0 19 0 0 19 0 0
438 114 19 18 19 19 12 0 0 0
440 114 19 18 38 19 6 0 0 0
451 57 0 0 0 0 0 19 19 16
455 38 19 18 19 0 0 0 0 0
461 1330 19 18 342 5 0 0 0 0
462 304 0 0 0 0 0 0 0 0
463 304 0 0 0 0 0 304 295 67
468 38 0 0 0 0 0 38 1 0
470 95 0 0 57 4 0 0 0 0
fn=runtime.GC
1063 54 18 16 18 0 0 9 0 0
1090 18 0 0 9 9 8 9 0 0
1091 18 0 0 0 0 0 18 5 3
1096 36 9 8 0 0 0 36 0 0
1099 54 2 1 18 1 1 27 0 0
1105 2213978 27 20 664188 65 22 221396 3 1
1106 221387 0 0 221387 58 14 0 0 0
1107 221387 0 0 0 0 0 0 0 0
1121 221468 0 0 221414 51 6 0 0 0
1128 9 0 0 0 0 0 0 0 0
1129 9 0 0 9 0 0 0 0 0
1130 18 0 0 0 0 0 0 0 0
1131 9 0 0 0 0 0 9 0 0
1133 9 0 0 0 0 0 0 0 0
fn=runtime.clearpools
2219 114 19 18 38 0 0 19 2 0
2221 57 19 18 19 15 6 0 0 0
2222 57 19 18 19 19 17 19 1 1
2229 57 0 0 0 0 0 38 0 0
2231 76 0 0 19 0 0 0 0 0
2235 57 19 18 19 0 0 19 0 0
2236 57 0 0 0 0 0 38 0 0
2240 76 0 0 0 0 0 38 0 0
2241 342 38 36 0 0 0 0 0 0
2245 475 0 0 95 0 0 0 0 0
2249 285 0 0 95 0 0 95 0 0
2251 57 0 0 0 0 0 38 0 0
2252 57 0 0 38 0 0 0 0 0
fn=runtime.findrunnable
2018 7 0 0 0 0 0 0 0 0
2021 108 52 38 0 0 0 0 0 0
2024 281 0 0 186 3 2 0 0 0
fn=runtime.gcAssistAlloc1
2021 2113 0 0 0 0 0 0 0 0
2024 21 7 4 14 0 0 0 0 0
fn=runtime.gcBgMarkStartWorkers
1816 114 19 18 38 0 0 19 0 0
1819 1489 37 35 428 4 0 54 0 0
1820 912 0 0 304 304 259 0 0 0
1821 80 1 1 0 0 0 64 0 0
1822 64 0 0 0 0 0 48 0 0
1823 16 0 0 0 0 0 0 0 0
fn=runtime.gcBgMarkWorker
1844 96 1 1 32 0 0 16 0 0
1845 32 0 0 16 0 0 16 16 15
1854 96 1 1 32 0 0 32 0 0
1855 80 0 0 16 0 0 48 16 15
1856 96 1 1 48 0 0 32 0 0
1858 32 0 0 0 0 0 0 0 0
1859 16 0 0 0 0 0 0 0 0
1867 48 0 0 0 0 0 32 0 0
1873 329 39 32 47 1 0 235 0 0
1905 209 20 17 93 64 53 0 0 0
1912 62 0 0 0 0 0 0 0 0
1914 62 0 0 31 0 0 0 0 0
1918 31 0 0 0 0 0 0 0 0
1919 62 0 0 31 0 0 31 0 0
1921 124 22 20 62 3 2 0 0 0
1922 93 0 0 31 0 0 0 0 0
1927 341 20 19 31 0 0 217 0 0
1969 62 0 0 31 22 16 0 0 0
1970 62 0 0 62 22 16 0 0 0
1971 62 0 0 0 0 0 0 0 0
1972 28 0 0 28 0 0 0 0 0
1973 42 10 8 28 0 0 0 0 0
1974 34 26 20 0 0 0 0 0 0
1977 34 0 0 0 0 0 0 0 0
1978 51 0 0 34 0 0 0 0 0
1983 124 13 9 62 10 7 0 0 0
1984 93 0 0 31 0 0 0 0 0
1992 156 4 4 0 0 0 0 0 0
1997 23 0 0 0 0 0 0 0 0
1998 46 0 0 46 20 11 0 0 0
2000 23 0 0 0 0 0 23 0 0
2008 46 0 0 0 0 0 0 0 0
2009 46 8 7 0 0 0 0 0 0
2021 24 0 0 0 0 0 0 0 0
2024 69 0 0 46 0 0 0 0 0
fn=runtime.gcBgMarkWorker.func1
1878 94 9 7 94 5 3 0 0 0
1887 141 0 0 47 0 0 0 0 0
1888 39 0 0 0 0 0 0 0 0
1889 39 0 0 0 0 0 0 0 0
1893 117 0 0 39 0 0 0 0 0
1899 94 0 0 47 0 0 47 0 0
fn=runtime.gcBgMarkWorker.func2
1927 310 46 42 124 0 0 93 0 0
1935 124 0 0 0 0 0 93 0 0
1936 93 0 0 62 0 0 0 0 0
1939 62 23 21 0 0 0 0 0 0
1940 70 0 0 0 0 0 56 0 0
1941 42 1 1 28 0 0 0 0 0
1947 3 0 0 0 0 0 2 0 0
1948 1 0 0 0 0 0 0 0 0
1949 4 1 1 2 0 0 2 0 0
1950 2 0 0 0 0 0 0 0 0
1955 3 1 1 0 0 0 2 0 0
1959 56 9 8 14 6 3 42 0 0
1960 34 11 9 0 0 0 0 0 0
1962 34 0 0 0 0 0 0 0 0
1963 85 13 12 0 0 0 51 0 0
1965 155 20 16 31 0 0 93 0 0
1966 93 0 0 62 17 13 0 0 0
fn=runtime.gcMark
2033 114 19 18 38 0 0 19 0 0
2034 38 0 0 19 0 0 0 0 0
2038 38 0 0 19 0 0 0 0 0
2041 38 19 18 19 0 0 19 0 0
2044 133 0 0 57 19 0 19 0 0
2049 38 0 0 19 0 0 0 0 0
2054 38 19 18 19 0 0 0 0 0
2064 2888 19 18 1254 0 0 646 0 0
2070 1216 19 18 608 0 0 0 0 0
2075 1520 0 0 304 304 0 608 0 0
2078 912 0 0 304 0 0 0 0 0
2099 608 0 0 0 0 0 608 0 0
2102 19 0 0 0 0 0 19 0 0
2104 19 0 0 0 0 0 19 0 0
2107 38 0 0 19 0 0 19 0 0
2112 38 19 18 19 0 0 19 0 0
2113 38 0 0 19 3 0 19 0 0
2115 95 0 0 57 0 0 0 0 0
fn=runtime.gcMarkDone
1430 186 24 19 64 0 0 30 1 0
1433 30 0 0 0 0 0 0 0 0
1442 492 46 23 143 2 0 0 0 0
1443 11 9 1 0 0 0 0 0 0
1444 77 26 17 22 11 2 0 0 0
1448 44 0 0 0 0 0 44 0 0
1449 132 0 0 0 0 0 88 0 0
1497 88 21 18 44 0 0 0 0 0
1521 19 0 0 0 0 0 0 0 0
1522 19 0 0 0 0 0 19 19 17
1523 19 0 0 0 0 0 19 0 0
1524 171 38 36 57 0 0 38 0 0
1525 38 0 0 19 0 0 0 0 0
1528 57 0 0 0 0 0 38 0 0
1567 19 0 0 0 0 0 19 1 0
1568 171 19 18 0 0 0 95 15 2
1577 38 0 0 19 0 0 0 0 0
1589 57 19 18 38 0 0 0 0 0
1593 19 0 0 0 0 0 19 0 0
1598 19 0 0 0 0 0 0 0 0
1602 38 0 0 0 0 0 38 0 0
1607 76 0 0 19 0 0 38 0 0
1610 38 0 0 0 0 0 38 0 0
1611 57 19 18 38 19 4 0 0 0
2021 44 0 0 0 0 0 0 0 0
2024 132 19 18 88 0 0 0 0 0
fn=runtime.gcMarkDone.func1
1449 264 25 19 88 0 0 44 0 0
1450 176 0 0 132 0 0 44 0 0
1455 176 19 18 0 0 0 132 0 0
1456 132 0 0 0 0 0 88 0 0
1494 220 12 1 44 1 0 132 0 0
1495 132 21 18 88 6 0 0 0 0
fn=runtime.gcMarkDone.func1.1
1456 4224 22 19 1408 0 0 704 0 0
1459 2112 0 0 704 0 0 1408 0 0
1474 3520 26 19 1408 307 0 1408 0 0
1476 2112 0 0 1408 0 0 0 0 0
1477 102 0 0 68 0 0 0 0 0
1478 2146 0 0 1408 0 0 34 0 0
fn=runtime.gcMarkDone.func2
1568 152 0 0 57 0 0 38 0 0
1569 2888 38 36 1254 0 0 646 0 0
1570 608 0 0 0 0 0 608 0 0
1571 608 0 0 304 0 0 0 0 0
1572 361 19 18 342 0 0 0 0 0
fn=runtime.gcMarkTermination
277 57 19 18 38 0 0 0 0 0
278 152 19 18 19 0 0 19 0 0
279 57 0 0 0 0 0 19 0 0
1613 133 19 18 38 0 0 19 0 0
1616 57 0 0 38 0 0 0 0 0
1617 19 0 0 0 0 0 0 0 0
1619 38 19 18 19 0 0 19 0 0
1620 19 0 0 0 0 0 0 0 0
1622 19 0 0 0 0 0 0 0 0
1623 152 38 36 19 0 0 57 0 0
1624 38 0 0 19 0 0 19 0 0
1625 38 19 18 19 0 0 19 2 1
1626 57 0 0 38 0 0 19 0 0
1627 76 0 0 0 0 0 57 2 1
1628 38 19 18 19 0 0 19 0 0
1635 171 0 0 19 0 0 95 19 15
1646 57 19 18 0 0 0 38 0 0
1667 57 0 0 38 0 0 19 0 0
1668 95 0 0 19 1 0 57 0 0
1670 38 19 18 19 0 0 0 0 0
1675 95 0 0 38 0 0 38 0 0
1677 38 19 18 19 0 0 0 0 0
1682 38 0 0 19 19 6 19 0 0
1683 38 0 0 19 19 4 19 0 0
1686 57 0 0 19 0 0 38 0 0
1689 19 0 0 0 0 0 19 0 0
1692 19 0 0 0 0 0 0 0 0
1693 57 0 0 38 0 0 19 0 0
1694 38 0 0 0 0 0 0 0 0
1695 95 0 0 57 0 0 0 0 0
1696 19 0 0 0 0 0 19 0 0
1697 57 19 18 38 0 0 0 0 0
1698 57 0 0 38 0 0 0 0 0
1699 76 0 0 38 5 2 19 19 17
1700 57 19 18 19 0 0 19 19 17
1701 57 0 0 38 0 0 19 0 0
1704 95 0 0 57 0 0 19 0 0
1707 57 19 18 57 0 0 0 0 0
1708 76 0 0 38 0 0 19 0 0
1709 38 0 0 0 0 0 0 0 0
1710 38 0 0 19 0 0 19 0 0
1713 95 19 18 57 0 0 0 0 0
1714 114 0 0 0 0 0 19 0 0
1718 19 0 0 0 0 0 19 0 0
1720 38 19 18 19 0 0 0 0 0
1721 9 0 0 9 0 0 0 0 0
1725 57 0 0 0 0 0 38 0 0
1726 19 0 0 19 0 0 0 0 0
1727 57 0 0 0 0 0 38 0 0
1728 57 0 0 0 0 0 38 0 0
1733 19 19 18 0 0 0 19 0 0
1735 57 0 0 0 0 0 38 0 0
1740 19 1 0 0 0 0 19 0 0
1744 19 0 0 0 0 0 19 0 0
1747 57 0 0 0 0 0 38 0 0
1753 57 0 0 0 0 0 38 0 0
1762 38 19 18 19 1 0 0 0 0
1799 19 19 18 0 0 0 0 0 0
1802 19 0 0 0 0 0 0 0 0
fn=runtime.gcMarkTermination.func1
1635 133 38 36 57 0 0 19 0 0
1636 38 0 0 0 0 0 38 0 0
1644 57 0 0 38 0 0 0 0 0
fn=runtime.gcMarkTermination.func2
277 57 0 0 38 0 0 0 0 0
278 152 19 18 19 0 0 19 0 0
279 76 0 0 19 0 0 19 0 0
1646 114 19 18 38 0 0 19 0 0
1647 38 0 0 19 0 0 19 19 17
1648 38 0 0 19 0 0 0 0 0
1663 19 0 0 0 0 0 0 0 0
1664 57 0 0 19 0 0 38 0 0
1665 57 0 0 38 0 0 0 0 0
fn=runtime.gcMarkTermination.func3
1735 152 38 36 38 0 0 57 0 0
fn=runtime.gcMarkTermination.func4
1753 114 38 32 38 0 0 19 0 0
1754 57 0 0 0 0 0 38 0 0
1757 57 10 2 38 8 5 0 0 0
fn=runtime.gcMarkTermination.func4.1
1754 1824 2 0 608 0 0 304 0 0
1755 1216 0 0 608 286 0 608 0 0
1756 912 0 0 608 0 0 0 0 0
fn=runtime.gcResetMarkState
2184 114 38 36 38 0 0 19 0 0
2187 57 0 0 0 0 0 38 0 0
2188 1818 19 18 464 67 57 0 0 0
2189 426 0 0 0 0 0 426 388 340
2190 426 0 0 0 0 0 426 395 348
2192 57 0 0 0 0 0 38 0 0
2196 57 0 0 0 0 0 38 0 0
2197 76 0 0 38 19 15 38 0 0
2198 57 19 18 0 0 0 38 0 0
2199 658 19 18 310 19 16 68 0 0
2200 340 0 0 136 4 1 0 0 0
2201 340 0 0 0 0 0 204 0 0
2206 19 0 0 0 0 0 19 19 18
2207 38 19 17 19 7 0 19 11 10
2208 57 0 0 38 0 0 0 0 0
fn=runtime.gcSetTriggerRatio
763 120 40 36 40 0 0 20 0 0
768 80 0 0 20 0 0 0 0 0
769 180 20 18 20 0 0 0 0 0
773 20 0 0 0 0 0 0 0 0
774 80 0 0 20 16 8 0 0 0
777 40 0 0 20 19 6 0 0 0
778 79 0 0 20 0 0 0 0 0
794 40 20 18 20 10 3 0 0 0
795 79 19 17 0 0 0 0 0 0
807 40 1 1 0 0 0 20 0 0
814 40 0 0 20 0 0 0 0 0
815 240 20 18 60 19 12 0 0 0
817 20 0 0 20 13 8 0 0 0
818 20 0 0 0 0 0 0 0 0
824 38 19 18 19 0 0 0 0 0
825 38 0 0 0 0 0 0 0 0
829 59 0 0 0 0 0 0 0 0
832 40 20 18 0 0 0 0 0 0
836 20 0 0 0 0 0 0 0 0
845 40 0 0 0 0 0 40 3 1
846 40 0 0 0 0 0 20 0 0
847 40 0 0 20 0 0 0 0 0
852 40 0 0 20 0 0 0 0 0
857 20 0 0 0 0 0 0 0 0
858 2 0 0 0 0 0 1 0 0
865 19 0 0 19 0 0 0 0 0
866 19 0 0 0 0 0 0 0 0
870 19 19 18 0 0 0 0 0 0
871 38 0 0 0 0 0 0 0 0
875 19 0 0 19 0 0 0 0 0
876 19 0 0 19 0 0 0 0 0
877 19 0 0 0 0 0 0 0 0
878 19 0 0 0 0 0 0 0 0
881 152 0 0 0 0 0 19 0 0
882 19 0 0 0 0 0 19 0 0
886 57 0 0 38 0 0 0 0 0
890 20 0 0 0 0 0 20 16 14
891 60 0 0 40 0 0 0 0 0
fn=runtime.gcStart
277 57 0 0 38 0 0 0 0 0
278 114 19 18 19 0 0 19 0 0
279 57 0 0 0 0 0 19 0 0
1200 228 38 36 114 0 0 0 0 0
1204 114 0 0 38 0 0 0 0 0
1209 60 0 0 40 0 0 0 0 0
1210 36 0 0 0 0 0 0 0 0
1215 19 0 0 19 0 0 0 0 0
1216 36 18 16 0 0 0 0 0 0
1218 118 0 0 46 0 0 0 0 0
1229 120 29 28 42 0 0 19 0 0
1234 19 0 0 0 0 0 0 0 0
1235 171 19 18 76 1 0 0 0 0
1239 19 0 0 0 0 0 0 0 0
1252 171 9 8 19 0 0 19 4 4
1258 19 0 0 0 0 0 0 0 0
1260 76 0 0 0 0 0 0 0 0
1266 57 19 18 19 0 0 19 0 0
1273 57 0 0 19 1 1 0 0 0
1275 19 19 18 0 0 0 0 0 0
1280 19 0 0 0 0 0 0 0 0
1282 38 19 18 19 3 0 0 0 0
1287 1330 0 0 342 49 12 0 0 0
1288 1520 0 0 912 568 287 0 0 0
1294 19 19 18 0 0 0 19 1 1
1296 57 1 0 0 0 0 38 0 0
1298 57 0 0 19 0 0 38 0 0
1299 57 0 0 19 0 0 0 0 0
1304 38 19 18 19 0 0 19 19 18
1305 19 0 0 0 0 0 19 0 0
1306 114 0 0 19 0 0 38 0 0
1308 19 0 0 0 0 0 19 0 0
1309 19 0 0 0 0 0 19 0 0
1310 19 0 0 0 0 0 19 0 0
1311 38 19 18 19 0 0 0 0 0
1314 57 0 0 0 0 0 38 0 0
1316 57 0 0 0 0 0 38 2 0
1321 19 0 0 0 0 0 19 0 0
1323 19 0 0 19 0 0 0 0 0
1325 57 19 18 0 0 0 38 0 0
1326 38 0 0 19 0 0 19 19 17
1331 95 19 18 38 7 1 0 0 0
1349 19 0 0 0 0 0 0 0 0
1351 19 0 0 0 0 0 0 0 0
1352 19 0 0 0 0 0 19 0 0
1359 19 0 0 0 0 0 19 0 0
1366 57 19 18 38 0 0 0 0 0
1370 38 0 0 19 0 0 19 0 0
1373 171 0 0 0 0 0 95 7 1
1381 19 0 0 0 0 0 0 0 0
1385 57 1 0 38 2 2 0 0 0
1840 19 0 0 0 0 0 19 0 0
1841 19 0 0 0 0 0 19 0 0
fn=runtime.gcStart.func1
1316 114 19 17 38 0 0 19 0 0
1317 19 0 0 0 0 0 19 3 0
1318 57 19 18 38 0 0 0 0 0
fn=runtime.gcStart.func2
1373 152 0 0 57 0 0 38 0 0
1374 114 19 18 57 0 0 57 5 0
1375 57 0 0 38 1 1 0 0 0
1376 38 0 0 19 0 0 19 0 0
1377 57 0 0 38 0 0 0 0 0
fn=runtime.gcSweep
2123 114 38 36 38 0 0 19 0 0
2124 38 0 0 19 0 0 0 0 0
2128 57 0 0 0 0 0 38 0 0
2129 57 0 0 19 19 0 19 0 0
2130 19 19 18 0 0 0 19 0 0
2131 133 0 0 19 19 9 0 0 0
2137 19 0 0 0 0 0 19 12 4
2138 152 19 18 76 38 28 57 0 0
2140 38 0 0 0 0 0 19 0 0
2141 57 0 0 0 0 0 38 0 0
2143 57 19 18 19 0 0 0 0 0
2166 57 38 36 0 0 0 38 0 0
2167 38 0 0 19 0 0 0 0 0
2168 19 0 0 0 0 0 19 0 0
2169 114 19 18 19 0 0 76 0 0
2171 57 0 0 0 0 0 38 0 0
2172 57 0 0 38 0 0 0 0 0
fn=runtime.gcWaitOnMark
1138 108 22 16 36 0 0 18 0 0
1139 18 0 0 0 0 0 0 0 0
1141 81 20 15 0 0 0 54 5 4
1142 27 0 0 27 0 0 0 0 0
1143 54 0 0 27 0 0 0 0 0
1145 27 0 0 0 0 0 0 0 0
1147 81 20 15 27 1 0 0 0 0
1149 54 0 0 0 0 0 36 0 0
1150 54 0 0 36 0 0 0 0 0
1155 9 0 0 9 0 0 0 0 0
1156 9 0 0 0 0 0 0 0 0
fn=runtime.gcenable
211 6 1 1 2 0 0 1 0 0
213 6 1 1 1 0 0 4 0 0
214 4 0 0 0 0 0 3 0 0
215 6 1 1 1 0 0 4 0 0
216 4 0 0 1 0 0 3 0 0
217 4 1 0 1 0 0 3 0 0
218 1 1 0 0 0 0 1 0 0
219 3 0 0 2 1 0 0 0 0
fn=runtime.gcinit
172 6 2 2 2 0 0 1 0 0
178 1 0 0 0 0 0 1 0 0
181 2 0 0 1 1 1 1 0 0
186 12 1 1 3 2 0 1 0 0
190 2 0 0 0 0 0 2 0 0
193 2 0 0 0 0 0 1 1 1
194 3 1 1 2 0 0 0 0 0
fn=runtime.handoffp
2018 30 0 0 10 0 0 0 0 0
2021 5 0 0 0 0 0 0 0 0
2024 15 0 0 10 2 0 0 0 0
fn=runtime.mallocgc
1200 299994 720 154 148023 19153 207 0 0 0
1209 136233 0 0 90822 22 1 0 0 0
fn=runtime.readgogc
196 6 1 1 2 0 0 1 0 0
197 6 1 1 2 0 0 3 0 0
198 2 0 0 0 0 0 0 0 0
201 4 1 1 0 0 0 0 0 0
204 4 0 0 2 0 0 1 0 0
fn=runtime.setGCPercent.func1
224 10 2 2 4 0 0 3 0 0
225 3 0 0 0 0 0 2 0 0
226 3 0 0 2 0 0 1 0 0
227 3 0 0 2 0 0 0 0 0
230 2 1 1 1 0 0 1 0 0
231 7 0 0 0 0 0 1 0 0
233 3 0 0 1 0 0 2 0 0
234 3 1 1 0 0 0 2 0 0
235 3 0 0 2 0 0 0 0 0
fn=runtime.sysmon
1200 2923 641 109 1725 79 15 0 0 0
1211 1054 0 0 527 0 0 0 0 0
1214 527 369 46 527 403 13 0 0 0
1215 4156 0 0 1030 25 6 0 0 0
fn=runtime/debug.setGCPercent
222 7 2 2 2 0 0 2 0 0
224 12 1 1 0 0 0 7 0 0
237 1 0 0 0 0 0 1 0 0
241 2 0 0 1 0 0 0 0 0
245 3 0 0 2 0 0 0 0 0
fn=sync.runtime_registerPoolCleanup
2215 6 2 2 2 0 0 1 0 0
2216 4 0 0 2 0 0 1 0 0
2217 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mgcmark.go
fn=runtime.gcAssistAlloc
382 15961 2241 79 4616 0 0 2308 7 1
385 11540 0 0 9232 977 29 0 0 0
386 27 1 1 18 0 0 0 0 0
388 16073 0 0 6892 15 5 0 0 0
389 15 2 2 10 0 0 0 0 0
398 4592 79 12 2296 0 0 0 0 0
399 9184 0 0 2296 967 4 0 0 0
400 4601 0 0 0 0 0 0 0 0
402 11444 1082 43 4583 2296 85 0 0 0
411 2296 1 1 2296 805 8 0 0 0
413 4592 0 0 0 0 0 0 0 0
414 368 0 0 0 0 0 0 0 0
416 21 2 1 6 0 0 3 0 0
419 362 11 5 181 0 0 0 0 0
421 917 50 6 368 0 0 0 0 0
423 184 0 0 0 0 0 0 0 0
425 368 0 0 0 0 0 0 0 0
428 181 0 0 0 0 0 0 0 0
431 543 0 0 362 0 0 0 0 0
435 6345 2957 68 2115 1164 33 0 0 0
441 21150 0 0 0 0 0 14805 13 5
447 10573 2639 73 4230 2108 51 0 0 0
448 10571 1077 32 2115 2101 39 2115 0 0
449 2115 0 0 0 0 0 0 0 0
450 14 0 0 0 0 0 7 0 0
453 6350 14 4 2122 17 7 0 0 0
461 8 0 0 4 0 0 0 0 0
462 2 0 0 0 0 0 0 0 0
463 6 0 0 4 0 0 0 0 0
475 6 2 2 2 0 0 2 0 0
482 17089 1096 36 6339 2047 44 2115 0 0
fn=runtime.gcAssistAlloc.func1
441 16920 1421 60 8460 0 0 2115 0 0
442 6345 0 0 0 0 0 6345 409 5
445 6345 0 0 4230 226 2 0 0 0
fn=runtime.gcAssistAlloc1
497 12690 1350 39 4230 0 0 2115 0 0
500 19029 508 31 4230 1 0 4228 195 12
502 6345 469 32 2115 0 0 0 0 0
510 2 0 0 0 0 0 2 0 0
511 6 0 0 4 0 0 0 0 0
516 2113 0 0 0 0 0 0 0 0
518 8452 24 11 4226 1568 35 0 0 0
519 6339 0 0 2113 0 0 0 0 0
525 10565 0 0 2113 4 0 6339 0 0
526 4226 544 41 2113 0 0 2113 0 0
530 10565 0 0 6339 0 0 0 0 0
531 12678 0 0 4226 0 0 8452 226 3
533 10565 243 31 2113 1883 47 6339 0 0
541 19017 619 38 8452 4215 76 2113 0 0
545 8452 0 0 4226 2102 77 0 0 0
546 6339 0 0 2113 0 0 0 0 0
552 12671 1489 37 0 0 0 0 0 0
557 49 0 0 14 2 0 7 0 0
559 4226 0 0 2113 0 0 0 0 0
560 6339 1426 42 6339 2106 38 0 0 0
561 6339 0 0 2113 2113 68 2113 0 0
562 4226 0 0 0 0 0 0 0 0
563 4226 0 0 4226 2 0 0 0 0
564 8452 0 0 4226 0 0 2113 0 0
fn=runtime.gcDrain
967 270 21 20 90 0 0 45 0 0
968 90 0 0 45 1 1 0 0 0
972 180 41 36 135 0 0 45 0 0
973 51756743 30 27 17687213 0 0 0 0 0
974 1336986 0 0 685070 0 0 0 0 0
975 17 0 0 0 0 0 0 0 0
977 104 0 0 90 0 0 14 0 0
983 163 0 0 45 0 0 0 0 0
984 17 10 10 0 0 0 0 0 0
985 34 0 0 0 0 0 0 0 0
993 205 14 13 90 13 9 0 0 0
994 6279 0 0 3578 877 11 0 0 0
995 2715 0 0 1810 535 13 0 0 0
996 2715 14 12 905 0 0 0 0 0
999 3567 0 0 0 0 0 2676 0 0
1000 6963 10 10 1432 588 7 180 0 0
1007 85003851 0 0 34000817 596 179 0 0 0
1013 34067772 0 0 17033886 543 46 0 0 0
1014 945 20 17 0 0 0 630 0 0
1017 17001033 8 5 0 0 0 0 0 0
1018 34067772 0 0 0 0 0 0 0 0
1019 98649 21 19 32883 0 0 65766 0 0
1020 65766 0 0 0 0 0 0 0 0
1024 123 0 0 0 0 0 82 0 0
1025 205 0 0 82 0 0 82 0 0
1028 34100655 0 0 0 0 0 0 0 0
1030 41 0 0 0 0 0 0 0 0
1032 51134418 22 20 32883 0 0 51101535 0 0
1037 84517380 1 1 34067690 594 156 0 0 0
1038 1303690 0 0 1303690 25575 492 0 0 0
1039 651845 0 0 0 0 0 0 0 0
1040 3259225 24 22 1303690 74 6 1303690 0 0
1041 651845 0 0 0 0 0 0 0 0
1043 53743059 42 39 18371624 0 0 17035423 0 0
1044 651845 0 0 0 0 0 651845 0 0
1046 1954012 0 0 0 0 0 0 0 0
1047 3046 0 0 1523 0 0 0 0 0
1048 34147523 19 19 17071612 1393 33 1568 0 0
1057 224 8 8 90 1 0 0 0 0
1058 54 15 14 54 1 0 0 0 0
1059 27 0 0 0 0 0 0 0 0
1060 50487134 0 0 16417640 0 0 17035463 0 0
1062 189 1 0 117 0 0 27 0 0
fn=runtime.gcDrainN
1079 12678 125 58 4226 0 0 2113 0 0
1080 4226 0 0 2113 0 0 0 0 0
1086 6339 0 0 4226 8 3 0 0 0
1088 8452 0 0 6339 0 0 2113 0 0
1089 42183367 1296 34 16235152 575 23 0 0 0
1091 6481470 512 30 3240735 1670 70 0 0 0
1092 1662 30 23 0 0 0 1108 0 0
1100 3228721 1 0 0 0 0 0 0 0
1101 6481470 0 0 0 0 0 0 0 0
1102 36084 8 7 12028 0 0 24056 0 0
1103 24056 0 0 0 0 0 0 0 0
1106 672 0 0 0 0 0 448 0 0
1107 1120 0 0 448 0 0 448 0 0
1111 6481470 0 0 0 0 0 0 0 0
1116 660 0 0 440 91 6 0 0 0
1117 645 2 2 430 0 0 0 0 0
1118 645 0 0 215 0 0 0 0 0
1119 12673 0 0 12028 0 0 645 0 0
1120 215 0 0 0 0 0 0 0 0
1126 9721545 509 37 0 0 0 9721545 0 0
1129 16122876 0 0 6481030 86 2 0 0 0
1130 159398 0 0 159398 834 10 0 0 0
1131 13134690 49 21 3333011 84 0 3240735 0 0
1132 79699 0 0 0 0 0 79699 0 0
1140 12678 2 2 6339 0 0 2113 1880 37
fn=runtime.gcFlushBgCredit
625 3911232 20 19 1303744 148 11 651872 0 0
626 1303744 0 0 651872 28384 1157 0 0 0
631 1955616 20 19 1955616 0 0 0 0 0
632 1955616 0 0 1303744 0 0 0 0 0
fn=runtime.gcMarkRootPrepare
57 76 19 18 0 0 0 0 0 0
60 38 19 18 0 0 0 19 0 0
61 19 0 0 0 0 0 19 0 0
64 152 0 0 19 13 6 0 0 0
65 38 0 0 38 19 16 0 0 0
66 38 0 0 19 0 0 0 0 0
67 38 19 18 0 0 0 19 0 0
71 152 0 0 19 0 0 0 0 0
72 38 0 0 38 0 0 0 0 0
73 38 0 0 19 0 0 0 0 0
74 38 0 0 0 0 0 19 0 0
88 95 0 0 19 0 0 19 0 0
97 38 0 0 19 19 0 19 0 0
99 19 0 0 0 0 0 19 0 0
100 133 19 18 95 0 0 19 0 0
101 19 0 0 19 0 0 0 0 0
fn=runtime.gcMarkTinyAllocs
1533 114 38 36 38 0 0 19 0 0
1534 1480 19 18 413 20 0 60 0 0
1535 315 0 0 304 180 0 11 0 0
1536 1520 0 0 304 158 53 0 0 0
1539 66 0 0 22 0 0 33 0 0
1540 22 0 0 11 0 0 0 0 0
1541 110 10 10 22 0 0 66 0 0
fn=runtime.gcParkAssist
584 12 2 2 4 0 0 2 0 0
585 6 0 0 0 0 0 4 0 0
589 6 0 0 2 0 0 0 0 0
590 6 2 2 0 0 0 4 0 0
591 8 0 0 4 0 0 2 1 0
fn=runtime.gcWakeAllAssists
571 141 19 18 56 0 0 19 0 0
572 57 0 0 0 0 0 38 0 0
573 19 10 9 0 0 0 19 0 0
574 57 0 0 0 0 0 38 0 0
575 57 0 0 0 0 0 38 0 0
576 57 0 0 38 0 0 0 0 0
fn=runtime.gcmarknewobject
1520 1416996 161 30 0 0 0 472332 0 0
1521 944664 0 0 472332 45 1 0 0 0
1524 2361660 0 0 1416996 0 0 944664 0 0
1525 1889328 0 0 1416996 7 0 0 0 0
1526 944664 0 0 944664 26 1 0 0 0
1527 944664 0 0 944664 0 0 0 0 0
1528 1416996 0 0 944664 0 0 0 0 0
fn=runtime.greyobject
1396 287961798 2152 83 95987266 2 0 47993633 0 0
1398 143980899 0 0 47993633 0 0 0 0 0
1401 47993633 0 0 0 0 0 0 0 0
1403 95987266 0 0 47993633 26 13 0 0 0
1427 95987266 1486 48 47993633 53 16 0 0 0
1436 47993633 0 0 0 0 0 0 0 0
1437 51875820 15 9 34583880 0 0 0 0 0
1439 30701693 0 0 0 0 0 0 0 0
1442 61403386 0 0 0 0 0 0 0 0
1443 184210158 1222 41 30701693 5641827 51870 0 0 0
1444 279477 18 16 558954 0 0 0 0 0
1449 80138237 25 12 30701693 0 0 0 0 0
1450 47867368 0 0 35900526 11 0 11966842 0 0
1451 35900526 0 0 23933684 0 0 0 0 0
1461 112370955 13 12 37469702 2 2 0 0 0
1462 152716 0 0 0 0 0 114537 7785 386
fn=runtime.markroot
141 6642 24 18 2214 87 1 1107 0 0
145 2233 0 0 1107 0 0 19 0 0
146 4447 0 0 1107 0 0 19 0 0
147 4428 24 18 1107 0 0 0 0 0
148 4428 0 0 1107 628 27 0 0 0
149 3321 0 0 1107 0 0 0 0 0
152 4333 24 18 0 0 0 0 0 0
153 4428 0 0 1107 0 0 0 0 0
156 3321 24 18 0 0 0 0 0 0
157 3587 1 0 2290 809 1 57 0 0
158 266 19 18 114 41 18 114 0 0
161 3264 24 18 0 0 0 0 0 0
162 285 0 0 76 49 0 57 0 0
163 266 19 18 114 57 0 114 0 0
166 2138 21 18 0 0 0 0 0 0
167 160 19 18 45 19 16 13 0 0
168 26 0 0 13 13 13 0 0 0
169 143 13 13 13 0 0 78 0 0
172 2100 2 0 0 0 0 0 0 0
175 76 19 18 0 0 0 38 0 0
177 3093 0 0 0 0 0 0 0 0
179 3630 19 18 605 0 0 1815 322 4
184 1704 0 0 0 0 0 0 0 0
185 2556 19 18 1278 86 29 0 0 0
192 426 0 0 0 0 0 0 0 0
193 2551 0 0 421 0 0 0 0 0
194 244 0 0 122 0 0 122 0 0
199 5112 1 0 426 0 0 2982 0 0
fn=runtime.markroot.func1
199 4260 38 36 1704 0 0 1278 0 0
204 1704 0 0 1278 9 2 426 0 0
205 2997 23 18 424 0 0 426 0 0
206 426 0 0 0 0 0 0 0 0
208 407 28 18 0 0 0 0 0 0
218 3828 19 18 1278 0 0 2124 0 0
219 426 0 0 0 0 0 0 0 0
220 4 0 0 2 0 0 2 0 0
221 6 0 0 4 0 0 0 0 0
223 1272 0 0 848 0 0 0 0 0
226 1696 19 18 424 0 0 1272 0 0
227 848 3 0 424 0 0 424 0 0
228 2968 0 0 1272 0 0 1696 0 0
230 1696 0 0 848 0 0 0 0 0
fn=runtime.markrootBlock
241 228 38 36 76 0 0 38 0 0
250 114 0 0 38 0 0 0 0 0
251 114 0 0 38 0 0 0 0 0
254 76 0 0 38 0 0 0 0 0
255 38 0 0 0 0 0 0 0 0
257 76 19 18 0 0 0 0 0 0
258 76 0 0 0 0 0 0 0 0
262 342 0 0 38 0 0 228 0 0
263 114 0 0 76 10 0 0 0 0
fn=runtime.markrootFreeGStacks
269 114 38 36 38 0 0 19 0 0
271 57 0 0 0 0 0 38 0 0
272 38 0 0 19 19 3 19 0 0
273 19 0 0 0 0 0 19 0 0
274 57 0 0 0 0 0 38 0 0
275 19 19 18 0 0 0 0 0 0
276 57 19 18 38 0 0 0 0 0
fn=runtime.markrootSpans
299 3630 25 18 1210 0 0 605 0 0
313 1210 0 0 605 587 5 605 29 0
314 7865 19 18 1815 0 0 3025 21 0
323 930733 0 0 10465 213 0 4325 52 1
326 617262 0 0 308631 38046 36087 4325 0 0
330 1825836 0 0 0 0 0 0 0 0
334 2438773 57 54 612937 38268 36061 0 0 0
347 608612 0 0 304306 151635 142606 0 0 0
353 17300 0 0 0 0 0 12975 74 4
355 34896 19 18 13096 252 142 67 0 0
356 8758 0 0 4379 2541 1654 0 0 0
363 670 0 0 201 0 0 0 0 0
368 268 19 18 67 3 0 201 0 0
371 737 0 0 134 0 0 402 0 0
374 17300 0 0 4325 0 0 8650 0 0
fn=runtime.scanblock
1151 11154 19 18 3718 0 0 1859 0 0
1158 221315 42 36 9295 0 0 0 0 0
1160 218922 0 0 93456 1037 863 0 0 0
1161 165025 0 0 0 0 0 0 0 0
1162 23174 0 0 0 0 0 0 0 0
1163 62733 0 0 0 0 0 0 0 0
1165 1829230 0 0 61446 0 0 30723 38 0
1166 653027 21 18 0 0 0 30723 0 0
1168 520617 0 0 244947 38819 32599 61446 0 0
1169 428448 0 0 0 0 0 0 0 0
1170 276507 20 18 92169 0 0 122892 39 0
1171 43648 0 0 11904 0 0 27776 0 0
1172 85229 0 0 27381 38 0 0 0 0
1173 190 0 0 0 0 0 152 0 0
1177 341875 20 18 30723 0 0 0 0 0
1178 341875 0 0 30723 0 0 0 0 0
fn=runtime.scanframeworker
853 11270 19 18 3220 0 0 1610 0 0
858 9660 19 18 4830 0 0 0 0 0
859 6440 0 0 3220 0 0 0 0 0
901 20654 19 18 9660 0 0 10994 0 0
904 3220 0 0 0 0 0 0 0 0
905 1334 0 0 0 0 0 0 0 0
906 8004 19 18 2668 0 0 4002 0 0
910 3887 0 0 667 0 0 0 0 0
911 14525 19 18 4931 0 0 6396 0 0
915 4830 0 0 3220 0 0 0 0 0
919 18583 38 36 9686 85 74 1200 0 0
921 1200 0 0 1200 0 0 0 0 0
922 1200 0 0 0 0 0 0 0 0
925 600 0 0 0 0 0 0 0 0
926 1200 0 0 600 0 0 0 0 0
933 3600 0 0 600 0 0 2400 0 0
fn=runtime.scanobject
1189 141920989 1089 44 40548854 0 0 20274427 0 0
1195 100 21 20 0 0 0 100 0 0
1196 20274427 0 0 0 0 0 0 0 0
1197 20274427 0 0 20274427 1364371 279568 0 0 0
1198 40548854 1429 55 0 0 0 0 0 0
1202 60822297 0 0 0 0 0 0 0 0
1205 1943 0 0 0 0 0 0 0 0
1211 50 0 0 25 1 1 0 0 0
1222 4973 0 0 1995 0 0 1 0 0
1223 2876 20 20 0 0 0 0 0 0
1224 4 0 0 0 0 0 3 0 0
1232 2953 2 0 1969 0 0 0 0 0
1233 984 0 0 0 0 0 0 0 0
1239 1527148961 1335 77 97029364 0 0 246479927 709 13
1241 452411000 0 0 0 0 0 0 0 0
1243 242573414 0 0 194058732 4 3 0 0 0
1246 194058728 0 0 0 0 0 194058728 16 4
1251 904822000 84 37 0 0 0 0 0 0
1254 413500354 0 0 206750177 0 0 206750177 1623 42
1260 199114132 0 0 123814407 39211899 38462295 0 0 0
1264 344665662 0 0 0 0 0 0 0 0
1274 436632138 91 36 145544046 0 0 194058728 1313 26
1275 527886194 323 50 143968962 4 4 335927578 0 0
1279 89063511 131 50 89063511 403 17 0 0 0
1280 21093531 93 40 20274427 0 0 0 0 0
1281 60823281 0 0 40548854 82 6 0 0 0
fn=runtime.scanstack
685 2968 19 18 848 0 0 424 0 0
686 1272 19 18 424 0 0 0 0 0
691 1272 0 0 0 0 0 0 0 0
700 1270 38 36 0 0 0 0 0 0
704 1272 0 0 424 0 0 0 0 0
708 848 0 0 0 0 0 0 0 0
710 1260 28 18 0 0 0 840 19 8
713 4 0 0 0 0 0 4 0 0
716 2968 19 18 424 0 0 848 0 0
717 2116 0 0 1268 0 0 848 0 0
730 848 0 0 424 0 0 0 0 0
735 3392 19 18 424 0 0 2120 14 8
739 4240 19 18 0 0 0 3816 15 2
745 2544 20 18 424 0 0 1696 0 0
748 2968 19 18 1272 0 0 424 0 0
766 1272 23 18 424 0 0 0 0 0
776 424 0 0 0 0 0 0 0 0
778 2826 0 0 932 0 0 962 0 0
779 462 0 0 0 0 0 0 0 0
782 152 23 18 38 0 0 76 0 0
783 76 0 0 0 0 0 0 0 0
786 19 0 0 19 0 0 0 0 0
787 38 0 0 0 0 0 0 0 0
791 8 0 0 0 0 0 0 0 0
801 8 0 0 8 0 0 0 0 0
803 32 0 0 8 0 0 0 0 0
817 16 0 0 16 0 0 0 0 0
818 8 0 0 0 0 0 0 0 0
821 80 8 8 16 0 0 48 0 0
824 32 8 8 8 0 0 8 0 0
831 2352 19 18 784 0 0 0 0 0
833 720 23 18 360 0 0 360 0 0
843 360 0 0 0 0 0 360 0 0
844 720 0 0 0 0 0 720 0 0
846 3816 19 18 2120 0 0 0 0 0
fn=runtime.scanstack.func1
735 12880 31 28 6440 0 0 1610 0 0
736 8050 0 0 1610 0 0 6440 0 0
737 6440 0 0 3220 0 0 1610 0 0
fl=.//usr/lib/golang/src/runtime/mgcscavenge.go
fn=runtime.(*mheap).grow
98 228 70 57 152 138 48 0 0 0
fn=runtime.(*pageAlloc).resetScavengeAddr
408 42 7 7 14 0 0 7 0 0
409 21 7 7 14 3 2 0 0 0
410 14 0 0 7 0 0 0 0 0
416 14 0 0 14 0 0 0 0 0
417 28 0 0 7 4 2 7 0 0
418 21 7 7 14 0 0 0 0 0
fn=runtime.(*pageAlloc).scavenge
371 7 1 1 2 0 0 1 0 0
373 5 0 0 1 0 0 1 0 0
374 8 1 1 3 0 0 4 0 0
375 2 0 0 0 0 0 0 0 0
381 5 0 0 3 0 0 1 0 0
fn=runtime.(*pageAlloc).scavengeOne
435 394 14 9 165 4 0 31 0 0
442 93 0 0 31 0 0 0 0 0
443 31 0 0 0 0 0 0 0 0
444 31 0 0 0 0 0 0 0 0
452 62 0 0 31 0 0 0 0 0
453 31 0 0 0 0 0 0 0 0
459 34 0 0 0 0 0 0 0 0
460 192 13 8 93 13 12 66 1 1
464 34 0 0 0 0 0 0 0 0
465 165 1 0 66 1 1 66 0 0
469 31 0 0 0 0 0 0 0 0
470 93 14 9 62 8 7 0 0 0
471 62 0 0 31 0 0 0 0 0
472 1 0 0 0 0 0 0 0 0
473 4 1 1 2 0 0 1 0 0
481 570 26 16 240 19 16 90 0 0
487 327 12 7 150 0 0 177 0 0
490 60 0 0 0 0 0 0 0 0
491 189 12 7 54 0 0 135 0 0
492 27 0 0 0 0 0 0 0 0
493 162 0 0 81 1 0 27 0 0
501 18 2 2 3 0 0 9 0 0
520 3 0 0 0 0 0 0 0 0
522 27 4 4 12 0 0 12 0 0
523 9 2 2 0 0 0 0 0 0
526 3 0 0 0 0 0 0 0 0
531 6 0 0 0 0 0 0 0 0
532 225 0 0 18 0 0 6 0 0
540 699 14 9 210 8 6 31 1 1
550 30 0 0 6 0 0 0 0 0
551 72 2 2 6 0 0 18 0 0
552 3 0 0 0 0 0 0 0 0
556 3 0 0 0 0 0 0 0 0
559 3 0 0 0 0 0 0 0 0
560 92 2 2 12 0 0 49 0 0
561 6 0 0 0 0 0 0 0 0
564 21 2 2 6 0 0 15 0 0
565 3 0 0 0 0 0 0 0 0
566 18 0 0 9 0 0 3 0 0
583 6 0 0 6 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne.func3
501 24 3 3 9 0 0 6 0 0
502 21 0 0 9 0 0 9 0 0
503 6 0 0 0 0 0 0 0 0
506 27 2 2 15 0 0 0 0 0
509 18 0 0 9 0 0 0 0 0
512 9 0 0 0 0 0 6 0 0
fn=runtime.(*pageAlloc).scavengeRangeLocked
596 180 26 16 60 0 0 30 0 0
597 240 0 0 60 0 0 120 0 0
600 150 0 0 30 0 0 0 0 0
603 120 13 8 30 0 0 30 0 0
607 60 0 0 30 0 0 0 0 0
610 180 13 8 30 0 0 120 0 0
614 150 0 0 30 0 0 90 0 0
615 90 0 0 60 1 0 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
728 198 13 8 66 0 0 33 0 0
729 198 11 8 33 0 0 0 0 0
732 66 0 0 0 0 0 0 0 0
741 99 0 0 33 0 0 0 0 0
744 33 0 0 0 0 0 0 0 0
747 66 0 0 33 0 0 0 0 0
749 578 12 8 213 0 0 83 0 0
751 900 13 8 240 26 19 240 1 1
752 80 0 0 0 0 0 0 0 0
756 33 0 0 0 0 0 0 0 0
758 15 1 1 6 0 0 6 0 0
764 393 13 8 150 0 0 90 0 0
765 60 0 0 0 0 0 0 0 0
766 150 0 0 30 0 0 30 0 0
767 270 13 8 0 0 0 0 0 0
770 30 0 0 0 0 0 0 0 0
789 173 13 8 80 0 0 33 0 0
792 150 0 0 30 0 0 0 0 0
799 120 0 0 60 0 0 0 0 0
806 30 0 0 0 0 0 0 0 0
807 30 0 0 0 0 0 0 0 0
811 90 0 0 0 0 0 0 0 0
825 180 0 0 60 0 0 60 0 0
fn=runtime.(*pallocData).hasScavengeCandidate
681 36 4 4 12 0 0 6 0 0
682 36 0 0 6 0 0 0 0 0
685 24 0 0 0 0 0 0 0 0
691 195 2 2 36 0 0 39 0 0
698 387 0 0 192 6 3 117 0 0
701 39 0 0 0 0 0 0 0 0
702 12 0 0 6 0 0 3 0 0
705 12 2 2 6 0 0 3 0 0
fn=runtime.bgscavenge
225 6 2 2 2 0 0 1 0 0
226 4 0 0 2 0 0 1 0 0
228 3 0 0 0 0 0 2 1 1
229 1 1 1 0 0 0 1 0 0
231 7 0 0 2 0 0 3 0 0
232 2 0 0 0 0 0 1 0 0
236 5 1 1 1 0 0 3 0 0
237 1 0 0 0 0 0 0 0 0
257 42 0 0 0 0 0 42 0 0
260 84 0 0 0 0 0 42 0 0
264 504 24 19 0 0 0 294 25 18
282 126 0 0 42 0 0 0 0 0
283 36 12 11 0 0 0 24 0 0
284 12 0 0 0 0 0 12 0 0
285 12 0 0 0 0 0 0 0 0
286 12 0 0 0 0 0 0 0 0
289 90 0 0 30 0 0 0 0 0
307 150 13 8 30 0 0 0 0 0
308 30 2 1 30 12 12 0 0 0
317 60 13 8 30 0 0 30 0 0
323 90 0 0 30 0 0 0 0 0
324 1 0 0 0 0 0 1 0 0
333 144 23 18 72 17 12 42 1 0
334 90 2 1 30 0 0 0 0 0
337 89 12 7 29 0 0 60 0 0
340 145 0 0 29 0 0 0 0 0
347 87 0 0 0 0 0 0 0 0
353 174 12 7 58 12 10 0 0 0
fn=runtime.bgscavenge.func1
232 144 7 7 48 0 0 24 0 0
233 24 0 0 0 0 0 24 1 1
234 72 7 7 48 1 1 0 0 0
fn=runtime.bgscavenge.func2
98 126 0 0 84 43 14 0 0 0
264 420 44 32 168 0 0 126 4 3
265 126 0 0 0 0 0 84 0 0
268 42 0 0 42 8 6 0 0 0
269 84 0 0 0 0 0 0 0 0
270 36 0 0 0 0 0 24 0 0
271 36 12 11 24 0 0 0 0 0
273 90 10 8 0 0 0 60 0 0
276 30 0 0 0 0 0 0 0 0
277 270 13 8 90 7 6 150 5 0
278 60 0 0 60 1 1 0 0 0
279 180 12 7 60 0 0 30 0 0
280 90 0 0 60 0 0 0 0 0
fn=runtime.fillAligned
625 894 13 8 298 0 0 149 0 0
646 298 0 0 149 0 0 0 0 0
647 298 13 8 0 0 0 0 0 0
648 745 13 8 447 0 0 149 0 0
651 149 0 0 0 0 0 0 0 0
fn=runtime.gcPaceScavenger
98 57 0 0 38 15 8 0 0 0
111 120 20 18 40 0 0 20 0 0
116 79 20 18 20 0 0 0 0 0
117 1 1 1 0 0 0 1 0 0
118 3 0 0 2 0 0 0 0 0
121 171 0 0 19 0 0 0 0 0
122 190 19 18 38 0 0 0 0 0
127 76 19 18 0 0 0 0 0 0
130 114 0 0 19 14 4 0 0 0
143 19 0 0 0 0 0 0 0 0
148 59 7 7 7 0 0 0 0 0
149 12 0 0 0 0 0 12 0 0
150 36 0 0 24 0 0 0 0 0
152 7 0 0 0 0 0 7 0 0
153 21 0 0 0 0 0 14 0 0
154 21 0 0 14 0 0 0 0 0
fn=runtime.scavengeSleep
201 189 15 10 66 0 0 30 2 2
202 90 0 0 0 0 0 60 3 3
209 30 0 0 0 0 0 0 0 0
210 90 0 0 60 0 0 0 0 0
213 30 0 0 0 0 0 30 0 0
214 30 0 0 0 0 0 0 0 0
217 174 0 0 87 12 7 29 12 7
fn=runtime.wakeScavenger
168 264 26 20 88 0 0 44 0 0
169 132 0 0 0 0 0 88 2 2
170 88 0 0 44 0 0 0 0 0
177 43 24 19 43 0 0 0 0 0
185 43 0 0 0 0 0 43 0 0
186 172 0 0 0 0 0 86 0 0
190 132 1 1 0 0 0 88 0 0
191 132 0 0 88 0 0 0 0 0
fn=runtime.wakeScavenger.func1
186 258 24 20 86 0 0 43 0 0
187 215 14 13 43 0 0 172 4 3
188 129 0 0 86 1 1 0 0 0
fl=.//usr/lib/golang/src/runtime/mgcstack.go
fn=runtime.(*stackScanState).addObject
165 600 0 0 0 0 0 600 0 0
276 3600 19 18 1200 0 0 600 0 0
277 1200 0 0 1200 0 0 0 0 0
278 1200 0 0 0 0 0 0 0 0
280 720 23 18 360 0 0 360 0 0
281 360 0 0 0 0 0 360 0 0
282 720 0 0 360 0 0 360 0 0
283 720 0 0 0 0 0 360 0 0
285 5280 19 18 1560 0 0 0 0 0
288 1200 19 18 0 0 0 0 0 0
296 2400 0 0 600 0 0 0 0 0
297 1200 0 0 0 0 0 600 0 0
298 2160 0 0 960 0 0 600 117 55
299 1800 0 0 1200 183 176 600 0 0
300 600 0 0 0 0 0 0 0 0
302 600 28 18 600 0 0 0 0 0
303 1800 0 0 1200 0 0 0 0 0
fn=runtime.(*stackScanState).findObject
338 114 19 18 114 0 0 0 0 0
339 38 0 0 38 0 0 0 0 0
341 236 0 0 0 0 0 0 0 0
342 19 0 0 0 0 0 19 0 0
344 297 23 3 99 0 0 0 0 0
345 5 0 0 5 0 0 0 0 0
346 5 0 0 0 0 0 0 0 0
348 376 0 0 94 0 0 0 0 0
349 75 0 0 75 0 0 0 0 0
350 75 0 0 0 0 0 0 0 0
352 38 0 0 19 0 0 19 0 0
fn=runtime.(*stackScanState).getPtr
243 2772 38 36 924 0 0 462 0 0
244 9436 19 18 1348 0 0 1848 0 0
245 886 0 0 886 0 0 0 0 0
246 1772 0 0 0 0 0 0 0 0
250 130 0 0 65 0 0 0 0 0
251 81 0 0 27 0 0 0 0 0
256 27 0 0 0 0 0 27 0 0
257 27 0 0 27 0 0 0 0 0
258 27 0 0 0 0 0 27 0 0
259 54 0 0 0 0 0 0 0 0
264 114 20 18 38 0 0 38 0 0
265 342 0 0 114 0 0 76 0 0
268 1272 20 18 424 0 0 0 0 0
269 54 19 18 0 0 0 54 0 0
270 81 0 0 27 0 0 27 0 0
272 2120 0 0 848 0 0 848 0 0
fn=runtime.(*stackScanState).putPtr
208 304 19 18 114 0 0 38 0 0
209 228 19 18 152 0 0 0 0 0
212 38 0 0 0 0 0 0 0 0
213 38 0 0 0 0 0 0 0 0
216 76 0 0 38 0 0 38 0 0
217 76 0 0 0 0 0 0 0 0
219 54 19 18 27 0 0 27 0 0
220 54 0 0 0 0 0 27 0 0
222 81 0 0 27 0 0 27 0 0
223 22 0 0 11 0 0 0 0 0
234 179 20 18 65 0 0 38 0 0
235 38 0 0 38 0 0 0 0 0
236 114 0 0 76 0 0 0 0 0
fn=runtime.binarySearchTree
317 9744 48 36 3248 0 0 1624 0 0
318 4872 0 0 1624 0 0 0 0 0
319 8192 19 18 4096 0 0 3072 0 0
322 9600 20 18 3000 0 0 4200 0 0
323 5400 20 18 0 0 0 1200 0 0
324 600 0 0 0 0 0 0 0 0
325 1800 0 0 0 0 0 0 0 0
329 7200 23 18 3000 0 0 2400 0 0
330 2400 0 0 1800 0 0 600 0 0
331 600 0 0 0 0 0 600 0 0
332 4200 0 0 1800 0 0 1800 0 0
fn=runtime.scanstack
165 16 0 0 0 0 0 8 0 0
309 3392 23 18 1272 0 0 2120 0 0
fl=.//usr/lib/golang/src/runtime/mgcsweep.go
fn=runtime.(*mspan).ensureSwept
172 4740 799 176 1580 0 0 790 0 0
176 790 0 0 790 0 0 0 0 0
177 2370 0 0 1580 0 0 0 0 0
181 790 0 0 790 183 4 0 0 0
182 1580 0 0 1580 6 0 0 0 0
183 3866 684 109 0 0 0 0 0 0
184 2370 129 80 1580 0 0 0 0 0
fn=runtime.(*mspan).sweep
206 2156182 76 50 616052 12 0 308026 4 3
209 308026 0 0 308026 0 0 0 0 0
210 924306 0 0 616166 17 0 0 0 0
213 616052 170 34 308026 5 1 308026 94 34
214 2464208 0 0 924078 3214 1400 308026 0 0
219 616052 0 0 308026 17 3 0 0 0
223 924078 1282 31 924078 3117 1909 0 0 0
225 616052 0 0 308026 0 0 308026 6 0
226 616052 0 0 308026 36997 22043 308026 58 8
229 932968 0 0 616052 36 11 308026 130 37
248 308026 0 0 0 0 0 0 0 0
249 308026 0 0 308026 89043 47345 0 0 0
250 938464 1286 30 0 0 0 0 0 0
252 22225 0 0 4445 2871 1759 0 0 0
253 8890 0 0 0 0 0 0 0 0
254 4445 0 0 0 0 0 0 0 0
255 4445 0 0 0 0 0 0 0 0
259 700 0 0 0 0 0 350 0 0
260 3842 27 17 699 44 24 0 0 0
261 700 0 0 350 0 0 0 0 0
263 2 0 0 0 0 0 0 0 0
269 3503 27 17 1051 0 0 0 0 0
272 350 0 0 0 0 0 0 0 0
273 2450 24 17 700 0 0 350 0 0
276 700 0 0 350 0 0 350 0 0
277 6195 0 0 350 0 0 700 0 0
278 2100 0 0 350 0 0 1400 4 0
289 8190 0 0 4095 303 184 0 0 0
293 1540130 1426 90 616052 79 9 0 0 0
320 924078 171 25 308026 0 0 616052 95 36
321 1591822 0 0 25870 0 0 0 0 0
322 144 1 1 48 0 0 48 0 0
325 1848060 92 28 616004 0 0 308026 0 0
326 616052 0 0 0 0 0 0 0 0
331 308026 0 0 0 0 0 308026 0 0
332 2541674 66 29 975722 3 1 1232104 0 0
333 308026 0 0 0 0 0 308026 0 0
334 616052 0 0 308026 0 0 0 0 0
340 616052 101 30 308026 0 0 308026 0 0
341 1848156 0 0 924078 67 8 924078 67 0
344 924078 106 30 0 0 0 924078 0 0
351 2464064 1 1 616004 64 11 308026 0 0
354 1411370 0 0 564758 3 0 0 0 0
361 846962 23 17 846962 0 0 0 0 0
364 1232104 44 8 308026 0 0 0 0 0
365 237541 180 24 52342 655 29 25822 0 0
366 361508 83 10 103288 2 0 129110 0 0
368 564360 198 16 0 0 0 0 0 0
385 96 13 11 48 0 0 0 0 0
389 282396 114 23 0 0 0 144 0 0
391 96 0 0 96 19 7 0 0 0
392 144 0 0 96 3 0 0 0 0
393 48 0 0 0 0 0 0 0 0
395 908177 1101 32 0 0 0 292125 0 0
398 3239197 0 0 610072 0 0 876375 0 0
400 1524229 0 0 908177 40 3 308026 1 0
fn=runtime.bgsweep
64 6 1 1 2 0 0 1 0 0
65 4 0 0 2 0 0 1 1 1
67 3 1 1 0 0 0 2 1 1
68 1 0 0 0 0 0 1 0 0
69 5 0 0 1 0 0 3 0 0
70 1 0 0 0 0 0 0 0 0
73 171896 66 61 57286 0 0 57286 11 4
74 57267 0 0 57267 26 7 0 0 0
75 57267 0 0 0 0 0 0 0 0
77 92 0 0 23 0 0 46 0 0
78 4 0 0 0 0 0 0 0 0
80 57 0 0 0 0 0 38 0 0
81 19 0 0 0 0 0 0 0 0
88 19 6 6 0 0 0 19 0 0
89 19 0 0 0 0 0 0 0 0
167 19 0 0 19 2 1 0 0 0
fn=runtime.deductSweepCredit
420 296154 2649 214 98718 0 0 49359 5 3
421 246795 0 0 49359 14236 215 0 0 0
423 13653 2204 35 9102 0 0 0 0 0
426 89616 0 0 44808 10668 162 0 0 0
431 224040 3379 151 134424 0 0 44808 404 13
434 180267 0 0 90651 12830 131 0 0 0
435 404307 32914 126 45843 0 0 44808 0 0
436 231285 0 0 47913 0 0 0 0 0
437 3135 0 0 1045 0 0 1045 0 0
438 20 0 0 0 0 0 10 0 0
441 4140 0 0 2070 0 0 0 0 0
447 224040 29109 100 134424 0 0 0 0 0
fn=runtime.finishsweep_m
51 114 38 36 38 0 0 19 0 0
57 76 0 0 19 0 0 19 0 0
61 19 0 0 0 0 0 19 0 0
62 57 0 0 38 0 0 0 0 0
fn=runtime.gcSetTriggerRatio
167 40 20 18 40 0 0 0 0 0
fn=runtime.sweepone
95 1678590 114 76 559530 0 0 279765 4 2
96 559473 0 0 279765 0 0 279708 9 0
97 559473 0 0 279765 61 8 279708 30 14
101 559530 0 0 559530 0 0 0 0 0
102 839295 0 0 279765 10 1 0 0 0
103 114 64 43 114 0 0 0 0 0
104 228 0 0 114 0 0 57 0 0
106 1118813 24 21 559416 0 0 0 0 0
110 279708 0 0 279708 0 0 0 0 0
111 279708 0 0 0 0 0 0 0 0
112 3080412 0 0 0 0 0 0 0 0
113 952419 17 15 0 0 0 0 0 0
114 57 0 0 38 1 0 0 0 0
115 19 0 0 0 0 0 0 0 0
117 616052 0 0 0 0 0 0 0 0
121 102 0 0 17 0 0 0 0 0
127 2687121 24 21 587698 38710 28747 0 0 0
134 279727 24 21 0 0 0 0 0 0
135 559397 22 20 279689 202729 137966 279689 0 0
136 1398445 0 0 279689 0 0 839067 25 13
140 63124 0 0 47343 4 0 0 0 0
151 3604585 5 5 839124 29 3 0 0 0
152 38 0 0 19 2 0 0 0 0
153 279689 0 0 279689 0 0 0 0 0
156 839105 0 0 839105 58 8 0 0 0
157 1398521 24 21 559416 0 0 279708 0 0
fl=.//usr/lib/golang/src/runtime/mgcsweepbuf.go
fn=runtime.(*gcSweepBuf).block
154 3630 19 18 1210 0 0 605 17 1
157 6050 19 18 1815 270 5 0 0 0
162 1210 0 0 1210 0 0 0 0 0
163 605 0 0 0 0 0 0 0 0
164 605 0 0 605 582 68 0 0 0
167 1210 0 0 605 320 0 0 0 0
168 1229 0 0 0 0 0 0 0 0
170 1210 0 0 0 0 0 0 0 0
171 1172 0 0 0 0 0 0 0 0
173 38 0 0 0 0 0 0 0 0
175 3649 0 0 1210 0 0 1815 0 0
fn=runtime.(*gcSweepBuf).push
56 2039406 3506 234 679802 1 0 339901 0 0
58 1359604 0 0 1019703 14643 212 339901 5804 64
59 1699505 0 0 339901 0 0 339901 0 0
62 339901 0 0 339901 32 4 0 0 0
64 339901 0 0 0 0 0 0 0 0
65 679802 30894 132 0 0 0 0 0 0
66 339748 31256 137 339748 0 0 0 0 0
67 339748 0 0 0 0 0 0 0 0
68 679496 0 0 339748 20429 255 0 0 0
72 306 0 0 0 0 0 306 101 6
75 459 0 0 306 0 0 153 0 0
76 459 0 0 153 0 0 0 0 0
81 459 106 77 153 0 0 0 0 0
83 2 2 1 0 0 0 0 0 0
84 4 0 0 0 0 0 0 0 0
87 22 2 1 4 2 1 10 0 0
88 6 0 0 4 0 0 0 0 0
94 2 0 0 4 0 0 0 0 0
95 6 0 0 2 0 0 2 0 0
106 1224 0 0 306 151 87 765 0 0
107 306 0 0 153 0 0 0 0 0
109 153 0 0 306 47 20 0 0 0
110 459 0 0 459 0 0 0 0 0
111 306 0 0 0 0 0 306 0 0
116 1699505 40876 154 1019856 60745 42623 0 0 0
117 1019703 40514 149 679802 0 0 0 0 0
fn=runtime.gcMarkRootPrepare
147 114 19 18 19 15 4 0 0 0
fn=runtime.sweepone
123 1848270 24 21 616090 16 0 0 0 0
124 616090 0 0 0 0 0 0 0 0
125 57 0 0 38 0 0 0 0 0
131 924078 23 19 0 0 0 0 0 0
132 308026 0 0 308026 0 0 0 0 0
133 308026 0 0 308026 147 79 0 0 0
134 616052 0 0 308026 38560 38332 0 0 0
136 308026 0 0 0 0 0 308026 0 0
fl=.//usr/lib/golang/src/runtime/mgcwork.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
379 143 4 4 60 1 1 0 0 0
fn=runtime.(*gcWork).balance
354 5214 82 58 1738 23 1 869 0 0
355 3476 0 0 1738 0 0 0 0 0
356 33 6 6 22 0 0 0 0 0
358 3432 0 0 1716 99 8 0 0 0
359 2 0 0 0 0 0 0 0 0
360 2 1 0 0 0 0 2 0 0
361 2 0 0 1 0 0 1 0 0
362 4 0 0 2 0 0 2 0 0
363 2571 45 23 857 88 1 0 0 0
364 720 0 0 0 0 0 0 0 0
365 1800 0 0 720 0 0 1080 0 0
366 360 0 0 0 0 0 360 0 0
368 1491 0 0 994 0 0 0 0 0
371 2165 46 29 1083 117 9 0 0 0
372 1444 1 0 0 0 0 722 0 0
fn=runtime.(*gcWork).dispose
318 6048 34 19 2016 0 0 1008 0 0
319 4032 0 0 2016 627 134 0 0 0
320 80 0 0 40 36 7 0 0 0
321 66 6 2 0 0 0 66 0 0
323 14 4 1 0 0 0 14 0 0
324 21 0 0 7 0 0 7 0 0
326 80 1 0 40 0 0 40 0 0
328 40 0 0 40 0 0 0 0 0
329 80 0 0 40 37 9 0 0 0
330 76 0 0 0 0 0 76 0 0
332 4 0 0 0 0 0 4 0 0
333 6 0 0 2 0 0 2 0 0
335 80 0 0 40 0 0 40 0 0
337 3024 26 17 1008 0 0 0 0 0
342 88 7 2 88 2 1 0 0 0
343 44 0 0 0 0 0 44 0 0
345 3024 22 17 1008 0 0 0 0 0
346 32 0 0 32 0 0 0 0 0
347 3040 0 0 2016 0 0 16 0 0
fn=runtime.(*gcWork).init
116 240 32 29 80 0 0 40 0 0
117 160 0 0 80 0 0 80 1 0
118 80 0 0 40 0 0 40 0 0
119 80 0 0 0 0 0 0 0 0
120 75 10 10 25 0 0 25 0 0
122 80 3 2 40 0 0 40 0 0
123 120 0 0 80 0 0 0 0 0
fn=runtime.(*gcWork).put
176 229080 566 51 76360 0 0 38180 3445 141
180 76360 0 0 76360 0 0 0 0 0
181 76360 0 0 0 0 0 0 0 0
182 28 14 13 0 0 0 28 0 0
183 56 0 0 28 0 0 0 0 0
185 76332 0 0 38166 0 0 0 0 0
186 114498 0 0 38166 0 0 76332 0 0
188 186726 933 88 49520 8254 751 11354 0 0
189 22708 0 0 0 0 0 22708 0 0
190 22708 0 0 11354 0 0 11354 0 0
191 22708 0 0 11354 0 0 11354 0 0
192 22708 0 0 11354 0 0 11354 0 0
193 11354 0 0 0 0 0 0 0 0
197 190900 14 13 76360 0 0 38180 0 0
198 38180 0 0 38180 0 0 0 0 0
204 213608 0 0 87714 5098 143 0 0 0
205 45416 0 0 0 0 0 22708 0 0
fn=runtime.(*gcWork).putBatch
231 81000 1439 56 27000 1190 126 13500 1 0
232 40500 0 0 13500 0 0 0 0 0
233 17598 1186 29 11732 0 0 0 0 0
239 15268 0 0 15268 896 32 0 0 0
240 45804 1357 36 15268 0 0 0 0 0
241 8 4 4 0 0 0 8 0 0
242 12 0 0 8 0 0 0 0 0
245 97604 102 37 4 0 0 41166 0 0
246 87498 1222 29 20018 7229 22 13722 0 0
247 12592 0 0 0 0 0 12592 5 1
248 26314 1450 40 20018 0 0 6296 0 0
249 37776 0 0 18888 4 4 18888 0 0
253 287032 0 0 12592 2 2 68610 1751 25
254 41166 0 0 41166 0 0 0 0 0
255 190978 0 0 47462 0 0 0 0 0
258 77712 0 0 35039 170 3 13722 0 0
259 24196 468 25 0 0 0 12098 0 0
fn=runtime.(*gcWork).tryGet
269 271056 1535 53 90352 0 0 45176 0 0
270 90352 0 0 90352 0 0 0 0 0
271 90352 1234 41 0 0 0 0 0 0
272 44 18 11 0 0 0 44 1 0
273 66 0 0 44 0 0 0 0 0
276 90352 0 0 45176 0 0 0 0 0
277 199219 968 28 90344 0 0 108875 0 0
279 90344 0 0 45172 7429 889 0 0 0
281 55067 0 0 18531 0 0 36536 7 1
282 37062 0 0 0 0 0 0 0 0
283 2104 21 14 1052 0 0 526 0 0
285 54015 0 0 18005 0 0 36010 0 0
286 72020 0 0 36010 0 0 18005 0 0
290 133950 0 0 44650 0 0 44650 0 0
291 312550 33 11 133950 18158 8150 44650 0 0
fn=runtime.(*workbuf).checkempty
409 253560 120 49 84520 0 0 42260 503 15
410 253560 38 5 169040 0 0 0 0 0
fn=runtime.(*workbuf).checknonempty
403 216240 2693 82 72080 0 0 36040 343 6
404 216240 0 0 144160 0 0 0 0 0
fn=runtime.findrunnable
379 205 0 0 80 14 0 0 0 0
fn=runtime.freeSomeWbufs
527 138 32 26 46 2 0 23 0 0
529 69 0 0 0 0 0 46 10 8
530 69 0 0 23 2 0 0 0 0
534 207 19 18 23 0 0 138 0 0
545 23 0 0 0 0 0 0 0 0
546 69 0 0 0 0 0 46 0 0
547 92 0 0 46 0 0 23 0 0
fn=runtime.freeSomeWbufs.func1
534 1011 37 25 450 0 0 46 1 1
535 92 19 18 69 0 0 23 6 1
536 4317 19 18 1162 2 0 381 0 0
537 781 0 0 400 0 0 381 0 0
538 869 0 0 46 0 0 0 0 0
541 1524 0 0 0 0 0 1143 0 0
542 2667 0 0 381 0 0 1524 0 0
fn=runtime.gcDrain
299 34069569 0 0 34069569 0 0 0 0 0
300 34067772 0 0 0 0 0 0 0 0
303 51134481 0 0 17033871 338 6 0 0 0
307 34002006 3 3 0 0 0 17001003 0 0
308 51003009 0 0 17001003 219186 142920 0 0 0
fn=runtime.gcDrainN
299 3241289 0 0 3241289 0 0 0 0 0
300 6481470 0 0 0 0 0 0 0 0
303 9734205 0 0 3240728 1124 8 0 0 0
307 6457414 473 22 0 0 0 3228707 0 0
308 9686121 0 0 3228707 327898 102282 0 0 0
fn=runtime.gcMark
379 912 19 18 304 208 0 0 0 0
fn=runtime.gcMarkDone.func2
379 912 0 0 304 92 0 0 0 0
fn=runtime.getempty
418 110778 522 80 36926 0 0 18463 0 0
420 37307 0 0 18463 20 11 0 0 0
421 90410 688 59 18082 0 0 54246 5128 170
422 36164 0 0 0 0 0 0 0 0
423 54246 0 0 0 0 0 36164 0 0
426 55389 0 0 18082 0 0 381 1 0
428 381 0 0 0 0 0 381 0 0
429 762 25 18 381 381 32 0 0 0
438 762 0 0 381 0 0 0 0 0
439 3429 19 18 0 0 0 1905 8 0
442 762 26 18 381 0 0 0 0 0
446 1143 0 0 0 0 0 762 0 0
447 1905 0 0 381 0 0 1143 0 0
448 1524 27 18 0 0 0 762 0 0
452 37719 0 0 6096 0 0 12192 0 0
453 19050 0 0 6096 0 0 6096 0 0
454 6096 0 0 0 0 0 6096 6096 6080
455 12192 0 0 0 0 0 12192 0 0
456 18288 0 0 6096 0 0 0 0 0
457 381 0 0 0 0 0 0 0 0
459 22860 0 0 5715 0 0 11430 0 0
463 86425 92 25 43403 0 0 24559 2 2
fn=runtime.getempty.func1
439 3048 49 37 1143 0 0 762 1 0
440 3429 0 0 762 0 0 1905 11 2
441 1143 22 15 762 0 0 0 0 0
fn=runtime.greyobject
215 37469702 1080 43 37469702 22 2 0 0 0
216 37469702 0 0 0 0 0 0 0 0
218 56242676 0 0 18734837 51 7 0 0 0
222 56128195 138 26 0 0 0 18696672 417216 89541
223 37393344 0 0 18696672 0 0 0 0 0
fn=runtime.handoff
496 2160 30 11 720 0 0 360 0 0
498 1080 0 0 360 0 0 720 4 0
499 2160 52 30 720 0 0 0 0 0
500 720 0 0 0 0 0 360 0 0
501 360 0 0 0 0 0 360 0 0
502 3960 52 30 360 0 0 1440 0 0
505 1080 0 0 360 0 0 720 0 0
506 1800 0 0 1080 0 0 360 0 0
fn=runtime.handoffp
379 40 0 0 15 10 6 0 0 0
fn=runtime.prepareFreeWorkbufs
512 114 19 18 38 0 0 19 0 0
513 57 19 18 0 0 0 38 0 0
514 38 0 0 19 19 1 0 0 0
520 19 0 0 0 0 0 19 0 0
521 95 0 0 0 0 0 57 0 0
522 57 19 17 0 0 0 38 0 0
523 57 0 0 38 0 0 0 0 0
fn=runtime.putempty
469 145068 970 50 48356 0 0 24178 0 0
470 72534 1113 52 24178 0 0 48356 0 0
471 145068 0 0 48356 0 0 72534 0 0
472 72534 0 0 48356 0 0 0 0 0
fn=runtime.putfull
478 108120 747 52 36040 0 0 18020 31 1
479 54060 0 0 18020 0 0 36040 5064 157
480 108120 520 11 36040 0 0 54060 0 0
481 54060 0 0 36040 0 0 0 0 0
fn=runtime.scanobject
215 960 0 0 960 0 0 0 0 0
216 1918 0 0 0 0 0 0 0 0
218 2878 0 0 959 0 0 0 0 0
222 1916 0 0 0 0 0 958 93 49
223 1916 0 0 958 0 0 0 0 0
fn=runtime.trygetfull
486 111426 1381 41 37142 0 0 18571 0 0
487 92304 1281 53 18571 0 0 55162 68 0
488 37142 0 0 0 0 0 0 0 0
489 36040 0 0 0 0 0 36040 0 0
490 90100 0 0 54060 0 0 18020 0 0
492 2204 21 19 1102 0 0 551 0 0
fl=.//usr/lib/golang/src/runtime/mheap.go
fn=runtime.(*mSpanList).insert
1503 133992 136 72 44664 0 0 22332 0 0
1504 200988 0 0 89328 7 1 22332 0 0
1508 66996 0 0 44664 0 0 22332 0 0
1509 66996 66 36 22332 0 0 0 0 0
1512 22131 0 0 0 0 0 22131 305 28
1515 402 0 0 0 0 0 201 0 0
1517 22332 0 0 0 0 0 22332 0 0
1518 22332 0 0 0 0 0 22332 0 0
1519 66996 0 0 44664 0 0 0 0 0
fn=runtime.(*mSpanList).insertBack
1521 436044 2092 66 145348 0 0 72674 0 0
1522 654066 536 73 290696 7 0 72674 0 0
1526 218022 0 0 145348 80 2 72674 0 0
1527 218022 0 0 72674 0 0 0 0 0
1529 72494 0 0 0 0 0 72494 7417 225
1532 360 32 26 0 0 0 180 0 0
1534 72674 0 0 0 0 0 72674 0 0
1535 72674 0 0 0 0 0 72674 0 0
1536 218022 0 0 145348 0 0 0 0 0
fn=runtime.(*mSpanList).remove
1478 378756 1094 121 126252 0 0 63126 2 0
1479 315630 0 0 189378 4274 2149 0 0 0
1484 126252 0 0 63126 108 26 0 0 0
1485 80496 0 0 40248 3389 1610 40248 0 0
1487 91512 14 6 45756 464 354 22878 19740 13911
1489 126252 0 0 63126 0 0 0 0 0
1490 1096 0 0 548 0 0 548 0 0
1492 250312 769 42 125156 0 0 62578 29473 16102
1495 126252 0 0 0 0 0 63126 0 0
1496 63126 0 0 0 0 0 63126 0 0
1497 189378 34 17 126252 0 0 0 0 0
fn=runtime.(*mSpanList).takeAll
1500 76 0 0 38 0 0 0 0 0
1541 38 19 18 19 0 0 0 0 0
1546 1219 19 18 400 102 94 0 0 0
1547 381 0 0 0 0 0 381 381 372
1551 19 0 0 0 0 0 0 0 0
1552 95 19 11 38 0 0 38 0 0
1560 38 0 0 0 0 0 19 0 0
1561 19 0 0 19 0 0 0 0 0
fn=runtime.(*mcentral).cacheSpan
515 49310 0 0 0 0 0 0 0 0
fn=runtime.(*mcentral).freeSpan
1469 1254 0 0 1254 0 0 0 0 0
fn=runtime.(*mcentral).grow
445 47727 0 0 47727 0 0 0 0 0
515 95454 0 0 0 0 0 0 0 0
535 143181 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).alloc
445 16820 0 0 16820 0 0 0 0 0
860 382208 19430 138 143328 94 26 47776 2 2
864 47776 0 0 0 0 0 47776 643 13
865 812192 52515 275 143328 0 0 477760 243 15
874 143328 0 0 47776 0 0 0 0 0
875 143328 0 0 47776 1 0 0 0 0
876 100920 831 52 16820 0 0 50460 0 0
878 95552 0 0 47776 0 0 47776 6 3
880 238880 0 0 143328 15 2 47776 26 16
fn=runtime.(*mheap).alloc.func1
865 544304 80981 335 286656 0 0 114320 4848 35
868 143328 0 0 47776 1 0 0 0 0
869 25024 4419 31 0 0 0 18768 2360 12
871 496528 87 50 114320 51 0 334432 17145 153
872 143328 0 0 95552 44 0 0 0 0
fn=runtime.(*mheap).allocMSpanLocked
1015 7212 1647 231 2404 0 0 1202 0 0
1016 3606 0 0 3606 75 39 0 0 0
1017 2404 0 0 0 0 0 0 0 0
1019 220 3 2 88 0 0 66 0 0
1022 3111 700 109 1180 414 4 0 0 0
1024 193758 0 0 0 0 0 48064 0 0
1025 432576 0 0 240320 9 2 144192 5994 897
1027 751 708 94 0 0 0 751 5 0
1030 5900 100 9 2360 398 22 0 0 0
1031 1180 0 0 0 0 0 1180 0 0
1032 4720 0 0 2360 0 0 1180 1 0
fn=runtime.(*mheap).allocManual
897 2370 43 11 790 0 0 395 0 0
898 5135 41 19 2370 0 0 2370 351 7
fn=runtime.(*mheap).allocNeedsZero
535 144522 0 0 0 0 0 0 0 0
927 289026 370 99 96342 0 0 48171 0 0
928 481719 1935 116 144513 0 0 0 0 0
929 48174 0 0 0 0 0 0 0 0
930 289044 719 66 96348 182 80 0 0 0
932 96348 0 0 48174 26725 182 0 0 0
933 96348 0 0 0 0 0 0 0 0
934 96348 0 0 0 0 0 0 0 0
952 144522 1818 130 0 0 0 0 0 0
953 144525 0 0 0 0 0 0 0 0
958 192693 0 0 0 0 0 0 0 0
959 155995 0 0 31199 0 0 0 0 0
974 113323 0 0 0 0 0 0 0 0
975 96348 0 0 0 0 0 0 0 0
977 289032 0 0 96342 0 0 48171 0 0
fn=runtime.(*mheap).allocSpan
342 337197 0 0 240855 2 0 48171 0 0
445 192289 1033 63 192289 7 0 0 0 0
515 196561 15 11 52820 0 0 0 0 0
535 143328 0 0 0 0 0 0 0 0
664 47776 0 0 0 0 0 0 0 0
665 238880 0 0 95552 1 0 0 0 0
666 143328 0 0 0 0 0 0 0 0
667 238880 0 0 0 0 0 0 0 0
993 143145 0 0 143145 0 0 0 0 0
996 239321 0 0 47715 25374 229 0 0 0
1000 187876 832 96 46969 21606 934 0 0 0
1001 46969 0 0 0 0 0 46969 0 0
1075 587019 33773 270 244778 5 0 48171 10911 151
1077 96342 0 0 48171 0 0 48171 353 7
1081 96342 0 0 96342 9 0 0 0 0
1082 240872 31368 152 48149 0 0 0 0 0
1083 49040 0 0 930 0 0 0 0 0
1086 48110 0 0 0 0 0 0 0 0
1087 3720 218 78 1860 450 3 1860 339 16
1088 10230 0 0 4650 57 0 4650 57 0
1089 3903 875 160 930 23 0 1860 0 0
1093 241480 0 0 97150 34 0 144330 20872 182
1094 96615 40396 163 0 0 0 0 0 0
1095 93938 0 0 0 0 0 0 0 0
1097 323219 39818 162 46969 9 3 0 0 0
1118 20420 0 0 10210 3148 50 10210 15 0
1120 20420 32 25 5105 0 0 5105 34 1
1122 4104 55 8 1824 0 0 1824 0 0
1123 912 83 58 0 0 0 0 0 0
1124 532 0 0 228 24 0 228 0 0
1128 532 75 58 304 12 0 228 0 0
1129 152 0 0 0 0 0 0 0 0
1134 20420 2681 149 5105 0 0 5105 0 0
1137 6010 679 102 2404 0 0 2404 0 0
1139 5105 0 0 0 0 0 0 0 0
1144 23585 4082 153 23585 2666 149 0 0 0
1145 14151 0 0 9434 0 0 4717 0 0
1146 18868 3222 149 18868 3493 186 0 0 0
1147 14151 0 0 9434 0 0 4717 0 0
1150 14102 0 0 0 0 0 0 0 0
1151 218 2 1 98 0 0 0 0 0
1152 49 28 2 49 49 14 0 0 0
1153 98 0 0 98 0 0 0 0 0
1157 9434 2811 136 4717 78 51 0 0 0
1158 15656 0 0 0 0 0 7828 0 0
1161 15315 0 0 5105 0 0 10210 0 0
1163 5105 0 0 0 0 0 0 0 0
1166 221295 743 6 15326 0 0 106552 5 0
1167 368394 31317 143 96342 0 0 192684 0 0
1168 33948 0 0 16974 0 0 16974 0 0
1170 144513 0 0 48171 0 0 48171 0 0
1171 48171 0 0 0 0 0 0 0 0
1172 395 26 19 0 0 0 395 0 0
1173 395 0 0 0 0 0 395 0 0
1174 1580 0 0 790 0 0 395 0 0
1176 2370 0 0 395 0 0 1185 0 0
1177 395 0 0 0 0 0 0 0 0
1181 130663 0 0 82887 0 0 47776 0 0
1182 95552 0 0 0 0 0 0 0 0
1183 49 0 0 0 0 0 49 0 0
1184 49 0 0 0 0 0 49 0 0
1186 49 0 0 0 0 0 49 0 0
1187 49 0 0 0 0 0 49 0 0
1188 49 0 0 0 0 0 49 0 0
1189 49 3 2 0 0 0 49 0 0
1191 286362 1988 129 47727 65 34 47727 0 0
1192 238635 0 0 0 0 0 47727 0 0
1194 143181 1934 142 0 0 0 0 0 0
1195 143181 0 0 47727 32302 965 47727 0 0
1196 95454 0 0 47727 62 4 47727 0 0
1197 95454 0 0 47727 0 0 47727 0 0
1198 143181 0 0 47727 1 1 47727 0 0
1202 95503 1764 119 0 0 0 47776 0 0
1203 47776 0 0 0 0 0 47776 0 0
1204 286656 0 0 143328 8 0 143328 12 0
1205 286656 1097 39 143328 4 0 143328 0 0
1210 191104 0 0 238880 18807 142 0 0 0
1222 47776 0 0 0 0 0 0 0 0
1226 217764 897 169 63041 0 0 58381 0 0
1229 32717 498 41 32717 0 0 0 0 0
1230 196302 36 23 32717 0 0 98151 0 0
1233 240855 2089 65 96342 4 0 144513 0 0
1234 240855 0 0 48171 0 0 144513 0 0
1242 337592 517 52 96737 0 0 240855 0 0
1244 48171 0 0 0 0 0 0 0 0
1251 573312 43 29 143328 1 0 143328 0 0
1258 95552 0 0 0 0 0 0 0 0
1259 191104 265 44 95552 20431 291 0 0 0
1262 143328 0 0 191104 0 0 0 0 0
1264 95552 7 6 47776 90 8 0 0 0
1269 240855 0 0 144513 0 0 48171 0 0
1451 96342 0 0 0 0 0 48171 47793 46153
1453 48171 0 0 0 0 0 48171 6044 6014
1454 48171 0 0 0 0 0 48171 6019 5981
1455 104924 4870 186 56753 0 0 48171 5980 5948
1456 48171 0 0 0 0 0 48171 37988 31155
1457 48171 0 0 0 0 0 48171 0 0
1458 48171 0 0 0 0 0 48171 454 226
1460 48171 0 0 0 0 0 48171 1231 523
1461 48171 0 0 0 0 0 48171 0 0
1462 48171 0 0 0 0 0 48171 0 0
1464 48171 0 0 0 0 0 48171 0 0
1465 48171 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).freeManual
1377 2286 29 26 762 0 0 381 0 0
1378 762 0 0 381 0 0 381 299 249
1379 1524 0 0 762 14 4 762 1 1
1380 2667 19 18 1143 93 93 1143 0 0
1381 2667 0 0 762 0 0 1143 0 0
1382 2286 10 8 762 0 0 1524 0 0
1383 1143 0 0 381 0 0 762 0 0
1384 1143 0 0 762 0 0 0 0 0
fn=runtime.(*mheap).freeSpan
1343 95406 31 17 31802 0 0 15901 0 0
1344 190812 30 17 31802 0 0 111307 7 0
1364 47703 0 0 31802 0 0 0 0 0
fn=runtime.(*mheap).freeSpan.func1
1344 159010 44 25 63604 0 0 47703 6 1
1345 47703 0 0 31802 0 0 15901 0 0
1346 47703 0 0 15901 29 9 31802 12 0
1347 63604 28 17 63604 82 4 0 0 0
1348 31802 0 0 15901 0 0 15901 0 0
1349 47703 0 0 47703 53 3 0 0 0
1350 31802 20 16 15901 0 0 15901 0 0
1357 31802 0 0 15901 18 0 0 0 0
1361 95406 0 0 31802 0 0 63604 0 0
1362 47703 0 0 15901 0 0 31802 0 0
1363 47703 19 12 31802 0 0 0 0 0
fn=runtime.(*mheap).freeSpanLocked
342 32564 0 0 32564 0 0 0 0 0
346 32564 29 25 16282 0 0 0 0 0
445 32183 0 0 32183 2 1 0 0 0
535 47703 0 0 0 0 0 0 0 0
664 15901 0 0 0 0 0 0 0 0
665 79505 20 16 31802 72 13 0 0 0
666 47703 0 0 0 0 0 0 0 0
667 79505 0 0 0 0 0 0 0 0
1046 48846 0 0 48846 4 0 0 0 0
1048 81410 0 0 16282 72 15 0 0 0
1049 888 0 0 0 0 0 444 89 35
1050 49290 0 0 33008 0 0 0 0 0
1055 15838 0 0 0 0 0 0 0 0
1386 162820 107 67 65128 0 0 16282 0 0
1387 32564 0 0 32564 0 0 0 0 0
1388 762 12 9 0 0 0 0 0 0
1389 1143 0 0 381 0 0 0 0 0
1392 32564 0 0 0 0 0 0 0 0
1393 143109 20 16 63604 0 0 15901 21 1
1397 47703 0 0 47703 4 0 0 0 0
1400 31802 0 0 0 0 0 0 0 0
1401 79505 0 0 31802 224 88 0 0 0
1406 16282 0 0 0 0 0 0 0 0
1407 111307 39 32 15901 0 0 47703 5 0
1409 16282 0 0 0 0 0 0 0 0
1410 113974 29 25 16282 0 0 48846 3 1
1414 178721 0 0 97311 0 0 65128 0 0
1417 16282 0 0 0 0 0 0 0 0
1418 16282 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).grow
1276 456 75 60 152 36 14 76 0 0
1278 83 7 7 0 0 0 7 0 0
1281 380 75 60 228 150 66 0 0 0
1282 221 0 0 76 0 0 0 0 0
1286 42 0 0 14 0 0 28 1 0
1287 14 0 0 0 0 0 0 0 0
1292 35 7 7 14 0 0 0 0 0
1295 18 0 0 0 0 0 6 0 0
1300 5 1 1 1 0 0 0 0 0
1305 2 0 0 0 0 0 1 0 0
1306 3 0 0 0 0 0 1 0 0
1315 28 0 0 0 0 0 21 0 0
1316 35 6 6 7 0 0 21 0 0
1319 42 0 0 28 0 0 0 0 0
1323 76 0 0 76 0 0 0 0 0
1324 76 0 0 0 0 0 76 0 0
1325 608 74 59 0 0 0 456 0 0
1326 318 0 0 159 0 0 83 0 0
1332 380 0 0 152 75 3 0 0 0
1334 3 0 0 0 0 0 0 0 0
1337 6 0 0 1 0 0 4 0 0
1339 304 0 0 152 0 0 76 0 0
fn=runtime.(*mheap).init
672 6 1 1 2 0 0 1 0 0
673 2 0 0 1 0 0 0 0 0
674 1 0 0 0 0 0 0 0 0
676 1 0 0 0 0 0 0 0 0
677 1 0 0 0 0 0 0 0 0
686 2 1 1 0 0 0 1 0 0
690 405 1 1 0 0 0 0 0 0
691 268 0 0 0 0 0 0 0 0
694 6 0 0 0 0 0 4 0 0
695 3 0 0 2 0 0 0 0 0
1474 268 0 0 0 0 0 268 0 0
1475 268 0 0 0 0 0 268 0 0
fn=runtime.(*mheap).reclaim
703 37536 4471 19 12512 0 0 6256 89 1
723 37536 4468 24 12512 0 0 0 0 0
724 15846 108 13 10564 0 0 0 0 0
730 974 0 0 0 0 0 0 0 0
732 1948 0 0 974 0 0 0 0 0
736 5844 44 10 2922 376 11 2922 0 0
738 11731 0 0 974 0 0 165 13 0
740 3528 104 10 1286 8 0 0 0 0
742 1902 0 0 0 0 0 0 0 0
746 6657 0 0 951 0 0 0 0 0
747 1902 0 0 0 0 0 0 0 0
753 364 23 17 340 0 0 24 0 0
754 845 0 0 165 0 0 0 0 0
756 5 1 1 10 0 0 0 0 0
760 3371 12 1 0 0 0 0 0 0
762 48 0 0 0 0 0 48 17 0
763 24 0 0 0 0 0 0 0 0
767 1770 28 17 615 0 0 1155 0 0
768 495 0 0 165 0 0 0 0 0
769 147 0 0 0 0 0 0 0 0
772 72 0 0 54 2 0 0 0 0
773 18 0 0 0 0 0 0 0 0
776 974 0 0 0 0 0 0 0 0
777 72 9 8 0 0 0 48 0 0
780 1948 0 0 974 0 0 0 0 0
783 974 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).reclaimChunk
792 1485 44 17 330 2 1 165 0 0
800 660 0 0 330 1 0 165 21 0
801 1815 36 17 660 0 0 165 4 0
802 22275 17 9 21285 38 10 165 0 0
803 11550 0 0 10890 54 5 165 0 0
806 495 0 0 0 0 0 165 12 0
807 2145 22 9 0 0 0 165 0 0
808 495 22 9 0 0 0 165 0 0
809 669 0 0 0 0 0 0 0 0
816 49611 21 8 3448 0 0 1792 0 0
817 100944 0 0 37584 328 253 21120 0 0
818 33307 0 0 10560 0 0 0 0 0
822 52646 11 9 3448 0 0 3448 0 0
823 65080 0 0 0 0 0 0 0 0
824 39454 25 17 12718 1626 1317 3448 0 0
825 54546 0 0 12718 5762 2898 0 0 0
826 6896 0 0 3448 2945 1748 3448 0 0
827 10344 0 0 3448 0 0 6896 5 0
828 20688 0 0 6896 0 0 13792 1 0
829 10344 0 0 6896 0 0 0 0 0
831 10344 18 9 3448 1 0 6896 0 0
836 29958 9 6 17240 3 0 0 0 0
843 13346 4 3 13016 0 0 0 0 0
844 13181 0 0 13016 0 0 0 0 0
846 330 0 0 165 0 0 0 0 0
849 52840 0 0 16464 0 0 3448 0 0
852 660 0 0 330 0 0 165 12 0
fn=runtime.(*mheap).setSpans
535 192704 2258 136 48171 0 0 0 0 0
903 144513 881 102 0 0 0 48171 0 0
904 96342 0 0 0 0 0 0 0 0
905 48171 0 0 0 0 0 0 0 0
906 337197 0 0 144513 26 2 0 0 0
907 706869 154 58 192684 0 0 0 0 0
908 136670 0 0 0 0 0 0 0 0
909 204995 0 0 0 0 0 0 0 0
910 30 0 0 0 0 0 0 0 0
911 60 0 0 20 0 0 0 0 0
913 136670 0 0 0 0 0 68335 25195 8941
fn=runtime.(*mheap).sysAlloc
535 134 28 28 0 0 0 0 0 0
fn=runtime.(*mspan).refillAllocCache
1780 780117 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).sweep
346 1154638 0 0 564408 16 0 590230 3 1
445 700 0 0 700 7 3 0 0 0
515 1232454 0 0 308376 0 0 308026 0 0
1780 4445 0 0 0 0 0 0 0 0
1786 26670 79 26 0 0 0 0 0 0
fn=runtime.(*pageAlloc).findMappedAddr
535 748 0 0 187 0 0 0 0 0
fn=runtime.addfinalizer
1684 30 6 4 10 0 0 5 0 0
1685 15 0 0 0 0 0 10 0 0
1686 25 0 0 5 0 0 15 0 0
1687 15 0 0 0 0 0 10 0 0
1688 10 3 2 5 0 0 5 3 3
1689 30 0 0 10 0 0 10 0 0
1690 10 0 0 5 0 0 5 1 1
1691 20 3 2 10 0 0 5 0 0
1692 10 0 0 5 0 0 5 1 1
1693 30 0 0 10 0 0 15 0 0
1698 10 0 0 5 0 0 0 0 0
1710 20 3 2 10 0 0 5 0 0
fn=runtime.addspecial
1585 4728 658 116 1576 0 0 788 0 0
1586 3940 476 122 1576 0 0 2364 0 0
1587 1576 0 0 0 0 0 0 0 0
1594 788 0 0 0 0 0 0 0 0
1595 1576 0 0 0 0 0 1576 0 0
1597 3152 130 80 2364 0 0 788 0 0
1598 2364 0 0 1576 0 0 788 0 0
1600 3152 0 0 0 0 0 2364 0 0
1603 1576 0 0 788 0 0 0 0 0
1604 2364 0 0 1576 0 0 0 0 0
1605 800 120 74 794 38 2 0 0 0
1606 1588 0 0 0 0 0 0 0 0
1609 18 0 0 6 1 0 0 0 0
1614 12 0 0 0 0 0 0 0 0
1621 1576 0 0 788 0 0 788 0 0
1622 1576 0 0 788 0 0 788 84 10
1623 788 0 0 0 0 0 788 0 0
1624 2364 169 74 788 0 0 1576 0 0
1625 788 0 0 0 0 0 0 0 0
1627 3152 509 143 1576 0 0 788 0 0
fn=runtime.bulkBarrierPreWrite
346 61709 0 0 61709 38642 23163 0 0 0
445 123418 0 0 61709 38627 21146 0 0 0
535 185127 0 0 0 0 0 0 0 0
608 61709 0 0 0 0 0 0 0 0
611 185127 2563 19 0 0 0 0 0 0
620 61709 186 20 61709 0 0 0 0 0
624 123418 0 0 61709 17 3 0 0 0
625 123418 0 0 0 0 0 0 0 0
628 246836 0 0 61709 38001 3947 0 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
535 67314 0 0 0 0 0 0 0 0
fn=runtime.findObject
346 51389104 0 0 51389104 25679586 7802759 0 0 0
445 51389016 63 25 51389016 24861337 7529892 0 0 0
535 156166062 0 0 0 0 0 0 0 0
608 52055354 0 0 0 0 0 0 0 0
611 104110708 2381 55 0 0 0 0 0 0
620 52055354 54 36 52055354 54 6 0 0 0
624 104110708 0 0 52055354 5954 365 0 0 0
625 104110708 0 0 0 0 0 0 0 0
628 205556416 53 32 51389104 16547111 2378150 0 0 0
fn=runtime.freeSomeWbufs
1500 138 19 18 69 0 0 23 1 0
fn=runtime.freespecial
1753 2100 27 16 700 0 0 350 1 0
1754 700 0 0 700 0 0 0 0 0
1755 700 0 0 0 0 0 0 0 0
1757 22 3 2 10 2 2 12 0 0
1758 6 0 0 0 0 0 4 0 0
1759 2 0 0 0 0 0 0 0 0
1760 8 0 0 0 0 0 4 0 0
1761 696 0 0 0 0 0 0 0 0
1763 1740 26 16 696 22 11 1044 5 0
1764 1044 0 0 0 0 0 696 0 0
1765 348 0 0 0 0 0 0 0 0
1766 2094 0 0 700 0 0 696 0 0
fn=runtime.getempty
445 12192 21 18 12192 0 0 0 0 0
fn=runtime.greyobject
445 30701693 0 0 30701693 0 0 0 0 0
519 30701693 0 0 0 0 0 0 0 0
535 92105079 0 0 0 0 0 0 0 0
664 30701693 0 0 0 0 0 0 0 0
665 153508465 0 0 61403386 0 0 0 0 0
666 92105079 0 0 0 0 0 0 0 0
667 153508465 0 0 0 0 0 0 0 0
1780 47993633 0 0 0 0 0 0 0 0
1786 431942697 0 0 47993633 0 0 0 0 0
fn=runtime.heapBitsSetType
535 48470738 398 118 3768051 0 0 9737766 1226 36
fn=runtime.largeAlloc
445 98 29 21 98 4 3 0 0 0
535 147 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
511 11736324 0 0 0 0 0 0 0 0
fn=runtime.markBitsForAddr
445 472332 0 0 472332 2 0 0 0 0
535 1416996 0 0 472332 0 0 0 0 0
608 472332 26 18 0 0 0 0 0 0
611 944664 26 17 0 0 0 0 0 0
620 472332 21 18 472332 9 0 0 0 0
624 944664 0 0 472332 23 2 0 0 0
625 944664 0 0 0 0 0 0 0 0
628 1889328 0 0 472332 5435 113 0 0 0
1780 472332 0 0 0 0 0 0 0 0
1786 2833992 0 0 0 0 0 0 0 0
fn=runtime.markrootSpans
346 304306 0 0 304306 304276 285373 0 0 0
445 67 0 0 67 28 5 0 0 0
fn=runtime.newAllocBits
1887 286656 3452 134 95552 0 0 47776 0 0
1888 382208 689 86 191104 0 0 143328 2 0
fn=runtime.newArenaMayUnlock
1927 762 118 94 254 0 0 127 0 0
1929 460 0 0 127 0 0 79 0 0
1930 144 33 28 0 0 0 96 35 3
1931 288 35 33 48 0 0 192 0 0
1932 96 0 0 0 0 0 0 0 0
1935 192 0 0 0 0 0 96 0 0
1938 158 0 0 79 79 78 79 0 0
1939 237 0 0 0 0 0 237 64 18
1941 254 25 22 127 65 9 127 127 48
1945 127 0 0 0 0 0 127 0 0
1949 508 0 0 254 0 0 127 14 0
fn=runtime.newMarkBits
1816 3232087 130 118 404113 29194 190 0 0 0
1820 1614392 35288 247 807323 22 2 0 0 0
1821 807156 0 0 0 0 0 0 0 0
1825 403578 0 0 0 0 0 0 0 0
1826 1614312 0 0 0 0 0 0 0 0
1831 2421468 3687 150 807156 0 0 403578 1 0
1832 1210861 122 88 403578 0 0 127 0 0
1833 807283 0 0 0 0 0 127 9 0
1836 403578 0 0 403578 25978 378 0 0 0
1837 1210627 20 18 0 0 0 0 0 0
1838 1613804 1755 125 806902 0 0 403451 0 0
1843 381 0 0 0 0 0 254 19 2
1847 381 0 0 127 0 0 0 0 0
1853 254 0 0 127 0 0 127 0 0
1857 381 0 0 127 79 17 0 0 0
1868 254 0 0 0 0 0 127 33 6
1869 254 0 0 0 0 0 0 0 0
1874 254 0 0 127 0 0 127 0 0
1875 254 0 0 254 0 0 0 0 0
1877 381 0 0 0 0 0 254 0 0
1878 635 0 0 381 0 0 127 28 0
fn=runtime.nextMarkBitArenaEpoch
1905 114 33 27 38 0 0 19 0 0
1906 57 0 0 0 0 0 38 0 0
1907 57 0 0 19 19 18 0 0 0
1908 63 0 0 17 0 0 0 0 0
1909 24 12 8 0 0 0 12 0 0
1913 239 5 5 61 61 59 0 0 0
1915 5 0 0 0 0 0 5 0 0
1916 10 0 0 5 0 0 5 0 0
1919 38 14 13 19 0 0 19 0 0
1920 38 0 0 19 0 0 19 0 0
1921 57 7 4 38 0 0 0 0 0
1922 57 0 0 0 0 0 38 0 0
1923 57 0 0 38 0 0 0 0 0
fn=runtime.recordspan
468 278238 682 115 92746 0 0 46373 290 18
471 231865 727 121 139119 6 4 0 0 0
473 42 0 0 0 0 0 0 0 0
476 18 1 1 0 0 0 12 2 0
478 60 6 6 6 0 0 30 1 0
479 6 0 0 0 0 0 0 0 0
482 18 0 0 12 0 0 6 0 0
483 12 6 6 6 0 0 6 0 0
484 24 0 0 12 0 0 0 0 0
485 55 5 5 5 0 0 20 0 0
487 23 0 0 23 10 2 0 0 0
488 36 6 6 18 1 0 18 0 0
489 6 0 0 0 0 0 0 0 0
490 35 0 0 0 0 0 20 0 0
493 278243 0 0 92751 0 0 46373 0 0
494 231865 696 117 92746 0 0 46373 6526 5941
495 139119 0 0 92746 0 0 0 0 0
fn=runtime.removefinalizer
1721 12 2 2 4 0 0 2 0 0
1722 10 2 2 4 0 0 6 0 0
1723 4 0 0 0 0 0 0 0 0
1724 6 2 2 4 0 0 0 0 0
fn=runtime.removespecial
1633 12 2 2 4 0 0 2 0 0
1634 10 2 2 4 0 0 6 0 0
1635 4 0 0 0 0 0 0 0 0
1642 2 0 0 0 0 0 0 0 0
1643 4 0 0 0 0 0 4 0 0
1645 8 0 0 6 0 0 2 0 0
1647 8 2 2 0 0 0 6 0 0
1648 4 0 0 2 0 0 0 0 0
1649 6 0 0 4 0 0 0 0 0
1650 4 0 0 3 1 0 0 0 0
1651 6 0 0 0 0 0 0 0 0
1656 3 0 0 1 1 0 0 0 0
1664 6 2 2 2 0 0 4 0 0
1665 2 0 0 0 0 0 0 0 0
1666 8 0 0 4 0 0 2 0 0
fn=runtime.scanobject
445 984 0 0 984 940 89 0 0 0
519 25 0 0 0 0 0 0 0 0
535 81097708 0 0 20274427 0 0 0 0 0
639 101372160 0 0 20274427 1238043 66389 25 0 0
fn=runtime.setprofilebucket
1740 4698 737 123 1566 0 0 783 0 0
1741 2349 0 0 0 0 0 1566 0 0
1742 3915 694 119 783 0 0 2349 0 0
1743 2349 0 0 0 0 0 1566 0 0
1744 1566 0 0 783 0 0 783 678 247
1745 1566 0 0 783 0 0 783 85 85
1746 7047 647 118 3132 0 0 2349 0 0
fn=runtime.spanOfHeap
346 790 0 0 790 22 0 0 0 0
445 1580 0 0 790 20 0 0 0 0
535 2370 629 120 790 0 0 0 0 0
608 790 737 120 0 0 0 0 0 0
611 1580 0 0 0 0 0 0 0 0
620 790 724 127 790 20 0 0 0 0
624 1580 0 0 790 21 1 0 0 0
625 1580 0 0 0 0 0 0 0 0
628 3160 0 0 790 396 18 0 0 0
649 1580 0 0 0 0 0 0 0 0
655 7110 0 0 790 39 4 0 0 0
658 1580 0 0 790 0 0 790 0 0
fn=runtime.stackalloc
445 8 0 0 8 0 0 0 0 0
1500 24 0 0 8 3 1 0 0 0
fn=runtime.stackinit
1474 78 0 0 0 0 0 39 5 5
1475 39 0 0 0 0 0 39 9 8
fn=runtime.stackpoolalloc
445 52 0 0 52 0 0 0 0 0
fn=runtime.stackpoolfree
535 232 9 8 58 0 0 0 0 0
638 58 0 0 0 0 0 0 0 0
639 638 0 0 174 33 16 58 0 0
fn=runtime.sweepone
346 308026 0 0 308026 304004 217297 0 0 0
fn=runtime.updatememstats
515 4824 10 9 0 0 0 0 0 0
fn=runtime.wbBufFlush1
519 1556132 0 0 0 0 0 0 0 0
1780 3395376 0 0 0 0 0 0 0 0
1786 20372256 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mpagealloc.go
fn=runtime.(*pageAlloc).alloc
108 2472 0 0 0 0 0 344 0 0
113 688 0 0 344 0 0 0 0 0
119 948 0 0 0 0 0 0 0 0
129 344 79 41 0 0 0 0 0 0
138 344 0 0 0 0 0 0 0 0
324 1368 0 0 456 0 0 0 0 0
325 1368 0 0 912 0 0 0 0 0
326 1019 0 0 0 0 0 0 0 0
328 636 3 0 0 0 0 0 0 0
349 1720 81 42 344 263 4 0 0 0
794 3192 148 91 1064 0 0 532 0 0
797 2660 0 0 1596 802 18 0 0 0
798 290 58 47 116 0 0 116 0 0
804 2370 98 58 474 0 0 0 0 0
807 4313 0 0 1323 720 15 344 0 0
808 2408 0 0 688 0 0 1376 13 0
809 688 0 0 0 0 0 0 0 0
814 1376 0 0 0 0 0 0 0 0
815 1032 0 0 0 0 0 0 0 0
816 344 0 0 0 0 0 0 0 0
821 650 27 22 260 0 0 390 18 0
822 260 0 0 0 0 0 0 0 0
823 54 0 0 18 18 0 0 0 0
831 90 16 10 36 6 0 36 0 0
835 3648 204 105 1368 0 0 2280 0 0
840 1779 0 0 0 0 0 456 0 0
841 287 0 0 0 0 0 287 0 0
843 2736 24 15 1368 0 0 912 0 0
920 882 0 0 0 0 0 0 0 0
923 882 20 11 0 0 0 0 0 0
fn=runtime.(*pageAlloc).allocRange
108 10689 19 19 0 0 0 57 0 0
119 6664 835 116 0 0 0 1348 0 0
129 1407 832 107 19 0 0 0 0 0
138 1368 0 0 0 0 0 0 0 0
349 16338 812 109 5433 4 0 2736 0 0
506 7974 880 118 2658 0 0 1329 0 0
507 7974 850 113 2658 0 0 0 0 0
508 2658 0 0 0 0 0 0 0 0
509 2658 0 0 0 0 0 0 0 0
512 2658 0 0 0 0 0 0 0 0
514 1310 0 0 0 0 0 0 0 0
515 14410 952 113 1310 0 0 7860 1290 85
516 9170 872 111 2620 0 0 5240 0 0
519 19 0 0 0 0 0 0 0 0
520 209 19 19 19 0 0 114 0 0
521 114 0 0 38 0 0 76 0 0
522 292 19 19 136 0 0 20 0 0
523 20 0 0 0 0 0 0 0 0
524 220 8 8 60 0 0 100 0 0
525 40 0 0 0 0 0 40 0 0
527 19 19 19 0 0 0 0 0 0
528 305 38 38 76 0 0 153 0 0
529 95 17 2 19 0 0 76 0 0
531 10632 16 2 3987 0 0 6645 0 0
532 10613 549 110 5297 0 0 2658 0 0
fn=runtime.(*pageAlloc).allocToCache
108 4743 597 124 0 0 0 798 2 2
113 1596 0 0 798 0 0 0 0 0
119 1746 0 0 0 0 0 0 0 0
129 948 0 0 0 0 0 0 0 0
138 873 0 0 0 0 0 0 0 0
349 6036 766 170 948 790 160 1596 0 0
fn=runtime.(*pageAlloc).find
113 780 42 26 130 0 0 130 0 0
129 260 0 0 0 0 0 0 0 0
138 130 0 0 0 0 0 0 0 0
349 780 26 15 130 128 4 0 0 0
575 1834 314 170 524 0 0 262 58 1
617 524 0 0 0 0 0 262 88 17
620 262 0 0 0 0 0 262 0 0
621 524 159 85 0 0 0 262 0 0
632 1310 0 0 0 0 0 786 0 0
654 1572 159 83 262 0 0 0 0 0
655 6753 95 69 2613 0 0 1003 142 5
657 8024 0 0 1003 239 17 1003 0 0
658 3009 0 0 1003 238 19 1003 75 14
662 6016 0 0 0 0 0 1133 228 20
665 16919 283 160 3009 167 6 1003 0 0
672 15075 86 66 3009 239 19 0 0 0
673 1946 0 0 0 0 0 0 0 0
687 1840756 173 101 168 0 0 2092 0 0
688 1225667 0 0 612212 77043 61857 1089 0 0
689 1835064 0 0 0 0 0 0 0 0
693 610962 0 0 0 0 0 0 0 0
698 21787 121 76 2887 0 0 4356 184 15
700 2178 0 0 0 0 0 0 0 0
701 617639 86 45 2178 0 0 612126 12 0
705 57 0 0 0 0 0 0 0 0
706 228 0 0 57 0 0 0 0 0
712 3096 0 0 0 0 0 0 0 0
721 420 0 0 0 0 0 0 0 0
726 308 0 0 0 0 0 0 0 0
727 924 0 0 154 0 0 0 0 0
728 154 0 0 0 0 0 0 0 0
731 14 0 0 0 0 0 0 0 0
733 414 66 50 150 75 0 0 0 0
736 3261 91 74 417 12 0 1271 0 0
737 1052 172 129 446 0 0 285 0 0
739 225 75 56 75 0 0 0 0 0
741 450 74 51 150 36 0 150 10 0
747 3909 88 69 1032 0 0 2006 1 0
748 612126 0 0 612126 0 0 0 0 0
766 1170 41 25 390 0 0 650 2 0
767 260 0 0 0 0 0 0 0 0
777 780 44 28 260 0 0 0 0 0
781 520 0 0 0 0 0 0 0 0
782 910 44 28 130 0 0 390 0 0
783 1690 46 27 650 0 0 650 1 0
912 4453 0 0 0 0 0 0 0 0
915 3589 23 19 1250 0 0 0 0 0
920 1032 0 0 0 0 0 0 0 0
923 3096 0 0 0 0 0 0 0 0
928 154 19 16 0 0 0 0 0 0
931 308 25 21 0 0 0 0 0 0
fn=runtime.(*pageAlloc).find.func1
632 8533 103 63 3657 0 0 1219 0 0
633 10971 0 0 4876 0 0 0 0 0
636 970 0 0 0 0 0 970 0 0
637 4627 35 30 2438 0 0 970 0 0
638 1494 0 0 249 0 0 0 0 0
fn=runtime.(*pageAlloc).findMappedAddr
541 1122 98 49 374 0 0 187 0 0
544 187 0 0 0 0 0 0 0 0
545 2244 187 95 748 33 8 0 0 0
556 748 0 0 374 0 0 187 0 0
fn=runtime.(*pageAlloc).free
108 18551 10 8 0 0 0 54 3 0
119 33468 33 24 0 0 0 18 0 0
129 32197 15 14 18 0 0 0 0 0
138 16320 0 0 0 0 0 0 0 0
324 48846 0 0 16282 0 0 0 0 0
325 65128 0 0 32564 74 15 0 0 0
326 33871 0 0 0 0 0 0 0 0
349 81600 6 6 16320 73 11 0 0 0
849 97692 89 50 32564 0 0 16282 0 0
851 47539 0 0 0 0 0 0 0 0
852 1307 16 15 0 0 0 1307 0 0
854 48846 28 10 16282 0 0 0 0 0
857 15839 8 7 0 0 0 0 0 0
858 15839 0 0 0 0 0 0 0 0
861 1772 0 0 0 0 0 0 0 0
862 886 0 0 0 0 0 0 0 0
863 886 0 0 0 0 0 0 0 0
865 886 0 0 0 0 0 0 0 0
867 1700 0 0 0 0 0 0 0 0
870 54 0 0 0 0 0 0 0 0
871 266 20 16 114 0 0 20 0 0
872 20 0 0 0 0 0 0 0 0
874 54 4 4 18 0 0 0 0 0
877 130256 38 32 48846 0 0 81410 18 2
878 48846 0 0 32564 0 0 0 0 0
fn=runtime.(*pageAlloc).grow
108 836 76 53 152 0 0 228 0 0
129 197 0 0 0 0 0 1 0 0
138 99 0 0 1 0 0 0 0 0
325 304 0 0 152 0 0 0 0 0
326 286 72 50 76 0 0 0 0 0
328 36 18 13 0 0 0 0 0 0
349 296 0 0 100 0 0 0 0 0
356 456 143 104 152 0 0 76 0 0
359 76 0 0 76 0 0 0 0 0
360 76 0 0 0 0 0 0 0 0
364 304 0 0 0 0 0 304 0 0
369 304 0 0 152 18 0 0 0 0
370 152 0 0 0 0 0 0 0 0
371 303 68 4 0 0 0 0 0 0
372 1 0 0 0 0 0 1 0 0
374 152 0 0 76 0 0 0 0 0
375 76 76 52 0 0 0 76 0 0
380 380 0 0 0 0 0 304 0 0
385 188 0 0 0 0 0 0 0 0
386 116 0 0 58 0 0 58 0 0
394 1164 76 56 446 0 0 98 0 0
395 785 0 0 98 76 10 1 0 0
400 5 1 1 2 0 0 3 0 0
401 3 0 0 3 0 0 0 0 0
403 588 76 52 0 0 0 392 0 0
409 648 133 99 192 0 0 380 0 0
410 228 0 0 152 0 0 0 0 0
fn=runtime.(*pageAlloc).init
284 6 2 2 2 0 0 1 0 0
285 3 0 0 1 1 1 0 0 0
293 6 0 0 3 0 0 1 1 1
296 4 1 1 0 0 0 3 1 0
299 3 0 0 1 0 0 2 0 0
302 3 0 0 1 0 0 1 1 1
305 2 0 0 0 0 0 1 0 0
308 4 1 1 2 0 0 1 0 0
309 3 0 0 2 0 0 0 0 0
fn=runtime.(*pageAlloc).resetScavengeAddr
113 7 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne
108 220 16 11 6 0 0 63 0 0
119 60 13 8 0 0 0 0 0 0
129 78 0 0 30 0 0 6 0 0
138 42 2 2 3 0 0 0 0 0
349 210 0 0 45 10 6 0 0 0
920 192 2 2 0 0 0 0 0 0
923 192 2 2 0 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeRangeLocked
113 60 0 0 30 0 0 0 0 0
129 90 0 0 30 0 0 0 0 0
138 30 0 0 0 0 0 0 0 0
349 210 13 8 60 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
156 7550 76 61 1510 75 0 0 0 0
157 6040 0 0 755 0 0 0 0 0
165 6040 72 55 755 76 1 0 0 0
166 1510 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).update
108 204204 792 107 0 0 0 55724 25 3
129 18648 27 24 44 0 0 0 0 0
138 18612 0 0 8 0 0 0 0 0
156 136014 0 0 35907 1018 168 0 0 0
157 121713 721 106 21606 0 0 14301 0 0
349 93028 0 0 18612 0 0 0 0 0
420 130096 1810 242 37208 0 0 18560 11 1
422 74240 0 0 37120 0 0 0 0 0
423 37120 0 0 0 0 0 0 0 0
426 37120 950 120 0 0 0 0 0 0
429 129612 1431 212 74064 245 52 18516 1020 90
430 74064 502 83 18516 0 0 37032 623 39
431 55548 0 0 18516 0 0 0 0 0
432 33795 65 15 22530 0 0 0 0 0
434 58008 0 0 29004 0 0 7251 0 0
435 44 0 0 0 0 0 0 0 0
438 220 38 24 132 14 4 88 7 0
441 440 27 24 176 0 0 132 31 11
445 748 27 24 176 0 0 0 0 0
446 69 0 0 0 0 0 0 0 0
448 78 17 10 0 0 0 24 0 0
452 180 0 0 0 0 0 0 0 0
453 70 0 0 0 0 0 35 2 2
458 500 17 15 192 0 0 132 4 3
473 169011 804 106 20626 0 0 28612 1067 66
479 64788 967 162 14301 1061 145 14301 0 0
480 42903 0 0 14301 1103 142 14301 0 0
483 14301 0 0 0 0 0 0 0 0
486 200324 1629 305 57244 0 0 14311 0 0
487 479558 841 112 57288 0 0 28622 0 0
488 100177 880 115 14311 0 0 71555 0 0
489 114488 0 0 85866 4966 640 0 0 0
490 34658 0 0 0 0 0 0 0 0
492 24825 0 0 0 0 0 8275 0 0
fn=runtime.(*pallocBits).summarize
902 37208 0 0 0 0 0 0 0 0
905 37208 0 0 0 0 0 0 0 0
906 55812 0 0 0 0 0 0 0 0
907 37208 98 25 0 0 0 0 0 0
fn=runtime.mergeSummaries
902 28622 0 0 0 0 0 0 0 0
905 28622 0 0 0 0 0 0 0 0
906 42933 0 0 0 0 0 0 0 0
907 28622 0 0 0 0 0 0 0 0
936 228976 0 0 0 0 0 0 0 0
939 228976 894 137 0 0 0 0 0 0
940 343464 0 0 0 0 0 0 0 0
941 228976 724 130 0 0 0 0 0 0
946 143110 589 137 0 0 0 14311 410 67
951 85866 116 76 42933 0 0 0 0 0
952 472263 207 115 14311 0 0 0 0 0
954 200354 0 0 100177 0 0 0 0 0
959 601062 0 0 0 0 0 0 0 0
960 100177 0 0 0 0 0 0 0 0
967 500885 0 0 0 0 0 0 0 0
970 200354 0 0 0 0 0 0 0 0
979 601062 0 0 0 0 0 0 0 0
980 100177 0 0 0 0 0 0 0 0
985 85866 0 0 28622 0 0 14311 0 0
fl=.//usr/lib/golang/src/runtime/mpagealloc_64bit.go
fn=runtime.(*pageAlloc).sysGrow
99 532 111 97 152 0 0 76 0 0
100 456 0 0 152 0 0 0 0 0
116 456 75 59 76 0 0 228 0 0
117 760 75 63 380 0 0 0 0 0
118 380 0 0 0 0 0 0 0 0
119 1520 0 0 760 0 0 0 0 0
121 375 0 0 0 0 0 375 0 0
122 375 0 0 0 0 0 375 0 0
129 608 75 61 0 0 0 380 0 0
143 608 0 0 152 18 1 304 109 8
146 2736 76 65 532 0 0 380 0 0
148 3800 75 62 1900 76 60 1520 0 0
154 2665 0 0 1525 150 7 0 0 0
155 54 0 0 0 0 0 18 0 0
159 380 0 0 0 0 0 0 0 0
165 1150 75 62 385 0 0 0 0 0
166 9750 220 179 4125 0 0 3375 0 0
168 2270 0 0 1510 0 0 0 0 0
172 1150 0 0 0 0 0 10 0 0
177 25 1 1 5 0 0 20 0 0
178 5 0 0 5 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
108 2265 76 64 0 0 0 755 58 11
109 755 0 0 755 0 0 0 0 0
110 3775 76 59 1510 0 0 1510 0 0
fn=runtime.(*pageAlloc).sysGrow.func2
116 1500 0 0 375 0 0 375 0 0
117 1125 75 61 750 0 0 0 0 0
118 375 0 0 0 0 0 0 0 0
119 3375 0 0 1125 0 0 0 0 0
120 1875 0 0 750 0 0 750 0 0
121 375 0 0 0 0 0 0 0 0
122 375 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func3
129 3375 150 123 1500 0 0 750 0 0
130 3750 74 63 2250 0 0 1500 40 3
131 5250 67 8 2625 0 0 2250 0 0
fn=runtime.(*pageAlloc).sysInit
70 7 1 1 2 0 0 1 0 0
73 38 1 1 10 1 1 8 0 0
74 40 0 0 0 0 0 5 0 0
77 5 1 1 5 0 0 0 0 0
78 10 0 0 0 0 0 0 0 0
79 5 0 0 0 0 0 0 0 0
84 35 1 1 5 0 0 25 0 0
85 60 1 1 20 0 0 15 3 3
fl=.//usr/lib/golang/src/runtime/mpagecache.go
fn=runtime.(*mheap).allocSpan
27 48110 0 0 48110 17034 163 0 0 0
fn=runtime.(*pageAlloc).allocToCache
106 5580 853 143 1860 0 0 930 0 0
109 4650 0 0 2790 1770 374 0 0 0
114 6510 0 0 2790 1785 275 0 0 0
116 798 622 118 0 0 0 0 0 0
117 5586 0 0 798 0 0 3990 542 27
118 1596 492 122 0 0 0 0 0 0
122 3192 0 0 0 0 0 0 0 0
123 798 74 47 0 0 0 0 0 0
124 3990 0 0 1596 0 0 0 0 0
129 528 128 89 132 0 0 396 90 14
130 264 0 0 0 0 0 0 0 0
133 171 57 11 57 57 1 57 57 0
134 342 52 10 114 23 2 114 34 0
136 75 0 0 0 0 0 0 0 0
137 75 0 0 0 0 0 0 0 0
139 75 0 0 0 0 0 0 0 0
140 150 72 9 0 0 0 0 0 0
141 150 0 0 0 0 0 0 0 0
146 6909 780 127 798 0 0 6111 0 0
149 6111 860 153 1746 0 0 4365 0 0
159 3492 0 0 1746 0 0 873 0 0
160 6984 806 126 3492 0 0 2619 204 5
fn=runtime.(*pageCache).alloc
38 288660 34604 286 96220 0 0 48110 8750 124
39 192440 0 0 96220 0 0 0 0 0
40 285 57 49 114 0 0 114 0 0
42 144159 0 0 48053 0 0 0 0 0
43 47632 0 0 0 0 0 0 0 0
44 285792 32880 175 47632 0 0 0 0 0
45 333424 0 0 0 0 0 47632 0 0
46 47632 0 0 47632 0 0 0 0 0
47 428688 0 0 142896 0 0 95264 0 0
49 4210 30 8 1684 0 0 2105 346 5
fn=runtime.(*pageCache).allocN
58 2526 109 35 842 0 0 421 5 0
59 2947 0 0 1684 0 0 1263 367 5
60 842 0 0 0 0 0 0 0 0
61 1690 7 2 676 0 0 676 0 0
63 747 46 18 83 0 0 0 0 0
64 249 0 0 166 0 0 0 0 0
65 249 42 18 83 0 0 0 0 0
66 83 0 0 83 0 0 0 0 0
67 664 0 0 249 0 0 166 0 0
fl=.//usr/lib/golang/src/runtime/mpallocbits.go
fn=runtime.(*pageAlloc).allocToCache
21 5961 0 0 2544 865 207 0 0 0
345 873 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).free
62 110873 0 0 47517 220 78 31678 30 2
328 45789 16 14 0 0 0 0 0 0
333 1844 17 17 0 0 0 1844 19 1
338 40 0 0 0 0 0 40 0 0
fn=runtime.(*pageBits).clearAll
91 1160 5 2 40 0 0 0 0 0
92 640 0 0 0 0 0 320 20 20
fn=runtime.(*pageBits).clearRange
62 219 0 0 219 0 0 146 0 0
66 7080 532 141 0 0 0 1809 0 0
67 12663 604 153 3618 0 0 0 0 0
68 5427 0 0 1809 0 0 0 0 0
70 73 58 39 0 0 0 0 0 0
71 219 0 0 146 0 0 0 0 0
74 3472 0 0 0 0 0 0 0 0
75 6944 0 0 0 0 0 0 0 0
76 21489 286 150 1653 37 23 1653 0 0
77 4959 0 0 3306 0 0 0 0 0
79 166 0 0 0 0 0 0 0 0
81 498 32 27 83 31 20 83 0 0
82 704 0 0 0 0 0 0 0 0
83 124 0 0 0 0 0 124 0 0
86 913 10 7 83 0 0 83 0 0
87 249 0 0 166 0 0 0 0 0
fn=runtime.(*pageBits).popcntRange
98 4104 711 121 0 0 0 1368 0 0
99 4104 925 135 1368 0 0 0 0 0
100 1022 58 11 365 0 0 73 0 0
102 9065 0 0 2590 0 0 0 0 0
103 2590 0 0 0 0 0 0 0 0
104 5180 893 143 0 0 0 0 0 0
105 17262 1363 290 3699 346 14 1233 0 0
107 124 0 0 0 0 0 0 0 0
108 124 0 0 62 36 18 0 0 0
109 980 30 24 0 0 0 0 0 0
110 366 0 0 183 0 0 0 0 0
112 682 30 24 62 0 0 0 0 0
113 248 0 0 124 0 0 62 0 0
fn=runtime.(*pageBits).setAll
55 580 0 0 20 0 0 0 0 0
56 320 0 0 0 0 0 160 0 0
fn=runtime.(*pageBits).setRange
26 309 0 0 309 0 0 206 60 11
30 5661 160 99 0 0 0 1476 2 1
31 10332 96 55 2952 0 0 0 0 0
32 4428 0 0 1476 0 0 0 0 0
34 103 44 33 0 0 0 0 0 0
35 309 0 0 206 0 0 0 0 0
38 2746 0 0 0 0 0 0 0 0
39 5492 0 0 0 0 0 0 0 0
40 14796 151 94 1233 0 0 1233 0 0
41 3699 0 0 2466 0 0 0 0 0
43 280 0 0 0 0 0 0 0 0
45 700 76 66 140 98 98 140 0 0
46 2513 0 0 0 0 0 0 0 0
47 651 0 0 0 0 0 651 0 0
50 1540 42 33 140 0 0 140 0 0
51 420 0 0 280 0 0 0 0 0
fn=runtime.(*pallocBits).find
206 7632 460 110 2544 0 0 1272 312 12
207 3816 0 0 1272 0 0 0 0 0
208 5472 1021 267 2736 0 0 2736 471 35
209 4560 0 0 1824 0 0 1824 15 1
210 720 20 13 0 0 0 0 0 0
211 4563 0 0 2106 0 0 2106 97 2
213 117 3 0 54 0 0 54 6 0
fn=runtime.(*pallocBits).find1
221 7950 330 109 1824 0 0 0 0 0
222 3476 0 0 1738 815 127 0 0 0
223 3476 0 0 0 0 0 0 0 0
226 6384 0 0 912 0 0 912 0 0
fn=runtime.(*pallocBits).findLargeN
280 27 6 5 0 0 0 9 2 1
282 232 6 5 27 0 0 0 0 0
283 86 0 0 43 8 1 0 0 0
284 100 0 0 0 0 0 0 0 0
286 14 0 0 0 0 0 0 0 0
288 78 6 5 0 0 0 0 0 0
291 54 0 0 0 0 0 0 0 0
293 58 0 0 0 0 0 0 0 0
294 11 0 0 0 0 0 0 0 0
295 33 0 0 0 0 0 0 0 0
296 11 0 0 0 0 0 0 0 0
298 1 0 0 0 0 0 0 0 0
299 54 1 1 0 0 0 0 0 0
301 45 3 2 18 0 0 18 0 0
303 18 0 0 0 0 0 0 0 0
304 1 0 0 0 0 0 0 0 0
305 3 0 0 0 0 0 0 0 0
306 1 0 0 0 0 0 0 0 0
308 16 2 2 0 0 0 0 0 0
311 40 0 0 0 0 0 0 0 0
313 12 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).findSmallN
241 2106 15 9 702 0 0 351 243 2
243 3667 14 9 726 0 0 346 0 0
244 1398 0 0 538 348 8 346 81 2
245 1167 0 0 0 0 0 0 0 0
247 139 0 0 0 0 0 0 0 0
251 349 0 0 0 0 0 0 0 0
252 798 0 0 24 0 0 0 0 0
255 2455 13 9 0 0 0 0 0 0
257 1524 4 2 375 0 0 0 0 0
258 227 7 3 58 0 0 58 0 0
261 1754 13 8 346 0 0 1038 8 0
262 692 0 0 0 0 0 0 0 0
263 3268 5 3 1288 0 0 990 1 0
265 24 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
167 1785984 1387 285 18604 0 0 0 0 0
168 446496 607 137 148832 83 83 0 0 0
169 4018464 904 137 0 0 0 0 0 0
170 4762624 0 0 0 0 0 0 0 0
173 1190656 0 0 0 0 0 0 0 0
174 8334592 0 0 0 0 0 0 0 0
175 1190656 0 0 0 0 0 0 0 0
179 3571968 0 0 0 0 0 0 0 0
182 4762624 0 0 1190656 3977 728 0 0 0
187 1190656 0 0 0 0 0 0 0 0
188 639274 0 0 0 0 0 0 0 0
190 871019 0 0 0 0 0 0 0 0
194 55812 0 0 18604 0 0 18604 0 0
fn=runtime.(*pallocData).allocAll
323 40 0 0 0 0 0 40 0 0
384 120 8 7 40 0 0 20 0 0
386 40 0 0 40 16 14 0 0 0
387 80 0 0 20 0 0 40 0 0
388 60 8 7 40 0 0 0 0 0
fn=runtime.(*pallocData).allocRange
318 8088 903 115 2696 0 0 5392 454 43
376 8088 834 111 2696 0 0 1348 0 0
378 2696 0 0 2696 25 14 0 0 0
379 10784 0 0 4044 0 0 5392 0 0
380 4044 0 0 2696 0 0 0 0 0
fn=runtime.findBitRange64
353 2301 68 21 767 0 0 0 0 0
354 12688 0 0 767 0 0 0 0 0
355 2224 0 0 0 0 0 0 0 0
356 17430 60 21 0 0 0 0 0 0
357 17792 0 0 0 0 0 0 0 0
359 1534 1 1 767 0 0 767 0 0
fl=.//usr/lib/golang/src/runtime/mprof.go
fn=runtime.(*bucket).mp
187 11826 750 114 3942 0 0 1971 0 0
188 5913 687 118 3942 1015 671 0 0 0
191 1971 0 0 1971 244 178 0 0 0
192 7884 0 0 3942 0 0 1971 0 0
fn=runtime.eqslice
260 2952 735 106 1476 0 0 0 0 0
263 24648 0 0 6531 740 289 0 0 0
264 15165 0 0 5055 0 0 0 0 0
268 1476 0 0 738 0 0 738 0 0
fn=runtime.mProf_Flush
296 117 1 0 40 0 0 19 6 0
297 57 0 0 0 0 0 38 0 0
298 38 18 17 19 6 0 0 0 0
299 19 0 0 0 0 0 19 0 0
300 38 0 0 0 0 0 19 0 0
302 57 0 0 0 0 0 38 0 0
303 57 0 0 38 0 0 0 0 0
fn=runtime.mProf_FlushLocked
127 529 0 0 529 501 491 0 0 0
128 1058 0 0 1058 51 48 0 0 0
129 1058 0 0 1058 29 23 0 0 0
130 1058 0 0 1058 82 76 0 0 0
305 114 19 18 38 0 0 19 0 0
306 38 0 0 19 0 0 19 0 0
307 2778 38 36 1115 32 26 529 0 0
308 1587 17 17 529 0 0 1058 7 0
312 5290 0 0 1058 446 437 0 0 0
313 529 0 0 0 0 0 0 0 0
314 2116 0 0 0 0 0 2116 0 0
fn=runtime.mProf_Free
362 2088 48 23 696 0 0 348 0 0
363 1044 0 0 0 0 0 696 40 5
364 696 0 0 348 102 5 348 0 0
365 1392 0 0 696 0 0 696 0 0
366 3132 26 17 348 0 0 0 0 0
367 1044 0 0 348 142 26 348 0 0
368 1392 0 0 696 36 2 348 0 0
369 1044 26 17 0 0 0 696 0 0
370 1044 0 0 696 0 0 0 0 0
fn=runtime.mProf_Malloc
340 5481 809 199 1566 0 0 783 0 0
341 4698 0 0 783 0 0 1566 209 12
342 6264 342 106 783 0 0 4698 0 0
343 2349 0 0 0 0 0 1566 0 0
344 10962 817 185 2349 0 0 6264 0 0
345 1566 0 0 783 780 131 783 0 0
346 2349 0 0 783 0 0 1566 0 0
347 7047 0 0 783 0 0 0 0 0
348 2349 633 116 783 742 321 783 0 0
349 3132 0 0 1566 160 72 783 0 0
350 2349 0 0 0 0 0 1566 0 0
356 9396 1400 248 1566 0 0 5481 0 0
359 2349 0 0 1566 0 0 0 0 0
fn=runtime.mProf_Malloc.func1
356 6264 769 126 3132 0 0 783 0 0
357 2349 684 127 0 0 0 2349 0 0
358 2349 0 0 1566 0 0 0 0 0
fn=runtime.mProf_NextCycle
279 114 19 18 38 0 0 19 0 0
280 57 0 0 0 0 0 38 0 0
284 171 19 18 19 19 10 19 0 0
285 19 0 0 0 0 0 19 0 0
286 57 0 0 0 0 0 38 0 0
287 57 19 18 38 0 0 0 0 0
fn=runtime.mProf_PostSweep
127 311 0 0 311 289 177 0 0 0
128 622 0 0 622 37 21 0 0 0
129 622 0 0 622 17 6 0 0 0
130 622 0 0 622 50 27 0 0 0
322 54 9 8 18 0 0 9 0 0
323 27 0 0 0 0 0 18 0 0
329 18 0 0 9 6 1 9 0 0
330 1902 9 8 631 16 7 311 0 0
331 933 0 0 311 0 0 622 0 0
332 3110 7 7 933 268 125 0 0 0
333 311 0 0 0 0 0 0 0 0
334 1244 0 0 0 0 0 1244 0 0
336 27 9 8 0 0 0 18 0 0
337 27 0 0 18 0 0 0 0 0
fn=runtime.newBucket
162 270 37 23 90 0 0 45 0 0
163 90 0 0 45 0 0 0 0 0
167 135 45 30 45 0 0 0 0 0
168 45 0 0 0 0 0 0 0 0
173 315 0 0 45 0 0 225 26 3
174 90 0 0 90 45 13 0 0 0
175 90 45 30 45 0 0 45 44 40
176 90 0 0 45 0 0 45 11 11
177 180 0 0 90 0 0 45 0 0
fn=runtime.stkbucket
182 783 134 81 0 0 0 0 0 0
183 2349 38 29 783 32 24 0 0 0
205 4788 208 104 1611 0 0 783 0 0
206 1566 0 0 783 28 0 0 0 0
207 8 2 2 2 0 0 4 0 0
208 2 0 0 1 0 0 0 0 0
215 26857 80 43 6910 0 0 0 0 0
216 5344 0 0 0 0 0 0 0 0
217 16032 0 0 0 0 0 0 0 0
218 16032 0 0 0 0 0 0 0 0
221 1566 0 0 783 0 0 0 0 0
222 2349 0 0 0 0 0 0 0 0
223 2349 127 74 0 0 0 0 0 0
225 783 0 0 0 0 0 0 0 0
226 3132 0 0 0 0 0 783 0 0
228 5481 0 0 0 0 0 783 0 0
229 8523 122 75 3087 781 320 738 0 0
230 16236 1284 217 6642 870 328 5166 0 0
231 2952 0 0 1476 0 0 738 0 0
235 45 0 0 0 0 0 0 0 0
240 963 40 29 783 0 0 180 0 0
241 540 41 29 90 0 0 180 0 0
242 135 0 0 90 0 0 45 0 0
243 90 0 0 45 0 0 45 0 0
244 963 38 29 873 0 0 45 2 1
245 135 0 0 45 0 0 45 0 0
246 135 0 0 45 0 0 0 0 0
247 90 0 0 45 44 19 45 0 0
248 45 0 0 0 0 0 45 0 0
256 180 0 0 90 0 0 45 0 0
fl=.//usr/lib/golang/src/runtime/mranges.go
fn=runtime.(*addrRanges).add
126 456 150 126 152 0 0 76 0 0
138 457 0 0 228 0 0 229 0 0
139 1054 110 93 375 0 0 0 0 0
140 610 152 125 229 0 0 0 0 0
141 76 0 0 0 0 0 0 0 0
148 228 0 0 152 0 0 0 0 0
149 76 0 0 0 0 0 0 0 0
152 602 74 62 76 0 0 75 0 0
153 1 0 0 0 0 0 0 0 0
156 2 0 0 1 0 0 0 0 0
160 3 0 0 0 0 0 0 0 0
175 2 0 0 0 0 0 1 0 0
176 33 3 3 2 0 0 4 0 0
178 12 0 0 6 0 0 2 0 0
fn=runtime.(*addrRanges).contains
34 90 0 0 0 0 0 0 0 0
115 180 13 8 60 0 0 30 0 0
116 180 0 0 90 0 0 90 0 0
117 60 13 8 0 0 0 0 0 0
120 450 13 8 240 0 0 30 0 0
fn=runtime.(*addrRanges).findSucc
87 2029 173 128 740 18 0 0 0 0
88 915 0 0 183 90 71 0 0 0
92 185 0 0 0 0 0 185 0 0
fn=runtime.(*addrRanges).init
72 6 1 1 2 0 0 1 0 0
73 2 0 0 1 0 0 1 0 0
75 1 1 1 0 0 0 1 0 0
76 8 0 0 3 0 0 5 0 0
77 4 1 1 2 0 0 1 0 0
78 3 0 0 2 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne
26 6 0 0 0 0 0 0 0 0
29 6 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow
26 765 1 1 0 0 0 0 0 0
29 760 0 0 0 0 0 0 0 0
fn=runtime.addrRange.subtract
41 2250 71 57 750 0 0 375 0 0
42 3000 0 0 1500 0 0 0 0 0
43 1875 75 60 750 0 0 375 0 0
fl=.//usr/lib/golang/src/runtime/msize.go
fn=runtime.growslice
14 932186 0 0 0 0 0 0 0 0
15 932090 0 0 0 0 0 0 0 0
16 4633080 97 39 926616 12628 440 0 0 0
18 27370 9 2 5474 2478 81 0 0 0
21 144 0 0 0 0 0 0 0 0
24 48 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
14 8 0 0 0 0 0 0 0 0
15 6 0 0 0 0 0 0 0 0
18 30 0 0 6 1 0 0 0 0
21 3 1 1 0 0 0 0 0 0
24 1 0 0 0 0 0 0 0 0
fn=runtime.testdefersizes
14 146 0 0 0 0 0 0 0 0
15 146 1 1 0 0 0 0 0 0
16 730 0 0 146 1 1 0 0 0
fl=.//usr/lib/golang/src/runtime/mstats.go
fn=runtime.ReadMemStats
448 108 17 15 36 0 0 18 0 0
449 72 11 10 0 0 0 54 0 0
451 162 3 0 18 4 0 90 0 0
455 18 0 0 0 0 0 18 0 0
456 54 0 0 36 6 1 0 0 0
fn=runtime.ReadMemStats.func1
451 126 25 14 54 0 0 18 0 0
452 36 0 0 0 0 0 36 6 0
453 54 0 0 36 10 0 0 0 0
fn=runtime.cachestats
591 222 29 19 74 0 0 37 0 0
592 5143 48 37 2516 0 0 666 0 0
593 592 0 0 592 561 106 0 0 0
594 1184 0 0 0 0 0 0 0 0
597 1776 0 0 0 0 0 1184 0 0
fn=runtime.flushallmcaches
621 126 10 9 36 0 0 18 0 0
622 1854 10 1 630 0 0 288 0 0
623 576 0 0 0 0 0 576 0 0
fn=runtime.flushmcache
606 1728 11 2 576 0 0 288 0 0
607 1728 10 9 1152 3 0 0 0 0
608 576 0 0 288 251 102 288 0 0
609 576 0 0 0 0 0 0 0 0
612 576 0 0 0 0 0 576 0 0
613 864 0 0 288 0 0 576 0 0
614 864 0 0 576 0 0 0 0 0
fn=runtime.init.3
429 6 1 1 2 0 0 1 0 0
431 5 0 0 3 0 0 0 0 0
fn=runtime.mSysStatDec
675 294492 2287 127 0 0 0 98164 1 0
676 294492 0 0 98164 0 0 0 0 0
683 1079804 1761 126 490820 14509 238 0 0 0
fn=runtime.mSysStatInc
658 196737 40544 167 0 0 0 65579 0 0
659 196737 0 0 65579 0 0 0 0 0
666 590202 3545 154 327890 9311 117 0 0 0
fn=runtime.purgecachedstats
631 1776 19 18 1776 123 102 0 0 0
632 592 29 19 0 0 0 592 0 0
633 1184 0 0 1184 132 104 0 0 0
634 592 0 0 0 0 0 592 0 0
635 1184 0 0 1184 377 325 0 0 0
636 592 0 0 0 0 0 592 0 0
637 1184 30 20 1184 74 53 0 0 0
638 1184 0 0 0 0 0 592 0 0
639 120768 0 0 0 0 0 0 0 0
640 198320 0 0 79328 5106 3468 39664 0 0
641 39664 0 0 0 0 0 39664 0 0
fn=runtime.readmemstats_m
458 108 11 10 36 0 0 18 0 0
459 18 0 0 0 0 0 18 0 0
464 126 11 10 36 26 0 72 0 0
468 72 0 0 54 0 0 18 0 0
469 54 0 0 36 0 0 0 0 0
fn=runtime.updatememstats
515 108 11 10 36 0 0 18 0 0
516 36 0 0 18 18 15 18 10 6
517 36 0 0 18 13 10 18 14 5
518 90 10 9 72 7 5 18 0 0
519 54 0 0 54 0 0 0 0 0
522 54 11 10 18 0 0 18 0 0
532 36 0 0 0 0 0 18 0 0
534 36 0 0 0 0 0 18 0 0
535 3672 10 9 0 0 0 0 0 0
536 3618 0 0 0 0 0 1206 277 229
537 1206 0 0 0 0 0 1206 144 117
541 54 0 0 0 0 0 36 0 0
544 54 0 0 0 0 0 18 0 0
550 9720 10 9 0 0 0 0 0 0
553 7236 0 0 0 0 0 0 0 0
554 7236 0 0 4824 2392 1804 0 0 0
555 2412 0 0 0 0 0 0 0 0
556 19350 0 0 4824 334 0 2412 0 0
557 12060 0 0 4824 54 34 0 0 0
560 3654 0 0 0 0 0 0 0 0
561 2412 0 0 0 0 0 0 0 0
562 36 0 0 36 0 0 0 0 0
563 36 0 0 18 18 6 0 0 0
564 36 10 9 18 0 0 0 0 0
565 36 0 0 36 0 0 0 0 0
566 18 0 0 0 0 0 0 0 0
570 3564 0 0 2376 0 0 0 0 0
571 4752 11 10 1188 0 0 1188 0 0
572 7128 0 0 2376 0 0 0 0 0
574 18 0 0 0 0 0 0 0 0
576 36 0 0 36 0 0 0 0 0
577 54 0 0 36 0 0 18 0 0
580 18 11 10 0 0 0 18 0 0
581 36 0 0 0 0 0 18 0 0
582 18 0 0 0 0 0 18 0 0
583 54 0 0 18 0 0 18 18 0
584 54 0 0 36 18 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mwbbuf.go
fn=runtime.(*wbBuf).reset
86 82920 1816 49 27640 0 0 13820 0 0
87 41460 0 0 13820 0 0 13820 246 18
89 27640 400 45 13820 2012 10 0 0 0
100 41460 0 0 0 0 0 13820 0 0
103 96740 0 0 55280 0 0 0 0 0
fn=runtime.atomicwb
151 3 0 0 3 0 0 0 0 0
152 3 0 0 0 0 0 3 0 0
153 3 0 0 0 0 0 3 0 0
154 9 0 0 3 0 0 3 0 0
155 3 0 0 3 0 0 0 0 0
fn=runtime.bulkBarrierPreWrite
151 61952 0 0 61952 101 0 0 0 0
152 61709 0 0 0 0 0 61709 0 0
153 61709 0 0 0 0 0 61709 10127 152
154 185127 0 0 61709 0 0 61709 0 0
155 61709 0 0 61709 0 0 0 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
151 1657567 0 0 1657567 8 4 0 0 0
152 1651125 0 0 0 0 0 1651125 5 0
153 1651125 0 0 0 0 0 1651125 19387 673
154 4953375 0 0 1651125 0 0 1651125 0 0
155 1651125 8 7 1651125 0 0 0 0 0
fn=runtime.wbBufFlush
174 37476 20 18 0 0 0 12492 1 0
185 49968 1102 51 37476 26 6 0 0 0
193 37476 0 0 12492 123 16 0 0 0
206 112428 582 76 12492 0 0 62460 18 0
221 37476 0 0 24984 561 3 0 0 0
fn=runtime.wbBufFlush.func1
206 74952 216 101 24984 0 0 12492 0 0
218 99936 0 0 62460 84 5 24984 14 0
fn=runtime.wbBufFlush1
243 81000 1439 67 27000 0 0 13500 671 1
245 40500 0 0 13500 0 0 0 0 0
246 54000 1410 59 13500 1099 248 13500 1 0
247 40500 0 0 0 0 0 0 0 0
251 13500 0 0 0 0 0 13500 0 0
253 54000 0 0 13500 5 0 0 0 0
276 13500 0 0 0 0 0 0 0 0
278 37591204 3281 76 13701889 104552 2018 3509931 0 0
279 12533556 0 0 0 0 0 0 0 0
288 27964893 43 36 10529793 0 0 10529793 470 22
289 7019862 0 0 0 0 0 0 0 0
290 114555 0 0 0 0 0 0 0 0
294 3395376 0 0 0 0 0 0 0 0
295 3395376 0 0 0 0 0 0 0 0
296 1839244 0 0 0 0 0 0 0 0
298 1556132 0 0 0 0 0 0 0 0
299 3112264 0 0 1556132 0 0 0 0 0
300 70328 4 4 52746 0 0 17582 0 0
301 17582 0 0 0 0 0 0 0 0
303 14712612 1446 28 6587031 0 0 5048481 246 2
304 3077100 0 0 0 0 0 0 0 0
308 94500 338 26 0 0 0 67500 1 0
310 54000 2264 64 13500 2 2 27000 0 0
311 40500 0 0 27000 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/nbpipe_pipe2.go
fn=runtime.nonblockingPipe
9 6 2 2 2 0 0 1 0 0
10 5 0 0 3 0 0 2 0 0
11 2 0 0 0 0 0 0 0 0
21 6 0 0 2 0 0 3 0 0
fl=.//usr/lib/golang/src/runtime/netpoll.go
fn=internal/poll.runtime_pollClose
158 12 4 4 4 0 0 2 0 0
159 6 0 0 4 0 0 0 0 0
162 10 0 0 2 0 0 0 0 0
165 10 2 2 2 0 0 0 0 0
168 2 0 0 2 0 0 0 0 0
169 10 2 2 2 0 0 6 0 0
170 6 0 0 4 0 0 0 0 0
fn=internal/poll.runtime_pollOpen
132 12 3 3 4 0 0 2 0 0
133 10 0 0 2 0 0 6 0 0
134 10 0 0 2 0 0 6 0 0
135 12 2 2 4 2 2 0 0 0
138 10 0 0 2 2 2 0 0 0
141 4 0 0 2 0 0 2 0 0
143 2 0 0 0 0 0 2 0 0
144 2 0 0 2 0 0 0 0 0
145 2 2 2 0 0 0 2 0 0
146 2 0 0 0 0 0 2 0 0
147 2 0 0 2 0 0 0 0 0
148 2 0 0 0 0 0 2 0 0
149 2 0 0 0 0 0 2 2 2
150 6 0 0 2 0 0 4 0 0
153 12 2 2 6 0 0 6 0 0
154 12 0 0 6 0 0 4 0 0
fn=internal/poll.runtime_pollServerInit
104 6 1 1 2 0 0 1 0 0
105 1 0 0 0 0 0 1 0 0
106 3 0 0 2 0 0 0 0 0
fn=internal/poll.runtime_pollUnblock
307 12 4 4 4 0 0 2 0 0
308 12 0 0 4 0 0 6 0 0
309 6 0 0 4 0 0 0 0 0
312 2 0 0 0 0 0 2 0 0
313 2 2 2 2 0 0 0 0 0
314 2 0 0 2 0 0 0 0 0
315 2 0 0 0 0 0 2 0 0
316 4 0 0 4 0 0 0 0 0
317 12 0 0 2 0 0 10 0 0
318 14 2 2 4 0 0 10 0 0
319 6 0 0 4 0 0 0 0 0
323 4 0 0 2 0 0 0 0 0
327 6 2 2 2 0 0 4 0 0
328 6 0 0 2 0 0 0 0 0
331 12 0 0 6 0 0 0 0 0
fn=runtime.(*pollCache).alloc
510 12 4 4 4 0 0 2 0 0
511 8 0 0 4 2 1 4 0 0
512 7 0 0 4 0 0 0 0 0
520 6 1 1 1 0 0 4 0 0
521 59 0 0 1 0 0 0 0 0
522 18 0 0 0 0 0 0 0 0
523 36 0 0 18 0 0 18 18 18
524 18 0 0 0 0 0 18 0 0
527 5 3 3 2 0 0 2 0 0
528 4 0 0 2 1 1 2 0 0
529 4 0 0 0 0 0 4 0 0
530 10 0 0 6 0 0 2 0 0
fn=runtime.(*pollCache).free
172 12 2 2 4 0 0 2 0 0
173 8 0 0 4 0 0 4 0 0
174 8 0 0 6 0 0 2 0 0
175 2 2 2 0 0 0 2 0 0
176 4 0 0 0 0 0 4 0 0
177 6 0 0 4 0 0 0 0 0
fn=runtime.findrunnable
120 82596 0 0 41294 8 6 0 0 0
fn=runtime.netpollGenericInit
108 6 1 1 2 0 0 1 0 0
109 6 0 0 3 0 0 0 0 0
110 3 0 0 0 0 0 2 0 0
111 2 0 0 1 0 0 0 0 0
112 1 1 1 0 0 0 1 0 0
113 4 0 0 2 0 0 0 0 0
115 4 0 0 0 0 0 2 0 0
fn=runtime.netpollunblock
429 16 2 2 0 0 0 4 0 0
430 12 0 0 4 0 0 0 0 0
431 12 0 0 4 0 0 0 0 0
432 6 0 0 4 0 0 0 0 0
436 6 2 2 4 0 0 0 0 0
437 8 0 0 0 0 0 0 0 0
440 12 0 0 0 0 0 0 0 0
443 16 0 0 8 0 0 4 0 0
fn=runtime.pollWork
120 3404 0 0 1702 1407 23 0 0 0
fn=runtime.startTheWorldWithSema
120 112 0 0 56 0 0 0 0 0
fn=runtime.sysmon
120 1150 0 0 575 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/netpoll_epoll.go
fn=internal/poll.runtime_pollClose
67 4 0 0 0 0 0 4 0 0
68 14 0 0 2 0 0 10 0 0
fn=runtime.netpoll
99 1820 368 122 518 0 0 259 0 0
100 518 0 0 259 256 26 0 0 0
104 787 0 0 260 0 0 0 0 0
106 510 218 56 0 0 0 0 0 0
108 17 0 0 0 0 0 0 0 0
110 21 7 6 0 0 0 0 0 0
111 42 0 0 0 0 0 0 0 0
117 51023 0 0 0 0 0 49728 5464 1701
118 259 0 0 0 0 0 0 0 0
119 2856 246 64 518 0 0 1813 513 171
120 518 0 0 0 0 0 0 0 0
132 259 223 62 0 0 0 259 0 0
133 1301 0 0 261 28 8 1 0 0
134 6 1 1 0 0 0 0 0 0
135 3 0 0 1 1 1 0 0 0
139 4 0 0 1 0 0 0 0 0
140 2 0 0 0 0 0 0 0 0
144 1 0 0 0 0 0 0 0 0
148 2 1 1 0 0 0 1 0 0
149 7 1 1 1 0 0 4 0 0
170 1295 19 4 777 0 0 259 20 2
fn=runtime.netpollBreak
76 6 2 2 2 0 0 1 0 0
78 1 0 0 0 0 0 1 0 0
79 1 0 0 1 0 0 0 0 0
80 2 1 1 0 0 0 0 0 0
81 3 0 0 2 0 0 0 0 0
fn=runtime.netpollinit
27 6 1 1 2 0 0 1 0 0
28 4 0 0 1 0 0 3 1 0
29 2 0 0 0 0 0 0 0 0
37 6 1 1 3 0 0 3 0 0
38 2 0 0 0 0 0 0 0 0
42 2 0 0 0 0 0 2 0 0
43 1 0 0 0 0 0 1 0 0
45 2 1 1 0 0 0 1 0 0
46 8 0 0 2 0 0 5 0 0
47 2 0 0 0 0 0 0 0 0
51 3 1 1 1 0 0 1 0 0
52 2 0 0 1 0 0 1 0 0
53 3 0 0 2 0 0 0 0 0
fn=runtime.netpollopen
59 12 2 2 4 0 0 2 0 0
60 4 2 2 0 0 0 4 0 0
61 2 0 0 0 0 0 2 0 0
62 4 0 0 2 0 0 2 0 0
63 28 2 2 10 0 0 12 0 0
fl=.//usr/lib/golang/src/runtime/os_linux.go
fn=runtime.futexsleep
38 2021 163 51 0 0 0 629 2 1
44 1887 0 0 629 0 0 0 0 0
45 4455 11 7 990 0 0 2970 55 29
46 1467 63 30 978 24 12 0 0 0
49 268 31 19 0 0 0 134 0 0
50 134 0 0 0 0 0 0 0 0
51 1340 20 12 268 0 0 938 12 5
fn=runtime.futexwakeup
56 1815 105 34 0 0 0 605 0 0
57 6050 351 65 1815 0 0 3630 153 6
58 1210 0 0 0 0 0 0 0 0
59 1815 0 0 1210 78 6 0 0 0
fn=runtime.getHugePageSize
274 6 2 2 2 0 0 1 0 0
275 3 0 0 0 0 0 2 0 0
276 9 0 0 3 1 1 4 0 0
277 2 1 1 0 0 0 0 0 0
280 7 0 0 1 0 0 5 0 0
281 3 0 0 1 0 0 2 0 0
282 3 1 1 1 0 0 0 0 0
285 1 0 0 0 0 0 0 0 0
286 9 0 0 2 0 0 3 0 0
287 3 0 0 0 0 0 0 0 0
290 3 0 0 0 0 0 0 0 0
294 4 1 1 2 0 0 1 0 0
fn=runtime.getRandomData
305 12 1 1 4 0 0 2 0 0
306 8 0 0 4 1 0 0 0 0
307 26 2 2 4 0 0 10 0 0
308 18 0 0 8 0 0 10 0 0
309 6 0 0 4 0 0 0 0 0
fn=runtime.getproccount
72 11 2 2 2 0 0 1 0 0
81 1028 1 1 0 0 0 1024 124 124
82 6 0 0 1 0 0 4 0 0
83 2 0 0 0 0 0 0 0 0
87 40 1 1 8 0 0 0 0 0
88 72 0 0 0 0 0 0 0 0
89 48 0 0 0 0 0 0 0 0
90 16 0 0 0 0 0 0 0 0
93 4 1 1 2 0 0 0 0 0
96 3 0 0 0 0 0 1 0 0
fn=runtime.initsig
437 174 0 0 0 0 0 116 0 0
438 290 1 1 0 0 0 232 0 0
439 58 0 0 58 0 0 0 0 0
fn=runtime.minit
350 48 5 3 16 0 0 8 0 0
351 8 0 0 0 0 0 8 0 0
356 40 6 3 24 0 0 16 0 0
357 24 0 0 16 0 0 0 0 0
fn=runtime.minitSignalMask
385 48 5 3 0 0 0 40 0 0
fn=runtime.mpreinit
338 51 6 4 16 0 0 8 0 0
339 73 1 1 24 0 0 24 4 4
340 41 0 0 8 0 0 8 0 0
341 48 2 1 24 2 0 0 0 0
fn=runtime.newosproc
140 42 6 2 14 0 0 7 0 0
141 28 0 0 21 0 0 7 0 0
151 7 0 0 0 0 0 7 0 0
152 7 0 0 0 0 0 0 0 0
153 84 8 3 35 0 0 49 2 2
154 7 0 0 0 0 0 0 0 0
156 42 0 0 21 0 0 0 0 0
385 91 12 5 0 0 0 70 0 0
fn=runtime.osinit
297 6 1 1 2 0 0 1 0 0
298 3 1 1 1 0 0 2 0 0
299 3 0 0 1 0 0 2 0 0
300 1 0 0 0 0 0 1 0 0
301 3 0 0 2 0 0 0 0 0
fn=runtime.schedinit
318 1 0 0 0 0 0 1 0 0
385 5 1 1 0 0 0 5 0 0
fn=runtime.setsig
401 168 0 0 0 0 0 56 0 0
402 168 0 0 0 0 0 112 0 0
403 56 1 1 0 0 0 56 0 0
404 56 0 0 0 0 0 0 0 0
409 56 0 0 0 0 0 56 0 0
411 56 0 0 0 0 0 0 0 0
412 112 1 1 56 0 0 0 0 0
418 56 0 0 0 0 0 56 0 0
419 336 0 0 56 0 0 224 0 0
420 168 0 0 112 0 0 0 0 0
fn=runtime.signalM
495 276 39 27 92 0 0 46 0 0
496 138 38 27 46 0 0 0 0 0
499 322 38 26 138 24 12 184 13 4
500 138 5 3 92 9 2 0 0 0
fn=runtime.signalstack
445 8 0 0 0 0 0 8 0 0
fn=runtime.sysSigaction
454 342 1 1 0 0 0 114 0 0
455 1482 2 2 684 0 0 570 0 0
467 7 0 0 1 0 0 0 0 0
fn=runtime.sysargs
197 7 2 2 2 0 0 1 0 0
198 2 0 0 1 0 0 0 0 0
201 130 0 0 1 0 0 0 0 0
202 63 0 0 0 0 0 0 0 0
206 1 0 0 0 0 0 0 0 0
209 1 0 0 0 0 0 0 0 0
210 6 1 1 1 0 0 4 1 1
211 3 1 1 2 0 0 0 0 0
fn=runtime.sysauxv
252 6 1 1 2 0 0 1 0 0
254 237 1 1 79 0 0 19 0 0
255 76 1 1 19 5 5 0 0 0
257 36 0 0 0 0 0 0 0 0
260 8 1 1 1 0 0 3 1 1
262 38 0 0 0 0 0 0 0 0
263 2 0 0 0 0 0 1 1 1
267 58 0 0 0 0 0 57 1 1
269 8 0 0 2 0 0 1 0 0
fl=.//usr/lib/golang/src/runtime/os_linux_generic.go
fn=runtime.minitSignalMask
38 1664 0 0 384 0 0 256 7 7
fn=runtime.setsig
42 56 0 0 0 0 0 56 0 0
fl=.//usr/lib/golang/src/runtime/os_linux_x86.go
fn=runtime.osArchInit
17 7 2 2 2 0 0 1 0 0
35 7 0 0 1 0 0 3 0 0
36 5 1 1 1 0 0 2 0 0
42 123 1 1 33 0 0 5 0 0
43 57 0 0 0 0 0 0 0 0
48 2 0 0 0 0 0 0 0 0
51 1 0 0 0 0 0 0 0 0
53 9 1 1 4 0 0 3 0 0
54 1 0 0 0 0 0 0 0 0
58 9 1 1 0 0 0 0 0 0
63 3 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/panic.go
fn=runtime.gorecover
1091 1 1 1 1 0 0 0 0 0
1092 1 0 0 1 0 0 0 0 0
1093 2 0 0 0 0 0 0 0 0
1097 3 1 1 1 0 0 1 0 0
fn=runtime.init.4
373 6 1 1 2 0 0 1 0 0
374 2 1 1 0 0 0 1 0 0
375 3 0 0 0 0 0 2 0 0
376 5 0 0 3 1 1 1 0 0
377 3 0 0 2 0 0 0 0 0
fn=runtime.sighandler
1421 46 0 0 0 0 0 0 0 0
fn=runtime.testdefersizes
321 230 0 0 0 0 0 0 0 0
324 130 1 1 0 0 0 0 0 0
329 82 0 0 0 0 0 0 0 0
332 64 0 0 0 0 0 0 0 0
337 6 2 2 2 0 0 1 1 0
338 4 0 0 0 0 0 2 0 0
340 20 1 1 0 0 0 0 0 0
341 15 0 0 0 0 0 5 0 0
343 73 0 0 0 0 0 0 0 0
344 65 0 0 0 0 0 0 0 0
345 148 0 0 0 0 0 0 0 0
346 3 0 0 2 0 0 0 0 0
348 64 0 0 0 0 0 0 0 0
349 224 1 1 73 0 0 0 0 0
350 5 0 0 0 0 0 5 0 0
351 5 0 0 0 0 0 0 0 0
353 136 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/pprof/elf.go
fn=runtime/pprof.init
15 16 2 2 5 0 0 6 1 0
16 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/runtime/preempt.go
fn=runtime.asyncPreempt2
302 3 1 1 0 0 0 1 0 0
303 2 0 0 1 0 0 1 0 0
304 1 0 0 0 0 0 1 0 0
305 2 0 0 1 0 0 0 0 0
308 3 1 1 0 0 0 2 0 0
310 2 0 0 1 0 0 1 0 0
311 3 0 0 2 0 0 0 0 0
fn=runtime.doSigPreempt
344 468 55 46 154 46 17 0 0 0
fn=runtime.init.5
317 6 1 1 2 0 0 1 0 0
318 4 1 1 2 0 0 2 0 0
319 5 0 0 1 0 0 4 0 0
320 4 0 0 2 0 0 2 0 0
321 5 1 1 2 0 0 3 0 0
323 3 0 0 0 0 0 1 0 0
324 5 0 0 2 0 0 0 0 0
fn=runtime.isAsyncSafePoint
288 31 3 3 17 2 0 0 0 0
359 48 8 7 16 0 0 8 0 0
360 16 0 0 16 0 0 0 0 0
365 16 8 7 8 2 0 0 0 0
370 27 0 0 8 0 0 0 0 0
371 20 0 0 10 0 0 5 0 0
375 21 0 0 9 1 1 0 0 0
380 21 3 3 9 0 0 12 6 6
381 3 0 0 0 0 0 0 0 0
396 24 3 3 6 0 0 18 0 0
397 3 0 0 0 0 0 0 0 0
401 4 1 1 2 0 0 1 0 0
403 24 2 2 6 0 0 8 0 0
412 4 0 0 2 0 0 1 0 0
414 9 1 1 4 0 0 5 0 0
415 10 1 1 3 0 0 5 0 0
417 10 1 1 4 0 0 6 0 0
418 3 1 1 0 0 0 0 0 0
422 8 2 2 2 0 0 2 0 0
423 2 0 0 0 0 0 0 0 0
424 1 1 1 0 0 0 0 0 0
438 4 0 0 2 0 0 1 0 0
fn=runtime.newstack
288 394 0 0 213 18 1 0 0 0
fn=runtime.resumeG
258 4240 19 18 1696 0 0 424 0 0
259 424 0 0 0 0 0 0 0 0
265 424 0 0 0 0 0 0 0 0
270 2120 19 18 0 0 0 0 0 0
273 2120 19 18 0 0 0 1696 0 0
276 1696 0 0 848 0 0 0 0 0
278 6 0 0 1 0 0 4 0 0
fn=runtime.suspendG
105 2556 46 36 852 0 0 426 0 0
106 7242 19 18 1704 0 0 0 0 0
122 105 0 0 90 1 0 0 0 0
123 882 0 0 0 0 0 0 0 0
137 6 0 0 0 0 0 0 0 0
143 10 2 2 4 0 0 4 0 0
145 2 0 0 0 0 0 0 0 0
149 2 0 0 0 0 0 0 0 0
153 7 1 1 1 0 0 3 0 0
163 2139 19 18 0 0 0 0 0 0
167 2971 1 1 425 0 0 1696 15 2
175 848 19 18 424 0 0 424 0 0
176 1272 0 0 424 423 249 424 0 0
190 3864 38 36 1273 0 0 2152 0 0
192 872 0 0 0 0 0 0 0 0
195 188 2 2 71 0 0 0 0 0
200 6 2 2 1 0 0 3 0 0
206 2 0 0 1 0 0 1 0 0
207 1 0 0 0 0 0 1 1 0
210 2 0 0 1 0 0 1 0 0
211 2 0 0 1 1 0 1 0 0
212 951 1 1 4 0 0 913 0 0
216 4 0 0 0 0 0 3 0 0
223 5 0 0 1 1 0 0 0 0
229 1 1 1 0 0 0 0 0 0
230 475 19 18 1 0 0 456 0 0
231 1 0 0 0 0 0 0 0 0
232 1 0 0 0 0 0 0 0 0
244 472 0 0 1 0 0 441 0 0
245 2 0 0 0 0 0 0 0 0
247 525 0 0 39 0 0 456 6 0
248 24 0 0 0 0 0 16 0 0
250 7 0 0 0 0 0 7 0 0
251 14 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/preempt_amd64.s
fn=runtime.asyncPreempt
7 1 1 1 0 0 0 1 0 0
8 1 0 0 0 0 0 0 0 0
10 1 0 0 0 0 0 1 0 0
12 1 0 0 0 0 0 0 0 0
20 1 0 0 0 0 0 1 0 0
21 1 0 0 0 0 0 1 0 0
22 1 0 0 0 0 0 1 0 0
23 1 0 0 0 0 0 1 0 0
24 1 0 0 0 0 0 1 0 0
25 1 0 0 0 0 0 1 0 0
26 1 0 0 0 0 0 1 0 0
27 1 0 0 0 0 0 1 0 0
28 1 0 0 0 0 0 1 0 0
29 1 0 0 0 0 0 1 0 0
30 1 1 1 0 0 0 1 0 0
31 1 0 0 0 0 0 1 0 0
32 1 0 0 0 0 0 1 0 0
33 1 0 0 0 0 0 1 0 0
34 1 0 0 0 0 0 1 0 0
35 1 0 0 0 0 0 1 0 0
36 1 0 0 0 0 0 1 0 0
37 1 0 0 0 0 0 1 0 0
38 1 0 0 0 0 0 1 0 0
39 1 0 0 0 0 0 1 0 0
40 1 1 1 0 0 0 1 0 0
41 1 0 0 0 0 0 1 0 0
42 1 0 0 0 0 0 1 0 0
43 1 0 0 0 0 0 1 0 0
44 1 0 0 0 0 0 1 0 0
45 1 0 0 0 0 0 1 0 0
46 1 0 0 0 0 0 1 0 0
47 1 1 1 0 0 0 1 0 0
48 1 0 0 0 0 0 1 0 0
49 1 0 0 0 0 0 1 0 0
50 1 0 0 0 0 0 1 0 0
51 1 0 0 1 0 0 0 0 0
52 1 0 0 1 0 0 0 0 0
53 1 0 0 1 0 0 0 0 0
54 1 0 0 1 0 0 0 0 0
55 1 1 1 1 0 0 0 0 0
56 1 0 0 1 0 0 0 0 0
57 1 0 0 1 0 0 0 0 0
58 1 0 0 1 0 0 0 0 0
59 1 0 0 1 0 0 0 0 0
60 1 0 0 1 0 0 0 0 0
61 1 0 0 1 0 0 0 0 0
62 1 1 1 1 0 0 0 0 0
63 1 0 0 1 0 0 0 0 0
64 1 0 0 1 0 0 0 0 0
65 1 0 0 1 0 0 0 0 0
66 1 0 0 1 0 0 0 0 0
67 1 0 0 1 0 0 0 0 0
68 1 0 0 1 0 0 0 0 0
69 1 0 0 1 0 0 0 0 0
70 1 0 0 1 0 0 0 0 0
71 1 0 0 1 0 0 0 0 0
72 1 0 0 1 0 0 0 0 0
73 1 1 1 1 0 0 0 0 0
74 1 0 0 1 0 0 0 0 0
75 1 0 0 1 0 0 0 0 0
76 1 0 0 1 0 0 0 0 0
77 1 0 0 1 0 0 0 0 0
78 1 0 0 1 0 0 0 0 0
79 1 0 0 1 0 0 0 0 0
80 1 0 0 1 0 0 0 0 0
81 1 0 0 0 0 0 0 0 0
82 1 0 0 1 0 0 0 0 0
83 1 0 0 1 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/proc.go
fn=runtime.(*p).init
4086 96 2 2 32 0 0 16 0 0
4087 48 0 0 32 0 0 16 16 16
4088 16 0 0 0 0 0 16 0 0
4089 112 1 1 16 0 0 48 16 16
4090 288 0 0 0 0 0 0 0 0
4091 1040 1 1 80 0 0 240 48 48
4093 48 0 0 0 0 0 32 0 0
4094 96 0 0 64 0 0 0 0 0
4095 48 1 1 16 0 0 0 0 0
4096 5 0 0 3 0 0 0 0 0
4099 2 0 0 0 0 0 1 0 0
4101 75 0 0 30 0 0 30 0 0
fn=runtime.(*randomOrder).reset
5409 342 49 39 114 0 0 57 0 0
5410 171 0 0 114 0 0 57 57 12
5411 114 0 0 0 0 0 57 0 0
5412 5358 49 39 1482 0 0 912 0 0
5413 5016 0 0 912 0 0 2736 2 0
5414 6894 89 73 3210 1 0 936 35 11
fn=runtime.GC
269 664161 0 0 0 0 0 442774 0 0
fn=runtime.acquireSudog
320 84 23 17 0 0 0 28 0 0
329 28 0 0 0 0 0 0 0 0
330 28 0 0 28 0 0 0 0 0
331 104 23 17 38 18 7 10 0 0
332 30 0 0 0 0 0 20 4 4
334 70 0 0 30 0 0 0 0 0
340 30 9 6 0 0 0 20 0 0
342 30 0 0 20 0 0 0 0 0
343 192 21 14 60 0 0 40 0 0
346 78 34 29 56 0 0 0 0 0
347 168 26 19 28 6 4 0 0 0
348 106 0 0 28 0 0 28 7 7
349 123 0 0 28 0 0 28 0 0
350 56 0 0 28 22 13 0 0 0
353 28 0 0 0 0 0 0 0 0
354 112 11 9 56 0 0 28 0 0
fn=runtime.acquirep
4330 247920 231 64 82640 396 73 41320 0 0
4332 123960 0 0 41320 0 0 82640 80 4
4338 165280 0 0 82640 0 0 82640 0 0
4340 206600 0 0 123960 29 21 0 0 0
fn=runtime.allgadd
465 144 7 3 48 0 0 24 0 0
466 72 7 3 24 0 0 0 0 0
470 72 0 0 0 0 0 48 0 0
471 414 13 5 144 21 3 96 8 3
472 48 0 0 24 0 0 24 0 0
473 72 0 0 0 0 0 48 0 0
474 72 0 0 48 0 0 0 0 0
733 24 0 0 24 0 0 0 0 0
fn=runtime.allocm
1385 42 13 4 14 0 0 7 0 0
1386 14 0 0 7 0 0 7 0 0
1387 7 0 0 0 0 0 0 0 0
1388 21 0 0 14 0 0 0 0 0
1389 4 1 1 1 0 0 2 0 0
1394 14 0 0 7 0 0 0 0 0
1412 38 6 4 7 0 0 21 2 2
1413 34 1 1 14 3 1 7 4 4
1414 31 0 0 7 1 0 21 0 0
1418 14 2 2 7 0 0 0 0 0
1421 56 5 2 21 0 0 21 4 4
1423 47 2 1 14 0 0 7 0 0
1425 43 4 3 29 0 0 0 0 0
1426 2 1 0 0 0 0 1 0 0
1428 8 0 0 8 0 0 0 0 0
1430 29 0 0 15 0 0 7 0 0
fn=runtime.bgscavenge
310 116 13 13 13 12 4 65 0 0
fn=runtime.bgsweep
269 171813 0 0 0 0 0 114542 0 0
310 140 1 1 0 0 0 100 19 17
fn=runtime.casGFromPreempted
852 6 1 1 2 0 0 1 0 0
853 6 0 0 2 0 0 0 0 0
856 9 1 1 4 0 0 1 0 0
fn=runtime.casGToPreemptScan
841 6 2 1 2 0 0 1 0 0
842 7 0 0 3 0 0 0 0 0
845 9 1 1 3 0 0 0 0 0
fn=runtime.casfrom_Gscanstatus
740 2556 38 36 852 0 0 426 0 0
749 2556 19 18 426 0 0 0 0 0
754 2130 0 0 426 0 0 0 0 0
755 1704 0 0 852 0 0 0 0 0
758 2130 0 0 852 0 0 0 0 0
fn=runtime.casgstatus
787 1756380 110 43 0 0 0 585460 5 4
788 5269140 3997 253 1170920 0 0 0 0 0
789 3512760 472 44 1756380 0 0 0 0 0
801 4683680 0 0 1756380 104 74 0 0 0
805 585460 1151 61 0 0 0 0 0 0
fn=runtime.castogscanstatus
767 2550 19 18 850 0 0 425 0 0
769 1700 0 0 425 0 0 0 0 0
773 2125 19 18 425 0 0 0 0 0
774 3400 0 0 1700 0 0 425 0 0
fn=runtime.checkTimers
2634 3602826 498 118 1200942 10 2 600471 16 3
2637 3002356 0 0 1200942 4700 522 0 0 0
2638 640901 11 11 600470 5635 438 40431 1 0
2639 1200940 0 0 0 0 0 0 0 0
2640 3920273 323 51 1680117 0 0 1680117 23 7
2642 121293 0 0 40431 0 0 0 0 0
2643 40431 0 0 0 0 0 0 0 0
2645 121293 0 0 40431 0 0 0 0 0
2650 606073 5 4 242447 0 0 0 0 0
2651 242418 6 5 80806 0 0 121209 0 0
2656 116 0 0 0 0 0 87 0 0
2658 87 11 10 29 0 0 58 0 0
2660 30 9 9 1 0 0 29 0 0
2661 87 0 0 58 0 0 0 0 0
2662 87 0 0 29 0 0 0 0 0
2663 1 0 0 0 0 0 0 0 0
2665 155 0 0 78 1 1 0 0 0
2668 222 0 0 53 0 0 87 0 0
2681 415 6 6 168 1 0 0 0 0
2682 3 0 0 0 0 0 0 0 0
2685 87 0 0 29 0 0 58 0 0
2687 556 34 31 203 0 0 256 3 2
fn=runtime.checkdead
3806 1888 270 55 1888 0 0 0 0 0
4405 5664 642 94 1888 0 0 944 0 0
4409 3776 0 0 1888 14 8 0 0 0
4417 1888 0 0 944 0 0 0 0 0
4426 4720 69 48 1888 0 0 0 0 0
4435 6608 0 0 2832 0 0 0 0 0
4436 1888 0 0 0 0 0 0 0 0
4437 2832 82 53 1888 0 0 0 0 0
fn=runtime.checkmcount
600 48 5 4 16 0 0 8 0 0
602 48 0 0 24 0 0 0 0 0
3806 16 0 0 16 0 0 0 0 0
fn=runtime.closechan
5265 4 0 0 2 0 0 0 0 0
fn=runtime.cpuinit
484 6 1 1 2 0 0 1 0 0
490 2 0 0 0 0 0 1 0 0
496 260 1 1 64 0 0 1 0 0
497 63 0 0 0 0 0 0 0 0
500 381 0 0 126 0 0 63 0 0
501 189 1 1 63 0 0 0 0 0
502 567 1 1 189 0 0 315 0 0
504 126 0 0 0 0 0 0 0 0
505 62 0 0 62 0 0 0 0 0
511 3 1 1 0 0 0 3 0 0
515 2 0 0 1 0 0 1 0 0
516 2 0 0 1 0 0 1 0 0
517 2 0 0 1 0 0 1 0 0
519 2 0 0 1 1 1 1 0 0
521 2 0 0 1 1 1 1 0 0
522 3 0 0 2 0 0 0 0 0
fn=runtime.doInit
5458 1236 5 1 412 0 0 206 1 1
5459 412 0 0 412 51 40 0 0 0
5460 412 0 0 0 0 0 0 0 0
5461 486 1 0 324 0 0 0 0 0
5462 412 0 0 0 0 0 0 0 0
5465 88 2 1 0 0 0 44 0 0
5466 1444 1 0 656 8 0 204 0 0
5468 204 0 0 204 18 15 0 0 0
5469 408 0 0 0 0 0 408 0 0
5471 340 2 1 170 3 0 42 1 1
5472 126 0 0 42 0 0 0 0 0
5474 84 0 0 42 4 4 42 0 0
5476 176 0 0 88 0 0 44 0 0
fn=runtime.doSigPreempt
416 3 0 0 2 1 1 0 0 0
733 36 0 0 36 0 0 0 0 0
fn=runtime.entersyscall
3027 34716 120 33 0 0 0 11572 0 0
3028 57860 1734 53 11572 0 0 34716 0 0
fn=runtime.entersyscallblock
3060 48 5 1 0 0 0 16 0 0
3061 32 0 0 16 0 0 16 0 0
3063 32 0 0 32 0 0 0 0 0
3064 16 0 0 0 0 0 16 0 0
3065 16 0 0 0 0 0 16 0 0
3066 64 5 1 48 3 0 16 1 0
3067 16 0 0 0 0 0 16 0 0
3068 48 0 0 48 0 0 0 0 0
3073 80 0 0 16 0 0 48 0 0
3074 48 5 1 32 0 0 16 0 0
3075 32 0 0 16 0 0 16 0 0
3076 32 0 0 16 0 0 0 0 0
3085 80 5 1 16 0 0 48 0 0
3086 112 5 1 64 0 0 0 0 0
3093 48 1 1 0 0 0 32 0 0
3096 80 0 0 16 0 0 48 0 0
3098 48 0 0 48 0 0 0 0 0
3099 48 0 0 32 0 0 0 0 0
fn=runtime.entersyscallblock_handoff
3101 96 1 1 32 0 0 16 0 0
3102 32 0 0 16 0 0 0 0 0
3106 32 0 0 0 0 0 32 0 0
3107 48 0 0 32 0 0 0 0 0
fn=runtime.execute
2087 2230696 116 79 836511 17 8 278837 0 0
2088 557674 0 0 278837 0 0 278837 0 0
2092 1673104 48 39 836511 127 5 278837 3 0
2093 1394308 79 45 557674 0 0 278837 87 69
2094 1115348 0 0 0 0 0 836511 0 0
2095 557674 0 0 278837 0 0 278837 0 0
2096 278837 94 49 0 0 0 278837 0 0
2097 836511 0 0 278837 0 0 278837 0 0
2098 278837 0 0 0 0 0 0 0 0
2099 1393960 43 25 1115168 36 1 0 0 0
2103 278837 0 0 278837 142 43 0 0 0
2104 1115348 0 0 836511 5 1 0 0 0
2108 557674 0 0 278837 0 0 0 0 0
2117 1115348 76 45 278837 0 0 557674 0 0
fn=runtime.exitsyscall
3121 34764 37 28 0 0 0 11588 0 0
3122 23176 0 0 11588 12 9 11588 0 0
3124 23176 0 0 23176 22 15 0 0 0
3125 34764 0 0 11588 10 6 0 0 0
3129 11588 0 0 0 0 0 11588 10 6
3130 11588 0 0 11588 3 0 0 0 0
3131 23176 62 33 11588 0 0 11588 0 0
3132 46352 0 0 11588 0 0 23176 574 7
3133 46352 234 48 34764 0 0 0 0 0
3136 23176 149 43 11588 0 0 0 0 0
3142 46352 0 0 46352 0 0 0 0 0
3144 46352 39 32 0 0 0 34764 0 0
3148 23176 0 0 11588 0 0 11588 0 0
3149 23176 0 0 23176 0 0 0 0 0
3150 23176 0 0 11588 0 0 0 0 0
3155 46352 53 37 11588 0 0 11588 0 0
3157 11588 41 33 0 0 0 11588 0 0
3159 57940 0 0 11588 2906 76 0 0 0
3164 34764 0 0 23176 0 0 0 0 0
fn=runtime.exitsyscallfast
3202 34764 946 55 0 0 0 11588 0 0
3203 11588 0 0 11588 0 0 0 0 0
3206 23176 0 0 11588 0 0 0 0 0
3211 125973 366 45 34255 222 0 0 0 0
3213 22190 57 33 0 0 0 22190 5557 48
3214 11095 0 0 0 0 0 11095 0 0
3215 44857 14 7 22190 0 0 11095 0 0
3219 986 0 0 493 0 0 0 0 0
3220 493 0 0 0 0 0 493 0 0
3221 5916 149 31 0 0 0 3944 348 5
3234 986 0 0 493 0 0 0 0 0
3235 1972 0 0 986 0 0 493 0 0
fn=runtime.exitsyscallfast.func1
3221 5916 373 59 2465 0 0 1972 91 5
3222 2465 0 0 986 0 0 986 0 0
3223 1479 0 0 493 0 0 0 0 0
3231 1479 93 31 986 0 0 0 0 0
fn=runtime.exitsyscallfast_pidle
3264 2958 441 32 986 0 0 493 0 0
3265 1479 347 31 0 0 0 986 3 1
3266 493 0 0 0 0 0 0 0 0
3267 2958 352 31 493 0 0 0 0 0
3268 54 17 10 36 0 0 0 0 0
3269 72 0 0 0 0 0 36 0 0
3271 1479 0 0 0 0 0 986 0 0
3272 493 0 0 0 0 0 0 0 0
3273 986 0 0 0 0 0 986 0 0
3274 1972 0 0 986 0 0 493 0 0
4968 493 0 0 493 0 0 0 0 0
4969 2465 0 0 493 0 0 0 0 0
4970 986 0 0 493 194 4 493 0 0
4971 1479 0 0 986 0 0 0 0 0
fn=runtime.exitsyscallfast_reacquired
3246 33285 567 49 0 0 0 11095 0 0
3247 11095 0 0 11095 0 0 0 0 0
3248 55475 0 0 44380 4 2 0 0 0
3260 33285 231 47 22190 0 0 0 0 0
fn=runtime.findrunnable
2122 1919533 77 42 548438 0 0 274219 0 0
2123 550318 0 0 274219 0 0 274219 0 0
2129 274219 0 0 0 0 0 0 0 0
2130 700466 486 101 698638 366 71 0 0 0
2131 630046 150 47 315023 22 16 0 0 0
2132 24 0 0 0 0 0 24 0 0
2133 23 0 0 0 0 0 0 0 0
2135 944997 0 0 314999 309 31 0 0 0
2136 88 23 19 0 0 0 44 0 0
2139 2205037 174 55 630042 0 0 1574995 480 77
2141 1259986 0 0 629993 18 3 0 0 0
2142 6 2 2 2 0 0 2 0 0
2143 8 2 2 0 0 0 6 0 0
2146 1259998 0 0 629998 181 29 0 0 0
2151 2204993 334 58 944997 0 0 629998 0 0
2152 130 6 5 52 0 0 52 2 2
2156 629946 0 0 314973 83 21 0 0 0
2157 822354 43 42 0 0 0 548236 0 0
2158 1644708 0 0 548236 0 0 1096472 2 1
2159 822354 0 0 0 0 0 548236 0 0
2160 822354 33 29 274118 0 0 0 0 0
2161 1370590 0 0 548236 0 0 548236 13 8
2172 367638 179 57 40798 0 0 0 0 0
2178 40855 31 28 0 0 0 0 0 0
2185 40855 0 0 40855 0 0 0 0 0
2190 530563 263 106 204091 114 23 0 0 0
2191 161456 0 0 121092 0 0 0 0 0
2193 4419 0 0 2455 0 0 0 0 0
2194 399 51 36 0 0 0 399 0 0
2195 1596 0 0 798 0 0 0 0 0
2197 44640 142 58 6627 0 0 1880 340 62
2198 75346 0 0 0 0 0 7520 0 0
2199 59400 0 0 29700 0 0 0 0 0
2200 2 0 0 0 0 0 0 0 0
2202 83437 358 58 27796 7 1 0 0 0
2203 176335 321 49 89094 478 56 27845 0 0
2204 87189 0 0 27793 0 0 0 0 0
2207 194915 4 1 27845 0 0 111380 0 0
2208 245 22 8 98 0 0 98 27 11
2218 27796 0 0 0 0 0 0 0 0
2219 59673 460 111 26520 0 0 19893 0 0
2221 26527 357 60 7 0 0 0 0 0
2224 6630 0 0 0 0 0 0 0 0
2233 21 3 3 9 0 0 6 0 0
2234 15 0 0 6 0 0 6 1 1
2241 90932 360 60 27793 0 0 27845 0 0
2251 244961 699 134 40868 454 32 0 0 0
2252 34 13 13 17 17 0 17 0 0
2253 17 14 14 17 0 0 0 0 0
2254 68 0 0 0 0 0 51 0 0
2255 34 0 0 17 0 0 0 0 0
2256 42 18 14 0 0 0 0 0 0
2258 102 1 1 51 0 0 34 17 15
2262 254446 6 5 28222 0 0 68632 0 0
2264 327717 0 0 102736 0 0 68629 7 1
2270 122349 0 0 0 0 0 40781 0 0
2279 163136 329 52 81568 3 1 81568 0 0
2282 122352 0 0 0 0 0 81568 0 0
2283 203920 296 52 122352 8 2 0 0 0
2284 6 2 1 0 0 0 4 0 0
2285 2 0 0 0 0 0 0 0 0
2287 81564 0 0 40782 2 0 0 0 0
2288 81153 1 1 1 0 0 40788 0 0
2289 3 0 0 0 0 0 2 0 0
2290 6 1 1 3 0 0 2 1 0
2292 163124 88 42 81562 0 0 40781 0 0
2295 81562 0 0 0 0 0 81562 0 0
2296 122343 0 0 0 0 0 81562 0 0
2311 291076 4 1 128380 0 0 40781 0 0
2312 122343 0 0 81562 0 0 0 0 0
2313 417 112 44 0 0 0 417 0 0
2314 2502 0 0 834 0 0 0 0 0
2320 662142 64 41 310465 8 0 87596 0 0
2321 350384 135 47 87596 0 0 175192 0 0
2322 121050 0 0 0 0 0 80700 0 0
2323 40350 0 0 0 0 0 0 0 0
2324 121050 0 0 0 0 0 80700 0 0
2325 40350 0 0 0 0 0 0 0 0
2326 80700 2 1 0 0 0 80700 0 0
2327 80700 0 0 0 0 0 0 0 0
2338 2537 728 113 431 431 2 0 0 0
2343 49 24 17 0 0 0 0 0 0
2358 4251 322 50 422 0 0 0 0 0
2359 16 8 7 16 0 0 0 0 0
2360 47278 0 0 47270 0 0 0 0 0
2363 16 0 0 8 0 0 0 0 0
2366 16 0 0 8 6 6 0 0 0
2370 56 14 13 16 0 0 24 8 6
2371 24 0 0 16 0 0 0 0 0
2372 16 0 0 16 0 0 0 0 0
2373 8 0 0 8 8 4 0 0 0
2379 24 8 8 0 0 0 16 0 0
2380 8 1 0 0 0 0 0 0 0
2381 24 5 5 0 0 0 16 0 0
2382 8 0 0 0 0 0 0 0 0
2383 15 1 1 0 0 0 10 0 0
2385 6 0 0 0 0 0 6 0 0
2386 3 1 1 0 0 0 0 0 0
2395 3 0 0 0 0 0 0 0 0
2396 9 0 0 6 0 0 3 0 0
2397 9 0 0 6 0 0 0 0 0
2401 2099 342 43 0 0 0 0 0 0
2402 8 0 0 8 0 0 0 0 0
2403 455 0 0 0 0 0 0 0 0
2407 428 24 12 0 0 0 428 0 0
2408 424 0 0 0 0 0 0 0 0
2695 20256 0 0 13504 4318 265 0 0 0
2698 122 0 0 122 0 0 0 0 0
2699 488 0 0 122 58 20 0 0 0
2702 33 0 0 33 16 6 0 0 0
2703 100 2 1 17 3 2 0 0 0
4968 40358 0 0 40358 0 0 0 0 0
4969 161432 0 0 40358 0 0 0 0 0
4970 80706 0 0 40353 2 0 40353 0 0
4971 121059 4 3 80706 0 0 0 0 0
5265 6 0 0 3 0 0 0 0 0
5422 13160 0 0 1880 452 56 0 0 0
5423 20680 325 110 5640 61 25 0 0 0
5428 63052 592 99 63052 0 0 0 0 0
5432 29646 39 8 29646 0 0 0 0 0
5433 266814 3 1 88938 0 0 29646 0 0
5437 29698 0 0 29698 0 0 0 0 0
fn=runtime.forEachP
1256 378 45 21 126 0 0 63 0 0
1257 63 0 0 0 0 0 0 0 0
1258 189 0 0 189 0 0 0 0 0
1260 189 0 0 0 0 0 126 0 0
1261 126 45 21 63 25 15 0 0 0
1264 189 0 0 63 0 0 63 0 0
1265 340 19 18 126 21 0 63 0 0
1268 4473 37 21 1197 36 0 0 0 0
1269 2016 0 0 0 0 0 0 0 0
1270 3780 0 0 2835 1495 145 0 0 0
1273 63 0 0 0 0 0 63 3 0
1281 6475 0 0 1841 250 16 889 0 0
1282 5334 29 20 889 715 0 0 0 0
1283 3556 0 0 1778 0 0 1778 0 0
1284 1778 0 0 889 0 0 0 0 0
1288 315 35 20 126 0 0 63 0 0
1289 189 0 0 0 0 0 126 0 0
1292 315 0 0 189 0 0 126 0 0
1296 8586 58 42 1152 83 0 132 0 0
1297 1008 0 0 1008 949 0 0 0 0
1298 5070 0 0 12 6 0 0 0 0
1299 12 0 0 6 4 4 0 0 0
1303 6 0 0 6 0 0 0 0 0
1304 18 0 0 0 0 0 12 0 0
1309 63 0 0 0 0 0 0 0 0
1315 360 38 26 60 0 0 180 0 0
1316 45 0 0 0 0 0 0 0 0
1319 15 3 1 0 0 0 15 0 0
1322 171 23 8 63 0 0 0 0 0
1325 4410 40 24 1134 3 0 0 0 0
1326 3024 0 0 1008 946 38 0 0 0
1331 189 0 0 0 0 0 126 38 0
1332 321 33 24 63 57 0 63 0 0
1333 189 0 0 0 0 0 126 0 0
1334 63 0 0 0 0 0 0 0 0
fn=runtime.forcegchelper
245 6 1 1 2 0 0 1 0 0
246 4 1 1 2 0 0 1 1 0
247 1 0 0 0 0 0 0 0 0
248 3 1 1 0 0 0 2 1 1
249 2 0 0 1 0 0 0 0 0
252 3 0 0 2 0 0 0 0 0
253 1 0 0 0 0 0 0 0 0
310 7 1 1 0 0 0 5 0 0
fn=runtime.funcPC
416 2 1 1 2 0 0 0 0 0
fn=runtime.gcAssistAlloc
269 6 2 1 0 0 0 4 0 0
fn=runtime.gcWaitOnMark
310 63 0 0 0 0 0 45 0 0
5270 18 0 0 9 0 0 9 0 0
5271 9 0 0 0 0 0 0 0 0
fn=runtime.gcWakeAllAssists
5252 19 0 0 19 0 0 0 0 0
5253 38 0 0 0 0 0 19 0 0
fn=runtime.gcd
5441 10260 43 37 1824 0 0 0 0 0
5442 11400 0 0 0 0 0 0 0 0
5444 3762 0 0 0 0 0 912 0 0
fn=runtime.gcstopm
2053 252 41 36 84 0 0 42 0 0
2054 42 0 0 42 0 0 0 0 0
2056 84 0 0 42 0 0 0 0 0
2059 126 0 0 84 0 0 0 0 0
2060 27 0 0 0 0 0 27 0 0
2063 162 13 12 54 0 0 0 0 0
2067 126 7 6 42 0 0 84 0 0
2068 126 0 0 0 0 0 84 0 0
2069 84 0 0 42 0 0 42 0 0
2070 126 0 0 42 0 0 42 0 0
2071 84 0 0 0 0 0 0 0 0
2072 120 5 5 0 0 0 60 0 0
2074 126 6 4 0 0 0 84 0 0
2075 42 0 0 0 0 0 42 0 0
2076 120 18 12 80 24 12 0 0 0
fn=runtime.gfget
3623 174 12 7 58 0 0 29 0 0
3624 58 0 0 29 0 0 0 0 0
3625 106 14 7 29 13 2 0 0 0
3644 29 5 4 0 0 0 0 0 0
3645 29 0 0 0 0 0 0 0 0
3646 96 8 3 48 0 0 24 0 0
3648 5 0 0 5 0 0 0 0 0
3649 10 0 0 5 2 0 0 0 0
3663 20 5 5 10 0 0 5 0 0
5265 77 18 3 48 21 3 0 0 0
5284 29 0 0 0 0 0 0 0 0
5285 58 0 0 0 0 0 0 0 0
5286 10 0 0 5 3 0 5 0 0
fn=runtime.gfput
733 8 0 0 8 0 0 0 0 0
3588 48 8 7 16 0 0 8 0 0
3589 24 8 7 8 0 0 0 0 0
3593 32 0 0 16 0 0 0 0 0
3595 16 0 0 0 0 0 0 0 0
3597 3 1 0 0 0 0 3 0 0
3599 3 1 1 1 0 0 1 0 0
3600 2 0 0 0 0 0 1 0 0
3603 16 0 0 16 7 6 0 0 0
3604 24 8 7 8 0 0 8 0 0
3605 16 0 0 0 0 0 0 0 0
3617 24 7 7 16 0 0 0 0 0
5270 8 0 0 0 0 0 8 0 0
5271 8 0 0 0 0 0 0 0 0
fn=runtime.globrunqget
4923 1672110 37 33 557370 0 0 278685 0 0
4924 1393425 0 0 278685 0 0 0 0 0
4928 2508165 34 33 278685 69 2 0 0 0
4929 557370 0 0 0 0 0 0 0 0
4932 845187 0 0 278685 0 0 0 0 0
4935 1114740 72 67 0 0 0 0 0 0
4939 1114740 0 0 0 0 0 278685 0 0
4941 278685 0 0 0 0 0 0 0 0
4942 278685 0 0 0 0 0 0 0 0
4943 836055 0 0 0 0 0 0 0 0
4947 1114740 0 0 557370 0 0 278685 0 0
5240 278685 0 0 278685 0 0 0 0 0
5241 278685 0 0 0 0 0 0 0 0
5242 557370 0 0 278685 18 10 278685 0 0
5243 557370 0 0 0 0 0 0 0 0
5244 246816 0 0 0 0 0 246816 0 0
fn=runtime.goexit0
2619 8 8 7 8 0 0 0 0 0
2621 24 0 0 16 0 0 8 0 0
2622 16 0 0 8 0 0 8 0 0
2839 48 8 7 16 0 0 8 0 0
2840 16 0 0 8 0 0 8 0 0
2842 40 8 7 8 0 0 24 0 0
2843 48 0 0 16 0 0 24 0 0
2846 40 8 7 16 0 0 8 0 0
2847 40 8 7 16 7 7 8 0 0
2848 8 0 0 0 0 0 8 0 0
2849 24 8 7 16 0 0 8 7 6
2850 8 0 0 0 0 0 8 0 0
2851 8 0 0 0 0 0 8 0 0
2852 24 0 0 8 0 0 8 0 0
2853 8 0 0 0 0 0 8 0 0
2854 40 8 7 8 0 0 16 0 0
2855 8 0 0 0 0 0 8 0 0
2856 24 0 0 8 0 0 8 0 0
2858 8 0 0 0 0 0 8 7 7
2860 16 8 7 8 7 0 0 0 0
2869 8 0 0 0 0 0 0 0 0
2876 32 0 0 16 7 6 0 0 0
2880 32 0 0 8 0 0 24 0 0
2881 8 0 0 0 0 0 0 0 0
2896 8 0 0 0 0 0 8 0 0
fn=runtime.goexit1
2828 48 8 7 16 0 0 8 0 0
2832 16 8 7 8 0 0 0 0 0
2835 24 0 0 0 0 0 16 0 0
fn=runtime.gopark
287 942 106 70 326 3 0 151 0 0
291 151 0 0 0 0 0 0 0 0
292 151 0 0 151 0 0 0 0 0
293 151 0 0 0 0 0 0 0 0
294 604 51 32 0 0 0 0 0 0
297 670 24 16 302 15 1 151 67 35
298 335 0 0 151 0 0 151 0 0
299 302 0 0 151 0 0 151 0 0
300 302 53 32 151 0 0 151 0 0
301 302 0 0 151 0 0 151 0 0
302 151 0 0 0 0 0 0 0 0
304 453 15 8 0 0 0 302 1 0
305 393 29 21 262 111 81 0 0 0
733 151 0 0 151 0 0 0 0 0
fn=runtime.gopreempt_m
2776 96 16 16 32 0 0 16 2 2
2777 32 0 0 16 5 1 0 0 0
2780 48 0 0 16 0 0 32 5 1
fn=runtime.goready
313 168 36 26 56 0 0 28 0 0
314 336 8 2 56 0 0 196 8 7
317 84 0 0 56 0 0 0 0 0
fn=runtime.goready.func1
314 224 27 20 112 0 0 28 0 0
315 112 0 0 0 0 0 112 3 2
316 84 28 18 56 0 0 0 0 0
fn=runtime.goschedImpl
733 278676 0 0 278676 64 2 0 0 0
2619 278676 0 0 278676 0 0 0 0 0
2621 836028 0 0 557352 60 3 278676 0 0
2622 557352 35 32 278676 0 0 278676 0 0
2740 1672056 34 32 557352 0 0 278676 0 0
2741 278676 0 0 278676 0 0 0 0 0
2742 836028 35 32 0 0 0 0 0 0
2746 1114704 0 0 0 0 0 836028 70 8
2747 278676 0 0 0 0 0 0 0 0
2748 836028 0 0 0 0 0 557352 0 0
2749 278676 0 0 0 0 0 0 0 0
2750 836028 0 0 0 0 0 557352 0 0
2752 278676 0 0 0 0 0 278676 0 0
4899 278676 0 0 0 0 0 0 0 0
4900 278676 0 0 278676 0 0 0 0 0
5213 557352 0 0 278676 0 0 278676 0 0
5214 836028 0 0 278676 72 23 0 0 0
5215 31869 0 0 0 0 0 31869 8 0
5217 246807 0 0 0 0 0 0 0 0
5219 278676 0 0 0 0 0 0 0 0
fn=runtime.gosched_m
2756 1671960 44 42 557320 0 0 278660 0 0
2757 557320 0 0 278660 57 6 0 0 0
2760 835980 0 0 278660 0 0 557320 70 7
fn=runtime.handoffp
1937 2964 407 60 988 0 0 494 0 0
1942 3424 0 0 1465 106 1 988 0 0
1943 72 0 0 18 0 0 54 0 0
1944 54 0 0 36 0 0 0 0 0
1947 2385 204 57 476 1 0 0 0 0
1948 947 455 28 466 0 0 15 0 0
1949 20 5 0 10 0 0 0 0 0
1953 3768 296 28 942 0 0 0 0 0
1955 942 68 26 0 0 0 0 0 0
1957 1413 0 0 0 0 0 942 0 0
1958 942 0 0 471 0 0 0 0 0
1967 3303 121 25 944 0 0 0 0 0
1968 8 2 2 4 0 0 4 0 0
1969 6 0 0 2 0 0 2 0 0
1970 4 0 0 0 0 0 0 0 0
1971 473 0 0 0 0 0 2 0 0
1974 944 0 0 471 0 0 0 0 0
1981 3915 140 27 1251 0 0 0 0 0
1982 927 259 18 0 0 0 618 0 0
1983 1236 0 0 309 0 0 927 0 0
1984 1089 62 12 618 0 0 0 0 0
1986 324 0 0 0 0 0 0 0 0
1989 324 151 12 0 0 0 324 0 0
1990 486 0 0 0 0 0 324 0 0
1991 486 0 0 324 0 0 0 0 0
fn=runtime.incidlelocked
4393 5664 660 58 1888 117 13 944 0 0
4394 2832 0 0 0 0 0 1888 0 0
4395 1888 0 0 1888 38 1 0 0 0
4396 1888 0 0 0 0 0 0 0 0
4397 944 53 4 0 0 0 472 0 0
4399 2832 0 0 0 0 0 1888 0 0
4400 2832 273 14 1888 0 0 0 0 0
fn=runtime.init.5
416 6 0 0 4 1 1 0 0 0
fn=runtime.init.6
241 6 1 1 2 0 0 1 0 0
242 4 0 0 0 0 0 3 0 0
243 3 0 0 2 0 0 0 0 0
fn=runtime.initsig
416 168 0 0 112 1 1 0 0 0
fn=runtime.injectglist
2468 558 87 79 186 0 0 93 0 0
2469 186 0 0 93 0 0 0 0 0
2470 252 18 10 168 0 0 0 0 0
2472 18 0 0 9 0 0 0 0 0
2477 36 9 8 0 0 0 18 0 0
2479 45 0 0 9 0 0 0 0 0
2480 9 0 0 0 0 0 0 0 0
2481 36 9 8 0 0 0 27 0 0
2482 9 0 0 0 0 0 0 0 0
2484 27 0 0 0 0 0 18 0 0
2485 72 9 8 18 0 0 18 0 0
2488 18 0 0 9 0 0 9 0 0
2489 27 0 0 18 0 0 0 0 0
4899 9 0 0 0 0 0 0 0 0
4900 9 0 0 9 0 0 0 0 0
5213 18 0 0 9 0 0 9 0 0
5214 27 0 0 9 0 0 0 0 0
5217 9 9 8 0 0 0 0 0 0
5219 9 0 0 0 0 0 0 0 0
5265 240 0 0 129 1 0 0 0 0
5284 9 0 0 0 0 0 0 0 0
5285 18 0 0 0 0 0 0 0 0
5286 18 0 0 9 7 4 9 0 0
fn=runtime.mReserveID
612 48 14 4 16 0 0 8 0 0
613 40 0 0 8 1 0 8 0 0
617 8 0 0 0 0 0 8 0 0
618 8 0 0 0 0 0 8 2 2
619 40 6 1 24 0 0 8 0 0
fn=runtime.main
113 9 1 1 2 0 0 3 1 1
114 2 1 1 1 0 0 1 0 0
118 3 0 0 2 0 0 1 1 1
124 1 0 0 0 0 0 1 1 0
130 1 0 0 0 0 0 1 0 0
133 3 0 0 0 0 0 2 0 0
144 1 0 0 0 0 0 0 0 0
146 5 1 1 2 0 0 0 0 0
150 3 0 0 0 0 0 2 0 0
151 1 0 0 0 0 0 0 0 0
156 1 0 0 0 0 0 1 0 0
157 5 1 1 0 0 0 3 0 0
164 1 0 0 0 0 0 1 0 0
166 1 0 0 0 0 0 1 0 0
168 8 2 1 2 0 0 4 1 0
169 2 0 0 1 0 0 0 0 0
190 3 2 2 0 0 0 2 0 0
192 3 1 0 1 1 0 2 0 0
194 1 0 0 0 0 0 1 0 0
195 1 0 0 0 0 0 1 0 0
197 4 0 0 2 0 0 0 0 0
203 3 1 1 1 1 0 1 0 0
3695 1 0 0 1 0 0 0 0 0
3696 2 0 0 1 0 0 1 0 0
3697 1 0 0 1 0 0 0 0 0
3734 3 1 1 3 0 0 0 0 0
3735 1 0 0 0 0 0 0 0 0
fn=runtime.main.func1
133 6 2 2 2 0 0 1 0 0
134 5 0 0 0 0 0 4 0 0
135 3 0 0 2 0 0 0 0 0
fn=runtime.malg
3413 234 10 4 78 0 0 39 0 0
3414 195 9 4 39 0 0 117 1 0
3415 117 0 0 39 0 0 0 0 0
3416 117 0 0 39 0 0 78 0 0
3417 429 10 4 39 0 0 312 0 0
3420 156 2 2 78 0 0 39 0 0
3421 39 0 0 0 0 0 39 0 0
3424 117 0 0 39 0 0 39 8 8
3426 156 0 0 78 0 0 39 0 0
fn=runtime.malg.func1
3417 351 30 8 156 0 0 78 0 0
3418 273 0 0 117 0 0 156 38 38
3419 117 0 0 78 0 0 0 0 0
fn=runtime.markroot
733 426 0 0 426 407 131 0 0 0
fn=runtime.markroot.func1
733 19 0 0 19 0 0 0 0 0
fn=runtime.markrootFreeGStacks
5265 19 0 0 19 0 0 0 0 0
fn=runtime.mcommoninit
623 51 10 3 16 0 0 8 0 0
624 8 0 0 8 0 0 0 0 0
627 24 0 0 16 1 0 0 0 0
631 24 0 0 0 0 0 16 0 0
633 24 7 2 8 0 0 0 0 0
634 12 0 0 6 0 0 6 4 4
636 10 2 1 4 0 0 4 1 1
639 40 4 2 24 3 1 16 5 5
640 56 6 2 24 0 0 24 0 0
641 32 0 0 8 0 0 0 0 0
645 16 0 0 0 0 0 16 0 0
646 32 1 0 16 0 0 0 0 0
647 24 0 0 8 0 0 8 0 0
652 41 8 3 16 4 2 8 4 4
656 35 0 0 0 0 0 24 0 0
657 24 0 0 0 0 0 16 0 0
660 40 6 2 24 0 0 0 0 0
fn=runtime.mspinning
1868 15 0 0 10 0 0 5 0 0
fn=runtime.mstart
1056 24 2 2 0 0 0 8 0 0
1057 8 0 0 8 0 0 0 0 0
1059 24 0 0 8 0 0 8 0 0
1060 8 0 0 0 0 0 0 0 0
1073 24 3 3 8 0 0 8 0 0
1076 8 0 0 0 0 0 8 0 0
1077 8 0 0 0 0 0 8 0 0
fn=runtime.mstart1
1090 48 4 3 16 0 0 8 0 0
1091 16 0 0 8 0 0 8 0 0
1093 24 2 2 16 3 1 0 0 0
1101 40 0 0 8 0 0 24 7 7
1102 8 0 0 0 0 0 8 0 0
1103 8 0 0 0 0 0 8 0 0
1107 32 0 0 16 0 0 0 0 0
1108 3 1 1 0 0 0 1 0 0
1111 33 3 3 17 0 0 0 0 0
1112 22 3 2 6 1 1 6 0 0
1115 26 0 0 12 0 0 0 0 0
1116 18 0 0 6 1 1 12 0 0
1117 24 1 0 12 0 0 6 0 0
1119 7 0 0 0 0 0 7 0 0
fn=runtime.mstartm0
1128 6 1 1 2 0 0 1 0 0
1132 2 1 1 1 0 0 0 0 0
1136 2 0 0 0 0 0 2 0 0
1137 3 0 0 2 0 0 0 0 0
fn=runtime.newm
1729 42 4 4 14 0 0 7 0 0
1730 63 0 0 28 0 0 35 0 0
1731 7 6 2 0 0 0 7 0 0
1732 14 0 0 7 2 0 7 0 0
1733 70 0 0 28 4 3 0 0 0
1758 14 5 2 0 0 0 14 0 0
1759 21 0 0 14 2 2 0 0 0
fn=runtime.newm1
1761 42 7 4 14 0 0 7 0 0
1762 14 0 0 7 0 0 0 0 0
1778 21 3 2 0 0 0 14 0 0
1779 21 2 2 7 0 0 14 0 0
1780 21 0 0 0 0 0 14 0 0
1781 21 0 0 14 2 2 0 0 0
fn=runtime.newosproc
416 21 0 0 14 4 2 0 0 0
fn=runtime.newproc
3436 87 26 6 0 0 0 29 0 0
3437 29 12 7 29 0 0 0 0 0
3440 522 11 7 58 0 0 319 0 0
fn=runtime.newproc.func1
3440 319 28 7 203 0 0 29 0 0
3441 203 13 7 29 0 0 174 0 0
3442 87 1 0 58 0 0 0 0 0
fn=runtime.newproc1
416 87 0 0 29 23 2 0 0 0
733 29 0 0 29 0 0 0 0 0
1997 119 0 0 17 0 0 0 0 0
2000 51 8 5 0 0 0 51 0 0
3448 174 12 7 58 0 0 29 0 0
3449 58 0 0 29 0 0 29 0 0
3451 87 0 0 29 0 0 0 0 0
3455 29 0 0 0 0 0 0 0 0
3457 116 0 0 29 0 0 29 0 0
3463 58 12 7 0 0 0 0 0 0
3467 58 0 0 58 0 0 0 0 0
3468 87 0 0 29 0 0 58 0 0
3469 58 0 0 0 0 0 0 0 0
3470 96 16 6 24 0 0 72 0 0
3471 96 0 0 0 0 0 72 0 0
3472 96 0 0 24 0 0 48 0 0
3474 111 16 7 53 0 0 29 0 0
3478 58 0 0 0 0 0 0 0 0
3482 87 0 0 29 0 0 0 0 0
3484 87 0 0 29 0 0 29 0 0
3492 87 0 0 29 0 0 0 0 0
3493 156 21 14 26 0 0 104 0 0
3500 104 0 0 26 0 0 0 0 0
3511 142 27 7 26 0 0 87 0 0
3512 87 0 0 58 0 0 29 0 0
3513 29 0 0 0 0 0 29 0 0
3514 58 0 0 0 0 0 29 0 0
3515 58 16 7 0 0 0 29 0 0
3516 29 0 0 0 0 0 0 0 0
3517 58 23 7 29 0 0 29 25 23
3518 232 0 0 116 0 0 87 0 0
3519 87 17 7 58 0 0 29 0 0
3520 171 5 4 87 0 0 0 0 0
3521 112 0 0 56 4 4 28 24 22
3523 145 11 7 29 0 0 87 0 0
3524 60 0 0 40 0 0 0 0 0
3526 145 0 0 29 0 0 87 0 0
3528 116 16 7 87 25 5 0 0 0
3532 12 0 0 8 2 0 0 0 0
3533 8 0 0 0 0 0 4 0 0
3534 8 0 0 0 0 0 4 0 0
3536 87 11 7 58 0 0 29 0 0
3537 29 0 0 29 0 0 0 0 0
3541 58 0 0 29 0 0 0 0 0
3544 116 0 0 0 0 0 116 0 0
3546 268 11 7 76 4 1 0 0 0
3547 17 0 0 0 0 0 0 0 0
3549 58 0 0 58 0 0 0 0 0
fn=runtime.park_m
2619 151 0 0 151 0 0 0 0 0
2621 453 0 0 302 0 0 151 0 0
2622 302 0 0 151 0 0 151 0 0
2715 906 52 30 302 0 0 151 0 0
2716 335 0 0 151 0 0 151 21 5
2718 302 57 33 151 7 2 0 0 0
2722 755 0 0 151 0 0 453 0 0
2723 151 0 0 0 0 0 0 0 0
2725 755 0 0 453 0 0 0 0 0
2726 1359 55 35 604 30 17 453 0 0
2727 1005 25 22 453 0 0 151 0 0
2728 887 83 59 302 0 0 151 0 0
2729 151 0 0 0 0 0 0 0 0
2737 151 0 0 0 0 0 151 0 0
fn=runtime.parkunlock_c
2709 570 41 27 190 0 0 95 0 0
2710 285 0 0 95 0 0 190 0 0
2711 380 0 0 190 0 0 95 0 0
fn=runtime.pidleput
4954 250788 395 62 83596 0 0 41798 0 0
4955 208990 295 64 83596 0 0 83596 68 0
4958 125394 0 0 83596 30 5 41798 0 0
4959 41798 0 0 0 0 0 0 0 0
4960 125394 0 0 83596 0 0 0 0 0
4961 125394 0 0 83596 0 0 0 0 0
fn=runtime.pollWork
2415 10218 9 8 3406 13 0 1703 0 0
2416 3406 0 0 1703 1447 397 0 0 0
2419 5109 9 8 5109 1405 29 0 0 0
2420 6812 0 0 1703 0 0 3406 0 0
2421 4 1 1 2 0 0 1 0 0
2423 10212 0 0 1702 0 0 0 0 0
2429 6808 9 8 3404 0 0 1702 0 0
fn=runtime.preemptPark
733 2 1 1 2 0 0 0 0 0
2619 1 0 0 1 0 0 0 0 0
2621 3 1 1 2 0 0 1 0 0
2622 2 0 0 1 0 0 1 0 0
2786 6 1 1 2 0 0 1 0 0
2787 2 0 0 1 1 0 0 0 0
2790 1 0 0 0 0 0 0 0 0
2791 3 0 0 0 0 0 0 0 0
2795 1 0 0 0 0 0 1 0 0
2802 4 0 0 0 0 0 3 1 0
2803 1 0 0 0 0 0 0 0 0
2804 5 0 0 1 0 0 3 0 0
2805 1 1 1 0 0 0 1 0 0
fn=runtime.preemptall
4703 858 48 25 286 0 0 143 0 0
4705 11091 48 36 3063 37 22 449 0 0
4706 4576 0 0 2288 1610 159 0 0 0
4709 652 53 37 163 0 0 326 4 3
4713 1061 0 0 449 0 0 306 32 11
fn=runtime.preemptone
4726 11154 354 59 3718 4 1 1859 0 0
4727 3718 0 0 3718 0 0 0 0 0
4728 7828 0 0 2740 0 0 0 0 0
4729 2492 124 45 1246 0 0 623 0 0
4731 1236 18 9 1236 630 60 0 0 0
4732 2898 0 0 213 159 30 0 0 0
4733 4092 0 0 2046 0 0 1023 0 0
4736 213 0 0 0 0 0 213 159 31
4742 213 0 0 0 0 0 213 150 20
4745 426 37 29 213 133 14 0 0 0
4746 213 0 0 0 0 0 213 167 18
4747 213 0 0 0 0 0 0 0 0
4750 852 5 1 426 0 0 213 3 2
fn=runtime.procresize
4214 456 98 75 114 0 0 57 0 0
4215 171 0 0 57 0 0 57 0 0
4216 285 0 0 57 0 0 0 0 0
4219 114 50 38 57 18 1 0 0 0
4225 172 0 0 57 38 12 0 0 0
4226 336 0 0 112 0 0 0 0 0
4228 58 48 35 0 0 0 57 0 0
4231 228 0 0 114 19 0 0 0 0
4234 3 1 1 0 0 0 2 0 0
4235 4 0 0 2 0 0 0 0 0
4238 9 2 2 1 0 0 6 0 0
4241 12 1 1 3 0 0 8 0 0
4242 8 0 0 3 0 0 3 0 0
4244 4 0 0 0 0 0 2 0 0
4248 286 48 39 35 0 0 16 0 0
4249 112 0 0 48 2 2 16 0 0
4250 32 0 0 0 0 0 0 0 0
4251 80 2 2 16 0 0 32 0 0
4253 80 0 0 16 0 0 64 0 0
4254 160 0 0 64 0 0 48 0 0
4257 114 50 37 57 0 0 57 0 0
4258 341 0 0 170 55 0 0 0 0
4260 56 48 38 0 0 0 56 0 0
4261 336 47 34 168 47 0 112 0 0
4268 1 1 1 0 0 0 0 0 0
4278 2 0 0 1 0 0 1 0 0
4279 2 0 0 1 0 0 1 0 0
4280 5 1 1 3 1 0 0 0 0
4281 1 0 0 0 0 0 1 1 0
4282 1 0 0 0 0 0 1 0 0
4283 2 0 0 0 0 0 2 0 0
4284 2 0 0 1 0 0 0 0 0
4290 301 50 37 130 10 8 0 0 0
4297 171 52 37 57 5 0 0 0 0
4304 4788 49 37 912 2 2 855 0 0
4305 6327 0 0 2736 44 0 855 0 0
4306 5358 0 0 2679 5 0 0 0 0
4309 855 0 0 0 0 0 855 680 0
4310 3420 44 32 855 0 0 1710 0 0
4311 3420 50 35 855 0 0 1710 0 0
4314 2679 0 0 855 0 0 969 0 0
4318 1083 49 37 855 0 0 171 0 0
4320 171 0 0 171 2 0 0 0 0
4321 285 0 0 171 0 0 57 1 0
fn=runtime.ready
673 558 38 28 186 0 0 93 0 0
674 186 0 0 93 0 0 0 0 0
678 93 0 0 0 0 0 0 0 0
681 186 39 28 93 0 0 93 0 0
682 93 0 0 0 0 0 0 0 0
683 279 0 0 0 0 0 0 0 0
689 372 38 28 0 0 0 279 5 5
690 837 0 0 465 0 0 372 0 0
691 652 37 29 140 2 2 0 0 0
692 50 14 12 0 0 0 0 0 0
694 93 0 0 0 0 0 0 0 0
733 186 0 0 186 51 32 0 0 0
1997 28 0 0 4 0 0 0 0 0
2000 12 3 3 0 0 0 12 0 0
fn=runtime.reentersyscall
2960 34716 56 35 0 0 0 11572 1542 36
2961 23144 0 0 11572 0 0 11572 1 1
2965 23144 271 49 23144 0 0 0 0 0
2971 11572 0 0 0 0 0 11572 0 0
2972 11572 0 0 0 0 0 11572 1 1
2975 57860 0 0 23144 0 0 34716 0 0
2976 34716 0 0 23144 0 0 11572 0 0
2977 23144 606 56 11572 0 0 11572 0 0
2978 46288 0 0 0 0 0 34716 0 0
2979 46288 0 0 34716 0 0 0 0 0
2986 23144 81 43 11572 214 13 0 0 0
2994 34716 0 0 11572 5778 53 0 0 0
2999 69432 74 38 46288 3722 42 0 0 0
3005 46288 0 0 34716 7076 45 11572 5510 70
3006 11572 0 0 0 0 0 11572 0 0
3007 23144 0 0 11572 0 0 11572 1 0
3008 23144 175 40 23144 0 0 0 0 0
3009 11572 0 0 0 0 0 11572 0 0
3010 23144 0 0 11572 0 0 11572 0 0
3011 23144 0 0 11572 0 0 11572 0 0
3012 23144 0 0 23144 0 0 0 0 0
3013 23144 0 0 11572 0 0 0 0 0
3018 23144 284 49 23144 0 0 0 0 0
3019 34716 0 0 23144 0 0 0 0 0
fn=runtime.releaseSudog
358 84 15 10 0 0 0 28 0 0
359 84 23 19 56 0 0 0 0 0
362 56 0 0 28 1 0 0 0 0
365 56 0 0 28 0 0 0 0 0
368 56 0 0 28 0 0 0 0 0
371 56 0 0 28 7 1 0 0 0
374 56 21 17 28 0 0 0 0 0
377 28 0 0 28 0 0 0 0 0
378 56 0 0 28 0 0 0 0 0
381 28 0 0 0 0 0 0 0 0
382 28 0 0 28 0 0 0 0 0
383 84 24 20 56 16 3 0 0 0
403 392 49 39 168 0 0 56 10 5
404 28 0 0 0 0 0 0 0 0
fn=runtime.releasep
4372 245052 341 57 81684 0 0 40842 0 0
4373 40842 0 0 40842 0 0 0 0 0
4375 367578 170 54 122526 10 1 81684 1 0
4378 40842 0 0 0 0 0 0 0 0
4379 326736 165 54 122526 440 7 40842 0 0
4383 81684 0 0 40842 0 0 0 0 0
4386 81684 0 0 40842 0 0 40842 0 0
4387 81684 0 0 40842 0 0 40842 0 0
4388 40842 0 0 0 0 0 40842 0 0
4389 40842 0 0 0 0 0 40842 0 0
4390 163368 181 56 81684 0 0 40842 0 0
fn=runtime.resetspinning
1997 594 43 27 234 3 2 0 0 0
2000 162 0 0 0 0 0 162 0 0
2448 540 62 38 180 3 0 90 0 0
2449 90 0 0 90 0 0 0 0 0
2450 270 55 37 180 0 0 0 0 0
2453 90 0 0 0 0 0 90 0 0
2454 360 0 0 180 17 13 0 0 0
2455 180 0 0 0 0 0 0 0 0
2461 472 0 0 56 0 0 0 0 0
2462 88 15 11 0 0 0 0 0 0
fn=runtime.resumeG
733 848 0 0 848 0 0 0 0 0
fn=runtime.retake
4629 3450 99 44 1150 39 4 575 0 0
4633 1725 0 0 0 0 0 1150 20 2
4637 59734 136 45 29834 626 4 9200 0 0
4638 18400 0 0 9200 119 10 9200 0 0
4639 18400 0 0 0 0 0 0 0 0
4645 18400 0 0 9200 6919 249 9200 0 0
4647 53842 202 52 0 0 0 0 0 0
4649 679 0 0 679 0 0 0 0 0
4650 2037 62 24 679 0 0 0 0 0
4651 65 0 0 0 0 0 65 0 0
4652 18413 0 0 9132 0 0 65 0 0
4653 5916 189 18 1730 8 2 558 0 0
4654 1116 0 0 0 0 0 1116 0 0
4657 558 0 0 0 0 0 0 0 0
4660 27619 78 26 558 0 0 0 0 0
4662 1097 0 0 1097 0 0 0 0 0
4663 1228 0 0 50 0 0 0 0 0
4664 49 0 0 0 0 0 49 0 0
4665 607 0 0 0 0 0 49 0 0
4666 49 0 0 0 0 0 0 0 0
4671 8330 92 29 2940 26 2 980 0 0
4672 19 0 0 0 0 0 0 0 0
4675 1413 96 28 0 0 0 942 0 0
4680 942 0 0 0 0 0 942 0 0
4681 3297 92 23 1413 0 0 0 0 0
4682 942 0 0 471 0 0 0 0 0
4686 30029 517 116 1519 62 6 10246 0 0
4687 471 0 0 471 0 0 0 0 0
4688 942 0 0 0 0 0 942 0 0
4690 942 0 0 0 0 0 942 0 0
4691 1413 0 0 0 0 0 942 0 0
4694 1725 0 0 0 0 0 1150 0 0
4695 2875 295 36 1725 0 0 575 71 8
fn=runtime.runSafePointFn
1348 324 30 20 108 0 0 54 0 0
1349 162 32 20 162 0 0 0 0 0
1353 378 0 0 54 0 0 0 0 0
1356 216 0 0 108 50 3 108 0 0
1357 162 0 0 0 0 0 108 0 0
1358 162 37 20 54 0 0 54 0 0
1359 108 0 0 0 0 0 0 0 0
1360 176 0 0 0 0 0 88 0 0
1362 162 0 0 0 0 0 108 0 0
1363 162 0 0 108 1 0 0 0 0
fn=runtime.runfinq
310 21 1 1 0 0 0 15 0 0
fn=runtime.runqempty
4983 133064 251 66 133064 0 0 0 0 0
4984 133064 0 0 133064 8433 233 0 0 0
4985 133064 68 43 133064 0 0 0 0 0
4986 133064 0 0 133064 8883 255 0 0 0
4987 399192 0 0 133064 0 0 0 0 0
4988 665316 0 0 0 0 0 133064 0 0
fn=runtime.runqget
5087 1767795 181 53 0 0 0 589265 0 0
5089 589265 112 51 589265 0 0 0 0 0
5090 589311 0 0 589265 418 43 46 0 0
5091 1178530 0 0 0 0 0 0 0 0
5094 46 0 0 0 0 0 0 0 0
5095 230 0 0 92 0 0 92 0 0
5100 589219 331 57 589219 408 35 0 0 0
5101 589219 0 0 589219 0 0 0 0 0
5102 1178438 0 0 0 0 0 0 0 0
5103 589193 347 53 0 0 0 589193 0 0
5105 52 0 0 26 4 1 0 0 0
5106 156 0 0 26 0 0 0 0 0
5107 130 0 0 52 0 0 52 0 0
fn=runtime.runqgrab
5116 194941 361 57 55712 0 0 27845 0 0
5117 111380 0 0 111380 0 0 0 0 0
5118 27860 5 1 27860 11146 628 0 0 0
5119 27860 0 0 27860 0 0 0 0 0
5120 27860 0 0 0 0 0 0 0 0
5121 83580 0 0 0 0 0 0 0 0
5122 55720 0 0 0 0 0 0 0 0
5123 27827 0 0 0 0 0 0 0 0
5125 20380 336 55 6783 6771 738 31 0 0
5126 62 0 0 31 22 1 0 0 0
5138 44 0 0 0 0 0 44 18 1
5146 31 0 0 0 0 0 0 0 0
5149 64 0 0 16 0 0 16 6 2
5150 64 0 0 32 0 0 16 0 0
5153 111184 338 57 55592 0 0 27796 0 0
5155 99 25 19 0 0 0 0 0 0
5156 33 0 0 0 0 0 0 0 0
5158 165 0 0 0 0 0 0 0 0
5159 99 0 0 33 21 2 0 0 0
5160 176 0 0 44 0 0 33 19 14
5162 198 1 0 33 0 0 0 0 0
5163 132 0 0 66 0 0 33 0 0
fn=runtime.runqput
5009 976 61 43 366 0 0 122 0 0
5014 402 0 0 158 0 0 0 0 0
5016 158 0 0 79 57 10 79 1 1
5017 158 0 0 0 0 0 0 0 0
5020 237 0 0 79 0 0 0 0 0
5021 186 30 21 124 0 0 0 0 0
5024 17 0 0 0 0 0 0 0 0
5028 103 7 6 103 22 2 0 0 0
5029 60 0 0 60 0 0 0 0 0
5030 240 0 0 0 0 0 0 0 0
5031 223 38 30 43 0 0 60 0 0
5032 120 0 0 120 0 0 0 0 0
5033 180 6 2 120 0 0 0 0 0
fn=runtime.runqsteal
5171 167070 265 110 55690 5 1 27845 0 0
5172 83535 0 0 55690 7 1 27845 19 11
5173 250605 59 44 83535 0 0 139225 0 0
5174 55690 0 0 0 0 0 0 0 0
5175 111184 72 47 55592 0 0 27796 10 1
5178 294 0 0 147 8 0 0 0 0
5179 98 0 0 0 0 0 0 0 0
5180 196 0 0 98 0 0 49 0 0
fn=runtime.save
2908 11612 367 54 11612 0 0 0 0 0
2910 23224 0 0 11612 0 0 11612 226 28
2911 23224 0 0 11612 0 0 11612 0 0
2912 11612 0 0 0 0 0 11612 0 0
2913 11612 0 0 0 0 0 11612 0 0
2914 23224 10 3 0 0 0 11612 0 0
2918 34836 0 0 23224 0 0 0 0 0
fn=runtime.saveAncestors
3555 203 15 7 58 0 0 29 0 0
3557 87 0 0 29 0 0 0 0 0
3558 116 11 7 58 0 0 29 0 0
fn=runtime.scanstack
733 848 0 0 848 0 0 0 0 0
fn=runtime.scavengeSleep
310 210 0 0 0 0 0 150 0 0
fn=runtime.schedEnableUser
4841 114 19 18 38 0 0 19 0 0
4842 57 19 18 0 0 0 38 0 0
4843 95 0 0 38 0 0 0 0 0
4844 57 19 18 0 0 0 38 0 0
4845 57 19 18 38 0 0 0 0 0
fn=runtime.schedinit
416 3 0 0 2 1 1 0 0 0
532 6 2 2 2 0 0 1 0 0
535 2 0 0 1 0 0 1 0 0
540 1 0 0 0 0 0 1 1 1
542 1 0 0 0 0 0 0 0 0
543 1 0 0 0 0 0 1 0 0
544 1 0 0 0 0 0 1 0 0
545 1 0 0 0 0 0 1 0 0
546 1 0 0 0 0 0 0 0 0
547 5 1 1 2 0 0 3 0 0
548 1 0 0 0 0 0 1 0 0
549 1 0 0 0 0 0 1 0 0
550 1 0 0 0 0 0 1 0 0
551 1 0 0 0 0 0 1 0 0
552 1 0 0 0 0 0 1 0 0
554 2 0 0 2 1 0 0 0 0
555 4 0 0 3 0 0 1 0 0
557 1 0 0 0 0 0 1 0 0
558 1 0 0 0 0 0 0 0 0
559 1 0 0 0 0 0 1 0 0
560 1 1 1 0 0 0 1 0 0
562 1 0 0 0 0 0 1 1 0
563 2 0 0 1 0 0 1 0 0
564 13 2 1 2 0 0 3 0 0
567 5 2 2 2 0 0 2 0 0
574 2 0 0 1 0 0 0 0 0
582 2 1 1 1 1 1 0 0 0
587 2 1 1 1 1 1 0 0 0
590 3 0 0 2 1 0 0 0 0
669 5 0 0 0 0 0 4 1 0
fn=runtime.schedule
1997 14 0 0 2 0 0 0 0 0
2000 6 0 0 0 0 0 6 0 0
2493 1673058 123 78 557686 0 0 278843 0 0
2494 557686 0 0 278843 0 0 278843 49 6
2496 836529 0 0 557686 0 0 0 0 0
2500 557686 0 0 278843 92 26 0 0 0
2501 1 1 1 0 0 0 1 0 0
2502 6 0 0 3 1 0 3 0 0
2507 836526 56 35 557684 0 0 0 0 0
2512 557814 3 2 557812 1 1 0 0 0
2513 557720 0 0 0 0 0 278860 143 20
2515 557720 0 0 278860 93 28 0 0 0
2516 18 8 5 0 0 0 18 1 0
2517 34 13 11 17 17 9 0 0 0
2519 557684 70 43 278842 137 22 0 0 0
2520 20 4 3 0 0 0 10 0 0
2526 836626 0 0 557752 24 1 0 0 0
2530 836526 66 43 0 0 0 836526 74 9
2539 1951894 67 39 557684 0 0 0 0 0
2547 1115368 88 45 278842 91 2 0 0 0
2548 376 0 0 188 0 0 141 0 0
2549 188 29 25 0 0 0 0 0 0
2551 557684 19 15 0 0 0 0 0 0
2555 1960948 162 83 1119888 101 2 0 0 0
2556 13698 0 0 0 0 0 9132 0 0
2557 36528 0 0 18264 0 0 18264 0 0
2558 18264 0 0 0 0 0 9132 0 0
2561 566830 0 0 4566 0 0 0 0 0
2562 2194096 30 20 1371310 0 0 548524 0 0
2566 557684 0 0 0 0 0 0 0 0
2567 1096861 45 27 548428 0 0 274219 0 0
2573 1119914 0 0 841077 13 0 0 0 0
2574 180 1 1 0 0 0 90 0 0
2577 1394185 75 46 278837 24 10 0 0 0
2596 1668612 0 0 553179 1 0 278889 0 0
2597 124 0 0 28 3 0 0 0 0
2598 2 0 0 0 0 0 0 0 0
2601 1394275 159 93 278929 233 135 278837 6 4
2604 2 0 0 0 0 0 2 0 0
2605 1 0 0 1 1 0 0 0 0
2608 1115437 39 24 92 0 0 1115345 0 0
fn=runtime.semacquire1
310 133 0 0 19 0 0 95 0 0
fn=runtime.setsig
416 560 1 1 280 1 0 0 0 0
fn=runtime.shrinkstack
733 423 22 21 423 0 0 0 0 0
fn=runtime.sighandler
416 138 0 0 46 42 29 0 0 0
fn=runtime.startTheWorld
880 108 20 18 36 0 0 18 4 2
881 54 0 0 0 0 0 36 13 4
884 18 0 0 0 0 0 0 0 0
885 108 10 9 54 18 6 36 0 0
886 54 0 0 36 0 0 0 0 0
fn=runtime.startTheWorld.func1
881 144 11 10 36 0 0 54 0 0
fn=runtime.startTheWorldWithSema
990 448 96 76 168 3 0 56 0 0
991 56 0 0 0 0 0 0 0 0
992 56 0 0 0 0 0 0 0 0
993 200 40 35 50 0 0 150 0 0
994 200 40 35 0 0 0 100 0 0
996 168 48 36 0 0 0 112 0 0
998 56 0 0 56 0 0 0 0 0
999 224 0 0 56 0 0 0 0 0
1003 280 4 1 56 0 0 168 5 3
1004 56 49 37 0 0 0 56 29 1
1005 112 0 0 56 0 0 0 0 0
1006 15 0 0 0 0 0 15 0 0
1007 60 0 0 0 0 0 30 0 0
1009 168 0 0 0 0 0 112 0 0
1011 224 0 0 56 0 0 0 0 0
1029 56 46 36 0 0 0 0 0 0
1030 56 0 0 0 0 0 0 0 0
1031 19 19 16 0 0 0 0 0 0
1037 467 48 37 112 0 0 0 0 0
1038 56 0 0 0 0 0 0 0 0
1041 56 2 0 0 0 0 0 0 0
1043 299 0 0 187 1 0 56 1 0
1997 392 0 0 56 0 0 0 0 0
2000 168 77 58 0 0 0 168 0 0
fn=runtime.startlockedm
2033 6 1 1 2 0 0 1 0 0
2034 1 0 0 1 0 0 0 0 0
2036 2 1 1 2 0 0 0 0 0
2037 2 0 0 1 0 0 0 0 0
2040 2 0 0 1 0 0 0 0 0
2044 2 0 0 0 0 0 2 0 0
2045 2 0 0 1 0 0 1 0 0
2046 1 0 0 0 0 0 0 0 0
2047 3 1 1 0 0 0 2 0 0
2048 1 0 0 0 0 0 1 0 0
2049 3 1 0 2 0 0 0 0 0
fn=runtime.startm
1877 3780 284 116 1416 1 0 474 0 0
1878 1422 0 0 0 0 0 948 166 7
1879 1422 0 0 474 0 0 0 0 0
1880 142 71 32 0 0 0 0 0 0
1881 142 0 0 0 0 0 0 0 0
1882 6 0 0 0 0 0 4 0 0
1883 2 0 0 0 0 0 0 0 0
1890 6 0 0 4 0 0 0 0 0
1893 472 0 0 0 0 0 0 0 0
1894 472 0 0 0 0 0 0 0 0
1907 18 0 0 6 0 0 12 0 0
1908 18 0 0 0 0 0 12 0 0
1911 18 0 0 12 3 2 0 0 0
1915 66 3 2 18 0 0 24 0 0
1918 1398 0 0 0 0 0 932 0 0
1919 1398 372 63 932 251 47 0 0 0
1922 932 0 0 466 217 36 0 0 0
1925 2504 0 0 256 0 0 256 0 0
1929 722 0 0 256 0 0 466 0 0
1930 472 3 2 0 0 0 472 0 0
1931 1398 0 0 0 0 0 932 0 0
1932 1398 34 7 932 82 12 0 0 0
4886 472 0 0 472 0 0 0 0 0
4887 1410 348 57 0 0 0 0 0 0
4888 932 0 0 466 241 36 466 0 0
4889 466 0 0 466 0 0 0 0 0
4968 142 84 47 142 0 0 0 0 0
4969 424 0 0 0 0 0 0 0 0
4970 280 0 0 140 45 2 140 0 0
4971 420 0 0 280 0 0 0 0 0
fn=runtime.stopTheWorld
873 108 26 21 36 0 0 18 0 0
874 18 0 0 0 0 0 0 0 0
875 144 11 9 90 1 0 36 7 7
876 54 0 0 0 0 0 36 0 0
877 54 0 0 36 0 0 0 0 0
fn=runtime.stopTheWorldWithSema
914 336 49 38 112 0 0 56 0 0
915 112 0 0 56 0 0 56 1 1
919 168 0 0 112 0 0 0 0 0
923 168 48 38 0 0 0 112 7 7
924 112 0 0 56 7 7 56 19 8
925 168 0 0 112 0 0 0 0 0
926 56 0 0 0 0 0 56 0 0
928 224 47 38 168 0 0 56 13 0
929 56 0 0 56 0 0 0 0 0
931 7616 46 37 1008 1 0 112 3 3
932 896 0 0 896 435 0 0 0 0
933 4480 46 37 0 0 0 0 0 0
944 854 47 38 0 0 0 0 0 0
945 854 0 0 0 0 0 0 0 0
948 798 0 0 0 0 0 798 0 0
949 798 0 0 798 0 0 0 0 0
951 280 43 36 112 0 0 56 0 0
952 168 0 0 0 0 0 112 0 0
955 56 0 0 0 0 0 0 0 0
958 234 21 16 39 0 0 117 0 0
959 30 0 0 0 0 0 0 0 0
962 9 0 0 0 0 0 9 0 0
968 142 0 0 56 0 0 0 0 0
971 4032 46 37 1008 40 0 0 0 0
972 896 0 0 896 572 0 0 0 0
977 168 0 0 56 3 0 0 0 0
985 3864 47 37 112 0 0 0 0 0
4968 854 0 0 854 26 10 0 0 0
4969 2506 0 0 0 0 0 0 0 0
4970 1596 0 0 798 73 0 798 0 0
4971 2394 0 0 1596 0 0 0 0 0
fn=runtime.stoplockedm
733 1 0 0 1 0 0 0 0 0
2005 6 2 2 2 0 0 1 0 0
2006 2 0 0 1 0 0 1 0 0
2008 7 0 0 3 0 0 0 0 0
2011 2 1 1 1 0 0 0 0 0
2013 1 1 1 0 0 0 1 0 0
2014 2 0 0 0 0 0 1 0 0
2016 2 0 0 0 0 0 2 0 0
2018 6 0 0 2 0 0 2 0 0
2019 3 1 0 2 0 0 1 0 0
2020 2 1 1 2 0 0 0 0 0
2021 3 0 0 0 0 0 0 0 0
2026 4 0 0 2 0 0 2 0 0
2027 3 0 0 2 0 0 1 0 0
2028 3 1 0 2 0 0 0 0 0
fn=runtime.stopm
1844 2826 325 110 942 0 0 471 0 0
1845 942 0 0 471 0 0 471 0 0
1847 1413 0 0 942 0 0 0 0 0
1850 942 0 0 471 2 0 0 0 0
1853 942 0 0 471 0 0 0 0 0
1857 1413 78 53 0 0 0 942 0 0
1858 942 0 0 942 0 0 0 0 0
1859 1413 15 8 0 0 0 942 0 0
1860 2826 0 0 942 0 0 942 0 0
1861 1395 119 47 930 8 3 465 0 0
1862 1860 371 65 930 261 52 930 0 0
1863 1395 0 0 930 0 0 465 0 0
1864 1395 0 0 930 429 63 0 0 0
4875 942 0 0 471 1 0 471 9 7
4876 471 0 0 0 0 0 0 0 0
4877 471 0 0 471 0 0 0 0 0
4878 471 0 0 0 0 0 471 0 0
fn=runtime.suspendG
733 883 0 0 868 0 0 0 0 0
fn=runtime.sysmon
4515 6 2 2 2 0 0 1 0 0
4516 3 0 0 0 0 0 2 0 0
4517 1 0 0 1 0 0 0 0 0
4518 1 0 0 0 0 0 1 0 0
4519 6 0 0 0 0 0 2 0 0
4524 1 0 0 0 0 0 0 0 0
4525 3863 52 16 0 0 0 1151 0 0
4527 332 0 0 0 0 0 0 0 0
4528 2292 194 63 1351 0 0 609 0 0
4530 1484 0 0 0 0 0 0 0 0
4533 2880 0 0 0 0 0 1728 0 0
4534 576 159 45 0 0 0 0 0 0
4535 1187 217 71 576 0 0 611 35 3
4536 5692 63 38 2270 315 30 0 0 0
4537 105 0 0 0 0 0 70 0 0
4538 282 38 30 71 0 0 0 0 0
4539 140 0 0 70 2 2 0 0 0
4540 99 23 18 66 0 0 0 0 0
4541 99 25 19 0 0 0 66 0 0
4544 165 0 0 33 3 2 0 0 0
4545 132 0 0 66 0 0 0 0 0
4548 33 0 0 0 0 0 0 0 0
4552 132 27 19 0 0 0 99 0 0
4556 32 12 4 0 0 0 0 0 0
4557 96 0 0 32 0 0 64 0 0
4558 96 0 0 0 0 0 64 0 0
4559 96 1 1 64 1 1 0 0 0
4560 32 0 0 0 0 0 0 0 0
4565 168 14 9 0 0 0 68 0 0
4568 2300 0 0 1150 616 16 0 0 0
4572 575 0 0 575 277 71 0 0 0
4573 3348 186 41 0 0 0 0 0 0
4574 2020 340 101 808 1 1 609 0 0
4575 804 20 2 201 0 0 603 21 2
4576 201 0 0 0 0 0 0 0 0
4589 2295 245 67 468 0 0 609 0 0
4593 36 6 6 0 0 0 27 0 0
4597 2309 1 0 584 0 0 1150 0 0
4600 2736 64 12 1351 616 41 609 32 8
4603 2875 0 0 0 0 0 0 0 0
4609 575 0 0 0 0 0 0 0 0
4611 4050 510 54 1162 8 3 576 0 0
5265 201 0 0 0 0 0 0 0 0
fn=runtime.unlockOSThread
3746 1 0 0 1 0 0 0 0 0
3747 5 1 1 3 0 0 0 0 0
3750 1 0 0 0 0 0 1 0 0
3751 1 0 0 0 0 0 1 1 0
3778 3 1 1 0 0 0 1 0 0
3779 1 0 0 1 0 0 0 0 0
3780 3 0 0 2 1 0 0 0 0
3783 2 0 0 2 0 0 0 0 0
3784 4 0 0 2 0 0 0 0 0
fn=runtime.wakeNetPoller
2435 174 26 24 58 0 0 29 0 0
2436 174 0 0 87 0 0 0 0 0
2441 3 0 0 3 0 0 0 0 0
2442 17 0 0 3 0 0 0 0 0
2443 1 0 0 0 0 0 1 0 0
fn=runtime.wirep
4351 157245 81 49 0 0 0 52415 0 0
4352 52415 290 58 52415 0 0 0 0 0
4354 262075 0 0 157245 31 20 0 0 0
4357 314490 0 0 157245 376 16 0 0 0
4365 104830 468 66 52415 1108 94 52415 0 0
4366 104830 0 0 52415 0 0 52415 0 0
4367 52415 0 0 52415 0 0 0 0 0
4368 52415 0 0 0 0 0 52415 0 0
4369 157245 0 0 104830 0 0 0 0 0
fn=sync.runtime_procPin
5330 71 9 8 71 0 0 0 0 0
5331 71 0 0 71 0 0 0 0 0
5333 71 0 0 71 0 0 0 0 0
5334 142 0 0 142 8 1 0 0 0
5346 71 9 8 0 0 0 71 0 0
fn=sync.runtime_procUnpin
5339 71 0 0 71 0 0 0 0 0
5340 142 0 0 142 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/runtime.go
fn=os.runtime_args
59 45 4 4 14 1 0 20 0 0
fn=syscall.Exit
63 3 1 1 0 0 0 1 0 0
64 3 0 0 1 0 0 2 0 0
fn=syscall.runtime_envs
53 45 4 4 14 1 0 20 0 0
fl=.//usr/lib/golang/src/runtime/runtime1.go
fn=runtime.(*mheap).reclaim
447 974 0 0 974 0 0 0 0 0
448 1948 0 0 1948 0 0 0 0 0
449 1948 0 0 974 0 0 974 0 0
454 974 0 0 974 0 0 0 0 0
455 3276 0 0 1163 5 0 974 0 0
456 1948 17 2 0 0 0 0 0 0
458 2922 0 0 1948 0 0 0 0 0
fn=runtime.(*rwmutex).rlock
447 7 0 0 7 0 0 0 0 0
448 14 0 0 14 0 0 0 0 0
449 7 0 0 7 0 0 0 0 0
fn=runtime.(*rwmutex).runlock
455 21 0 0 7 0 0 7 0 0
456 26 3 2 6 2 2 0 0 0
458 21 0 0 14 0 0 0 0 0
fn=runtime.GC
447 9 9 8 9 0 0 0 0 0
448 18 0 0 18 0 0 0 0 0
449 18 0 0 9 0 0 9 0 0
454 9 0 0 9 0 0 0 0 0
455 36 9 8 18 0 0 9 0 0
456 36 0 0 9 0 0 0 0 0
458 27 0 0 18 1 0 0 0 0
fn=runtime.acquireSudog
447 28 0 0 28 0 0 0 0 0
448 56 26 21 56 0 0 0 0 0
449 84 0 0 28 0 0 28 9 9
454 28 27 21 28 0 0 0 0 0
455 112 0 0 56 0 0 28 0 0
456 94 0 0 19 0 0 0 0 0
fn=runtime.addspecial
447 788 0 0 788 0 0 0 0 0
448 1576 0 0 1576 0 0 0 0 0
449 1576 0 0 788 0 0 788 0 0
454 788 0 0 788 0 0 0 0 0
455 3152 0 0 1576 0 0 788 0 0
456 1586 0 0 5 0 0 0 0 0
fn=runtime.allocm
448 14 0 0 14 0 0 0 0 0
454 7 0 0 7 0 0 0 0 0
455 21 0 0 7 0 0 7 0 0
456 26 1 1 6 2 0 0 0 0
fn=runtime.args
60 6 1 1 2 0 0 1 0 0
61 2 0 0 1 0 0 1 0 0
62 4 0 0 2 1 1 1 1 1
63 3 1 1 0 0 0 3 0 0
64 3 0 0 2 0 0 0 0 0
fn=runtime.check
136 6 2 2 2 0 0 1 0 0
142 1 0 0 0 0 0 1 1 1
146 2 0 0 0 0 0 1 0 0
147 2 0 0 0 0 0 1 0 0
150 1 0 0 0 0 0 1 0 0
208 10 1 1 2 0 0 4 0 0
212 1 0 0 0 0 0 1 0 0
213 1 0 0 0 0 0 1 0 0
214 7 1 1 1 0 0 0 0 0
217 2 0 0 1 0 0 0 0 0
221 1 0 0 0 0 0 1 0 0
222 6 0 0 1 0 0 0 0 0
225 2 1 1 1 0 0 0 0 0
229 1 0 0 0 0 0 1 0 0
230 6 0 0 1 0 0 0 0 0
233 2 0 0 1 0 0 0 0 0
237 2 1 1 0 0 0 2 0 0
238 3 0 0 2 0 0 0 0 0
239 8 0 0 4 0 0 0 0 0
243 2 1 1 0 0 0 2 0 0
244 2 0 0 2 0 0 0 0 0
245 8 1 1 4 0 0 0 0 0
249 1 0 0 0 0 0 1 0 0
258 5 0 0 2 1 1 0 0 0
261 2 0 0 0 0 0 0 0 0
265 1 0 0 0 0 0 1 0 0
274 5 1 1 2 1 1 0 0 0
281 1 0 0 0 0 0 1 0 0
283 4 0 0 1 0 0 2 0 0
287 6 0 0 3 0 0 1 0 0
fn=runtime.cpuinit
57 444 0 0 127 9 0 63 0 0
fn=runtime.deltimer
447 6 0 0 6 0 0 0 0 0
448 12 0 0 12 0 0 0 0 0
449 6 0 0 6 0 0 0 0 0
454 6 0 0 6 0 0 0 0 0
455 18 0 0 6 0 0 6 0 0
456 12 6 6 0 0 0 0 0 0
fn=runtime.forEachP
447 63 0 0 63 0 0 0 0 0
448 126 42 21 126 1 1 0 0 0
449 126 0 0 63 0 0 63 0 0
454 63 0 0 63 0 0 0 0 0
455 252 0 0 126 15 6 63 0 0
456 214 5 4 44 15 7 0 0 0
458 189 0 0 126 18 8 0 0 0
fn=runtime.gcBgMarkWorker
447 70 19 3 70 0 0 0 0 0
448 140 20 5 140 0 0 0 0 0
449 70 22 20 70 0 0 0 0 0
454 23 20 17 23 0 0 0 0 0
455 69 0 0 23 0 0 23 0 0
456 92 0 0 23 0 0 0 0 0
458 1 0 0 0 0 0 1 0 0
fn=runtime.gcBgMarkWorker.func1
454 47 24 19 47 0 0 0 0 0
455 141 0 0 47 0 0 47 0 0
456 188 0 0 47 18 7 0 0 0
fn=runtime.gcMarkTermination
447 19 0 0 19 0 0 0 0 0
448 38 0 0 38 0 0 0 0 0
449 57 0 0 19 0 0 19 0 0
454 19 0 0 19 0 0 0 0 0
455 76 0 0 38 19 4 19 0 0
456 76 0 0 19 6 6 0 0 0
458 71 19 18 38 17 4 14 0 0
fn=runtime.gcStart
447 19 0 0 19 0 0 0 0 0
448 38 0 0 38 0 0 0 0 0
449 38 0 0 19 0 0 0 0 0
455 38 0 0 0 0 0 19 0 0
456 57 0 0 19 0 0 0 0 0
458 76 19 18 57 0 0 0 0 0
fn=runtime.gentraceback
38 1221 0 0 1221 813 175 0 0 0
40 2442 0 0 2442 14 8 0 0 0
41 3230 808 141 0 0 0 0 0 0
44 1221 0 0 0 0 0 0 0 0
fn=runtime.goargs
57 12 1 1 3 1 0 3 0 0
66 6 2 1 2 0 0 1 0 0
70 15 1 1 5 1 0 7 1 1
71 18 1 1 6 0 0 3 0 0
72 39 1 1 12 0 0 6 1 1
fn=runtime.goenvs_unix
57 381 0 0 127 1 0 0 0 0
76 7 1 1 2 0 0 1 0 0
81 258 0 0 64 0 0 1 0 0
82 63 0 0 0 0 0 0 0 0
85 15 1 1 3 0 0 8 1 1
86 322 0 0 66 0 0 63 0 0
87 1260 1 1 441 0 0 252 18 16
fn=runtime.gopark
447 151 0 0 151 0 0 0 0 0
448 302 0 0 302 1 0 0 0 0
449 302 0 0 151 0 0 0 0 0
454 151 0 0 151 0 0 0 0 0
455 453 0 0 151 0 0 151 0 0
456 302 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
447 5869081 466 55 5869081 0 0 0 0 0
448 11738162 0 0 11738162 2975 171 0 0 0
449 17606460 0 0 5869081 0 0 5869081 1384 68
454 5869081 0 0 5869081 19 0 0 0 0
455 17608026 2 0 5869864 9 1 5869081 0 0
456 23476136 680 95 5868987 1440 106 0 0 0
458 13 2 1 0 0 0 10 3 0
464 23473192 0 0 17604894 2918 176 5868298 0 0
fn=runtime.modtimer
447 30 12 9 30 0 0 0 0 0
448 60 2 2 60 0 0 0 0 0
449 30 0 0 30 0 0 0 0 0
454 30 0 0 30 0 0 0 0 0
455 118 12 9 58 0 0 30 0 0
456 62 0 0 0 0 0 0 0 0
458 28 12 9 0 0 0 0 0 0
fn=runtime.newproc1
448 58 0 0 58 0 0 0 0 0
449 29 0 0 0 0 0 0 0 0
454 29 8 5 29 0 0 0 0 0
455 87 0 0 29 0 0 29 0 0
456 116 0 0 29 8 1 0 0 0
458 87 0 0 58 0 0 0 0 0
fn=runtime.parsedebugvars
343 7 2 2 2 0 0 1 0 0
345 1 0 0 0 0 0 1 0 0
346 1 0 0 0 0 0 1 0 0
348 9 1 1 2 0 0 3 0 0
380 9 2 2 2 0 0 6 0 0
381 2 0 0 1 0 0 1 0 0
382 3 0 0 2 0 0 0 0 0
fn=runtime.persistentalloc1
447 600 0 0 600 0 0 0 0 0
448 1200 0 0 1200 1 1 0 0 0
449 1200 0 0 600 0 0 600 0 0
454 600 506 117 600 0 0 0 0 0
455 2410 0 0 1210 0 0 600 0 0
456 1200 0 0 0 0 0 0 0 0
fn=runtime.ready
448 186 0 0 186 0 0 0 0 0
449 186 0 0 93 0 0 93 4 4
454 93 0 0 93 1 1 0 0 0
455 372 0 0 186 4 2 93 0 0
456 228 22 15 21 1 1 0 0 0
458 279 0 0 186 0 0 0 0 0
fn=runtime.releaseSudog
448 56 0 0 56 0 0 0 0 0
449 84 0 0 28 0 0 28 14 5
454 28 0 0 28 0 0 0 0 0
455 112 0 0 56 0 0 28 0 0
456 112 26 19 28 0 0 0 0 0
458 84 0 0 56 0 0 0 0 0
fn=runtime.removespecial
447 2 0 0 2 0 0 0 0 0
448 4 0 0 4 0 0 0 0 0
449 4 0 0 2 0 0 2 0 0
454 2 0 0 2 0 0 0 0 0
455 8 2 2 4 0 0 2 0 0
456 8 0 0 2 0 0 0 0 0
fn=runtime.startTheWorldWithSema
447 56 0 0 56 0 0 0 0 0
448 112 0 0 112 11 0 0 0 0
449 112 0 0 56 0 0 56 0 0
454 56 0 0 56 2 0 0 0 0
455 224 0 0 112 4 1 56 0 0
456 186 0 0 37 17 1 0 0 0
fn=runtime.sysargs
57 128 0 0 64 8 8 0 0 0
fn=runtime.testAtomic64
99 6 1 1 2 0 0 1 1 1
100 1 0 0 0 0 0 1 1 1
101 1 1 1 0 0 0 1 0 0
102 7 0 0 1 0 0 0 0 0
105 2 0 0 1 0 0 0 0 0
108 1 0 0 0 0 0 1 0 0
109 5 1 1 1 0 0 0 0 0
112 4 0 0 2 0 0 0 0 0
115 3 0 0 1 0 0 0 0 0
118 2 1 1 2 0 0 0 0 0
119 4 0 0 1 0 0 0 0 0
122 7 1 1 2 0 0 0 0 0
125 3 0 0 1 0 0 0 0 0
128 4 0 0 2 0 0 0 0 0
131 7 1 1 3 0 0 0 0 0
fn=runtime.timediv
423 100 1 1 2 0 0 0 0 0
424 124 0 0 0 0 0 0 0 0
425 6 0 0 0 0 0 0 0 0
428 12 0 0 12 0 0 6 1 1
431 3 1 1 0 0 0 0 0 0
437 3 0 0 1 0 0 0 0 0
438 1 0 0 0 0 0 1 0 0
440 1 0 0 0 0 0 1 0 0
fn=runtime.traceAcquireBuffer
447 19 0 0 19 0 0 0 0 0
448 38 0 0 38 0 0 0 0 0
449 38 0 0 19 0 0 0 0 0
fn=runtime.traceReleaseBuffer
455 57 0 0 19 0 0 19 0 0
456 38 0 0 0 0 0 0 0 0
458 57 19 18 38 0 0 0 0 0
fn=runtime/debug.SetTraceback
385 6 2 2 2 0 0 1 0 0
387 6 0 0 1 0 0 0 0 0
406 5 1 1 2 0 0 0 0 0
410 1 0 0 1 0 0 0 0 0
412 2 0 0 2 1 1 0 0 0
413 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/runtime2.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
259 14 0 0 0 0 0 14 0 0
fn=runtime.(*mheap).allocMSpanLocked
280 1502 0 0 0 0 0 751 0 0
fn=runtime.(*mheap).allocSpan
280 930 20 7 0 0 0 930 0 0
fn=runtime.acquireSudog
280 25 6 6 0 0 0 10 0 0
fn=runtime.bulkBarrierPreWrite
280 61709 0 0 0 0 0 61709 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
280 44876 0 0 0 0 0 22438 1 1
fn=runtime.doaddtimer
283 90 0 0 30 0 0 30 0 0
fn=runtime.efaceOf
211 5 1 0 5 0 0 0 0 0
fn=runtime.exitsyscall
280 11588 0 0 0 0 0 11588 0 0
fn=runtime.exitsyscallfast_pidle
280 493 0 0 0 0 0 493 0 0
fn=runtime.extendRandom
838 12 2 2 4 0 0 2 0 0
839 6 0 0 2 0 0 0 0 0
842 86 3 2 20 0 0 14 0 0
845 42 0 0 14 0 0 0 0 0
848 182 1 0 42 0 0 56 0 0
849 686 0 0 42 0 0 0 0 0
850 224 0 0 0 0 0 112 2 2
851 112 0 0 0 0 0 0 0 0
852 112 0 0 0 0 0 0 0 0
fn=runtime.findrunnable
259 17 0 0 0 0 0 17 0 0
280 355357 0 0 0 0 0 355357 8 6
fn=runtime.forEachP
280 63 0 0 0 0 0 63 0 0
fn=runtime.gcBgMarkWorker
262 46 0 0 0 0 0 23 0 0
283 101 0 0 39 23 8 39 0 0
300 124 0 0 54 23 8 70 60 34
fn=runtime.gcBgMarkWorker.func1
266 156 20 9 39 23 2 0 0 0
283 78 0 0 0 0 0 39 0 0
fn=runtime.gcWaitOnMark
262 9 0 0 0 0 0 9 0 0
fn=runtime.gfput
262 8 0 0 0 0 0 8 0 0
fn=runtime.globrunqget
259 278685 34 33 0 0 0 278685 56 6
fn=runtime.goexit0
262 8 0 0 0 0 0 0 0 0
274 8 0 0 0 0 0 0 0 0
300 8 0 0 0 0 0 0 0 0
307 8 0 0 0 0 0 0 0 0
fn=runtime.goschedImpl
262 1082835 32 31 0 0 0 525483 0 0
274 278676 0 0 0 0 0 0 0 0
300 278676 0 0 0 0 0 0 0 0
307 278676 0 0 0 0 0 0 0 0
fn=runtime.injectglist
259 9 0 0 0 0 0 9 0 0
262 27 0 0 0 0 0 18 0 0
fn=runtime.main
262 1 0 0 0 0 0 0 0 0
300 1 0 0 0 0 0 1 0 0
fn=runtime.modtimer
280 28 0 0 0 0 0 28 0 0
fn=runtime.newm
283 7 0 0 7 0 0 0 0 0
fn=runtime.newproc1
280 29 0 0 0 0 0 29 0 0
fn=runtime.newstack
259 89 0 0 0 0 0 0 0 0
fn=runtime.park_m
262 151 0 0 0 0 0 0 0 0
274 151 0 0 0 0 0 0 0 0
300 151 55 34 0 0 0 0 0 0
307 151 0 0 0 0 0 0 0 0
fn=runtime.pidleput
283 41798 0 0 0 0 0 41798 0 0
fn=runtime.preemptPark
262 1 0 0 0 0 0 0 0 0
274 1 0 0 0 0 0 0 0 0
300 1 0 0 0 0 0 0 0 0
307 1 0 0 0 0 0 0 0 0
fn=runtime.procresize
280 56 0 0 0 0 0 0 0 0
fn=runtime.reentersyscall
283 11572 0 0 0 0 0 0 0 0
fn=runtime.releaseSudog
280 28 0 0 0 0 0 28 0 0
fn=runtime.releasep
280 40842 0 0 0 0 0 40842 0 0
fn=runtime.runqget
259 46 0 0 46 0 0 0 0 0
266 184 0 0 46 0 0 0 0 0
fn=runtime.runqgrab
266 168 11 2 75 19 2 0 0 0
fn=runtime.runqput
262 60 0 0 0 0 0 60 31 26
266 237 42 24 79 0 0 0 0 0
fn=runtime.schedule
280 10 6 3 0 0 0 10 5 4
fn=runtime.sighandler
262 46 39 31 46 0 0 0 0 0
fn=runtime.startlockedm
283 2 0 0 1 0 0 1 0 0
297 1 0 0 0 0 0 1 0 0
fn=runtime.startm
283 932 258 23 466 0 0 466 0 0
297 466 171 60 0 0 0 466 0 0
fn=runtime.stopm
300 471 0 0 0 0 0 471 0 0
fn=runtime.wirep
283 52415 0 0 0 0 0 0 0 0
300 52415 0 0 0 0 0 52415 0 0
fl=.//usr/lib/golang/src/runtime/rwmutex.go
fn=runtime.(*rwmutex).rlock
33 42 14 4 14 0 0 7 0 0
38 7 0 0 0 0 0 0 0 0
39 63 7 2 35 3 2 0 0 0
fn=runtime.(*rwmutex).runlock
62 42 5 2 14 4 4 7 0 0
63 42 0 0 21 1 1 0 0 0
78 14 5 2 14 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/select.go
fn=runtime.init
38 7 0 0 1 0 0 4 0 0
39 10 1 1 3 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/sema.go
fn=internal/poll.runtime_Semrelease
75 12 2 2 4 0 0 2 0 0
76 8 0 0 6 0 0 0 0 0
156 8 2 2 0 0 0 8 0 0
fn=runtime.(*semaRoot).dequeue
321 120 30 22 40 0 0 20 0 0
322 99 0 0 40 0 0 19 0 0
324 103 0 0 21 0 0 19 1 1
325 69 18 15 20 8 0 0 0 0
328 3 0 0 0 0 0 0 0 0
329 2 0 0 0 0 0 0 0 0
334 5 1 1 2 0 0 2 0 0
338 57 0 0 19 0 0 0 0 0
341 76 0 0 19 4 0 0 0 0
343 16 6 6 3 0 0 3 2 2
344 6 0 0 3 0 0 3 1 0
345 18 3 3 6 0 0 3 0 0
346 18 3 3 6 0 0 3 0 0
347 6 0 0 0 0 0 0 0 0
350 18 0 0 6 0 0 3 0 0
351 6 0 0 0 0 0 0 0 0
354 6 3 3 3 0 0 0 0 0
357 18 3 3 3 0 0 3 0 0
359 19 16 15 0 0 0 19 0 0
360 15 0 0 3 0 0 3 0 0
361 6 0 0 0 0 0 3 0 0
364 80 16 15 32 0 0 0 0 0
372 48 0 0 16 0 0 0 0 0
379 74 21 20 16 0 0 16 5 5
382 81 25 23 19 0 0 19 0 0
383 27 0 0 0 0 0 19 0 0
384 24 0 0 0 0 0 8 0 0
385 38 0 0 0 0 0 19 0 0
386 19 0 0 0 0 0 19 0 0
387 95 9 7 38 0 0 38 0 0
fn=runtime.(*semaRoot).queue
234 161 21 18 41 0 0 19 0 0
235 147 20 16 57 0 0 19 4 3
236 60 8 7 19 0 0 19 0 0
237 63 10 8 0 0 0 11 0 0
238 57 0 0 0 0 0 19 0 0
241 76 10 8 38 0 0 0 0 0
242 57 0 0 0 0 0 0 0 0
243 20 0 0 3 2 0 0 0 0
245 3 0 0 0 0 0 0 0 0
247 11 0 0 0 0 0 0 0 0
252 11 0 0 0 0 0 0 0 0
271 12 3 3 3 1 0 0 0 0
272 15 1 0 3 0 0 3 0 0
276 12 3 3 3 0 0 3 0 0
277 9 0 0 0 0 0 3 0 0
279 9 3 3 6 0 0 0 0 0
300 32 0 0 0 0 0 16 0 0
301 72 8 7 16 0 0 16 4 3
302 32 0 0 0 0 0 16 0 0
305 112 16 15 48 0 0 0 0 0
fn=runtime.cansemacquire
222 124 54 37 124 0 0 0 0 0
223 124 0 0 124 78 54 0 0 0
224 248 0 0 0 0 0 0 0 0
225 38 0 0 0 0 0 38 0 0
227 516 0 0 86 0 0 0 0 0
228 172 0 0 86 0 0 86 0 0
fn=runtime.gcMarkDone
95 150 0 0 0 0 0 120 29 24
156 150 19 18 0 0 0 120 1 0
fn=runtime.gcMarkTermination
156 95 19 18 0 0 0 76 2 0
fn=runtime.gcStart
95 228 19 18 0 0 0 152 0 0
156 95 0 0 0 0 0 76 0 0
fn=runtime.readyWithTime
79 132 17 15 50 0 0 19 0 0
80 57 19 15 38 0 0 0 0 0
83 95 0 0 38 0 0 57 0 0
84 57 0 0 38 0 0 0 0 0
fn=runtime.semacquire1
98 535 58 43 172 0 0 86 24 21
99 86 0 0 86 0 0 0 0 0
100 258 57 42 172 0 0 0 0 0
105 430 0 0 172 0 0 172 39 31
106 201 45 35 134 0 0 0 0 0
115 76 0 0 19 0 0 38 1 1
116 19 0 0 0 0 0 0 0 0
118 19 17 15 0 0 0 19 0 0
119 19 0 0 0 0 0 19 0 0
120 19 0 0 0 0 0 19 0 0
121 76 0 0 19 0 0 0 0 0
125 38 0 0 0 0 0 0 0 0
132 76 0 0 0 0 0 57 0 0
134 133 18 15 57 0 0 19 0 0
136 95 0 0 38 0 0 38 0 0
143 171 17 14 76 0 0 95 0 0
144 38 16 14 19 0 0 0 0 0
145 190 20 16 76 36 6 38 0 0
149 76 16 15 38 0 0 0 0 0
150 19 0 0 0 0 0 19 0 0
152 38 0 0 0 0 0 38 0 0
153 57 0 0 38 0 0 0 0 0
218 323 33 29 19 0 0 57 0 0
fn=runtime.semrelease1
159 638 123 89 243 0 0 88 7 4
160 88 0 0 88 2 2 0 0 0
161 176 0 0 176 39 2 0 0 0
166 548 0 0 88 71 47 20 0 0
167 204 42 30 136 0 0 0 0 0
171 80 0 0 0 0 0 60 17 5
172 80 18 15 40 0 0 0 0 0
178 160 20 15 60 0 0 100 0 0
179 80 0 0 20 0 0 0 0 0
180 57 0 0 57 0 0 0 0 0
182 60 0 0 20 0 0 40 0 0
183 20 0 0 0 0 0 0 0 0
184 19 0 0 19 0 0 0 0 0
185 38 0 0 0 0 0 0 0 0
188 38 19 15 19 0 0 0 0 0
191 76 0 0 0 0 0 0 0 0
194 95 0 0 19 0 0 57 0 0
195 117 20 15 78 0 0 0 0 0
218 960 69 44 20 0 0 20 0 0
fn=runtime.startTheWorld
156 90 0 0 0 0 0 72 0 0
fn=runtime.stopTheWorld
95 90 0 0 0 0 0 72 0 0
fn=sync.runtime_notifyListCheck
607 6 2 2 2 0 0 1 0 0
608 6 0 0 3 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_amd64.go
fn=runtime.(*sigctxt).pushCall
81 1 0 0 0 0 0 0 0 0
82 1 0 0 0 0 0 0 0 0
83 1 0 0 0 0 0 0 0 0
84 2 0 0 0 0 0 1 0 0
85 1 0 0 0 0 0 0 0 0
fn=runtime.doSigPreempt
41 8 0 0 0 0 0 0 0 0
43 8 0 0 0 0 0 0 0 0
fn=runtime.sighandler
41 46 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_linux_amd64.go
fn=runtime.(*sigctxt).pushCall
20 8 1 1 6 0 0 2 0 0
30 2 1 1 2 0 0 0 0 0
42 1 0 0 0 0 0 0 0 0
51 1 0 0 0 0 0 0 0 0
52 1 0 0 0 0 0 0 0 0
fn=runtime.doSigPreempt
20 24 8 7 24 8 6 0 0 0
30 8 0 0 8 0 0 0 0 0
42 8 0 0 0 0 0 0 0 0
fn=runtime.sighandler
20 92 0 0 92 35 25 0 0 0
42 46 0 0 0 0 0 0 0 0
48 184 38 30 184 43 31 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_unix.go
fn=runtime.adjustSignalStack
487 138 34 29 0 0 0 46 0 0
488 46 0 0 0 0 0 0 0 0
489 276 32 29 184 45 32 0 0 0
490 46 40 31 0 0 0 46 0 0
fn=runtime.doSigPreempt
326 276 34 30 92 0 0 46 0 0
329 324 16 15 54 0 0 40 8 6
331 5 0 0 1 0 0 3 0 0
335 147 0 0 147 11 0 0 0 0
336 138 0 0 138 0 0 0 0 0
338 138 0 0 92 0 0 0 0 0
fn=runtime.initsig
111 5 1 1 1 0 0 1 0 0
112 1 0 0 0 0 0 0 0 0
114 2 1 1 0 0 0 1 0 0
119 6 1 1 2 0 0 0 0 0
123 374 0 0 58 0 0 58 0 0
124 123 0 0 0 0 0 58 0 0
125 390 0 0 65 0 0 0 0 0
131 176 0 0 58 0 0 58 9 9
133 230 0 0 0 0 0 0 0 0
136 10 0 0 2 0 0 0 0 0
138 4 0 0 0 0 0 0 0 0
141 2 0 0 0 0 0 0 0 0
144 112 1 1 0 0 0 56 5 5
145 224 0 0 0 0 0 168 0 0
156 174 0 0 0 0 0 0 0 0
157 6 1 1 2 0 0 0 0 0
163 292 1 1 116 0 0 0 0 0
169 280 1 1 112 0 0 0 0 0
fn=runtime.minitSignalMask
1094 48 9 6 16 0 0 8 0 0
1095 40 0 0 24 0 0 8 0 0
1096 1584 0 0 0 0 0 0 0 0
1097 488 0 0 0 0 0 0 0 0
1098 128 0 0 0 0 0 0 0 0
1101 24 0 0 16 0 0 0 0 0
1131 3120 4 3 520 80 75 0 0 0
1132 1040 0 0 0 0 0 0 0 0
1135 1760 3 2 880 0 0 0 0 0
1138 440 0 0 0 0 0 0 0 0
fn=runtime.minitSignalStack
1073 48 4 3 16 0 0 8 7 7
1074 16 0 0 8 0 0 8 0 0
1075 24 2 2 0 0 0 16 0 0
1076 32 0 0 0 0 0 24 0 0
1077 24 0 0 8 0 0 0 0 0
1078 48 5 3 32 3 2 16 0 0
1079 48 0 0 32 0 0 8 1 1
fn=runtime.minitSignals
1058 48 5 3 16 0 0 8 0 0
1059 8 0 0 0 0 0 8 0 0
1060 8 0 0 0 0 0 8 0 0
1061 24 0 0 16 0 0 0 0 0
fn=runtime.preemptone
374 1278 0 0 213 152 38 0 0 0
384 184 42 29 0 0 0 138 0 0
fn=runtime.schedinit
1018 2 0 0 0 0 0 0 0 0
fn=runtime.sigFetchG
416 46 0 0 46 15 4 0 0 0
fn=runtime.sigfwdgo
948 138 39 29 0 0 0 46 0 0
949 138 0 0 46 0 0 0 0 0
952 138 40 29 46 42 26 0 0 0
953 138 0 0 46 42 28 0 0 0
956 322 38 28 92 59 26 0 0 0
981 92 38 28 0 0 0 0 0 0
982 184 40 29 92 0 0 46 0 0
fn=runtime.sighandler
547 276 39 31 92 0 0 46 0 0
548 92 0 0 46 0 0 46 0 0
549 276 0 0 92 0 0 138 0 0
551 138 39 31 46 0 0 0 0 0
556 276 35 30 0 0 0 0 0 0
560 276 74 61 0 0 0 0 0 0
564 92 0 0 0 0 0 0 0 0
566 276 38 31 46 0 0 138 43 31
573 230 38 31 92 0 0 0 0 0
574 138 0 0 46 0 0 0 0 0
576 138 38 30 0 0 0 0 0 0
581 46 0 0 0 0 0 0 0 0
586 184 0 0 0 0 0 0 0 0
604 138 38 31 0 0 0 0 0 0
605 184 0 0 46 0 0 92 0 0
610 230 0 0 0 0 0 0 0 0
614 276 77 61 46 0 0 46 46 30
618 92 0 0 0 0 0 0 0 0
619 138 0 0 92 0 0 0 0 0
622 46 0 0 46 0 0 0 0 0
fn=runtime.signalstack
1186 24 6 3 0 0 0 8 7 7
1187 56 0 0 24 0 0 24 0 0
1188 8 5 3 8 0 0 0 0 0
1189 32 0 0 0 0 0 24 0 0
fn=runtime.sigtrampgo
430 138 38 30 0 0 0 46 0 0
431 414 37 31 184 0 0 184 86 62
434 276 36 30 92 0 0 138 0 0
435 230 0 0 46 0 0 138 0 0
436 92 0 0 0 0 0 92 0 0
437 138 0 0 46 0 0 0 0 0
460 184 36 30 92 29 8 92 0 0
463 184 36 30 0 0 0 138 0 0
464 598 37 30 230 0 0 230 0 0
465 92 0 0 0 0 0 0 0 0
469 138 0 0 92 0 0 0 0 0
474 368 35 30 138 0 0 230 0 0
475 138 0 0 46 0 0 92 0 0
476 46 0 0 0 0 0 0 0 0
1181 138 36 30 92 0 0 0 0 0
fn=runtime.suspendG
374 7 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/sigqueue.go
fn=runtime.sigsend
67 276 77 57 92 0 0 46 0 0
69 92 0 0 46 40 23 0 0 0
70 184 35 28 92 0 0 46 0 0
fl=.//usr/lib/golang/src/runtime/slice.go
fn=runtime.growslice
76 3728633 1882 85 932186 0 0 466093 0 0
85 1864372 0 0 932186 0 0 0 0 0
89 1864372 33069 168 932186 1094 132 0 0 0
96 466093 0 0 0 0 0 0 0 0
97 932186 0 0 0 0 0 0 0 0
98 100038 0 0 0 0 0 0 0 0
100 1464170 0 0 366055 0 0 0 0 0
101 366005 337 34 0 0 0 0 0 0
105 450 47 21 0 0 0 0 0 0
106 300 0 0 0 0 0 0 0 0
110 100 0 0 0 0 0 0 0 0
123 932186 31629 110 0 0 0 0 0 0
126 1 0 0 0 0 0 0 0 0
127 105 6 3 0 0 0 0 0 0
129 932116 32453 129 0 0 0 0 0 0
130 64 0 0 0 0 0 0 0 0
131 32 21 11 0 0 0 0 0 0
132 64 0 0 0 0 0 0 0 0
133 96 0 0 0 0 0 0 0 0
134 128 0 0 0 0 0 0 0 0
135 466026 3261 79 0 0 0 0 0 0
139 6 0 0 0 0 0 0 0 0
143 100056 0 0 100038 0 0 0 0 0
144 466099 552 106 0 0 0 0 0 0
145 832087 0 0 0 0 0 0 0 0
146 24 0 0 0 0 0 0 0 0
147 24 3 1 0 0 0 0 0 0
149 932040 36 27 0 0 0 0 0 0
150 466020 0 0 0 0 0 0 0 0
151 2796120 0 0 0 0 0 0 0 0
152 2784 0 0 0 0 0 0 0 0
153 2330100 22 17 0 0 0 466020 1 1
169 1864378 209 87 0 0 0 0 0 0
174 932186 0 0 466093 0 0 0 0 0
175 276 5 2 46 0 0 230 1 1
178 466296 0 0 46 0 0 184 0 0
181 2818745 19250 137 466047 0 0 1886672 82 10
182 2596290 0 0 832075 56 23 466093 6 6
185 134628 2033 35 22438 549 29 89752 0 0
188 3307573 32398 197 954670 350 32 2330465 0 0
190 5593005 479 110 2796485 50 12 1864372 796 48
194 932052 205 22 0 0 0 0 0 0
fn=runtime.makeslice
34 6600303 58 30 2200102 0 0 1100050 1 1
35 5500250 0 0 3300150 362 53 0 0 0
36 11000500 75 37 2200100 0 0 0 0 0
49 9900450 4 1 3300150 0 0 5500250 397 7
fl=.//usr/lib/golang/src/runtime/stack.go
fn=runtime.adjustctxt
541 9 0 0 9 0 0 0 0 0
545 63 0 0 36 0 0 0 0 0
546 36 9 6 18 0 0 9 0 0
715 18 9 6 18 0 0 0 0 0
716 18 0 0 9 4 0 0 0 0
727 9 0 0 0 0 0 0 0 0
fn=runtime.adjustdefers
545 27 9 6 18 0 0 0 0 0
730 54 0 0 18 0 0 9 0 0
734 18 0 0 18 0 0 0 0 0
735 36 0 0 9 0 0 0 0 0
747 45 9 6 0 0 0 36 0 0
748 27 0 0 18 0 0 0 0 0
fn=runtime.adjustframe
541 220 0 0 220 0 0 0 0 0
545 903 3 3 551 0 0 0 0 0
546 321 0 0 107 0 0 107 0 0
547 18 0 0 0 0 0 0 0 0
620 791 18 12 226 0 0 113 0 0
622 339 0 0 226 0 0 0 0 0
626 452 0 0 226 0 0 226 0 0
630 226 9 6 113 0 0 0 0 0
637 2147 9 6 904 0 0 1130 0 0
640 339 9 6 113 0 0 0 0 0
641 158 0 0 0 0 0 0 0 0
642 1106 9 6 395 0 0 474 0 0
646 693 0 0 339 0 0 0 0 0
647 196 0 0 98 0 0 0 0 0
665 98 0 0 0 0 0 0 0 0
669 226 6 5 113 0 0 0 0 0
673 924 15 11 116 0 0 505 0 0
678 327 0 0 214 0 0 0 0 0
679 1638 12 7 496 12 9 134 0 0
681 68 0 0 68 0 0 0 0 0
682 136 1 0 0 0 0 0 0 0
685 68 0 0 0 0 0 0 0 0
686 136 0 0 68 0 0 0 0 0
693 67 9 8 67 42 40 0 0 0
695 268 0 0 67 13 12 0 0 0
700 839 0 0 302 0 0 0 0 0
701 2350 9 6 235 9 7 0 0 0
702 122 0 0 0 0 0 0 0 0
705 268 0 0 0 0 0 0 0 0
711 452 8 8 226 0 0 113 0 0
fn=runtime.adjustpointers
571 1270 9 7 360 0 0 180 0 0
572 360 0 0 360 0 0 0 0 0
573 180 0 0 180 0 0 0 0 0
574 180 0 0 180 0 0 0 0 0
575 540 0 0 360 0 0 180 0 0
581 726 9 7 360 0 0 0 0 0
582 2606 9 7 730 0 0 244 0 0
588 732 0 0 244 22 20 0 0 0
589 1492 9 7 190 0 0 0 0 0
590 190 0 0 0 0 0 0 0 0
591 380 0 0 0 0 0 0 0 0
592 386 0 0 0 0 0 0 0 0
593 190 0 0 0 0 0 0 0 0
594 380 0 0 190 0 0 190 0 0
595 658 3 2 0 0 0 0 0 0
602 760 6 5 0 0 0 0 0 0
606 6 0 0 0 0 0 0 0 0
612 18 0 0 0 0 0 6 0 0
fn=runtime.adjustsudogs
541 3 0 0 3 0 0 0 0 0
545 6 0 0 3 0 0 0 0 0
759 63 9 6 30 2 2 0 0 0
760 3 0 0 0 0 0 0 0 0
fn=runtime.copystack
541 18 0 0 18 0 0 0 0 0
545 18 0 0 9 0 0 0 0 0
753 9 0 0 0 0 0 0 0 0
826 63 18 12 18 0 0 9 0 0
827 27 0 0 18 0 0 0 0 0
830 36 0 0 18 0 0 18 2 0
831 18 9 6 0 0 0 0 0 0
834 54 0 0 18 0 0 18 2 0
837 63 0 0 27 0 0 36 3 0
846 63 9 6 9 0 0 18 0 0
847 36 0 0 18 0 0 18 0 0
848 27 9 6 0 0 0 9 0 0
852 27 0 0 18 0 0 0 0 0
853 48 6 5 6 0 0 0 0 0
860 24 0 0 0 0 0 18 0 0
869 18 6 4 3 0 0 15 0 0
873 33 3 3 12 0 0 12 0 0
877 81 12 7 24 0 0 36 0 0
882 45 0 0 9 0 0 27 0 0
883 45 9 6 9 0 0 27 0 0
884 9 0 0 0 0 0 0 0 0
885 27 9 6 9 0 0 0 0 0
890 36 0 0 18 0 0 18 0 0
891 18 9 6 0 0 0 9 0 0
892 27 0 0 9 0 0 9 0 0
893 18 0 0 18 0 0 0 0 0
896 117 9 6 0 0 0 90 0 0
902 45 0 0 18 0 0 27 0 0
903 33 6 5 18 0 0 0 0 0
fn=runtime.findsghi
772 33 3 1 15 0 0 0 0 0
773 12 3 3 9 9 6 0 0 0
774 21 0 0 0 0 0 0 0 0
778 3 0 0 0 0 0 3 0 0
fn=runtime.freeStackSpans
1157 133 38 36 38 0 0 19 0 0
1160 437 19 18 76 0 0 76 0 0
1161 532 19 18 0 0 0 304 0 0
1162 380 0 0 76 0 0 76 0 0
1163 601 0 0 76 0 0 0 0 0
1164 99 0 0 99 86 43 0 0 0
1165 198 0 0 99 84 72 0 0 0
1173 228 0 0 76 0 0 152 0 0
1177 76 0 0 0 0 0 38 0 0
1178 2717 19 18 0 0 0 665 0 0
1179 5985 0 0 665 161 141 665 0 0
1187 57 18 16 0 0 0 38 0 0
1188 57 0 0 38 0 0 0 0 0
fn=runtime.getStackMap
1192 17230 50 40 3446 0 0 5169 0 0
1193 3446 25 20 3446 0 0 0 0 0
1194 3446 0 0 0 0 0 0 0 0
1199 6892 0 0 3446 0 0 3446 0 0
1201 3465 0 0 1723 0 0 0 0 0
1206 3408 0 0 0 0 0 1704 1 0
1207 15336 25 20 3408 0 0 10224 20 18
1209 3910 0 0 0 0 0 0 0 0
1217 6409 25 20 5150 0 0 1259 0 0
1225 1723 0 0 0 0 0 0 0 0
1228 4222 0 0 2963 0 0 0 0 0
1229 7999 0 0 2963 0 0 5036 0 0
1242 928 0 0 0 0 0 0 0 0
1249 7041 26 20 1259 411 351 746 0 0
1254 4290 0 0 1259 29 20 0 0 0
1255 4989 0 0 1259 0 0 746 0 0
1260 746 0 0 0 0 0 0 0 0
1270 8458 25 20 3446 0 0 0 0 0
1271 3549 0 0 1183 0 0 0 0 0
1281 9464 50 40 3549 0 0 5915 0 0
1282 5915 0 0 1183 305 271 0 0 0
1286 11084 50 40 1183 0 0 1723 0 0
1288 3427 0 0 1704 0 0 1723 0 0
1291 4645 0 0 1183 3 3 0 0 0
1292 1167 0 0 0 0 0 0 0 0
1298 12061 0 0 5169 0 0 6892 0 0
1299 3446 25 20 0 0 0 0 0 0
1300 507 0 0 507 205 176 0 0 0
1301 507 0 0 0 0 0 0 0 0
1302 1521 0 0 0 0 0 1521 0 0
1310 30609 50 40 11537 0 0 13784 0 0
fn=runtime.newproc1
1069 58 0 0 58 12 10 0 0 0
1073 29 0 0 0 0 0 0 0 0
fn=runtime.newstack
926 623 85 62 178 0 0 89 0 0
927 178 0 0 89 0 0 89 6 1
929 356 0 0 267 0 0 0 0 0
932 356 45 32 89 4 1 89 6 1
941 178 0 0 89 9 2 0 0 0
962 712 44 32 356 0 0 356 6 1
963 178 0 0 89 0 0 89 0 0
964 178 0 0 89 0 0 89 0 0
965 178 0 0 89 0 0 89 0 0
966 178 0 0 89 0 0 89 0 0
971 289 43 31 89 0 0 89 0 0
985 89 0 0 0 0 0 0 0 0
986 99 16 15 83 0 0 0 0 0
989 201 29 20 67 0 0 67 0 0
990 201 0 0 0 0 0 134 32 5
994 66 5 4 22 0 0 0 0 0
997 22 0 0 22 0 0 0 0 0
1000 44 0 0 0 0 0 22 6 1
1002 44 0 0 0 0 0 0 0 0
1007 44 0 0 22 0 0 0 0 0
1013 22 0 0 0 0 0 0 0 0
1014 48 16 15 32 0 0 0 0 0
1017 32 0 0 16 0 0 0 0 0
1021 32 0 0 16 0 0 0 0 0
1024 3 3 3 0 0 0 3 0 0
1025 9 3 3 0 0 0 6 3 0
1028 35 0 0 19 0 0 0 0 0
1029 2 1 1 0 0 0 2 1 0
1033 30 0 0 0 0 0 30 3 1
1037 18 6 5 18 0 0 0 0 0
1038 12 0 0 0 0 0 6 0 0
1039 12 0 0 6 1 0 0 0 0
1041 3 0 0 3 0 0 0 0 0
1047 24 0 0 0 0 0 18 1 0
1051 30 6 5 12 0 0 18 0 0
1055 30 0 0 6 0 0 18 0 0
1056 24 6 5 6 0 0 12 0 0
fn=runtime.round2
908 3802 17 4 40 0 0 0 0 0
909 486 0 0 0 0 0 0 0 0
911 40 17 4 0 0 0 40 0 0
fn=runtime.scanstack
1092 3376 19 18 1264 423 242 0 0 0
fn=runtime.shrinkstack
1092 3384 44 42 1269 0 0 0 0 0
1099 2538 31 21 846 0 0 423 0 0
1100 1269 0 0 846 0 0 0 0 0
1103 846 0 0 0 0 0 0 0 0
1107 27 0 0 9 0 0 0 0 0
1112 846 0 0 0 0 0 0 0 0
1118 1758 3 3 1313 22 21 0 0 0
1122 846 19 18 423 19 5 0 0 0
1125 1692 0 0 846 423 264 846 17 7
1126 1269 0 0 423 135 99 0 0 0
1129 912 0 0 608 0 0 0 0 0
1132 595 22 21 357 0 0 0 0 0
1133 238 0 0 0 0 0 0 0 0
1136 238 0 0 0 0 0 0 0 0
1137 252 0 0 168 0 0 0 0 0
1145 210 0 0 35 0 0 0 0 0
1146 96 0 0 64 0 0 0 0 0
1153 9 0 0 0 0 0 9 0 0
1154 9 0 0 6 0 0 0 0 0
fn=runtime.stackalloc
324 368 24 8 96 0 0 48 0 0
328 48 0 0 48 0 0 0 0 0
329 144 17 8 96 0 0 0 0 0
332 192 0 0 48 0 0 0 0 0
339 96 0 0 48 1 0 0 0 0
352 96 0 0 0 0 0 0 0 0
355 174 21 8 0 0 0 0 0 0
356 27 0 0 0 0 0 0 0 0
357 27 0 0 0 0 0 0 0 0
360 60 13 8 40 4 2 20 5 0
361 160 0 0 40 0 0 0 0 0
370 220 14 6 40 20 13 20 0 0
371 80 0 0 0 0 0 0 0 0
372 60 0 0 0 0 0 60 3 0
373 80 0 0 60 0 0 0 0 0
375 80 0 0 40 18 2 40 0 0
376 180 18 6 60 0 0 40 0 0
378 40 0 0 0 0 0 0 0 0
381 16 2 2 0 0 0 8 0 0
382 32 0 0 8 0 0 24 0 0
385 24 0 0 0 0 0 16 0 0
386 48 4 2 8 0 0 0 0 0
390 24 0 0 0 0 0 16 0 0
392 32 0 0 8 0 0 8 0 0
394 64 4 2 16 0 0 32 0 0
395 16 0 0 0 0 0 0 0 0
399 24 0 0 8 0 0 8 0 0
401 8 0 0 0 0 0 0 0 0
413 336 18 10 144 0 0 96 0 0
fn=runtime.stackcache_clear
300 4144 67 42 1184 0 0 592 0 0
301 592 0 0 0 0 0 0 0 0
304 14800 29 20 3552 0 0 2368 1 0
305 18944 35 21 0 0 0 9472 0 0
306 14208 0 0 7104 251 90 2368 0 0
307 7278 0 0 58 0 0 0 0 0
308 116 0 0 58 58 27 58 0 0
309 232 0 0 58 0 0 174 0 0
312 2484 0 0 116 0 0 2368 0 0
313 2368 0 0 0 0 0 2368 242 69
314 7104 0 0 2368 0 0 4736 0 0
fn=runtime.stackcacherefill
259 120 30 16 40 0 0 20 0 0
268 220 14 8 20 0 0 60 4 0
269 432 15 8 0 0 0 108 0 0
270 440 0 0 176 0 0 176 0 0
271 176 0 0 88 0 0 88 0 0
273 440 0 0 176 0 0 0 0 0
275 60 0 0 20 0 0 40 0 0
276 316 0 0 60 0 0 128 0 0
277 40 16 8 20 0 0 20 2 1
278 60 0 0 40 0 0 0 0 0
fn=runtime.stackfree
422 60 10 6 20 0 0 10 0 0
423 10 0 0 10 0 0 0 0 0
424 20 9 6 10 0 0 0 0 0
425 50 0 0 10 0 0 0 0 0
426 30 0 0 0 0 0 0 0 0
429 30 0 0 0 0 0 0 0 0
436 20 0 0 10 4 1 0 0 0
447 20 9 6 0 0 0 0 0 0
450 54 0 0 0 0 0 0 0 0
451 12 0 0 0 0 0 0 0 0
452 12 0 0 0 0 0 0 0 0
455 20 0 0 20 0 0 0 0 0
456 40 0 0 10 0 0 0 0 0
459 30 0 0 20 0 0 0 0 0
461 70 10 6 10 2 0 0 0 0
464 20 10 6 10 1 0 10 10 7
465 10 0 0 0 0 0 10 0 0
466 40 0 0 10 0 0 10 0 0
fn=runtime.stackinit
158 1 1 1 0 0 0 0 0 0
159 1 0 0 0 0 0 0 0 0
162 16 0 0 0 0 0 0 0 0
163 8 0 0 0 0 0 0 0 0
165 107 1 1 0 0 0 0 0 0
166 70 0 0 0 0 0 0 0 0
fn=runtime.stacklog2
173 72 5 1 8 0 0 0 0 0
174 16 0 0 0 0 0 0 0 0
175 16 0 0 0 0 0 0 0 0
177 8 0 0 0 0 0 8 0 0
fn=runtime.stackpoolalloc
182 528 12 8 176 0 0 88 0 0
183 704 18 8 88 0 0 88 0 0
184 88 0 0 88 0 0 0 0 0
185 176 0 0 0 0 0 0 0 0
187 48 0 0 6 0 0 30 1 0
188 12 5 2 0 0 0 0 0 0
191 12 0 0 6 0 0 0 0 0
194 18 0 0 6 0 0 0 0 0
198 30 0 0 6 0 0 6 0 0
199 226 3 1 52 0 0 0 0 0
200 52 0 0 0 0 0 0 0 0
201 104 0 0 52 0 0 52 52 52
202 52 0 0 0 0 0 52 0 0
204 24 0 0 6 0 0 18 0 0
206 106 12 7 94 17 12 12 0 0
207 176 13 8 0 0 0 0 0 0
210 176 0 0 88 63 31 88 0 0
211 264 0 0 88 4 2 88 0 0
212 264 0 0 88 0 0 0 0 0
214 60 11 8 12 0 0 36 1 0
216 364 0 0 188 0 0 88 0 0
fn=runtime.stackpoolfree
220 348 9 8 116 0 0 58 0 0
221 58 0 0 0 0 0 0 0 0
222 174 9 8 58 17 12 0 0 0
225 174 0 0 58 7 4 0 0 0
227 132 12 10 12 0 0 36 0 0
229 128 0 0 70 0 0 58 0 0
230 58 0 0 0 0 0 58 0 0
231 174 0 0 58 0 0 58 0 0
232 232 10 8 58 3 0 0 0 0
251 174 5 5 116 0 0 0 0 0
fn=runtime.syncadjustsudogs
784 18 3 3 6 0 0 3 0 0
785 15 0 0 6 0 0 0 0 0
791 27 0 0 6 0 0 3 0 0
792 9 0 0 3 0 0 0 0 0
793 15 3 3 3 0 0 6 0 0
795 3 0 0 3 0 0 0 0 0
799 15 0 0 6 0 0 9 0 0
805 15 0 0 6 0 0 0 0 0
814 36 6 6 12 0 0 3 0 0
815 9 0 0 3 0 0 0 0 0
816 15 0 0 3 0 0 6 0 0
818 3 0 0 3 0 0 0 0 0
821 18 0 0 9 0 0 6 0 0
fl=.//usr/lib/golang/src/runtime/string.go
fn=runtime.atoi
363 18 2 1 6 0 0 0 0 0
364 2 0 0 0 0 0 2 0 0
368 16 0 0 8 0 0 0 0 0
374 56 1 1 0 0 0 0 0 0
375 12 0 0 12 0 0 0 0 0
376 48 0 0 0 0 0 0 0 0
379 36 0 0 0 0 0 0 0 0
383 36 0 0 0 0 0 0 0 0
384 24 1 1 0 0 0 0 0 0
385 24 0 0 0 0 0 0 0 0
392 40 2 2 0 0 0 0 0 0
395 4 0 0 0 0 0 0 0 0
399 12 0 0 0 0 0 0 0 0
400 4 0 0 4 0 0 0 0 0
401 8 0 0 0 0 0 0 0 0
404 20 0 0 0 0 0 8 0 0
fn=runtime.concatstring3
61 6 1 1 2 0 0 1 0 0
62 14 1 1 5 0 0 7 0 0
fn=runtime.concatstrings
23 12 1 1 2 0 0 1 0 0
27 21 1 1 6 0 0 0 0 0
29 6 0 0 0 0 0 0 0 0
32 9 1 1 0 0 0 0 0 0
36 3 0 0 0 0 0 0 0 0
37 3 1 1 0 0 0 0 0 0
39 2 0 0 0 0 0 0 0 0
46 5 1 1 0 0 0 0 0 0
47 3 0 0 0 0 0 0 0 0
49 15 1 1 6 0 0 5 0 0
50 39 0 0 16 0 0 9 0 0
51 43 3 3 0 0 0 21 0 0
52 39 0 0 12 0 0 0 0 0
54 11 0 0 8 0 0 2 0 0
fn=runtime.cpuinit
351 563 2 1 62 0 0 248 0 0
fn=runtime.findnull
417 504 16 9 0 0 0 168 0 0
418 504 0 0 168 0 0 0 0 0
445 840 0 0 0 0 0 0 0 0
447 168 0 0 0 0 0 0 0 0
448 1190 0 0 170 0 0 850 0 0
450 1190 19 9 170 0 0 680 2 0
451 1178 15 9 504 0 0 338 0 0
454 6 0 0 4 0 0 0 0 0
455 6 0 0 2 0 0 0 0 0
fn=runtime.funcline1
474 8 0 0 2 0 0 5 0 0
475 1 0 0 1 0 0 0 0 0
fn=runtime.funcname
474 296 0 0 74 0 0 185 0 0
475 37 0 0 37 0 0 0 0 0
fn=runtime.goargs
474 24 0 0 6 0 0 15 0 0
475 3 0 0 3 0 0 0 0 0
fn=runtime.gostring
315 378 1 1 126 0 0 63 0 0
316 315 0 0 126 0 0 189 0 0
317 126 0 0 0 0 0 0 0 0
320 504 1 1 252 0 0 252 0 0
321 504 1 1 126 0 0 252 0 0
322 441 0 0 252 0 0 126 0 0
fn=runtime.intstring
233 304 8 8 76 0 0 76 0 0
234 190 0 0 38 0 0 0 0 0
235 114 4 4 0 0 0 38 0 0
236 38 0 0 0 0 0 38 0 0
237 114 0 0 76 0 0 0 0 0
fn=runtime.isAsyncSafePoint
351 24 1 1 4 0 0 8 0 0
fn=runtime.isSystemGoroutine
351 280 0 0 35 0 0 140 0 0
fn=runtime.osArchInit
474 9 1 1 1 0 0 5 0 0
475 1 0 0 1 0 0 0 0 0
fn=runtime.parseRelease
502 7 1 1 2 0 0 1 0 0
504 32 0 0 16 0 0 0 0 0
505 40 1 1 8 0 0 0 0 0
506 1 0 0 0 0 0 1 0 0
511 6 0 0 0 0 0 3 0 0
523 10 1 1 4 0 0 2 0 0
526 10 1 1 4 0 0 2 0 0
529 5 1 1 3 0 0 1 0 0
530 9 0 0 4 0 0 4 0 0
fn=runtime.parseRelease.func1
511 24 1 1 9 0 0 6 0 0
512 45 1 1 16 0 0 2 0 0
513 21 0 0 7 0 0 0 0 0
514 10 0 0 4 0 0 6 0 0
515 32 1 1 10 0 0 4 0 0
516 10 0 0 4 0 0 4 0 0
519 5 1 1 2 0 0 3 0 0
520 5 0 0 2 0 0 2 0 0
521 5 1 1 2 0 0 2 0 0
fn=runtime.rawstring
258 640 4 4 128 0 0 256 0 0
259 384 0 0 128 0 0 256 0 0
261 64 0 0 0 0 0 64 0 0
262 128 0 0 64 0 0 64 0 0
264 192 2 2 0 0 0 192 0 0
266 192 0 0 128 0 0 0 0 0
fn=runtime.rawstringtmp
118 6 2 2 2 0 0 1 0 0
119 4 1 1 1 0 0 0 0 0
123 9 1 1 6 0 0 2 0 0
125 8 0 0 2 0 0 5 0 0
fn=runtime.readgogc
410 9 0 0 2 0 0 3 0 0
fn=runtime.schedinit
410 9 0 0 2 0 0 3 0 0
fn=runtime.slicebytetostring
75 8800256 327 47 2200064 0 0 2200064 0 0
76 2200064 0 0 2200064 0 0 0 0 0
77 2200064 0 0 0 0 0 0 0 0
92 2200064 74 34 0 0 0 0 0 0
93 4 1 0 1 0 0 1 0 0
94 1 1 1 0 0 0 1 0 0
95 3 0 0 2 0 0 0 0 0
99 5500155 0 0 1100031 0 0 0 0 0
102 6600186 70 37 1100031 0 0 4400124 0 0
104 1100031 2 0 0 0 0 1100031 270 7
105 2200062 0 0 1100031 0 0 1100031 0 0
106 6600186 0 0 2200062 0 0 4400124 0 0
107 3300093 0 0 2200062 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/stubs.go
fn=runtime.(*bucket).mp
12 3942 0 0 0 0 0 0 0 0
fn=runtime.(*gcControllerState).enlistWorker
110 174142 726 54 174142 0 0 0 0 0
116 174142 0 0 174142 5376 223 0 0 0
117 261213 0 0 0 0 0 0 0 0
118 609497 0 0 0 0 0 0 0 0
119 174142 0 0 0 0 0 174142 0 0
120 87071 0 0 0 0 0 0 0 0
127 174142 0 0 0 0 0 0 0 0
fn=runtime.(*gcSweepBuf).block
12 605 19 18 0 0 0 0 0 0
fn=runtime.(*gcSweepBuf).push
12 340054 81 1 306 0 0 0 0 0
fn=runtime.(*hmap).newoverflow
12 12278 4 3 2724 0 0 0 0 0
fn=runtime.(*itab).init
12 2 0 0 0 0 0 1 0 0
fn=runtime.(*itabTableType).add
12 110 0 0 0 0 0 0 0 0
fn=runtime.(*itabTableType).find
12 4 0 0 0 0 0 0 0 0
fn=runtime.(*linearAlloc).alloc
305 70 0 0 14 0 0 0 0 0
fn=runtime.(*mheap).grow
305 560 0 0 76 0 0 0 0 0
fn=runtime.(*mheap).sysAlloc
305 35 0 0 7 0 0 7 3 0
fn=runtime.(*pageAlloc).allocToCache
310 873 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).grow
305 380 72 52 76 0 0 76 0 0
310 304 0 0 76 0 0 76 27 0
fn=runtime.(*pageAlloc).sysGrow
12 760 0 0 0 0 0 0 0 0
305 1140 0 0 0 0 0 0 0 0
310 1140 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
305 1510 0 0 0 0 0 0 0 0
310 2265 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func2
12 750 0 0 0 0 0 0 0 0
305 1500 0 0 375 0 0 0 0 0
310 1125 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysInit
305 20 0 0 0 0 0 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
305 285 26 16 0 0 0 0 0 0
fn=runtime.(*pollCache).alloc
12 18 0 0 0 0 0 0 0 0
fn=runtime.(*semaRoot).queue
110 32 16 15 32 0 0 0 0 0
116 32 0 0 32 1 1 0 0 0
117 48 0 0 0 0 0 0 0 0
118 112 0 0 0 0 0 0 0 0
119 32 16 15 0 0 0 32 0 0
120 16 0 0 0 0 0 0 0 0
fn=runtime.SetFinalizer
12 5 0 0 0 0 0 0 0 0
305 35 3 2 5 0 0 0 0 0
fn=runtime.adjustpointers
12 190 0 0 0 0 0 0 0 0
fn=runtime.advanceEvacuationMark
12 50 0 0 50 0 0 0 0 0
fn=runtime.chanrecv
12 1 0 0 1 0 0 0 0 0
fn=runtime.chansend
12 1 0 0 1 0 0 0 0 0
fn=runtime.cpuinit
12 127 0 0 127 0 0 0 0 0
fn=runtime.doInit
12 42 0 0 0 0 0 0 0 0
fn=runtime.evacuate_faststr
12 4201 4 2 1138 0 0 0 0 0
fn=runtime.fastexprand
110 1598 718 127 1598 0 0 0 0 0
116 1598 0 0 1598 466 83 0 0 0
117 2397 0 0 0 0 0 0 0 0
118 5593 0 0 0 0 0 0 0 0
119 1598 0 0 0 0 0 1598 0 0
120 799 0 0 0 0 0 0 0 0
fn=runtime.findfunc
12 10042 0 0 10042 0 0 0 0 0
fn=runtime.findrunnable
110 3760 0 0 3760 0 0 0 0 0
116 3760 0 0 3760 3 3 0 0 0
117 5640 133 49 0 0 0 0 0 0
118 13160 0 0 0 0 0 0 0 0
119 3760 0 0 0 0 0 3760 0 0
120 1880 0 0 0 0 0 0 0 0
fn=runtime.funcdata
12 32544 0 0 0 0 0 0 0 0
fn=runtime.getStackMap
12 507 0 0 0 0 0 0 0 0
fn=runtime.goargs
12 3 0 0 3 0 0 0 0 0
fn=runtime.goenvs_unix
12 127 2 2 127 0 0 0 0 0
fn=runtime.growslice
12 92 0 0 46 0 0 0 0 0
305 96 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
12 16 0 0 0 0 0 0 0 0
305 2 0 0 0 0 0 0 0 0
fn=runtime.makechan
12 1 0 0 0 0 0 0 0 0
fn=runtime.makemap
110 12 6 5 12 0 0 0 0 0
116 12 0 0 12 1 1 0 0 0
117 18 0 0 0 0 0 0 0 0
118 42 0 0 0 0 0 0 0 0
119 12 0 0 0 0 0 12 0 0
120 6 6 5 0 0 0 0 0 0
fn=runtime.makemap_small
110 28 0 0 28 0 0 0 0 0
116 28 0 0 28 1 1 0 0 0
117 42 0 0 0 0 0 0 0 0
118 98 5 2 0 0 0 0 0 0
119 28 0 0 0 0 0 28 0 0
120 14 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
305 104 0 0 0 0 0 0 0 0
329 5868162 14361 148 0 0 0 0 0 0
fn=runtime.mapaccess1_fast64
12 16565020 0 0 2000000 0 0 0 0 0
fn=runtime.mapaccess2_faststr
12 1082 0 0 73 0 0 0 0 0
fn=runtime.mapassign_fast64
12 1433705 18 8 0 0 0 0 0 0
fn=runtime.mapassign_faststr
12 1973 8 7 0 0 0 0 0 0
fn=runtime.mapiterinit
110 78 7 7 78 0 0 0 0 0
116 78 7 7 78 35 33 0 0 0
117 117 0 0 0 0 0 0 0 0
118 273 0 0 0 0 0 0 0 0
119 78 0 0 0 0 0 78 0 0
120 39 0 0 0 0 0 0 0 0
fn=runtime.mapiternext
12 26167050 14 14 638976 0 0 3900000 0 0
fn=runtime.markrootBlock
12 76 0 0 38 0 0 0 0 0
fn=runtime.name.name
12 2 0 0 0 0 0 0 0 0
fn=runtime.pcdatavalue
12 11930 0 0 0 0 0 0 0 0
fn=runtime.pcvalue
110 31074 0 0 31074 0 0 0 0 0
116 31074 760 130 31074 0 0 0 0 0
117 46611 0 0 0 0 0 0 0 0
118 108759 0 0 0 0 0 0 0 0
119 31074 0 0 0 0 0 31074 0 0
120 15537 805 132 0 0 0 0 0 0
fn=runtime.persistentalloc1
305 3134 1 1 72 0 0 600 0 0
fn=runtime.stkbucket
12 783 0 0 0 0 0 0 0 0
fn=runtime.sysHugePage
305 130888 0 0 0 0 0 0 0 0
310 32722 0 0 0 0 0 0 0 0
fn=runtime.sysUnused
310 180 13 8 0 0 0 0 0 0
fn=runtime.sysargs
12 1 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/symtab.go
fn=runtime.(*Frames).Next
73 14 3 3 3 0 0 3 0 0
74 16 0 0 6 0 0 2 0 0
78 10 1 1 6 0 0 0 0 0
81 2 1 1 1 0 0 1 0 0
82 11 0 0 1 0 0 3 0 0
83 6 0 0 2 0 0 4 0 0
84 1 0 0 0 0 0 0 0 0
94 1 0 0 0 0 0 1 0 0
95 3 0 0 1 0 0 0 0 0
100 2 1 1 1 0 0 0 0 0
102 7 1 1 2 0 0 5 0 0
103 8 0 0 3 0 0 4 0 0
105 1 0 0 0 0 0 0 0 0
114 20 1 1 6 0 0 3 0 0
115 1 0 0 0 0 0 1 0 0
116 2 0 0 1 0 0 1 0 0
117 5 0 0 2 0 0 2 0 0
118 1 1 1 0 0 0 1 0 0
119 10 1 1 3 0 0 4 0 0
127 2 1 1 0 0 0 0 0 0
129 2 0 0 0 0 0 0 0 0
130 5 1 1 1 0 0 2 0 0
131 6 0 0 1 0 0 3 0 0
140 5 1 1 2 0 0 1 0 0
141 2 1 1 1 0 0 0 0 0
145 10 1 1 5 0 0 5 0 0
146 4 0 0 0 0 0 3 0 0
148 4 0 0 2 0 0 1 0 0
591 3 1 1 1 0 0 0 0 0
629 2 0 0 0 0 0 0 0 0
fn=runtime.adjustpointers
629 190 0 0 0 0 0 0 0 0
fn=runtime.findfunc
636 60252 828 137 20084 0 0 10042 5 0
637 40168 0 0 20084 0 0 20084 482 109
638 20084 0 0 0 0 0 0 0 0
643 40168 843 143 20084 0 0 0 0 0
644 20084 0 0 0 0 0 0 0 0
645 20084 0 0 0 0 0 0 0 0
647 20084 0 0 0 0 0 0 0 0
648 50210 0 0 20084 7816 1545 0 0 0
654 40168 795 130 20084 811 200 0 0 0
657 80336 0 0 10042 6935 1343 0 0 0
669 182340 186 80 20260 5126 841 0 0 0
673 50210 723 140 10042 0 0 0 0 0
674 20084 0 0 0 0 0 0 0 0
681 100420 0 0 40168 0 0 20084 0 0
fn=runtime.findmoduledatap
615 50210 829 143 10042 0 0 0 0 0
616 40168 0 0 20084 813 197 0 0 0
617 20084 0 0 10042 0 0 10042 0 0
fn=runtime.funcMaxSPDelta
852 12 2 2 4 0 0 2 0 0
854 32 1 1 12 2 2 0 0 0
855 4 0 0 2 0 0 2 0 0
856 2 0 0 0 0 0 2 0 0
858 2 0 0 0 0 0 0 0 0
860 228 1 1 89 0 0 91 2 2
861 13 0 0 0 0 0 0 0 0
862 45 1 1 6 0 0 15 0 0
864 33 0 0 22 0 0 0 0 0
fn=runtime.funcdata
888 72126 711 150 24042 0 0 12021 0 0
889 80554 696 144 36063 0 0 0 0 0
890 14372 0 0 7186 0 0 3593 0 0
892 8428 0 0 8428 0 0 0 0 0
893 18024 0 0 0 0 0 0 0 0
894 14520 0 0 0 0 0 0 0 0
897 7260 0 0 0 0 0 0 0 0
899 43308 0 0 25284 2794 594 8428 0 0
fn=runtime.funcline1
629 1 0 0 0 0 0 0 0 0
824 6 1 1 2 0 0 1 0 0
826 2 0 0 1 0 0 0 0 0
829 13 2 2 5 0 0 8 0 0
830 14 1 1 6 0 0 8 0 0
831 10 1 1 4 0 0 0 0 0
835 8 1 1 3 1 1 1 0 0
836 7 1 1 3 0 0 3 0 0
fn=runtime.funcname
629 37 0 0 0 0 0 0 0 0
795 148 15 9 37 11 10 0 0 0
798 259 15 9 111 0 0 0 0 0
801 222 16 9 74 0 0 37 0 0
802 296 0 0 111 0 0 111 0 0
fn=runtime.funcspdelta
843 57450 1012 225 19150 0 0 9575 0 0
844 124475 379 114 57450 0 0 67025 799 178
845 19150 0 0 0 0 0 0 0 0
848 38300 0 0 19150 0 0 9575 0 0
fn=runtime.gcMarkRootPrepare
402 38 0 0 38 0 0 0 0 0
403 76 19 18 0 0 0 0 0 0
406 76 0 0 76 19 16 0 0 0
fn=runtime.gentraceback
629 28726 0 0 9575 0 0 0 0 0
fn=runtime.getStackMap
956 7652 0 0 0 0 0 0 0 0
fn=runtime.isAsyncSafePoint
629 3 0 0 0 0 0 0 0 0
fn=runtime.isSystemGoroutine
629 37 0 0 0 0 0 0 0 0
fn=runtime.itabsinit
402 1 0 0 1 0 0 0 0 0
403 2 0 0 0 0 0 0 0 0
406 2 0 0 2 0 0 0 0 0
fn=runtime.markroot
402 38 0 0 38 24 3 0 0 0
403 76 0 0 0 0 0 0 0 0
406 76 0 0 76 38 3 0 0 0
fn=runtime.moduledataverify
489 7 1 1 2 0 0 1 0 0
490 11 1 1 4 1 1 1 0 0
491 2 0 0 0 0 0 2 0 0
fn=runtime.moduledataverify1
497 7 1 1 2 0 0 1 0 0
501 3 0 0 3 1 1 0 0 0
503 12 1 1 5 1 1 1 0 0
509 4 0 0 2 0 0 0 0 0
510 8001 0 0 0 0 0 0 0 0
512 29326 1 1 5332 666 666 0 0 0
530 6 1 1 2 2 1 0 0 0
531 3 1 1 2 0 0 0 0 0
535 7 1 1 4 2 1 0 0 0
fn=runtime.modulesinit
427 6 1 1 2 0 0 1 0 0
428 6 1 1 1 0 0 3 0 0
429 8 0 0 1 1 0 1 0 0
430 2 0 0 1 1 1 0 0 0
433 33 5 4 11 1 1 10 2 1
434 4 0 0 2 0 0 0 0 0
435 13 1 1 7 1 1 5 0 0
436 14 1 1 7 1 1 5 0 0
449 7 0 0 3 0 0 0 0 0
450 2 0 0 1 0 0 0 0 0
451 3 1 1 1 0 0 1 0 0
452 9 0 0 3 0 0 1 0 0
457 4 0 0 0 0 0 3 0 0
458 3 1 1 2 0 0 0 0 0
fn=runtime.pcdatavalue
871 17895 0 0 5965 24 22 0 0 0
874 38418 868 225 12806 0 0 6403 4 3
875 38418 0 0 19209 3 2 0 0 0
876 1752 0 0 876 0 0 438 0 0
878 89475 693 148 35790 0 0 47720 31 23
fn=runtime.pcvalue
629 31084 203 63 15542 0 0 0 0 0
701 124296 135 71 15537 0 0 0 0 0
704 108794 993 220 31084 0 0 15542 6 1
705 46626 0 0 15542 0 0 0 0 0
715 77715 0 0 31084 0 0 0 0 0
716 15537 0 0 0 0 0 0 0 0
717 419499 0 0 0 0 0 0 0 0
723 745776 0 0 0 0 0 0 0 0
724 373788 0 0 124596 0 0 0 0 0
730 15542 0 0 0 0 0 0 0 0
738 233130 713 150 62168 0 0 15542 326 55
739 31084 0 0 15542 490 131 15542 499 129
740 15542 0 0 0 0 0 15542 5 5
741 15542 0 0 0 0 0 0 0 0
743 2239086 1463 252 873346 0 0 888888 1640 351
744 126984 0 0 0 0 0 0 0 0
747 380957 3 3 253973 0 0 0 0 0
754 15542 0 0 0 0 0 0 0 0
755 15537 0 0 0 0 0 0 0 0
756 31074 0 0 0 0 0 0 0 0
757 15537 0 0 0 0 0 0 0 0
758 108759 0 0 46611 0 0 46611 0 0
759 62148 0 0 15537 0 0 46611 0 0
762 15537 0 0 15537 0 0 0 0 0
766 77710 786 139 46626 0 0 15542 0 0
fn=runtime.readvarint
928 125661 794 140 0 0 0 41887 485 104
930 251322 0 0 83774 0 0 0 0 0
931 293209 806 129 83774 335 81 0 0 0
932 83774 0 0 0 0 0 0 0 0
933 544531 0 0 0 0 0 0 0 0
934 167548 0 0 0 0 0 0 0 0
937 41887 0 0 0 0 0 0 0 0
939 209435 0 0 83774 0 0 83774 0 0
fn=runtime.scanframeworker
629 1610 0 0 0 0 0 0 0 0
fn=runtime.shrinkstack
629 423 0 0 0 0 0 0 0 0
fn=runtime.step
903 773916 1523 274 259961 0 0 126997 2 2
906 634985 0 0 380991 14354 3443 0 0 0
907 259961 0 0 0 0 0 0 0 0
908 14 1 1 4 0 0 6 0 0
911 364731 0 0 0 0 0 0 0 0
912 130032 771 132 48762 0 0 65016 310 46
914 888965 812 142 253990 0 0 0 0 0
915 1379357 0 0 159503 0 0 76899 12 12
917 380985 0 0 126995 1983 395 0 0 0
919 355352 811 142 0 0 0 0 0 0
920 179431 0 0 51266 0 0 102532 33 25
922 1219854 21 9 76899 0 0 0 0 0
923 253990 0 0 253990 0 0 0 0 0
924 888965 777 144 253990 0 0 507980 0 0
fn=testing.callerName
66 11 1 1 4 0 0 5 2 2
67 6 1 1 1 0 0 3 0 0
fl=.//usr/lib/golang/src/runtime/sys_linux_amd64.s
fn=runtime.clone
573 7 1 1 7 0 0 0 0 0
574 7 0 0 7 0 0 0 0 0
575 7 0 0 0 0 0 0 0 0
576 7 0 0 0 0 0 0 0 0
580 7 0 0 7 0 0 0 0 0
581 7 0 0 7 0 0 0 0 0
582 7 0 0 7 0 0 0 0 0
584 7 0 0 0 0 0 0 0 0
585 7 0 0 0 0 0 0 0 0
588 14 2 2 0 0 0 0 0 0
589 14 0 0 0 0 0 0 0 0
590 7 0 0 0 0 0 7 2 2
591 7 0 0 7 0 0 0 0 0
594 7 0 0 0 0 0 0 0 0
597 7 0 0 0 0 0 0 0 0
598 7 0 0 0 0 0 0 0 0
599 7 0 0 0 0 0 0 0 0
600 7 0 0 0 0 0 0 0 0
603 7 0 0 0 0 0 0 0 0
604 7 0 0 0 0 0 0 0 0
605 7 0 0 0 0 0 7 2 1
608 7 0 0 0 0 0 0 0 0
609 7 0 0 0 0 0 7 7 7
613 7 0 0 0 0 0 7 1 1
614 7 0 0 0 0 0 7 1 1
615 7 0 0 0 0 0 7 0 0
619 7 2 1 0 0 0 7 0 0
fn=runtime.closefd
1 1 0 0 1 0 0 0 0 0
87 1 0 0 1 0 0 0 0 0
88 1 0 0 0 0 0 0 0 0
89 1 0 0 0 0 0 0 0 0
90 1 0 0 0 0 0 0 0 0
91 1 0 0 0 0 0 0 0 0
93 1 0 0 0 0 0 1 0 0
fn=runtime.epollcreate1
1 1 0 0 1 0 0 0 0 0
678 1 1 0 1 0 0 0 0 0
679 1 0 0 0 0 0 0 0 0
680 1 0 0 0 0 0 0 0 0
681 1 0 0 0 0 0 1 0 0
fn=runtime.epollctl
1 5 0 0 5 0 0 0 0 0
686 5 1 1 5 0 0 0 0 0
687 5 0 0 5 0 0 0 0 0
688 5 0 0 5 0 0 0 0 0
689 5 2 2 5 0 0 0 0 0
690 5 0 0 0 0 0 0 0 0
691 5 0 0 0 0 0 0 0 0
692 5 0 0 0 0 0 5 0 0
fn=runtime.epollwait
1 259 0 0 259 6 5 0 0 0
698 259 178 55 259 0 0 0 0 0
699 259 0 0 259 0 0 0 0 0
700 259 0 0 259 0 0 0 0 0
701 259 0 0 259 0 0 0 0 0
702 259 0 0 0 0 0 0 0 0
703 259 0 0 0 0 0 0 0 0
704 261 0 0 0 0 0 0 0 0
705 259 15 4 0 0 0 259 28 8
fn=runtime.exit
55 1 1 1 1 0 0 0 0 0
56 1 0 0 0 0 0 0 0 0
57 1 0 0 0 0 0 0 0 0
fn=runtime.futex
1 1227 0 0 1227 391 92 0 0 0
560 1234 370 53 1234 0 0 0 0 0
561 1234 0 0 1234 0 0 0 0 0
562 1234 0 0 1234 0 0 0 0 0
563 1234 0 0 1234 0 0 0 0 0
564 1234 0 0 1234 0 0 0 0 0
565 1234 0 0 1234 0 0 0 0 0
566 1234 129 32 0 0 0 0 0 0
567 1250 1 0 0 0 0 0 0 0
568 1227 114 25 0 0 0 1227 524 107
fn=runtime.getpid
1 46 0 0 46 0 0 0 0 0
177 46 36 27 0 0 0 0 0 0
178 46 0 0 0 0 0 0 0 0
179 46 0 0 0 0 0 46 0 0
fn=runtime.gettid
1 8 0 0 8 0 0 0 0 0
149 8 4 3 0 0 0 0 0 0
150 8 0 0 0 0 0 0 0 0
151 8 0 0 0 0 0 8 0 0
fn=runtime.madvise
1 69 0 0 69 3 0 0 0 0
549 69 9 1 69 0 0 0 0 0
550 69 0 0 69 0 0 0 0 0
551 69 0 0 69 0 0 0 0 0
552 69 0 0 0 0 0 0 0 0
553 69 0 0 0 0 0 0 0 0
554 69 0 0 0 0 0 69 1 0
fn=runtime.nanotime1
1 137682 0 0 91788 0 0 0 0 0
268 137682 77 47 0 0 0 45894 26 19
271 45894 0 0 0 0 0 0 0 0
274 45894 0 0 45894 457 56 0 0 0
275 45894 0 0 45894 398 57 0 0 0
278 45894 0 0 0 0 0 0 0 0
279 45894 0 0 45894 0 0 0 0 0
280 45894 0 0 0 0 0 45894 4125 358
281 45894 0 0 0 0 0 45894 0 0
283 45894 0 0 45894 2284 218 0 0 0
284 45894 0 0 0 0 0 0 0 0
286 250 30 20 250 33 22 0 0 0
287 250 0 0 250 7 7 0 0 0
290 45894 1140 71 0 0 0 0 0 0
291 45894 0 0 0 0 0 0 0 0
293 45894 0 0 45894 4344 100 0 0 0
294 45894 0 0 0 0 0 0 0 0
295 45894 0 0 0 0 0 0 0 0
310 45894 1166 82 0 0 0 0 0 0
311 45894 0 0 0 0 0 0 0 0
312 45894 0 0 45894 4102 227 0 0 0
313 45894 0 0 0 0 0 45894 420 48
314 45894 0 0 45894 27 23 0 0 0
315 45894 0 0 45894 0 0 0 0 0
316 45894 0 0 0 0 0 0 0 0
317 45894 0 0 0 0 0 45894 0 0
318 45894 1241 67 0 0 0 0 0 0
321 45894 0 0 0 0 0 0 0 0
322 45894 0 0 0 0 0 0 0 0
323 45894 0 0 0 0 0 45894 0 0
fn=runtime.open
1 1 0 0 1 0 0 0 0 0
74 1 1 1 0 0 0 0 0 0
75 1 0 0 1 0 0 0 0 0
76 1 0 0 1 0 0 0 0 0
77 1 1 1 1 0 0 0 0 0
78 1 0 0 0 0 0 0 0 0
79 1 0 0 0 0 0 0 0 0
80 1 0 0 0 0 0 0 0 0
81 1 0 0 0 0 0 0 0 0
83 1 0 0 0 0 0 1 0 0
fn=runtime.osyield
1 16 0 0 16 1 0 0 0 0
655 16 4 3 0 0 0 0 0 0
656 16 0 0 0 0 0 0 0 0
fn=runtime.pipe2
1 1 0 0 1 0 0 0 0 0
124 1 1 1 0 0 0 0 0 0
125 1 0 0 1 0 0 0 0 0
126 1 0 0 0 0 0 0 0 0
127 1 0 0 0 0 0 0 0 0
128 1 0 0 0 0 0 1 0 0
fn=runtime.read
1 2 0 0 2 0 0 0 0 0
106 2 2 1 2 0 0 0 0 0
107 2 0 0 2 0 0 0 0 0
108 2 0 0 2 0 0 0 0 0
109 2 0 0 0 0 0 0 0 0
110 2 0 0 0 0 0 0 0 0
111 2 0 0 0 0 0 2 0 0
fn=runtime.rt_sigaction
1 114 0 0 114 0 0 0 0 0
339 114 0 0 114 0 0 0 0 0
340 114 0 0 114 0 0 0 0 0
341 114 0 0 114 0 0 0 0 0
342 114 0 0 114 0 0 0 0 0
343 114 0 0 0 0 0 0 0 0
344 114 0 0 0 0 0 0 0 0
345 114 0 0 0 0 0 114 0 0
fn=runtime.rtsigprocmask
1 23 0 0 23 0 0 0 0 0
327 23 0 0 23 0 0 0 0 0
328 23 0 0 23 0 0 0 0 0
329 23 0 0 23 0 0 0 0 0
330 23 0 0 23 0 0 0 0 0
331 23 0 0 0 0 0 0 0 0
332 23 0 0 0 0 0 0 0 0
333 23 0 0 0 0 0 0 0 0
334 23 2 2 0 0 0 0 0 0
fn=runtime.sched_getaffinity
1 1 0 0 1 0 0 0 0 0
660 1 0 0 1 0 0 0 0 0
661 1 0 0 1 0 0 0 0 0
662 1 0 0 1 0 0 0 0 0
663 1 1 1 0 0 0 0 0 0
664 1 0 0 0 0 0 0 0 0
665 1 0 0 0 0 0 1 0 0
fn=runtime.settls
1 24 4 3 16 0 0 0 0 0
638 24 5 3 0 0 0 8 0 0
643 8 0 0 0 0 0 0 0 0
645 8 0 0 0 0 0 0 0 0
646 8 0 0 0 0 0 0 0 0
647 8 0 0 0 0 0 0 0 0
648 8 0 0 0 0 0 0 0 0
649 8 0 0 0 0 0 0 0 0
650 8 0 0 0 0 0 0 0 0
fn=runtime.sigaltstack
1 16 1 0 16 0 0 0 0 0
628 16 1 1 16 0 0 0 0 0
629 16 0 0 16 0 0 0 0 0
630 16 0 0 0 0 0 0 0 0
631 16 0 0 0 0 0 0 0 0
632 16 0 0 0 0 0 0 0 0
633 16 0 0 0 0 0 0 0 0
fn=runtime.sigreturn
481 46 39 24 0 0 0 0 0 0
482 46 0 0 0 0 0 0 0 0
fn=runtime.sigtramp
1 138 0 0 92 0 0 0 0 0
374 138 35 28 0 0 0 46 43 31
376 46 0 0 0 0 0 46 0 0
377 46 0 0 0 0 0 46 0 0
378 46 0 0 0 0 0 46 0 0
379 46 38 28 0 0 0 46 0 0
380 46 0 0 0 0 0 46 0 0
381 46 0 0 0 0 0 46 0 0
385 46 0 0 0 0 0 46 43 31
386 46 0 0 0 0 0 46 0 0
387 46 0 0 0 0 0 46 0 0
388 46 0 0 0 0 0 0 0 0
389 46 0 0 0 0 0 46 0 0
391 46 0 0 46 0 0 0 0 0
392 46 0 0 46 0 0 0 0 0
393 46 0 0 46 0 0 0 0 0
394 46 0 0 46 0 0 0 0 0
395 46 0 0 0 0 0 0 0 0
396 46 40 29 46 0 0 0 0 0
fn=runtime.sysMmap
1 119 0 0 119 0 0 0 0 0
486 119 73 53 119 0 0 0 0 0
487 119 0 0 119 0 0 0 0 0
488 119 0 0 119 0 0 0 0 0
489 119 0 0 119 0 0 0 0 0
490 119 0 0 119 0 0 0 0 0
491 119 0 0 119 0 0 0 0 0
493 119 76 60 0 0 0 0 0 0
494 119 0 0 0 0 0 0 0 0
495 119 0 0 0 0 0 0 0 0
496 119 0 0 0 0 0 0 0 0
503 119 0 0 0 0 0 119 8 2
504 119 0 0 0 0 0 119 16 6
fn=runtime.sysMunmap
1 5 0 0 5 0 0 0 0 0
526 5 5 5 5 0 0 0 0 0
527 5 0 0 5 0 0 0 0 0
528 5 0 0 0 0 0 0 0 0
529 5 0 0 0 0 0 0 0 0
530 5 0 0 0 0 0 0 0 0
531 5 0 0 0 0 0 0 0 0
fn=runtime.tgkill
1 46 4 2 46 12 3 0 0 0
183 46 38 26 46 0 0 0 0 0
184 46 0 0 46 0 0 0 0 0
185 46 0 0 46 0 0 0 0 0
186 46 0 0 0 0 0 0 0 0
187 47 1 1 0 0 0 0 0 0
fn=runtime.uname
1 1 0 0 1 0 0 0 0 0
775 1 1 1 1 0 0 0 0 0
776 1 0 0 0 0 0 0 0 0
777 1 0 0 0 0 0 0 0 0
778 1 0 0 0 0 0 1 0 0
fn=runtime.usleep
1 1794 146 53 1196 406 38 0 0 0
131 1794 55 20 0 0 0 598 1 0
132 598 0 0 0 0 0 0 0 0
133 598 0 0 598 0 0 0 0 0
134 598 0 0 0 0 0 0 0 0
135 598 0 0 0 0 0 0 0 0
136 598 0 0 0 0 0 598 0 0
137 598 0 0 0 0 0 0 0 0
138 598 0 0 0 0 0 0 0 0
139 598 0 0 0 0 0 598 0 0
142 598 0 0 0 0 0 0 0 0
143 598 0 0 0 0 0 0 0 0
144 598 0 0 0 0 0 0 0 0
145 598 0 0 0 0 0 0 0 0
fn=runtime.walltime1
1 90 0 0 60 0 0 0 0 0
209 90 30 19 0 0 0 30 0 0
217 30 0 0 0 0 0 0 0 0
220 30 0 0 30 0 0 0 0 0
221 30 0 0 30 0 0 0 0 0
224 30 30 19 0 0 0 0 0 0
225 30 0 0 30 0 0 0 0 0
226 30 0 0 0 0 0 30 2 1
227 30 0 0 0 0 0 30 0 0
229 30 0 0 30 0 0 0 0 0
230 30 0 0 0 0 0 0 0 0
232 30 0 0 30 1 0 0 0 0
233 30 0 0 30 0 0 0 0 0
236 30 0 0 0 0 0 0 0 0
237 30 0 0 0 0 0 0 0 0
239 30 0 0 30 2 0 0 0 0
240 30 0 0 0 0 0 0 0 0
241 30 0 0 0 0 0 0 0 0
253 30 28 19 0 0 0 0 0 0
254 30 0 0 0 0 0 0 0 0
255 30 27 19 30 2 0 0 0 0
256 30 0 0 0 0 0 30 0 0
257 30 0 0 30 0 0 0 0 0
258 30 0 0 30 0 0 0 0 0
259 30 0 0 0 0 0 0 0 0
260 30 0 0 0 0 0 0 0 0
261 30 0 0 0 0 0 30 0 0
262 30 0 0 0 0 0 30 0 0
263 30 0 0 0 0 0 30 0 0
fn=runtime.write1
1 1 0 0 1 0 0 0 0 0
97 1 1 1 1 0 0 0 0 0
98 1 0 0 1 0 0 0 0 0
99 1 0 0 1 0 0 0 0 0
100 1 0 0 0 0 0 0 0 0
101 1 0 0 0 0 0 0 0 0
102 1 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/runtime/sys_x86.go
fn=runtime.newproc1
17 29 0 0 29 0 0 0 0 0
22 29 0 0 0 0 0 0 0 0
23 87 0 0 29 0 0 29 3 2
24 29 0 0 0 0 0 29 0 0
25 29 0 0 0 0 0 29 0 0
26 87 0 0 29 0 0 29 0 0
fl=.//usr/lib/golang/src/runtime/time.go
fn=runtime.addAdjustedTimers
685 7 1 1 2 0 0 1 0 0
686 16 2 2 7 0 0 2 0 0
687 4 0 0 1 0 0 3 0 0
688 7 0 0 2 0 0 0 0 0
fn=runtime.adjusttimers
615 174 13 8 58 0 0 29 0 0
616 116 0 0 58 0 0 0 0 0
619 92 12 8 29 0 0 0 0 0
623 84 22 14 56 0 0 0 0 0
627 6 0 0 2 0 0 1 0 0
628 3 0 0 1 1 0 1 0 0
629 3 1 1 1 1 0 0 0 0
632 6 1 1 1 0 0 1 0 0
643 3 1 1 0 0 0 0 0 0
644 6 0 0 1 0 0 0 0 0
646 2 0 0 1 0 0 1 0 0
651 3 1 1 0 0 0 3 0 0
652 27 2 2 9 0 0 10 0 0
653 3 1 1 1 0 0 0 0 0
654 6 0 0 3 0 0 0 0 0
674 5 0 0 2 0 0 0 0 0
675 6 0 0 0 0 0 5 0 0
fn=runtime.deltimer
285 258 46 40 86 0 0 43 0 0
286 43 0 0 43 0 0 0 0 0
287 215 0 0 43 19 10 0 0 0
291 6 6 6 0 0 0 0 0 0
292 36 0 0 6 0 0 0 0 0
296 6 6 6 6 6 0 0 0 0
297 36 0 0 6 0 0 0 0 0
300 6 0 0 0 0 0 0 0 0
301 18 0 0 18 11 0 0 0 0
303 24 0 0 12 0 0 6 0 0
333 86 0 0 0 0 0 0 0 0
336 148 22 19 74 0 0 37 0 0
fn=runtime.doaddtimer
261 180 28 20 60 0 0 30 0 0
264 60 0 0 30 0 0 0 0 0
268 90 0 0 60 0 0 0 0 0
271 30 0 0 0 0 0 0 0 0
272 151 16 12 90 3 0 2 0 0
273 316 8 8 42 0 0 76 14 10
274 242 14 10 92 0 0 150 7 4
275 240 8 4 150 0 0 0 0 0
276 60 0 0 90 6 0 0 0 0
278 60 0 0 60 0 0 0 0 0
279 90 0 0 60 0 0 0 0 0
fn=runtime.dodeltimer
351 6 2 2 2 0 0 1 0 0
352 11 0 0 6 0 0 0 0 0
355 1 0 0 0 0 0 1 0 0
357 3 1 1 2 0 0 0 0 0
358 3 0 0 0 0 0 0 0 0
361 9 1 1 3 0 0 1 0 0
362 4 1 1 1 0 0 1 0 0
363 1 0 0 0 0 0 0 0 0
369 2 0 0 0 0 0 0 0 0
370 1 0 0 0 0 0 0 0 0
372 2 0 0 2 0 0 0 0 0
373 3 1 1 2 0 0 0 0 0
948 3 0 0 2 0 0 0 0 0
949 2 0 0 2 1 0 0 0 0
fn=runtime.dodeltimer0
379 174 25 14 58 0 0 29 0 0
380 290 0 0 145 0 0 0 0 0
383 29 12 7 0 0 0 29 0 0
385 92 5 5 58 0 0 0 0 0
386 87 0 0 0 0 0 0 0 0
389 271 12 7 87 6 0 29 4 4
390 121 5 5 29 0 0 29 0 0
391 29 12 7 0 0 0 0 0 0
394 29 0 0 0 0 0 0 0 0
395 58 0 0 58 0 0 0 0 0
396 87 0 0 58 0 0 0 0 0
948 87 0 0 58 0 0 0 0 0
949 58 0 0 58 0 0 0 0 0
fn=runtime.handoffp
702 488 0 0 164 69 2 0 0 0
705 162 0 0 162 97 0 0 0 0
fn=runtime.modtimer
400 180 28 20 60 0 0 30 0 0
401 90 0 0 60 0 0 0 0 0
410 150 4 4 30 9 9 0 0 0
419 48 0 0 0 0 0 0 0 0
422 28 0 0 0 0 0 0 0 0
426 168 0 0 28 0 0 0 0 0
434 2 0 0 0 0 0 0 0 0
435 12 0 0 2 0 0 0 0 0
436 10 2 2 8 4 0 0 0 0
437 2 2 2 0 0 0 0 0 0
440 12 2 2 0 0 0 0 0 0
453 60 2 1 30 0 0 30 0 0
454 130 19 15 60 2 1 30 5 5
455 190 0 0 90 0 0 60 0 0
456 60 0 0 30 0 0 30 0 0
458 80 0 0 0 0 0 0 0 0
459 28 9 9 0 0 0 28 0 0
460 84 0 0 84 0 0 0 0 0
461 140 0 0 28 3 0 84 7 4
462 140 12 9 56 0 0 84 0 0
463 84 0 0 28 0 0 56 0 0
464 196 0 0 56 0 0 0 0 0
467 28 0 0 0 0 0 0 0 0
468 112 0 0 28 0 0 56 0 0
475 92 2 2 0 0 0 32 0 0
478 4 0 0 2 0 0 0 0 0
486 2 0 0 0 0 0 0 0 0
489 10 2 1 0 0 0 0 0 0
490 8 0 0 0 0 0 0 0 0
492 4 0 0 0 0 0 0 0 0
493 3 1 1 4 0 0 0 0 0
497 10 1 1 2 0 0 0 0 0
500 30 0 0 0 0 0 30 0 0
503 92 12 9 60 0 0 0 0 0
504 3 0 0 0 0 0 2 1 1
fn=runtime.runOneTimer
785 144 18 14 48 0 0 24 1 1
794 72 0 0 48 0 0 24 0 0
795 96 0 0 48 0 0 48 1 1
796 48 0 0 24 0 0 24 1 0
798 72 9 7 24 0 0 0 0 0
809 72 9 7 24 0 0 48 4 4
810 168 0 0 48 0 0 0 0 0
824 168 18 14 24 0 0 72 0 0
826 216 9 7 120 9 9 96 0 0
828 72 0 0 24 1 1 48 0 0
830 72 0 0 48 0 0 0 0 0
fn=runtime.runtimer
716 174 26 15 58 0 0 29 0 0
717 58 0 0 58 0 0 0 0 0
718 214 1 1 92 12 2 30 0 0
719 90 0 0 30 11 3 0 0 0
722 151 15 9 30 11 8 1 0 0
724 76 1 0 26 0 0 0 0 0
726 4 1 1 2 0 0 1 0 0
729 144 0 0 24 0 0 0 0 0
734 96 0 0 0 0 0 96 0 0
735 96 7 7 48 0 0 24 1 1
738 24 0 0 4 0 0 0 0 0
741 8 0 0 0 0 0 8 0 0
742 28 4 4 8 0 0 0 0 0
745 12 0 0 12 0 0 0 0 0
746 8 0 0 4 0 0 0 0 0
747 16 0 0 8 0 0 4 0 0
750 3 0 0 0 0 0 0 0 0
751 6 1 1 1 0 0 0 0 0
754 2 0 0 1 0 0 1 0 0
755 2 0 0 0 0 0 2 0 0
756 5 0 0 2 0 0 3 0 0
757 4 1 1 1 0 0 0 0 0
760 7 0 0 2 0 0 0 0 0
764 2 0 0 0 0 0 0 0 0
768 50 0 0 0 0 0 0 0 0
771 8 8 4 0 0 0 0 0 0
fn=runtime.scavengeSleep
223 30 0 0 0 0 0 0 0 0
514 390 3 3 150 12 9 240 0 0
fn=runtime.siftupTimer
1027 180 18 12 60 0 0 30 0 0
1028 120 0 0 60 0 0 0 0 0
1031 120 0 0 90 0 0 0 0 0
1033 90 14 10 0 0 0 0 0 0
1041 180 14 10 30 0 0 0 0 0
1042 90 0 0 60 0 0 0 0 0
fn=runtime.timeSleepUntil
958 3648 146 47 1216 0 0 608 0 0
963 1824 0 0 0 0 0 1216 435 38
964 44997 339 54 10947 956 32 1218 0 0
965 19456 165 55 0 0 0 0 0 0
971 9729 0 0 9728 7387 448 1 0 0
972 19456 0 0 0 0 0 0 0 0
973 9727 0 0 9727 8436 390 0 0 0
974 38908 0 0 0 0 0 0 0 0
978 9696 0 0 0 0 0 0 0 0
981 4 1 1 0 0 0 3 0 0
982 10 0 0 6 1 0 0 0 0
983 1 0 0 1 0 0 0 0 0
984 2 1 1 0 0 0 0 0 0
988 3 1 1 0 0 0 0 0 0
989 29765 0 0 2 0 0 10337 0 0
992 2 0 0 0 0 0 0 0 0
993 1 0 0 0 0 0 0 0 0
1008 3 0 0 0 0 0 0 0 0
1012 4 0 0 1 0 0 2 0 0
1014 1824 478 55 0 0 0 1216 0 0
1016 34017 185 50 2433 0 0 11552 0 0
fn=runtime.wakeScavenger
214 86 0 0 0 0 0 86 0 0
fl=.//usr/lib/golang/src/runtime/time_nofake.go
fn=runtime.(*gcControllerState).endCycle
19 20 0 0 10 0 0 10 2 0
fn=runtime.bgscavenge.func2
19 150 0 0 60 0 0 90 0 0
fn=runtime.checkTimers
19 80864 1 1 40432 0 0 40432 13 7
fn=runtime.extendRandom
19 28 0 0 14 0 0 14 0 0
fn=runtime.findrunnable
19 16 0 0 8 0 0 8 0 0
fn=runtime.gcAssistAlloc1
19 10565 0 0 4226 0 0 6339 0 0
fn=runtime.gcBgMarkWorker
19 155 3 2 62 0 0 93 0 0
fn=runtime.gcMarkDone
19 38 0 0 19 0 0 19 0 0
fn=runtime.gcMarkTermination
19 114 19 18 38 0 0 76 39 30
fn=runtime.gcStart
19 38 0 0 19 0 0 19 0 0
fn=runtime.main
19 4 0 0 2 0 0 2 0 0
fn=runtime.nanotime
18 33 10 8 0 0 0 11 0 0
19 11 0 0 0 0 0 11 0 0
fn=runtime.netpollBreak
30 6 0 0 1 0 0 4 1 1
fn=runtime.notetsleep_internal
19 316 0 0 158 0 0 158 0 0
fn=runtime.procresize
19 114 0 0 57 0 0 57 2 0
fn=runtime.scavengeSleep
19 148 25 17 59 0 0 89 0 0
fn=runtime.schedinit
19 2 0 0 1 0 0 1 0 0
fn=runtime.startTheWorldWithSema
19 224 0 0 56 0 0 112 0 0
fn=runtime.suspendG
19 34 0 0 9 0 0 24 0 0
fn=runtime.sysmon
19 1824 0 0 608 0 0 1216 396 36
fn=time.now
19 60 0 0 30 0 0 30 0 0
23 150 0 0 60 0 0 90 0 0
fl=.//usr/lib/golang/src/runtime/timestub.go
fn=time.now
15 180 30 19 60 0 0 30 0 0
16 30 0 0 0 0 0 0 0 0
17 240 28 19 120 0 0 90 0 0
fl=.//usr/lib/golang/src/runtime/trace.go
fn=runtime.procresize
1066 1 0 0 0 0 0 0 0 0
fn=runtime.startTheWorldWithSema
987 114 0 0 0 0 0 95 0 0
fn=runtime.traceAcquireBuffer
596 114 19 18 38 0 0 19 0 0
597 19 0 0 0 0 0 0 0 0
598 57 19 18 19 0 0 0 0 0
599 152 0 0 57 19 0 57 0 0
fn=runtime.traceEvent
500 114 38 36 38 0 0 19 0 0
501 76 0 0 57 0 0 19 0 0
513 76 19 18 38 20 11 0 0 0
514 38 0 0 0 0 0 38 0 0
515 57 19 18 38 0 0 0 0 0
fn=runtime.traceReleaseBuffer
606 114 38 36 38 0 0 19 0 0
607 57 0 0 19 0 0 0 0 0
610 38 0 0 38 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/traceback.go
fn=runtime.callers
798 4728 724 134 1576 0 0 788 0 0
801 788 0 0 788 0 0 0 0 0
802 788 0 0 0 0 0 788 366 83
803 20488 1516 264 3940 0 0 12608 357 78
806 3940 702 135 2364 0 0 788 0 0
fn=runtime.callers.func1
803 9456 757 127 5516 0 0 1576 39 0
804 14184 1196 233 3152 0 0 8668 304 4
805 2364 0 0 1576 0 0 0 0 0
fn=runtime.gentraceback
98 8547 1392 272 2442 0 0 1221 1 1
99 6460 685 115 2009 0 0 0 0 0
104 4887 25 12 2444 0 0 0 0 0
120 2442 0 0 0 0 0 1221 2 0
124 3741 0 0 1654 0 0 0 0 0
125 1299 0 0 433 0 0 0 0 0
126 8 0 0 4 0 0 0 0 0
132 429 26 20 429 0 0 0 0 0
133 429 0 0 429 0 0 0 0 0
137 858 0 0 429 0 0 0 0 0
142 10556 814 141 1221 0 0 3663 1291 210
143 2009 0 0 0 0 0 1221 0 0
144 3585 168 85 788 0 0 1221 0 0
149 4884 811 156 2442 1143 252 2442 902 61
150 61408 231 103 28656 0 0 1221 794 136
154 2442 778 155 0 0 0 0 0 0
164 6105 0 0 3663 0 0 2442 0 0
165 1221 789 157 0 0 0 0 0 0
175 2442 0 0 0 0 0 2442 0 0
177 7326 0 0 1221 0 0 2442 0 0
181 101864 1753 348 33611 0 0 9575 2 1
188 19150 198 76 19150 0 0 0 0 0
189 19150 0 0 9575 7525 1683 0 0 0
197 19150 80 39 9575 0 0 0 0 0
200 28725 1442 260 9575 0 0 0 0 0
220 114900 755 128 28725 0 0 76600 520 23
223 19150 0 0 0 0 0 9575 0 0
227 127685 1036 236 46390 4 0 19150 0 0
228 3660 0 0 0 0 0 1220 0 0
249 18195 0 0 8355 0 0 0 0 0
250 16710 0 0 8355 0 0 0 0 0
251 25065 0 0 8355 4139 1321 8355 0 0
254 41775 227 94 25065 0 0 16710 0 0
255 8355 0 0 0 0 0 0 0 0
270 8355 0 0 0 0 0 8355 0 0
278 27505 0 0 9575 0 0 9575 0 0
281 19150 0 0 0 0 0 9575 0 0
286 35800 712 130 17900 786 163 0 0 0
287 16650 0 0 0 0 0 8325 0 0
296 55727 789 121 19150 0 0 0 0 0
297 3446 25 12 1723 0 0 1723 0 0
299 3446 0 0 0 0 0 3446 0 0
300 1723 0 0 0 0 0 0 0 0
301 38302 0 0 26285 0 0 10796 0 0
315 19150 755 156 9575 0 0 9575 0 0
316 82012 783 126 27505 0 0 9575 0 0
333 9575 760 145 0 0 0 0 0 0
334 17230 55 32 5169 8 6 5169 0 0
339 9575 0 0 0 0 0 0 0 0
340 7852 602 123 7852 0 0 0 0 0
354 54962 1301 248 11777 0 0 0 0 0
357 15704 0 0 0 0 0 0 0 0
361 60726 439 134 9575 0 0 35447 0 0
363 4039 0 0 0 0 0 0 0 0
364 67349 696 132 18124 0 0 36022 0 0
365 9390 0 0 0 0 0 0 0 0
366 4039 0 0 0 0 0 0 0 0
368 6560 0 0 1312 652 145 0 0 0
370 1968 332 76 656 0 0 0 0 0
371 10 0 0 0 0 0 0 0 0
372 2604 0 0 1302 0 0 0 0 0
373 3255 328 76 1302 0 0 651 0 0
374 651 0 0 0 0 0 0 0 0
376 656 0 0 656 0 0 0 0 0
378 2624 0 0 1968 6 5 0 0 0
379 656 0 0 0 0 0 0 0 0
383 40146 0 0 27595 0 0 4695 0 0
385 15700 0 0 0 0 0 0 0 0
386 3137 0 0 0 0 0 0 0 0
387 32037 744 131 16609 0 0 4695 0 0
388 51798 0 0 16604 0 0 17260 2 2
389 4713 0 0 0 0 0 0 0 0
391 7852 507 136 7852 0 0 0 0 0
392 15704 0 0 0 0 0 0 0 0
395 9575 0 0 0 0 0 0 0 0
405 23580 0 0 23580 0 0 0 0 0
409 7852 0 0 7852 0 0 0 0 0
428 29228 0 0 19653 0 0 9575 0 0
463 9575 0 0 0 0 0 0 0 0
465 65805 1049 211 37080 0 0 0 0 0
466 84955 713 122 37080 0 0 38300 0 0
472 74627 1147 235 31544 0 0 23845 0 0
473 7852 0 0 7852 0 0 0 0 0
477 35860 0 0 9575 0 0 0 0 0
481 45435 0 0 0 0 0 19150 0 0
486 25065 791 154 8355 0 0 16710 0 0
487 16710 0 0 8355 0 0 8355 0 0
488 8355 0 0 0 0 0 8355 0 0
489 16710 0 0 8355 0 0 8355 0 0
490 8355 0 0 0 0 0 8355 0 0
491 8355 0 0 0 0 0 8355 0 0
512 1221 0 0 0 0 0 0 0 0
513 37080 31 20 27505 0 0 9575 0 0
556 4686 26 13 1733 0 0 0 0 0
558 3665 0 0 1 0 0 0 0 0
562 4884 757 129 2442 0 0 1221 5 0
579 16970 0 0 11801 0 0 0 0 0
866 7632 0 0 0 0 0 0 0 0
999 28725 203 74 9575 3554 718 0 0 0
1000 18342 803 139 0 0 0 0 0 0
1001 16712 0 0 0 0 0 0 0 0
1002 16712 0 0 0 0 0 0 0 0
1003 16710 0 0 0 0 0 0 0 0
1004 16710 0 0 0 0 0 0 0 0
1010 16710 0 0 0 0 0 0 0 0
fn=runtime.isSystemGoroutine
1021 224 22 8 75 0 0 37 0 0
1023 222 19 8 148 7 7 74 0 0
1024 37 0 0 0 0 0 0 0 0
1027 185 0 0 37 33 17 0 0 0
1028 4 0 0 2 0 0 1 0 0
1030 72 0 0 0 0 0 0 0 0
1033 1 0 0 0 0 0 0 0 0
1038 6 0 0 3 0 0 1 0 0
1040 315 37 16 140 0 0 140 0 0
fn=runtime.schedinit
45 1 1 1 0 0 0 1 0 0
fn=runtime.tracebackdefers
50 3031 25 20 866 0 0 433 0 0
51 3464 26 20 433 0 0 1299 1 0
52 3464 25 20 1732 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/type.go
fn=runtime.(*_type).uncommon
59 4 2 2 2 0 0 0 0 0
62 6 1 1 1 0 0 0 0 0
74 3 0 0 1 0 0 1 0 0
99 2 0 0 0 0 0 0 0 0
fn=runtime.(*itab).init
216 24 2 2 5 0 0 16 0 0
256 17 1 1 4 0 0 13 0 0
fn=runtime.SetFinalizer
315 20 0 0 5 0 0 0 0 0
324 20 0 0 5 0 0 0 0 0
327 10 3 2 5 0 0 0 0 0
328 65 3 2 5 0 0 0 0 0
332 10 0 0 5 0 0 0 0 0
fn=runtime.mapiternext
381 7800000 0 0 3900000 0 0 0 0 0
384 7800000 7 7 3900000 0 0 0 0 0
fn=runtime.name.name
448 2 0 0 0 0 0 0 0 0
456 6 0 0 2 2 2 0 0 0
467 4 1 1 0 0 0 2 0 0
468 6 0 0 2 0 0 0 0 0
471 2 0 0 0 0 0 0 0 0
472 4 0 0 0 0 0 0 0 0
476 2 0 0 0 0 0 2 0 0
477 2 0 0 0 0 0 2 0 0
478 2 0 0 2 0 0 0 0 0
fn=runtime.name.pkgPath
493 6 1 1 2 0 0 1 0 0
494 6 1 1 2 0 0 0 0 0
495 5 0 0 2 0 0 1 0 0
fn=runtime.resolveNameOff
185 24 2 2 8 0 0 4 0 0
186 12 0 0 4 0 0 0 0 0
189 8 0 0 4 0 0 0 0 0
190 12 0 0 0 0 0 0 0 0
191 24 1 1 8 0 0 0 0 0
192 8 0 0 0 0 0 0 0 0
193 8 0 0 0 0 0 0 0 0
197 16 0 0 8 0 0 4 0 0
fn=runtime.resolveTypeOff
219 24 2 2 8 0 0 4 0 0
220 12 0 0 4 0 0 0 0 0
223 8 0 0 4 0 0 0 0 0
225 12 0 0 0 0 0 0 0 0
226 16 1 1 8 1 0 0 0 0
231 12 0 0 0 0 0 4 0 0
244 40 1 1 12 2 0 16 0 0
247 20 0 0 12 0 0 0 0 0
248 12 0 0 4 0 0 0 0 0
252 16 0 0 8 0 0 4 0 0
fn=runtime.typelinksinit
519 7 1 1 2 0 0 1 0 0
520 2 0 0 1 0 0 0 0 0
521 3 2 2 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/typekind.go
fn=runtime.ifaceeq
42 200012 0 0 100006 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/vdso_linux.go
fn=runtime.vdsoauxv
267 133 1 1 38 0 0 19 0 0
269 57 0 0 19 0 0 0 0 0
279 57 1 1 38 0 0 0 0 0
fl=.//usr/lib/golang/src/sort/sort.go
fn=sort.Sort
216 18 3 3 6 0 0 3 0 0
217 21 0 0 12 3 3 9 0 0
218 36 3 3 12 0 0 24 0 0
219 9 0 0 6 0 0 0 0 0
fn=sort.maxDepth
225 15 3 3 3 0 0 0 0 0
228 3 0 0 0 0 0 0 0 0
fn=sort.quickSort
183 18 6 6 6 0 0 3 0 0
184 36 3 3 15 0 0 6 0 0
201 6 3 3 0 0 0 0 0 0
209 9 3 3 6 0 0 0 0 0
fn=testing.BenchmarkResult.String
314 27 3 3 3 0 0 21 0 0
fl=.//usr/lib/golang/src/strconv/atob.go
fn=flag.(*boolValue).String
22 4 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/atoi.go
fn=strconv.Atoi
224 13800000 44387 215 4600000 0 0 2300000 0 0
228 2300000 0 0 0 0 0 0 0 0
229 9200000 0 0 2300000 0 0 0 0 0
232 17600014 69 49 4400004 851967 849270 0 0 0
240 69299756 2497 103 13474937 2839 2839 0 0 0
241 13474937 0 0 0 0 0 0 0 0
242 26949874 0 0 0 0 0 0 0 0
243 61 4 4 18 0 0 22 0 0
245 40424805 0 0 0 0 0 0 0 0
247 6600000 11 9 4400000 0 0 0 0 0
248 4400000 607 92 0 0 0 0 0 0
250 8800000 0 0 0 0 0 4400000 0 0
254 999980 4 4 399992 0 0 499990 0 0
255 399992 0 0 0 0 0 0 0 0
256 556914 0 0 99998 0 0 199996 0 0
258 599988 2 2 199996 0 0 299994 61 2
fn=strconv.ParseInt
179 599988 4 4 199996 0 0 99998 0 0
182 299994 0 0 99998 0 0 0 0 0
189 399992 0 0 199996 261 261 0 0 0
191 299994 2 2 0 0 0 0 0 0
198 1685354 11 9 499990 0 0 799984 0 0
199 1899962 0 0 499990 0 0 399992 0 0
200 928444 5 4 299994 0 0 199996 0 0
201 685374 1 0 299994 61 2 199996 0 0
202 685374 2 2 199996 0 0 299994 0 0
210 299994 2 2 99998 0 0 99998 0 0
fn=strconv.ParseUint
14 99998 2 2 0 0 0 0 0 0
37 2127658 7 6 699986 209 12 799984 66176 47417
60 899982 9 6 199996 0 0 99998 0 0
63 299994 0 0 99998 0 0 0 0 0
67 577973 0 0 99998 0 0 0 0 0
70 99998 0 0 0 0 0 0 0 0
71 299994 0 0 0 0 0 0 0 0
98 399992 3 2 99998 0 0 0 0 0
108 299994 0 0 0 0 0 0 0 0
116 1099978 10 6 0 0 0 99998 0 0
120 1611906 0 0 477975 318 318 0 0 0
122 855952 2 2 0 0 0 0 0 0
123 755954 0 0 0 0 0 0 0 0
126 1133931 0 0 0 0 0 0 0 0
127 277979 0 0 0 0 0 0 0 0
128 299994 0 0 0 0 0 0 0 0
131 728448 0 0 199996 0 0 299994 61 2
134 555958 0 0 0 0 0 0 0 0
138 555958 0 0 0 0 0 0 0 0
142 277979 0 0 0 0 0 0 0 0
144 555958 0 0 0 0 0 0 0 0
145 1111916 0 0 0 0 0 0 0 0
149 277979 0 0 0 0 0 0 0 0
156 277979 0 0 0 0 0 0 0 0
fn=strconv.init
18 16 3 3 5 0 0 6 1 1
21 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/strconv/decimal.go
fn=strconv.(*decimal).Assign
81 18 6 6 6 0 0 3 0 0
82 9 0 0 0 0 0 6 0 0
86 159 0 0 3 0 0 0 0 0
87 144 3 3 0 0 0 0 0 0
88 144 0 0 0 0 0 0 0 0
89 192 0 0 0 0 0 48 0 0
90 48 0 0 0 0 0 0 0 0
95 6 0 0 3 0 0 3 0 0
96 204 3 3 0 0 0 0 0 0
97 336 0 0 96 0 0 48 0 0
98 48 0 0 48 0 0 0 0 0
100 6 0 0 3 0 0 3 0 0
101 6 3 3 0 0 0 6 3 3
102 9 0 0 6 0 0 0 0 0
fn=strconv.(*decimal).Round
339 5 0 0 1 0 0 0 0 0
347 1 1 1 0 0 0 0 0 0
354 18 0 0 6 0 0 3 0 0
355 21 3 3 9 0 0 0 0 0
356 6 0 0 4 0 0 0 0 0
358 3 1 1 0 0 0 0 0 0
359 3 0 0 2 0 0 0 0 0
361 1 0 0 0 0 0 0 0 0
370 1 0 0 0 0 0 1 0 0
371 2 0 0 0 0 0 2 0 0
fn=strconv.(*decimal).Shift
315 18 3 3 6 0 0 3 0 0
317 9 0 0 6 0 0 0 0 0
319 12 0 0 3 0 0 0 0 0
324 9 0 0 6 0 0 0 0 0
325 3 3 3 0 0 0 0 0 0
326 6 0 0 0 0 0 0 0 0
330 15 3 3 0 0 0 9 0 0
fn=strconv.rightShift
110 18 3 3 6 0 0 3 0 0
116 239 3 3 6 0 0 0 0 0
117 50 0 0 25 0 0 0 0 0
129 75 0 0 25 0 0 0 0 0
130 75 0 0 0 0 0 0 0 0
132 59 3 3 3 0 0 0 0 0
134 15 0 0 0 0 0 0 0 0
137 60 3 3 20 0 0 0 0 0
138 51 0 0 17 0 0 0 0 0
139 51 0 0 0 0 0 0 0 0
140 17 0 0 0 0 0 0 0 0
141 68 3 3 0 0 0 17 0 0
142 17 0 0 0 0 0 0 0 0
143 51 0 0 0 0 0 0 0 0
147 96 3 3 0 0 0 0 0 0
148 116 0 0 0 0 0 0 0 0
149 29 0 0 0 0 0 0 0 0
150 58 0 0 0 0 0 0 0 0
151 87 0 0 0 0 0 29 0 0
152 58 0 0 0 0 0 0 0 0
156 58 0 0 0 0 0 0 0 0
159 32 0 0 0 0 0 3 0 0
160 6 0 0 0 0 0 6 0 0
161 9 0 0 6 0 0 0 0 0
fn=strconv.trim
71 21 3 3 0 0 0 7 0 0
72 138 0 0 33 0 0 0 0 0
73 6 0 0 0 0 0 6 0 0
75 7 0 0 0 0 0 0 0 0
76 21 0 0 14 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/ftoa.go
fn=fmt.(*fmt).fmtFloat
54 42 3 3 18 0 0 24 1 1
fn=strconv.bigFtoa
161 33 6 6 12 0 0 3 0 0
162 24 0 0 3 0 0 9 6 6
163 15 3 3 3 0 0 9 3 3
164 24 0 0 9 0 0 9 0 0
165 12 3 3 0 0 0 9 0 0
166 15 3 3 6 0 0 0 0 0
167 3 0 0 0 0 0 0 0 0
181 6 0 0 3 0 0 0 0 0
182 6 3 3 0 0 0 0 0 0
184 6 0 0 0 0 0 0 0 0
185 21 0 0 3 0 0 9 0 0
186 3 0 0 0 0 0 0 0 0
192 36 9 9 6 0 0 24 0 0
194 84 6 6 39 0 0 42 0 0
fn=strconv.fmtF
433 27 6 6 9 0 0 3 0 0
435 6 3 3 0 0 0 0 0 0
440 9 0 0 3 0 0 0 0 0
441 9 3 3 3 0 0 3 3 3
442 54 6 6 15 0 0 24 3 3
443 42 3 3 21 0 0 0 0 0
444 24 0 0 0 0 0 6 0 0
451 12 3 3 3 0 0 0 0 0
452 9 3 3 0 0 0 0 0 0
462 21 9 9 6 0 0 9 0 0
572 6 3 3 0 0 0 0 0 0
fn=strconv.formatDigits
197 18 0 0 6 0 0 3 0 0
198 6 0 0 3 0 0 0 0 0
199 6 3 3 0 0 0 0 0 0
201 6 0 0 0 0 0 0 0 0
202 78 6 6 39 0 0 36 3 3
203 3 3 3 0 0 0 0 0 0
fn=strconv.genericFtoa
57 21 6 6 6 0 0 3 1 1
61 9 0 0 3 0 0 0 0 0
64 6 3 3 0 0 0 0 0 0
65 3 0 0 0 0 0 0 0 0
66 3 0 0 0 0 0 0 0 0
71 42 6 6 3 0 0 6 4 4
72 45 6 6 6 3 3 0 0 0
73 27 0 0 0 0 0 0 0 0
76 6 3 3 0 0 0 0 0 0
89 6 3 3 0 0 0 0 0 0
95 6 3 3 0 0 0 0 0 0
97 9 0 0 3 0 0 3 3 3
100 9 0 0 3 0 0 0 0 0
103 12 3 3 0 0 0 0 0 0
107 6 0 0 3 1 0 0 0 0
111 12 0 0 0 0 0 9 0 0
114 12 3 3 3 0 0 0 0 0
115 3 3 3 0 0 0 0 0 0
134 9 0 0 0 0 0 0 0 0
154 6 0 0 0 0 0 0 0 0
155 69 9 9 24 0 0 42 6 6
fl=.//usr/lib/golang/src/strconv/itoa.go
fn=flag.(*intValue).String
35 20 1 1 8 0 0 12 0 0
fn=strconv.FormatInt
25 24 2 2 8 0 0 4 0 0
26 32 0 0 8 0 0 0 0 0
27 21 0 0 8 0 0 8 0 0
60 8 0 0 0 0 0 0 0 0
61 18 1 1 0 0 0 0 0 0
63 11 1 1 0 0 0 0 0 0
fn=strconv.FormatUint
14 6 2 2 2 0 0 1 0 0
15 6 0 0 2 0 0 0 0 0
16 5 1 1 2 0 0 2 0 0
60 2 0 0 0 0 0 0 0 0
61 6 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/quote.go
fn=strconv.IsPrint
483 228 4 4 76 0 0 38 0 0
485 114 0 0 38 0 0 0 0 0
486 152 4 4 0 0 0 0 0 0
488 152 4 4 76 0 0 38 0 0
fl=.//usr/lib/golang/src/strings/builder.go
fn=strings.(*Builder).Write
34 18 0 0 6 0 0 0 0 0
40 12 3 3 3 0 0 3 0 0
41 6 0 0 0 0 0 0 0 0
88 36 12 6 12 0 0 6 0 0
89 6 0 0 6 0 0 0 0 0
90 228 21 9 84 0 0 102 0 0
91 42 0 0 18 0 0 12 0 0
fn=testing.BenchmarkResult.String
34 12 0 0 6 0 0 0 0 0
41 6 0 0 0 0 0 0 0 0
48 9 3 3 9 0 0 0 0 0
97 3 0 0 0 0 0 0 0 0
98 81 9 9 24 0 0 30 0 0
fl=.//usr/lib/golang/src/strings/strings.go
fn=strings.Count
78 42 12 8 14 0 0 7 0 0
80 21 0 0 7 0 0 0 0 0
83 14 0 0 0 0 0 0 0 0
84 91 7 4 49 5 3 35 1 0
fn=strings.Index
151 21 3 3 9 0 0 12 0 0
1028 18 3 3 6 0 0 3 0 0
1031 9 3 3 3 0 0 0 0 0
1033 6 0 0 0 0 0 0 0 0
1034 18 3 3 12 0 0 3 0 0
fn=strings.TrimSpace
871 7 1 1 2 0 0 1 0 0
874 7 1 1 2 0 0 0 0 0
879 1 1 1 0 0 0 0 0 0
888 3 0 0 0 0 0 0 0 0
901 15 2 2 2 0 0 2 0 0
fn=strings.genSplit
245 36 6 4 12 0 0 6 0 0
246 24 6 4 6 0 0 0 0 0
249 18 0 0 6 0 0 0 0 0
252 6 0 0 0 0 0 0 0 0
253 66 12 8 24 0 0 30 1 0
256 48 6 4 6 0 0 36 0 0
257 24 0 0 6 0 0 6 0 0
259 39 6 4 3 0 0 9 0 0
260 24 3 3 9 0 0 15 0 0
261 6 0 0 0 0 0 0 0 0
264 54 3 3 21 0 0 6 1 1
265 30 0 0 3 0 0 0 0 0
266 3 0 0 0 0 0 0 0 0
268 120 6 4 48 0 0 30 0 0
269 42 0 0 12 0 0 18 0 0
fn=testing.(*matcher).fullName
308 55 5 4 10 0 0 40 1 0
fn=testing.parseCpuList
308 12 1 1 2 0 0 8 0 0
fl=.//usr/lib/golang/src/sync/atomic/asm.s
fn=sync/atomic.StoreUint32
1 5 4 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/atomic/value.go
fn=internal/testlog.Open
30 2 0 0 2 2 1 0 0 0
31 10 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/map.go
fn=sync.init
70 16 2 2 6 0 0 4 1 1
fl=.//usr/lib/golang/src/sync/mutex.go
fn=sync.(*Mutex).Lock
72 24 3 3 8 0 0 4 0 0
74 28 3 3 8 3 1 0 0 0
78 12 0 0 8 0 0 0 0 0
fn=sync.(*Mutex).Unlock
179 222 16 10 74 0 0 37 0 0
186 148 0 0 111 13 0 0 0 0
187 185 0 0 74 0 0 0 0 0
fn=sync.(*Once).doSlow
74 10 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pinSlow
74 91 11 8 13 1 1 0 0 0
fn=sync.(*RWMutex).Lock
74 20 0 0 0 0 0 0 0 0
fn=sync.(*RWMutex).Unlock
186 30 9 8 20 0 0 0 0 0
187 50 0 0 20 0 0 0 0 0
fn=testing.(*B).Run
186 16 4 4 8 1 1 0 0 0
187 8 0 0 0 0 0 0 0 0
fn=testing.(*B).runN
74 63 0 0 9 1 0 0 0 0
fn=testing.(*matcher).fullName
74 40 2 1 5 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/once.go
fn=internal/poll.(*pollDesc).init
55 4 0 0 0 0 0 0 0 0
57 6 1 1 0 0 0 3 0 0
fn=sync.(*Once).doSlow
61 50 8 8 10 0 0 20 1 1
62 30 0 0 10 0 0 0 0 0
63 20 0 0 0 0 0 15 0 0
64 10 0 0 5 0 0 0 0 0
65 30 9 8 0 0 0 20 0 0
66 20 0 0 10 3 3 5 0 0
68 115 5 4 30 1 0 40 0 0
fn=syscall.Getenv
55 3 0 0 1 0 0 0 0 0
57 6 2 2 0 0 0 3 0 0
fn=testing.(*B).run
55 9 0 0 3 3 3 0 0 0
57 6 1 1 0 0 0 3 1 1
fn=testing.(*M).after
55 6 1 1 3 1 1 0 0 0
57 5 0 0 0 0 0 3 0 0
fn=time.(*Location).get
55 3000000 0 0 1000000 2295 91 0 0 0
57 6 0 0 0 0 0 3 0 0
fl=.//usr/lib/golang/src/sync/pool.go
fn=sync.(*Pool).Get
124 174 11 8 58 0 0 29 0 0
128 158 20 16 87 0 0 71 2 1
129 58 0 0 58 7 7 0 0 0
130 116 0 0 29 0 0 58 0 0
131 58 0 0 0 0 0 0 0 0
135 65 0 0 26 0 0 26 0 0
136 26 0 0 0 0 0 0 0 0
137 104 10 8 52 0 0 39 0 0
140 42 0 0 0 0 0 29 0 0
147 207 13 8 47 9 9 58 0 0
148 25 0 0 15 5 4 5 0 0
150 169 0 0 82 0 0 58 0 0
fn=sync.(*Pool).Put
90 174 14 8 58 0 0 29 0 0
91 87 0 0 29 0 0 0 0 0
102 116 10 8 58 0 0 58 0 0
103 58 0 0 29 2 0 0 0 0
104 232 12 8 87 0 0 58 0 0
105 29 0 0 0 0 0 0 0 0
107 58 0 0 0 0 0 0 0 0
110 29 0 0 0 0 0 29 0 0
111 87 0 0 58 0 0 0 0 0
fn=sync.(*Pool).getSlow
153 78 11 8 26 0 0 13 0 0
155 39 0 0 26 0 0 13 0 0
156 39 0 0 13 0 0 13 0 0
158 1287 11 8 416 0 0 208 0 0
159 2080 0 0 208 0 0 0 0 0
160 1872 12 8 624 0 0 416 0 0
168 223 2 2 221 0 0 2 0 0
169 39 0 0 13 0 0 0 0 0
170 35 5 4 14 0 0 7 0 0
172 10 0 0 6 0 0 2 0 0
173 6 6 6 0 0 0 0 0 0
174 26 0 0 12 6 5 0 0 0
175 24 0 0 4 0 0 8 0 0
176 20 4 4 8 0 0 8 0 0
178 196 2 2 64 0 0 32 0 0
179 288 0 0 32 0 0 0 0 0
180 288 2 2 96 0 0 64 0 0
187 36 0 0 36 0 0 0 0 0
189 10 0 0 4 0 0 2 0 0
277 252 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pin
195 348 13 8 116 0 0 58 0 0
196 116 13 8 58 0 0 58 2 1
201 116 0 0 116 16 11 0 0 0
202 58 0 0 58 0 0 0 0 0
203 116 0 0 0 0 0 0 0 0
204 225 0 0 90 0 0 90 0 0
206 117 0 0 52 0 0 52 0 0
277 135 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pinSlow
209 143 22 16 26 0 0 65 2 1
212 13 0 0 0 0 0 13 2 1
214 65 0 0 0 0 0 39 0 0
215 39 0 0 13 0 0 26 0 0
217 39 11 8 39 0 0 0 0 0
219 13 0 0 0 0 0 0 0 0
222 26 0 0 0 0 0 0 0 0
223 403 45 32 117 10 8 130 0 0
226 52 0 0 13 0 0 39 0 0
227 78 11 8 13 0 0 52 0 0
228 91 0 0 26 0 0 39 0 0
229 52 11 8 52 0 0 0 0 0
230 221 0 0 78 0 0 65 0 0
fn=sync.init.0
272 6 1 1 2 0 0 1 0 0
273 3 0 0 0 0 0 2 0 0
274 3 0 0 2 0 0 0 0 0
fn=sync.poolCleanup
233 114 19 18 38 0 0 19 0 0
241 162 19 18 50 22 13 0 0 0
242 60 0 0 12 8 0 12 8 5
243 12 0 0 0 0 0 12 0 0
247 162 19 18 50 8 0 0 0 0
248 48 0 0 24 5 1 12 0 0
249 24 0 0 12 0 0 12 0 0
250 48 8 7 12 0 0 12 0 0
251 12 0 0 0 0 0 12 0 0
256 247 49 47 95 9 1 95 0 0
257 57 0 0 38 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/poolqueue.go
fn=sync.(*poolChain).popHead
258 78 22 16 26 0 0 13 0 0
259 26 0 0 26 0 0 0 0 0
260 39 0 0 0 0 0 0 0 0
268 78 11 8 26 0 0 26 0 0
fn=sync.(*poolChain).popTail
271 1440 11 8 480 0 0 240 0 0
272 480 0 0 480 120 120 0 0 0
273 480 11 8 0 0 0 0 0 0
274 1440 22 15 480 0 0 480 0 0
fl=.//usr/lib/golang/src/sync/runtime.go
fn=sync.init.1
55 6 1 1 2 0 0 1 0 0
57 2 1 1 0 0 0 2 0 0
58 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/rwmutex.go
fn=sync.(*RWMutex).Lock
92 60 9 8 20 0 0 10 0 0
98 50 9 8 20 0 0 0 0 0
100 30 0 0 20 0 0 0 0 0
102 80 0 0 20 0 0 0 0 0
103 10 9 8 0 0 0 0 0 0
fn=sync.(*RWMutex).RUnlock
62 6 1 1 2 0 0 1 0 0
68 9 1 1 5 0 0 0 0 0
fn=sync.(*RWMutex).Unlock
118 60 9 8 20 0 0 10 0 0
126 50 0 0 30 0 0 10 0 0
127 20 0 0 0 0 0 0 0 0
132 30 0 0 0 0 0 0 0 0
136 20 9 8 0 0 0 0 0 0
fn=syscall.Getenv
48 6 1 1 2 1 1 0 0 0
fn=testing.(*common).Failed
48 6 1 1 0 0 0 0 0 0
68 10 0 0 4 0 0 0 0 0
fl=.//usr/lib/golang/src/syscall/asm_linux_amd64.s
fn=syscall.Syscall
1 11567 0 0 11567 0 0 0 0 0
18 11567 271 46 0 0 0 11567 0 0
19 11567 0 0 11567 0 0 0 0 0
20 11567 0 0 11567 0 0 0 0 0
21 11567 0 0 11567 0 0 0 0 0
22 11567 0 0 11567 0 0 0 0 0
23 11567 0 0 0 0 0 0 0 0
24 11567 1 1 0 0 0 0 0 0
25 11567 0 0 0 0 0 0 0 0
33 11567 8264 52 0 0 0 11567 12 4
34 11567 0 0 0 0 0 11567 0 0
35 11567 0 0 0 0 0 11567 0 0
36 11567 0 0 0 0 0 11567 13 4
fn=syscall.Syscall6
1 5 0 0 5 0 0 0 0 0
41 5 4 2 0 0 0 5 0 0
42 5 0 0 5 0 0 0 0 0
43 5 0 0 5 0 0 0 0 0
44 5 4 3 5 0 0 0 0 0
45 5 0 0 5 0 0 0 0 0
46 5 0 0 5 0 0 0 0 0
47 5 0 0 5 0 0 0 0 0
48 5 0 0 5 0 0 0 0 0
49 5 0 0 0 0 0 0 0 0
50 5 0 0 0 0 0 0 0 0
51 5 0 0 0 0 0 0 0 0
59 5 4 3 0 0 0 5 1 0
60 5 0 0 0 0 0 5 0 0
61 5 0 0 0 0 0 5 0 0
62 5 0 0 0 0 0 5 0 0
fl=.//usr/lib/golang/src/syscall/env_unix.go
fn=syscall.Getenv
71 13 2 2 2 0 0 5 0 0
72 1 0 0 0 0 0 0 0 0
73 3 0 0 1 0 0 0 0 0
77 1 0 0 0 0 0 0 0 0
78 5 0 0 0 0 0 3 1 0
80 11 1 1 5 1 1 5 0 0
81 1 0 0 0 0 0 0 0 0
82 10 1 1 3 0 0 5 0 0
fn=syscall.copyenv
36 6 2 2 2 0 0 1 0 0
37 5 0 0 2 0 0 2 1 1
38 950 3 3 317 17 17 190 0 0
39 2484 0 0 0 0 0 63 0 0
40 2421 0 0 807 37 37 0 0 0
42 567 1 1 126 0 0 315 0 0
43 819 1 1 315 0 0 378 0 0
fn=syscall.init
26 15 2 2 6 0 0 5 1 1
fl=.//usr/lib/golang/src/syscall/syscall.go
fn=syscall.ByteSliceFromString
47 30 4 3 10 0 0 5 1 1
48 222 4 3 10 0 0 0 0 0
49 192 0 0 64 5 4 0 0 0
53 45 4 3 5 0 0 30 1 1
54 65 8 6 15 0 0 20 0 0
55 50 0 0 20 0 0 20 1 1
fn=syscall.openat
69 24 0 0 15 0 0 9 2 2
70 6 0 0 0 0 0 0 0 0
73 6 3 3 0 0 0 0 0 0
fn=syscall.readlinkat
69 16 1 1 10 0 0 6 0 0
70 4 0 0 0 0 0 0 0 0
73 8 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/syscall/syscall_linux.go
fn=os.Readlink
150 24 0 0 12 0 0 12 0 0
fn=os.openFileNolog
138 20 0 0 10 0 0 10 0 0
fn=syscall.init
979 8 1 1 4 0 0 2 1 1
fn=time.open
138 10 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/syscall/syscall_unix.go
fn=internal/poll.(*FD).Read
189 115500 33 24 57750 0 0 57750 0 0
fn=internal/poll.(*FD).Write
214 72 0 0 27 0 0 45 0 0
fn=time.readFile
189 22 2 2 7 0 0 13 0 0
fl=.//usr/lib/golang/src/syscall/zsyscall_linux_amd64.go
fn=syscall.Close
284 18 3 3 6 0 0 3 0 0
285 21 3 3 6 0 0 12 1 1
286 9 0 0 0 0 0 0 0 0
287 6 3 3 0 0 0 0 0 0
289 15 3 3 6 0 0 6 0 0
fn=syscall.openat
62 18 6 6 6 0 0 3 1 1
64 21 0 0 3 0 0 6 0 0
65 6 3 3 0 0 0 0 0 0
68 45 3 3 18 0 0 24 0 0
70 9 0 0 0 0 0 0 0 0
73 24 6 6 12 0 0 9 1 0
fn=syscall.read
679 69312 1155 40 23104 0 0 11552 0 0
681 34656 0 0 11552 0 0 0 0 0
686 115520 274 43 46208 0 0 69312 273 18
688 34656 0 0 0 0 0 0 0 0
689 23104 782 44 0 0 0 0 0 0
691 69312 387 42 23104 0 0 34656 12 4
fn=syscall.readlinkat
78 12 1 1 4 0 0 2 0 0
80 8 1 1 2 0 0 4 0 0
81 4 0 0 0 0 0 0 0 0
85 6 0 0 2 0 0 0 0 0
90 30 1 1 10 0 0 18 0 0
92 6 0 0 0 0 0 0 0 0
95 16 2 2 8 0 0 6 0 0
fn=syscall.write
907 54 15 12 18 0 0 9 0 0
909 27 0 0 9 0 0 0 0 0
914 90 8 6 36 0 0 54 0 0
916 27 0 0 0 0 0 0 0 0
917 18 7 6 0 0 0 0 0 0
919 54 8 6 18 0 0 27 0 0
fl=.//usr/lib/golang/src/testing/benchmark.go
fn=testing.(*B).ResetTimer
146 54 9 8 18 0 0 9 0 0
147 36 0 0 18 0 0 0 0 0
150 55 10 8 15 0 0 25 0 0
152 16 4 4 0 0 0 12 0 0
156 27 5 4 18 9 7 0 0 0
162 9 0 0 0 0 0 9 9 7
164 18 0 0 0 0 0 9 0 0
165 27 0 0 18 0 0 0 0 0
fn=testing.(*B).Run
606 44 6 6 8 0 0 16 1 0
609 12 0 0 12 4 3 0 0 0
610 4 0 0 0 0 0 0 0 0
611 20 0 0 0 0 0 12 0 0
613 8 4 4 8 3 3 0 0 0
614 12 0 0 4 3 3 0 0 0
615 52 8 8 28 4 3 20 1 0
617 8 3 0 0 0 0 0 0 0
620 20 4 4 4 0 0 12 0 0
621 4 0 0 0 0 0 0 0 0
622 20 4 4 4 0 0 12 0 0
624 40 8 8 12 0 0 20 3 3
625 32 0 0 12 0 0 16 5 3
626 12 8 8 8 1 0 4 0 0
627 12 0 0 4 3 0 4 0 0
628 40 4 4 16 0 0 12 0 0
629 24 0 0 12 4 3 8 3 3
630 16 0 0 8 3 0 4 3 3
631 4 0 0 0 0 0 4 0 0
633 24 4 4 12 2 0 8 3 3
634 8 0 0 4 0 0 4 0 0
635 16 4 4 8 3 1 8 3 3
636 16 0 0 8 0 0 4 0 0
638 16 0 0 4 0 0 4 0 0
644 8 0 0 4 0 0 0 0 0
656 20 11 11 8 0 0 8 0 0
657 12 6 6 3 3 3 6 0 0
659 64 6 6 32 5 1 32 2 2
660 44 0 0 20 0 0 16 1 1
fn=testing.(*B).StartTimer
120 54 18 16 18 0 0 9 0 0
121 54 0 0 36 0 0 0 0 0
122 27 0 0 0 0 0 18 0 0
123 27 7 0 18 6 0 9 9 0
124 18 9 8 9 0 0 9 0 0
125 90 0 0 45 0 0 36 18 5
126 18 9 8 0 0 0 9 9 0
fn=testing.(*B).StopTimer
133 54 9 7 18 0 0 9 0 0
134 54 0 0 36 7 7 0 0 0
135 99 8 7 54 18 18 45 0 0
136 27 0 0 0 0 0 18 0 0
137 36 9 7 36 19 9 0 0 0
138 27 0 0 27 0 0 0 0 0
139 18 0 0 0 0 0 9 9 0
fn=testing.(*B).add
360 48 3 3 16 1 0 20 0 0
363 12 3 3 4 0 0 0 0 0
366 12 0 0 4 0 0 0 0 0
383 48 3 3 16 0 0 20 0 0
386 12 0 0 4 0 0 0 0 0
389 12 0 0 4 0 0 0 0 0
395 48 3 3 16 0 0 20 0 0
398 12 3 3 4 0 0 0 0 0
401 12 0 0 4 0 0 0 0 0
666 28 6 6 8 0 0 4 0 0
667 8 0 0 4 0 0 4 4 4
671 36 3 3 20 0 0 12 1 1
672 8 0 0 4 0 0 0 0 0
675 4 0 0 0 0 0 4 0 0
676 4 3 3 0 0 0 4 0 0
678 8 0 0 4 0 0 0 0 0
681 36 3 3 20 0 0 12 1 1
682 36 0 0 20 0 0 12 0 0
683 12 0 0 8 0 0 0 0 0
fn=testing.(*B).doBench
275 30 6 6 6 0 0 12 0 0
276 18 0 0 3 0 0 12 0 0
277 15 3 3 6 0 0 9 0 0
278 30 3 3 18 3 3 9 0 0
fn=testing.(*B).launch
202 20 4 4 12 8 8 0 0 0
209 4 0 0 0 0 0 0 0 0
285 27 3 3 6 0 0 9 2 2
288 15 3 3 3 0 0 9 0 0
293 9 0 0 3 0 0 0 0 0
296 9 0 0 3 1 0 3 0 0
297 64 7 7 14 0 0 0 0 0
301 4 0 0 4 0 0 0 0 0
303 8 0 0 0 0 0 0 0 0
312 48 5 5 0 0 0 0 0 0
314 32 0 0 0 0 0 0 0 0
316 8 0 0 0 0 0 0 0 0
318 8 3 3 0 0 0 0 0 0
320 12 0 0 0 0 0 4 0 0
321 12 0 0 0 0 0 12 0 0
324 78 9 9 39 3 3 36 0 0
325 21 0 0 9 0 0 9 0 0
fn=testing.(*B).launch.func1
288 18 3 3 6 0 0 3 0 0
289 18 3 3 6 0 0 9 0 0
290 9 0 0 6 0 0 0 0 0
fn=testing.(*B).run
258 18 6 6 6 0 0 3 0 0
259 18 0 0 3 0 0 9 0 0
266 10 1 0 4 0 0 0 0 0
268 18 5 5 6 1 0 9 2 2
fn=testing.(*B).run.func1
259 8 1 1 3 0 0 2 0 0
260 18 1 1 2 0 0 11 0 0
261 19 2 2 3 0 0 11 0 0
262 8 0 0 5 0 0 0 0 0
fn=testing.(*B).run1
217 28 8 8 8 0 0 4 0 0
218 16 0 0 8 0 0 0 0 0
220 20 0 0 12 3 0 0 0 0
221 2 0 0 0 0 0 1 0 0
224 20 4 4 0 0 0 16 0 0
233 20 0 0 8 0 0 12 0 0
234 12 4 4 8 4 4 0 0 0
240 18 3 3 7 0 0 0 0 0
242 2 0 0 1 0 0 0 0 0
245 1 0 0 1 0 0 0 0 0
249 4 1 1 2 0 0 1 0 0
251 12 3 3 6 3 3 3 0 0
fn=testing.(*B).run1.func1
224 36 4 4 8 0 0 12 4 2
227 20 4 4 4 0 0 12 0 0
231 12 0 0 0 0 0 12 0 0
232 28 8 8 12 4 3 12 0 0
fn=testing.(*B).run1.func1.1
227 24 4 4 8 0 0 4 0 0
228 24 0 0 8 0 0 12 0 0
229 12 4 4 8 0 0 0 0 0
fn=testing.(*B).runN
179 90 18 16 18 0 0 36 5 3
181 45 9 8 0 0 0 27 0 0
182 63 0 0 18 0 0 36 0 0
185 9 0 0 0 0 0 9 5 3
186 18 18 15 9 9 7 9 9 5
187 18 0 0 9 1 0 9 9 7
188 9 0 0 0 0 0 9 9 6
189 18 0 0 0 0 0 18 0 0
190 27 0 0 9 0 0 18 0 0
191 45 18 8 27 27 8 18 0 0
192 27 2 1 9 8 8 18 0 0
193 27 0 0 18 10 1 9 9 2
194 18 0 0 9 9 0 9 0 0
196 18 0 0 9 9 9 0 0 0
199 117 8 7 45 0 0 63 8 7
fn=testing.(*benchContext).processBench
479 9 0 0 3 0 0 0 0 0
480 87 9 9 18 0 0 54 2 2
547 21 3 3 6 0 0 3 0 0
548 66 12 12 27 6 6 12 0 0
549 30 6 6 15 9 9 3 0 0
550 15 3 3 9 0 0 6 0 0
551 24 3 3 12 3 0 9 0 0
554 9 0 0 6 0 0 0 0 0
555 108 12 12 30 3 3 60 0 0
558 21 1 0 6 0 0 0 0 0
572 30 10 9 12 0 0 18 6 6
573 9 0 0 6 0 0 0 0 0
577 6 1 0 6 0 0 0 0 0
580 33 9 6 15 0 0 18 0 0
581 9 0 0 6 2 0 0 0 0
584 18 3 3 9 9 6 0 0 0
587 63 12 12 15 3 0 36 0 0
590 9 1 0 6 0 0 0 0 0
594 18 3 3 6 0 0 6 0 0
fn=testing.(*benchTimeFlag).String
42 6 1 1 2 0 0 1 0 0
43 4 0 0 2 1 1 0 0 0
46 10 2 2 5 0 0 4 0 0
fn=testing.BenchmarkResult.String
371 36 3 3 12 0 0 15 0 0
374 12 3 3 3 0 0 0 0 0
411 21 6 6 6 0 0 3 0 0
412 15 0 0 3 0 0 9 3 3
413 63 6 6 9 0 0 39 0 0
416 33 4 3 12 3 3 15 0 0
417 3 0 0 0 0 0 0 0 0
418 24 3 3 6 0 0 0 0 0
420 12 3 3 0 0 0 3 0 0
421 3 0 0 0 0 0 0 0 0
422 27 3 3 3 0 0 18 0 0
425 33 3 3 9 0 0 9 0 0
432 63 3 3 9 0 0 18 0 0
438 6 6 6 0 0 0 6 0 0
440 3 0 0 0 0 0 0 0 0
441 9 0 0 3 0 0 0 0 0
445 15 0 0 6 0 0 6 0 0
fn=testing.initBenchmarkFlags
24 6 2 2 2 0 0 1 0 0
25 4 0 0 2 0 0 1 0 0
26 3 0 0 1 0 0 1 0 0
27 3 0 0 2 0 0 0 0 0
fn=testing.prettyPrint
448 21 3 3 6 0 0 3 0 0
452 6 3 3 3 0 0 0 0 0
453 21 3 3 3 3 2 0 0 0
468 102 6 6 27 0 0 63 0 0
469 9 0 0 6 0 0 0 0 0
fn=testing.runBenchmarks
479 7 0 0 3 0 0 0 0 0
480 56 7 7 10 0 0 35 0 0
498 7 2 2 2 0 0 1 0 0
500 5 0 0 3 0 0 0 0 0
505 11 1 1 3 0 0 0 0 0
506 1 0 0 0 0 0 0 0 0
510 5 0 0 1 0 0 3 0 0
511 14 3 2 4 0 0 8 0 0
512 6 0 0 1 0 0 3 0 0
515 22 1 1 7 2 1 5 0 0
516 8 1 1 2 0 0 5 0 0
517 40 5 5 14 0 0 15 1 1
518 1 0 0 0 0 0 0 0 0
519 5 1 1 3 0 0 0 0 0
520 1 0 0 0 0 0 1 0 0
524 5 0 0 1 0 0 3 0 0
526 3 0 0 0 0 0 2 1 1
527 6 1 1 2 1 0 2 1 1
528 1 0 0 0 0 0 1 1 1
530 6 1 1 3 0 0 2 1 1
531 19 2 2 6 0 0 10 0 0
536 4 1 1 2 1 0 2 1 1
537 4 0 0 2 0 0 1 0 0
539 1 0 0 0 0 0 0 0 0
542 3 0 0 0 0 0 3 0 0
543 7 1 1 4 2 2 1 1 1
fn=testing.runBenchmarks.func1
531 6 2 2 2 0 0 1 0 0
532 20 1 1 9 1 1 3 0 0
533 6 1 1 1 0 0 5 0 0
fl=.//usr/lib/golang/src/testing/example.go
fn=testing.runExamples
29 7 1 1 2 0 0 1 0 0
32 4 1 1 0 0 0 3 0 0
34 4 0 0 1 0 0 0 0 0
38 2 1 1 0 0 0 0 0 0
49 5 1 1 2 0 0 2 0 0
fl=.//usr/lib/golang/src/testing/internal/testdeps/deps.go
fn=testing/internal/testdeps.TestDeps.MatchString
30 42 12 8 12 0 0 6 0 0
31 90 14 11 36 8 6 20 0 0
32 12 1 1 8 0 0 2 0 0
33 3 0 0 1 0 0 1 0 0
34 2 0 0 0 0 0 0 0 0
38 42 5 3 18 0 0 12 2 0
fl=.//usr/lib/golang/src/testing/match.go
fn=testing.(*matcher).fullName
50 75 15 11 10 0 0 35 2 0
51 20 0 0 10 0 0 10 0 0
53 30 5 4 10 4 3 0 0 0
54 20 0 0 0 0 0 15 0 0
56 23 4 3 9 0 0 0 0 0
57 60 9 9 24 0 0 33 0 0
61 20 0 0 0 0 0 15 0 0
65 10 5 4 10 0 0 0 0 0
66 91 11 4 37 5 0 10 0 0
67 44 0 0 19 6 3 0 0 0
68 3 0 0 0 0 0 0 0 0
70 70 5 4 25 1 0 25 0 0
74 78 13 8 30 0 0 40 0 0
fn=testing.(*matcher).unique
114 21 6 6 6 0 0 3 0 0
115 96 9 9 27 0 0 57 0 0
116 9 0 0 3 0 0 0 0 0
117 3 0 0 0 0 0 0 0 0
118 48 6 6 15 1 1 24 0 0
119 15 0 0 3 0 0 3 0 0
120 36 3 3 15 0 0 18 2 2
121 21 3 3 12 0 0 6 0 0
fn=testing.newMatcher
28 14 4 2 4 0 0 2 0 0
30 7 0 0 2 0 0 0 0 0
31 10 1 1 4 0 0 6 0 0
32 15 1 1 2 0 0 2 0 0
33 17 2 2 6 0 0 5 0 0
36 14 1 1 4 0 0 4 0 0
37 12 1 0 4 0 0 5 0 0
43 18 2 1 6 0 0 8 0 0
44 24 5 3 10 0 0 12 2 2
45 4 0 0 2 0 0 2 0 0
46 12 0 0 6 0 0 4 0 0
fn=testing.rewrite
135 28 4 4 8 0 0 4 0 0
136 4 0 0 0 0 0 0 0 0
137 471 12 12 163 3 3 79 0 0
139 41 0 0 0 0 0 0 0 0
140 15 0 0 0 0 0 3 0 0
141 152 0 0 38 0 0 76 0 0
143 278 0 0 114 0 0 123 0 0
145 979 12 12 263 0 0 436 0 0
148 48 8 8 16 0 0 28 0 0
152 82 0 0 0 0 0 0 0 0
153 44 0 0 0 0 0 0 0 0
155 319 8 8 0 0 0 0 0 0
fn=testing.splitRegexp
77 6 2 2 2 0 0 1 0 0
78 16 1 1 4 0 0 10 0 0
81 15 0 0 3 0 0 4 0 0
82 4 0 0 1 0 0 0 0 0
89 2 0 0 0 0 0 0 0 0
93 2 1 1 0 0 0 0 0 0
99 2 0 0 0 0 0 0 0 0
100 2 0 0 0 0 0 0 0 0
101 2 1 1 0 0 0 2 0 0
107 2 0 0 0 0 0 0 0 0
109 31 4 4 9 0 0 11 0 0
fl=.//usr/lib/golang/src/testing/testing.go
fn=main.main
1213 1 0 0 0 0 0 1 0 0
1214 32 2 2 13 0 0 13 2 2
fn=testing.(*M).Run
1223 11 2 2 2 0 0 4 0 0
1228 2 0 0 2 0 0 0 0 0
1231 1 0 0 0 0 0 0 0 0
1232 1 1 1 0 0 0 0 0 0
1235 4 0 0 2 0 0 0 0 0
1241 3 1 1 2 0 0 0 0 0
1242 1 0 0 1 0 0 0 0 0
1246 1 0 0 0 0 0 1 0 0
1248 3 0 0 1 0 0 2 0 0
1249 5 1 1 1 0 0 3 0 0
1250 2 0 0 0 0 0 2 0 0
1251 3 0 0 2 0 0 1 0 0
1252 36 4 4 15 1 0 14 1 0
1253 30 4 3 10 1 0 12 0 0
1254 3 0 0 1 0 0 2 0 0
1255 6 0 0 2 1 0 0 0 0
1258 48 6 6 21 0 0 18 1 1
1263 6 2 2 0 0 0 3 1 1
1264 8 1 1 3 0 0 4 1 1
fn=testing.(*M).after
1417 6 1 1 2 0 0 1 0 0
1418 8 0 0 1 0 0 3 0 0
fn=testing.(*M).after.func1
1418 7 2 2 3 0 0 1 0 0
1419 2 0 0 0 0 0 2 0 0
1420 3 0 0 2 0 0 0 0 0
fn=testing.(*M).before
1354 7 2 2 2 0 0 1 0 0
1355 4 0 0 2 0 0 0 0 0
1358 5 0 0 3 0 0 0 0 0
1371 5 1 1 3 0 0 0 0 0
1384 3 0 0 2 0 0 0 0 0
1387 3 1 1 2 0 0 0 0 0
1390 3 0 0 2 0 0 0 0 0
1394 5 1 1 3 0 0 0 0 0
1412 3 1 1 2 0 0 0 0 0
fn=testing.(*M).startAlarm
1509 6 1 1 2 0 0 1 0 0
1510 6 1 1 4 0 0 0 0 0
fn=testing.(*M).stopAlarm
1520 6 1 1 2 0 0 1 0 0
1521 3 1 1 2 0 0 0 0 0
fn=testing.(*M).writeProfiles
1423 7 1 1 2 0 0 1 0 0
1424 3 0 0 2 2 2 0 0 0
1434 3 1 1 2 2 2 0 0 0
1437 3 0 0 2 1 1 0 0 0
1440 5 0 0 3 0 0 0 0 0
1453 5 0 0 3 1 0 0 0 0
1465 5 1 1 3 0 0 0 0 0
1477 5 1 1 3 1 1 0 0 0
fn=testing.(*T).report
1267 7 2 2 2 0 0 1 0 0
1268 3 0 0 2 0 0 0 0 0
1269 3 2 2 2 0 0 0 0 0
fn=testing.(*common).Failed
677 12 1 1 4 0 0 2 0 0
678 6 0 0 6 0 0 0 0 0
679 6 0 0 2 0 0 0 0 0
680 2 0 0 0 0 0 0 0 0
681 16 0 0 6 0 0 2 0 0
fn=testing.(*common).runCleanup
869 110 18 16 20 0 0 40 0 0
870 40 0 0 20 10 9 20 0 0
871 30 9 8 20 0 0 10 0 0
872 30 0 0 10 0 0 10 0 0
873 20 0 0 0 0 0 20 0 0
874 30 0 0 10 0 0 0 0 0
875 50 9 8 20 0 0 10 0 0
fn=testing.Init
259 6 2 2 2 0 0 1 0 0
260 2 0 0 1 0 0 0 0 0
263 1 0 0 0 0 0 1 0 0
269 3 0 0 1 0 0 1 1 1
272 3 0 0 1 0 0 1 1 1
278 3 0 0 1 0 0 1 0 0
280 3 1 1 1 0 0 1 1 0
281 3 0 0 1 0 0 1 0 0
282 3 0 0 1 0 0 1 0 0
283 3 0 0 1 0 0 1 0 0
284 3 0 0 1 0 0 1 0 0
285 3 1 1 1 0 0 1 0 0
286 3 0 0 1 0 0 1 0 0
287 3 1 1 1 0 0 1 0 0
288 3 0 0 1 0 0 1 0 0
289 3 0 0 1 0 0 1 0 0
290 3 0 0 1 0 0 1 0 0
291 3 0 0 1 0 0 1 0 0
292 3 1 1 1 0 0 1 0 0
293 3 0 0 1 0 0 1 0 0
294 3 1 1 1 0 0 1 0 0
295 6 0 0 2 0 0 3 0 0
296 3 1 1 1 0 0 1 0 0
298 1 0 0 0 0 0 1 0 0
299 3 0 0 2 0 0 0 0 0
fn=testing.callerName
890 7 2 2 2 0 0 1 0 0
892 5 0 0 1 0 0 3 0 0
893 2 0 0 1 0 0 0 0 0
894 2 0 0 0 0 0 0 0 0
897 2 0 0 0 0 0 0 0 0
898 8 0 0 0 0 0 4 0 0
899 7 1 1 4 0 0 2 0 0
fn=testing.init
950 16 2 2 5 0 0 6 1 0
1160 13 1 1 5 0 0 5 1 0
fn=testing.parseCpuList
1526 7 2 2 2 0 0 1 0 0
1527 15 1 1 7 0 0 2 0 0
1528 5 0 0 2 0 0 3 0 0
1529 2 0 0 0 0 0 0 0 0
1539 5 1 1 3 1 0 0 0 0
1540 30 2 2 9 0 0 13 0 0
fn=testing.runBenchmarks
431 3 0 0 1 0 0 0 0 0
434 1 0 0 0 0 0 0 0 0
437 1 1 1 1 1 0 0 0 0
fn=testing.runTests
431 3 1 1 1 0 0 0 0 0
434 1 0 0 0 0 0 0 0 0
437 1 0 0 1 0 0 0 0 0
1126 5 1 1 1 0 0 3 0 0
1127 4 0 0 2 0 0 1 1 1
1128 8 0 0 2 0 0 5 0 0
1129 2 0 0 1 0 0 1 1 1
1130 1 1 1 0 0 0 1 0 0
1317 7 1 1 2 0 0 1 0 0
1319 19 3 2 6 0 0 3 0 0
1320 2 0 0 0 0 0 2 0 0
1321 16 1 1 9 1 0 1 0 0
1322 2 0 0 0 0 0 0 0 0
1325 16 2 2 6 0 0 8 0 0
1326 5 0 0 1 0 0 3 0 0
1328 10 0 0 3 0 0 5 1 1
1329 8 2 2 2 0 0 5 0 0
1330 6 0 0 2 1 0 2 1 1
1332 2 0 0 1 0 0 1 1 1
1334 1 0 0 0 0 0 0 0 0
1337 15 2 2 3 0 0 9 0 0
1346 13 2 1 3 0 0 4 0 0
1347 9 1 1 3 0 0 2 0 0
1350 5 2 1 2 0 0 2 0 0
1545 4 0 0 2 0 0 0 0 0
fn=testing.runTests.func1
1337 6 2 2 2 0 0 1 0 0
1338 4 0 0 2 0 0 0 0 0
1344 6 2 2 1 0 0 4 0 0
1345 3 0 0 2 0 0 0 0 0
fn=testing.runTests.func1.1
1344 11 1 1 4 0 0 4 1 1
fn=testing.tRunner
952 10 1 1 2 0 0 4 0 0
953 9 1 1 4 0 0 4 1 1
959 4 0 0 0 0 0 3 0 0
1042 4 1 1 0 0 0 3 0 0
1048 10 1 1 5 0 0 4 1 1
1049 1 0 0 0 0 0 1 0 0
1050 4 0 0 2 0 0 2 0 0
1053 2 0 0 1 0 0 1 0 0
1054 11 1 1 4 0 0 6 0 0
fn=testing.tRunner.func1
959 7 2 2 2 0 0 1 0 0
960 8 0 0 3 0 0 3 0 0
964 4 1 1 2 0 0 0 0 0
969 5 0 0 2 0 0 2 0 0
971 11 2 2 3 0 0 1 0 0
983 6 1 1 1 0 0 3 0 0
1001 5 0 0 0 0 0 0 0 0
1005 11 1 1 6 0 0 5 0 0
1007 2 0 0 1 0 0 0 0 0
1027 2 1 1 1 0 0 0 0 0
1032 2 1 1 0 0 0 2 0 0
1036 2 0 0 1 0 0 1 0 0
1037 6 1 1 2 0 0 1 0 0
1040 8 1 1 2 0 0 5 0 0
1041 3 1 1 2 0 0 0 0 0
fn=testing.tRunner.func2
1042 6 2 2 2 0 0 1 0 0
1043 6 0 0 4 0 0 0 0 0
1044 4 0 0 0 0 0 3 0 0
fn=testing.testDeps.MatchString-fm
1201 168 19 12 84 4 3 60 2 0
fl=.//usr/lib/golang/src/time/format.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/memory-hierarchy-2-prework/metrics.LoadData
815 16000000 2254 103 5000000 2374 130 10000000 2842 92
fn=time.atoi
397 24000000 1320 94 8000000 0 0 4000000 0 0
399 40000000 112 55 12000000 2381 60 0 0 0
403 44000000 809 95 12000000 0 0 12000000 809 13
405 8000000 0 0 0 0 0 0 0 0
408 16000000 223 74 8000000 0 0 4000000 971 13
409 8000000 0 0 0 0 0 0 0 0
411 28000000 0 0 4000000 0 0 8000000 0 0
fn=time.getnum
708 20000000 0 0 0 0 0 0 0 0
711 15000000 662 153 15000000 0 0 0 0 0
712 30000000 274 78 0 0 0 0 0 0
719 10000000 4 3 5000000 0 0 0 0 0
722 5000000 0 0 0 0 0 0 0 0
728 5000000 0 0 0 0 0 0 0 0
fn=time.init
394 16 2 2 5 0 0 6 1 1
678 10 1 1 3 0 0 5 1 1
1304 10 1 1 3 0 0 5 0 0
1358 7 0 0 3 0 0 3 1 1
1359 9 1 1 1 0 0 6 1 1
1360 10 1 1 2 0 0 6 0 0
1361 10 1 1 2 0 0 6 0 0
1362 10 1 1 2 0 0 6 0 0
1363 10 1 1 2 0 0 6 0 0
1364 10 1 1 2 0 0 6 0 0
1365 11 1 1 2 0 0 6 0 0
1366 11 1 1 2 0 0 6 1 1
fn=time.leadingInt
1307 12000000 987 114 0 0 0 4000000 0 0
1309 58000000 180 78 8000000 0 0 0 0 0
1310 10000000 0 0 10000000 1 0 0 0 0
1311 40000000 0 0 0 0 0 0 0 0
1314 30000000 0 0 0 0 0 0 0 0
1318 30000000 0 0 0 0 0 0 0 0
1319 20000000 32329 135 0 0 0 0 0 0
1324 70000000 13759 283 8000000 0 0 16000000 0 0
fn=time.nextStdChunk
151 24000000 16568 90 0 0 0 8000000 0 0
152 63000000 0 0 16000000 0 0 0 0 0
153 51000000 29810 203 12000000 2696 65 0 0 0
154 4000000 0 0 0 0 0 0 0 0
164 6000000 33711 210 0 0 0 0 0 0
179 12000000 8 6 0 0 0 0 0 0
180 44000000 0 0 4000000 0 0 0 0 0
181 91000000 18 14 12000000 3183 87 20000000 0 0
187 4000000 0 0 0 0 0 0 0 0
188 9000000 28 10 1000000 0 0 0 0 0
189 16000000 183 66 2000000 0 0 5000000 0 0
193 2000000 0 0 0 0 0 0 0 0
194 10000000 5859 101 1000000 0 0 0 0 0
195 14000000 19115 110 2000000 0 0 5000000 0 0
214 12000000 0 0 0 0 0 0 0 0
217 4000000 0 0 0 0 0 0 0 0
220 4000000 51 31 0 0 0 0 0 0
230 12000000 24431 98 0 0 0 0 0 0
231 20000000 0 0 2000000 0 0 0 0 0
234 22000000 23073 99 2000000 0 0 0 0 0
237 20000000 714 72 2000000 0 0 0 0 0
240 20000000 1323 79 2000000 0 0 0 0 0
243 26000000 6 5 4000000 0 0 0 0 0
247 4000000 1340 78 0 0 0 0 0 0
248 3000000 0 0 0 0 0 0 0 0
251 4000000 1230 87 0 0 0 0 0 0
252 1000000 25300 133 0 0 0 0 0 0
254 10000000 83 46 1000000 0 0 0 0 0
257 13000000 22026 163 2000000 0 0 0 0 0
258 14000000 60813 253 2000000 0 0 5000000 0 0
264 8000000 599 82 0 0 0 0 0 0
283 8000000 22 17 2000000 0 0 4000000 0 0
fn=time.parse
711 1000000 24431 106 1000000 0 0 0 0 0
712 3000000 0 0 0 0 0 0 0 0
827 7000000 19121 202 2000000 0 0 1000000 0 0
849 1000000 0 0 0 0 0 0 0 0
851 104000000 11 9 40000000 2 0 64000000 234 0
852 150000000 0 0 32000000 1 0 22000000 0 0
853 80000000 41 37 40000000 1 1 40000000 0 0
854 16000000 0 0 0 0 0 0 0 0
857 24000000 0 0 8000000 0 0 0 0 0
858 2000000 25300 117 0 0 0 0 0 0
865 85000000 2239 363 16000000 0 0 16000000 0 0
866 2000000 1 1 0 0 0 0 0 0
874 6000000 0 0 6000000 0 0 0 0 0
881 4000000 1761 100 0 0 0 0 0 0
882 3000000 0 0 0 0 0 0 0 0
886 8000000 0 0 2000000 0 0 0 0 0
887 6000000 23073 163 2000000 0 0 3000000 0 0
890 7000000 714 92 6000000 0 0 0 0 0
894 3000000 35598 240 0 0 0 0 0 0
895 9000000 185 47 4000000 0 0 4000000 0 0
896 10000000 0 0 2000000 0 0 0 0 0
904 3000000 0 0 0 0 0 0 0 0
905 5000000 201 102 0 0 0 0 0 0
906 2000000 55 43 0 0 0 0 0 0
908 16000000 25444 264 10000000 1 0 4000000 0 0
917 7000000 0 0 7000000 0 0 0 0 0
920 1000000 0 0 0 0 0 0 0 0
921 8000000 0 0 4000000 0 0 4000000 0 0
922 15000000 321 100 8000000 0 0 0 0 0
925 3000000 0 0 0 0 0 0 0 0
930 3000000 0 0 0 0 0 0 0 0
931 9000000 70 45 4000000 0 0 4000000 0 0
932 15000000 28 16 8000000 0 0 0 0 0
935 3000000 19115 124 0 0 0 0 0 0
936 9000000 58 39 4000000 0 0 4000000 0 0
937 11000000 970 3 6000000 0 0 0 0 0
943 5000000 0 0 1000000 0 0 0 0 0
955 3000000 32719 121 3000000 0 0 0 0 0
977 7000000 22243 120 7000000 0 0 0 0 0
985 3000000 161 53 0 0 0 0 0 0
986 10000000 5646 131 1000000 0 0 0 0 0
989 7000000 0 0 7000000 0 0 0 0 0
992 4000000 199 86 0 0 0 0 0 0
993 2000000 0 0 0 0 0 0 0 0
997 2000000 243 86 1000000 0 0 0 0 0
1001 13000000 33428 162 0 0 0 4000000 0 0
1015 5000000 0 0 0 0 0 0 0 0
1032 6000000 0 0 2000000 0 0 4000000 0 0
1033 2000000 0 0 0 0 0 0 0 0
1034 8000000 1323 91 3000000 0 0 4000000 0 0
1036 2000000 24431 148 0 0 0 0 0 0
1037 7000000 0 0 3000000 0 0 3000000 0 0
1039 7000000 0 0 3000000 0 0 0 0 0
1040 16000000 313 127 8000000 0 0 7000000 0 0
1041 2000000 0 0 0 0 0 0 0 0
1047 2000000 0 0 0 0 0 0 0 0
1059 28000000 731 114 14000000 0 0 14000000 0 0
1084 34000000 1237 108 2000000 0 0 23000000 0 0
1086 256000000 33944 350 46000000 0 0 130000000 6371 150
1087 15000000 54 39 10000000 0 0 0 0 0
1089 14000000 24 21 0 0 0 0 0 0
1093 2000000 0 0 0 0 0 0 0 0
1095 4000000 11 10 1000000 0 0 0 0 0
1100 5000000 350 79 1000000 0 0 0 0 0
1127 1021745 0 0 0 0 0 0 0 0
1132 4000000 2169 54 1000000 0 0 0 0 0
1135 4000000 0 0 1000000 0 0 0 0 0
1141 6978255 31194 271 0 0 0 0 0 0
1145 3000000 0 0 1000000 0 0 0 0 0
1149 3000000 0 0 1000000 0 0 0 0 0
1150 19000000 5847 249 7000000 2 2 12000000 0 0
1151 6000000 223 13 1000000 0 0 3000000 0 0
1155 8000000 1 0 5000000 2 1 3000000 0 0
1156 4000000 986 124 0 0 0 0 0 0
1162 2000000 19341 89 0 0 0 0 0 0
1163 10000000 3 3 4000000 1374 58 4000000 1422 59
1167 2978255 0 0 0 0 0 0 0 0
fn=time.skip
754 48000000 13 11 16000000 2 1 8000000 0 0
755 71000000 0 0 32000000 0 0 0 0 0
756 15000000 0 0 5000000 1 1 0 0 0
757 5000000 0 0 0 0 0 0 0 0
764 20000000 5 4 5000000 1 0 0 0 0
767 30000000 0 0 0 0 0 0 0 0
768 35000000 0 0 0 0 0 0 0 0
770 56000000 561 92 16000000 0 0 24000000 0 0
fl=.//usr/lib/golang/src/time/sleep.go
fn=testing.(*M).stopAlarm
78 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/time/sys_unix.go
fn=time.closefd
31 6 0 0 2 0 0 1 0 0
32 3 1 1 1 0 0 2 0 0
33 3 0 0 2 0 0 0 0 0
fn=time.open
19 6 2 2 2 0 0 1 0 0
20 1 0 0 0 0 0 1 1 1
21 2 0 0 0 0 0 0 0 0
24 6 1 1 2 0 0 2 0 0
fn=time.readFile
28 2 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/time/time.go
fn=time.(*Time).addSec
180 4000000 6 5 2000000 0 0 0 0 0
193 2000000 32 23 2000000 0 0 0 0 0
194 1000000 0 0 1000000 0 0 0 0 0
fn=time.Date
198 4000000 6 5 1000000 0 0 0 0 0
201 1000000 0 0 0 0 0 0 0 0
202 3000000 5 4 0 0 0 1000000 0 0
207 1000000 0 0 0 0 0 0 0 0
1081 3000000 1762 123 0 0 0 0 0 0
1084 5000000 0 0 0 0 0 0 0 0
1085 2000000 0 0 0 0 0 0 0 0
1086 2000000 0 0 0 0 0 0 0 0
1089 5000000 0 0 0 0 0 0 0 0
1090 2000000 0 0 0 0 0 0 0 0
1091 2000000 0 0 0 0 0 0 0 0
1094 2000000 31666 107 0 0 0 0 0 0
1095 3000000 0 0 0 0 0 0 0 0
1096 2000000 0 0 0 0 0 0 0 0
1100 2273111 0 0 0 0 0 0 0 0
1132 5000000 1323 121 2000000 0 0 0 0 0
1361 4731110 0 0 0 0 0 0 0 0
1368 16000000 2560 210 1000000 0 0 0 0 0
1373 19000000 449 167 0 0 0 0 0 0
1375 5000000 617 92 5000000 0 0 0 0 0
1397 6000000 85 6 2000000 0 0 1000000 0 0
1398 3000000 0 0 1000000 0 0 0 0 0
1403 2000000 0 0 1000000 0 0 0 0 0
1404 2000000 0 0 0 0 0 0 0 0
1405 273111 0 0 0 0 0 0 0 0
1408 3000000 0 0 0 0 0 1000000 0 0
1409 2000000 65 45 0 0 0 0 0 0
1410 2000000 0 0 0 0 0 0 0 0
1411 2000000 0 0 0 0 0 0 0 0
1414 1000000 55 8 0 0 0 0 0 0
1417 6000000 24431 123 1000000 51 4 0 0 0
1418 1317703 6310 29 0 0 0 0 0 0
1419 457038 0 0 0 0 0 0 0 0
1423 2771481 3 3 0 0 0 0 0 0
1426 1000000 0 0 0 0 0 0 0 0
1427 5000000 0 0 0 0 0 0 0 0
1429 3000000 714 103 0 0 0 1000000 0 0
1435 7000000 17362 181 3000000 0 0 3000000 0 0
1436 3000000 0 0 0 0 0 0 0 0
1446 4000000 3 2 1000000 0 0 3000000 0 0
1447 1000000 0 0 0 0 0 0 0 0
1448 8000000 0 0 4000000 0 0 3000000 0 0
fn=time.Duration.String
669 12 1 1 4 0 0 2 0 0
671 6 0 0 0 0 0 4 0 0
675 4 1 1 1 0 0 0 0 0
676 2 0 0 0 0 0 0 0 0
677 6 0 0 2 0 0 0 0 0
680 6 1 1 0 0 0 0 0 0
685 1 0 0 0 0 0 1 0 0
688 2 0 0 0 0 0 0 0 0
689 6 1 1 2 0 0 2 0 0
709 1 0 0 0 0 0 1 0 0
711 10 1 1 2 0 0 6 0 0
714 13 2 2 1 0 0 5 0 0
715 2 0 0 0 0 0 1 0 0
718 4 0 0 1 0 0 0 0 0
734 2 1 1 0 0 0 0 0 0
735 1 0 0 0 0 0 0 0 0
739 21 2 2 4 0 0 7 0 0
fn=time.Now
1121 60 10 8 20 0 0 10 0 0
1122 40 0 0 30 0 0 10 0 0
1123 10 0 0 10 10 7 0 0 0
1124 20 10 8 0 0 0 0 0 0
1125 40 0 0 0 0 0 0 0 0
1128 110 10 8 30 10 8 30 0 0
fn=time.Since
923 60 9 8 20 0 0 10 0 0
925 30 0 0 10 0 0 0 0 0
927 50 9 8 20 7 7 10 0 0
931 150 9 8 60 0 0 80 0 0
fn=time.Time.Sub
896 60 9 8 20 0 0 10 0 0
897 60 9 8 20 0 0 0 0 0
898 10 0 0 10 0 0 0 0 0
899 10 0 0 10 0 0 0 0 0
900 20 0 0 0 0 0 0 0 0
901 20 0 0 0 0 0 0 0 0
904 30 0 0 0 0 0 0 0 0
907 40 0 0 20 0 0 10 0 0
fn=time.fmtFrac
746 24 2 2 0 0 0 1 0 0
750 43 1 1 4 0 0 0 0 0
751 54 0 0 0 0 0 0 0 0
752 45 1 1 0 0 0 0 0 0
753 18 0 0 0 0 0 0 0 0
755 9 0 0 0 0 0 0 0 0
759 21 0 0 0 0 0 0 0 0
760 18 0 0 0 0 0 0 0 0
763 15 0 0 2 0 0 2 0 0
fn=time.fmtInt
768 5 1 1 0 0 0 1 0 0
770 6 0 0 3 0 0 0 0 0
774 5 1 1 0 0 0 0 0 0
775 2 0 0 0 0 0 0 0 0
776 11 0 0 0 0 0 1 0 0
780 4 1 1 2 0 0 1 0 0
fn=time.init
1118 4 1 1 1 0 0 2 1 1
fn=time.parse
169 3000000 0 0 1000000 0 0 0 0 0
172 1000000 9 9 1000000 0 0 0 0 0
176 3000000 1364 152 0 0 0 0 0 0
198 3000000 0 0 0 0 0 0 0 0
201 3000000 0 0 0 0 0 0 0 0
202 1000000 0 0 0 0 0 1000000 0 0
207 2000000 5 5 1000000 1604 50 0 0 0
1071 2922239 1817 165 0 0 0 0 0 0
1074 9782550 55799 203 1956510 2141 82 0 0 0
1361 1450733 682 33 1000000 0 0 0 0 0
fl=.//usr/lib/golang/src/time/zoneinfo.go
fn=time.(*Location).get
87 12000000 305 77 4000000 0 0 2000000 778 11
88 6000000 0 0 2000000 0 0 0 0 0
91 6000000 0 0 0 0 0 0 0 0
92 1000000 0 0 0 0 0 0 0 0
94 8000001 156 52 4000001 1 0 2000000 0 0
fn=time.(*Location).lookup
124 12000000 78 47 4000000 0 0 2000000 0 0
125 8000000 1 0 4000000 0 0 4000000 1018 27
127 8000000 0 0 4000000 5215 235 0 0 0
132 11000000 13759 218 2000000 0 0 5000000 0 0
135 7000000 12 12 3000000 4412 370 0 0 0
143 9000000 5 5 3000000 4442 84 0 0 0
162 52292403 0 0 0 0 0 0 0 0
163 34437325 0 0 0 0 0 0 0 0
164 34437325 27 19 6887465 11561 294 0 0 0
165 13774930 0 0 0 0 0 0 0 0
169 6427539 0 0 0 0 0 0 0 0
172 8000000 0 0 1000000 0 0 0 0 0
173 3124046 3340 120 2000000 6452 153 1124046 0 0
174 1562023 0 0 1000000 0 0 562023 0 0
175 1562023 0 0 1000000 0 0 562023 0 0
180 5248092 0 0 1124046 0 0 0 0 0
181 20621303 403 82 3372138 0 0 3372138 0 0
182 4496184 32255 130 1124046 0 0 2810115 0 0
186 3503816 2477 116 875954 0 0 2189885 1 0
fn=time.init
610 10 0 0 3 0 0 5 0 0
fn=time.parse
106 5000000 10433 113 1000000 0 0 3000000 545 35
107 8061710 44 28 4000000 575 52 2000000 234553 199763
108 19308550 2501 143 7000000 777 29 9000000 935021 762996
109 14123420 33 24 3000000 195 12 8000000 472229 382187
110 1000000 0 0 0 0 0 1000000 459426 388947
111 2000000 0 0 0 0 0 1000000 0 0
113 7123420 607 90 3000000 39 0 1000000 207802 174008
fn=time.tzset
247 3934168 195 45 1124048 0 0 562024 0 0
253 6744288 113 52 3934168 0 0 2810120 2813 74
254 562024 0 0 0 0 0 0 0 0
255 4496192 34691 131 2248096 0 0 1686072 0 0
257 1124048 740 68 0 0 0 0 0 0
264 562024 0 0 0 0 0 0 0 0
266 1124048 0 0 0 0 0 0 0 0
268 7306312 1721 81 2810120 0 0 3372144 0 0
fn=time.tzsetName
337 3372144 69775 241 1124048 0 0 562024 0 0
338 1686072 0 0 562024 0 0 0 0 0
341 2248096 0 0 1124048 2588 125 0 0 0
342 15736672 0 0 2248096 0 0 0 0 0
344 13488576 1166 52 0 0 0 0 0 0
345 1124048 0 0 0 0 0 0 0 0
348 7868336 2424 123 1124048 0 0 2810120 629 19
fn=time.tzsetNum
501 3372144 25804 156 1124048 0 0 562024 0 0
502 1686072 0 0 562024 0 0 0 0 0
506 7868336 32551 135 1686072 0 0 0 0 0
507 2248096 0 0 0 0 0 0 0 0
513 562024 0 0 0 0 0 0 0 0
514 1686072 0 0 0 0 0 0 0 0
515 1124048 0 0 0 0 0 0 0 0
519 1686072 758 101 562024 0 0 0 0 0
522 3934168 246 69 1124048 0 0 1686072 0 0
fn=time.tzsetOffset
368 3372144 970 116 1124048 0 0 562024 0 0
369 1686072 0 0 562024 0 0 0 0 0
373 2248096 696 99 1124048 0 0 0 0 0
375 1124048 11538 123 0 0 0 0 0 0
376 3934168 0 0 0 0 0 0 0 0
377 562024 0 0 0 0 0 0 0 0
381 5058216 365 82 2248096 0 0 2810120 2524 61
382 562024 0 0 0 0 0 0 0 0
385 562024 0 0 0 0 0 0 0 0
386 1124048 0 0 0 0 0 0 0 0
387 1686072 0 0 1124048 0 0 0 0 0
388 1124048 0 0 0 0 0 0 0 0
390 4496192 29 22 562024 0 0 2248096 0 0
413 562024 0 0 0 0 0 562024 2475 73
fl=.//usr/lib/golang/src/time/zoneinfo_read.go
fn=time.(*dataIO).big4
43 935 1 1 561 0 0 0 0 0
49 2244 2 2 187 1 0 561 0 0
53 1122 1 1 374 0 0 187 0 0
54 561 0 0 187 0 0 0 0 0
55 374 0 0 0 0 0 0 0 0
59 1309 0 0 561 0 0 374 0 0
fn=time.(*dataIO).big8
62 474 1 1 158 0 0 79 0 0
63 790 0 0 316 0 0 316 0 0
64 553 1 1 237 0 0 158 0 0
65 158 0 0 0 0 0 0 0 0
69 632 0 0 237 0 0 158 0 0
fn=time.LoadLocationFromTZData
43 219 7 7 132 0 0 0 0 0
48 16 8 8 0 0 0 0 0 0
49 417 7 7 0 0 0 132 0 0
73 68 0 0 0 0 0 0 0 0
74 68 1 1 0 0 0 0 0 0
78 68 0 0 34 0 0 0 0 0
83 3 1 1 3 0 0 0 0 0
84 2 0 0 0 0 0 2 0 0
104 7 1 1 2 0 0 1 0 0
105 58 2 2 3 0 0 7 0 0
108 6 1 1 1 0 0 0 0 0
115 5 0 0 0 0 0 0 0 0
118 1 0 0 1 0 0 0 0 0
119 2 0 0 0 0 0 0 0 0
121 3 1 1 0 0 0 0 0 0
122 1 0 0 0 0 0 0 0 0
145 4 0 0 0 0 0 3 0 0
146 27 1 1 0 0 0 6 0 0
147 30 0 0 12 0 0 12 0 0
148 6 0 0 0 0 0 0 0 0
154 24 0 0 6 0 0 6 0 0
163 9 2 2 6 0 0 1 0 0
165 1 0 0 0 0 0 0 0 0
166 2 0 0 1 0 0 0 0 0
167 3 1 1 2 0 0 0 0 0
168 1 0 0 0 0 0 0 0 0
169 2 0 0 2 0 0 0 0 0
170 1 0 0 1 0 0 0 0 0
173 1 0 0 0 0 0 0 0 0
174 2 0 0 0 0 0 0 0 0
179 26 1 1 0 0 0 6 0 0
180 30 0 0 12 0 0 12 0 0
181 6 0 0 0 0 0 0 0 0
182 1 1 1 0 0 0 0 0 0
187 24 0 0 6 0 0 6 0 0
192 161 2 2 80 0 0 1 0 0
197 18 3 3 1 0 0 7 0 0
200 5 0 0 1 0 0 2 0 0
203 14 1 1 1 0 0 7 0 0
206 7 0 0 1 0 0 3 0 0
209 4 1 1 1 0 0 0 0 0
213 5 1 1 1 0 0 2 0 0
217 5 1 1 1 0 0 2 0 0
219 2 1 1 1 0 0 0 0 0
224 1 0 0 0 0 0 0 0 0
225 7 0 0 2 0 0 0 0 0
226 11 2 2 2 0 0 5 0 0
232 2 1 1 1 0 0 1 0 0
233 2 0 0 0 0 0 0 0 0
238 8 1 1 1 0 0 5 0 0
239 106 0 0 35 0 0 17 0 0
242 102 1 1 34 0 0 34 0 0
248 119 0 0 34 0 0 34 0 0
250 51 0 0 0 0 0 0 0 0
253 68 0 0 0 0 0 17 0 0
254 120 1 1 18 0 0 0 0 0
257 393 2 2 121 0 0 102 0 0
269 11 2 2 3 0 0 6 0 0
270 398 0 0 79 0 0 79 0 0
272 79 0 0 0 0 0 0 0 0
279 474 0 0 158 0 0 158 0 0
285 395 1 1 158 0 0 79 0 0
286 634 1 1 318 0 0 0 0 0
289 79 0 0 0 0 0 79 0 0
290 300 0 0 80 0 0 0 0 0
291 165 1 1 97 0 0 17 0 0
293 300 0 0 80 0 0 0 0 0
294 182 1 1 97 0 0 17 0 0
298 2 1 1 0 0 0 0 0 0
305 118 5 5 14 1 0 18 0 0
309 2 0 0 1 0 0 1 0 0
310 240 1 1 2 0 0 0 0 0
311 1179 1 1 157 0 0 0 0 0
312 2 0 0 1 0 0 1 0 0
313 2 0 0 0 0 0 1 0 0
314 2 0 0 1 0 0 1 0 0
315 3 1 1 0 0 0 0 0 0
317 4 1 1 2 0 0 0 0 0
320 14 0 0 5 0 0 7 0 0
321 2 1 1 1 0 0 1 0 0
322 1 0 0 0 0 0 1 0 0
325 77 3 3 31 0 0 13 0 0
326 65 0 0 16 0 0 24 0 0
328 1 0 0 0 0 0 0 0 0
333 17 1 1 10 0 0 1 0 0
338 6 0 0 2 0 0 2 1 0
fn=time.byteString
89 102 2 2 34 0 0 17 0 0
90 261 0 0 34 0 0 0 0 0
91 210 0 0 70 0 0 0 0 0
92 221 1 1 85 0 0 119 0 0
fn=time.init
98 13 2 2 5 0 0 5 0 0
fn=time.loadLocation
507 6 2 2 2 0 0 1 0 0
508 12 1 1 4 0 0 2 0 0
509 12 2 1 7 0 0 5 0 0
510 2 0 0 0 0 0 0 0 0
511 13 2 2 5 1 0 6 0 0
512 6 1 0 2 1 0 2 0 0
515 2 0 0 0 0 0 2 0 0
fn=time.loadTzinfo
496 6 1 1 2 0 0 1 0 0
497 4 0 0 1 0 0 0 0 0
500 22 4 3 10 0 0 10 0 0
fn=time.loadTzinfoFromDirOrZip
343 6 2 2 2 0 0 1 0 0
344 16 1 1 3 1 1 0 0 0
347 2 0 0 0 0 0 0 0 0
348 14 2 2 4 0 0 8 0 0
350 16 1 0 7 0 0 8 1 0
fn=time.readFile
529 26 3 3 4 0 0 6 1 1
530 10 1 1 5 0 0 4 1 1
531 2 0 0 0 0 0 0 0 0
534 4 0 0 0 0 0 3 1 1
536 519 1 1 0 0 0 512 63 63
540 1 0 0 0 0 0 0 0 0
541 2 0 0 0 0 0 0 0 0
542 6 0 0 1 0 0 0 0 0
543 30 3 3 7 0 0 13 0 0
545 7 1 1 1 0 0 0 0 0
548 15 0 0 6 0 0 6 0 0
552 13 1 1 4 0 0 8 0 0
fl=.//usr/lib/golang/src/time/zoneinfo_unix.go
fn=time.initLocal
26 6 2 2 2 0 0 1 0 0
32 7 0 0 3 0 0 3 0 0
33 1 0 0 0 0 0 0 0 0
35 15 3 2 2 0 0 9 0 0
36 1 0 0 0 0 0 0 0 0
37 11 1 1 3 0 0 3 1 1
38 5 0 0 1 0 0 2 0 0
39 3 1 1 2 1 0 0 0 0
fl=.//usr/lib/golang/src/unicode/tables.go
fn=unicode.init
9 514 45 45 147 14 14 220 7 6
3586 2 0 0 1 0 0 1 0 0
5626 494 43 43 141 5 1 213 4 4
7593 88 7 7 25 1 1 39 3 2
7880 49 4 4 15 0 0 21 1 1
fl=.//usr/lib/golang/src/unicode/utf8/utf8.go
fn=encoding/csv.(*Reader).readRecord
41 2200000 41 24 0 0 0 0 0 0
323 2200000 0 0 0 0 0 0 0 0
325 1100000 46 28 0 0 0 0 0 0
516 1100002 0 0 0 0 0 0 0 0
517 2200004 0 0 0 0 0 0 0 0
fn=unicode/utf8.DecodeRune
151 300000 8 6 0 0 0 100000 0 0
153 300000 9 6 100000 0 0 0 0 0
156 200000 0 0 200000 0 0 0 0 0
157 200000 0 0 100000 113 5 0 0 0
158 200000 0 0 0 0 0 0 0 0
162 200000 19 9 0 0 0 0 0 0
163 1000000 0 0 200000 0 0 200000 0 0
fn=unicode/utf8.RuneCount
373 18 3 3 0 0 0 6 0 0
376 132 3 3 12 0 0 0 0 0
377 30 0 0 0 0 0 0 0 0
378 60 0 0 30 0 0 0 0 0
379 60 0 0 0 0 0 0 0 0
381 30 0 0 0 0 0 0 0 0
382 30 0 0 0 0 0 0 0 0
406 24 9 6 12 0 0 6 0 0
fn=unicode/utf8.RuneCountInString
410 9 3 3 0 0 0 3 0 0
412 421 0 0 6 0 0 0 0 0
413 200 0 0 100 0 0 0 0 0
414 200 0 0 0 0 0 0 0 0
416 100 3 3 0 0 0 0 0 0
417 100 0 0 0 0 0 0 0 0
441 12 3 3 6 0 0 3 0 0
fl=./<autogenerated>
fn=bytes.IndexRune
1 2 0 0 0 0 0 1 0 0
fn=encoding/csv.(*Reader).readRecord
1 4 2 2 0 0 0 2 0 0
fn=flag.(*boolValue).String
1 8 0 0 0 0 0 0 0 0
fn=flag.(*stringValue).String
1 60 0 0 36 0 0 24 0 0
fn=hash/crc32.simplePopulateTable
1 1 0 0 1 0 0 0 0 0
fn=os.errClosed
1 4 0 0 2 0 0 2 0 0
fn=os.errExist
1 4 0 0 2 0 0 2 0 0
fn=os.errInvalid
1 4 0 0 2 0 0 2 0 0
fn=os.errNoDeadline
1 4 0 0 2 0 0 2 0 0
fn=os.errNotExist
1 4 0 0 2 0 0 2 0 0
fn=os.errPermission
1 4 0 0 2 0 0 2 0 0
fn=os.runtime_beforeExit
1 1 1 1 1 0 0 0 0 0
fn=regexp.init.0
1 1 0 0 1 0 0 0 0 0
fn=runtime.(*addrRanges).findSucc
1 185 0 0 185 0 0 0 0 0
fn=runtime.(*gcControllerState).endCycle
1 18 4 3 0 0 0 9 0 0
fn=runtime.(*hmap).incrnoverflow
1 2724 0 0 2724 0 0 0 0 0
fn=runtime.(*itabTableType).find
1 2 0 0 2 0 0 0 0 0
fn=runtime.(*lfstack).pop
1 551 0 0 551 0 0 0 0 0
fn=runtime.(*mcache).nextFree
1 4 2 1 0 0 0 2 0 0
fn=runtime.(*mspan).countAlloc
1 55717 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).refillAllocCache
1 780117 0 0 780117 0 0 0 0 0
fn=runtime.(*pageBits).clearAll
1 40 0 0 40 0 0 0 0 0
fn=runtime.(*pageBits).setAll
1 20 0 0 20 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
1 18604 0 0 0 0 0 0 0 0
fn=runtime.(*sigctxt).pushCall
1 1 0 0 1 0 0 0 0 0
fn=runtime.(*stackScanState).findObject
1 19 0 0 19 0 0 0 0 0
fn=runtime.adjustSignalStack
1 138 0 0 92 0 0 0 0 0
fn=runtime.adjustsudogs
1 9 6 5 9 0 0 0 0 0
fn=runtime.asyncPreempt2
1 1 0 0 0 0 0 0 0 0
fn=runtime.atoi
1 4 0 0 2 0 0 2 0 0
fn=runtime.atomicstorep
1 3 0 0 0 0 0 0 0 0
fn=runtime.cansemacquire
1 38 0 0 38 0 0 0 0 0
fn=runtime.chanrecv.func1
1 3 0 0 2 0 0 0 0 0
fn=runtime.chanrecv1
1 30 8 6 20 1 1 0 0 0
fn=runtime.chansend.func1
1 24 0 0 16 0 0 0 0 0
fn=runtime.chansend1
1 30 0 0 20 0 0 0 0 0
fn=runtime.efaceOf
1 10 0 0 5 0 0 5 0 0
fn=runtime.entersyscall
1 34716 0 0 23144 0 0 0 0 0
fn=runtime.entersyscallblock
1 48 1 1 16 0 0 0 0 0
fn=runtime.findBitRange64
1 764 0 0 0 0 0 0 0 0
fn=runtime.findObject
1 666250 0 0 0 0 0 0 0 0
fn=runtime.findsghi
1 3 0 0 3 0 0 0 0 0
fn=runtime.float64frombits
1 2 0 0 1 0 0 1 0 0
fn=runtime.funcPC
1 6 0 0 4 1 1 2 0 0
fn=runtime.futexsleep
1 399 12 6 266 32 11 0 0 0
fn=runtime.gcMarkDone
1 4 2 2 0 0 0 2 0 0
fn=runtime.gcMarkTermination.func3
1 57 1 0 38 3 0 0 0 0
fn=runtime.gcStart
1 4 2 2 0 0 0 2 0 0
fn=runtime.gcWakeAllAssists
1 18 9 9 0 0 0 9 0 0
fn=runtime.gcd
1 912 0 0 912 0 0 0 0 0
fn=runtime.gopark
1 24 4 2 0 0 0 12 0 0
fn=runtime.heapBits.forwardOrBoundary
1 2 0 0 0 0 0 1 1 1
fn=runtime.heapBitsSetType
1 6 3 3 0 0 0 3 0 0
fn=runtime.init.0
1 2 0 0 0 0 0 0 0 0
fn=runtime.mProf_Flush
1 2 1 1 0 0 0 1 1 0
fn=runtime.mSysStatInc
1 3 1 1 2 0 0 0 0 0
fn=runtime.makeslice
1 2 1 1 0 0 0 1 0 0
fn=runtime.mapassign_fast64
1 2 1 1 0 0 0 1 0 0
fn=runtime.mapiternext
1 2 0 0 0 0 0 1 0 0
fn=runtime.memclrHasPointers
1 210 0 0 140 0 0 0 0 0
fn=runtime.memhash64Fallback
1 2 0 0 2 0 0 0 0 0
fn=runtime.mmap
1 833 78 62 476 0 0 238 0 0
fn=runtime.mspinning
1 5 0 0 5 0 0 0 0 0
fn=runtime.nanotime
1 55 0 0 33 0 0 11 0 0
fn=runtime.netpollunblock
1 2 0 0 0 0 0 0 0 0
fn=runtime.newobject
1 2 1 1 0 0 0 1 0 0
fn=runtime.newproc
1 87 0 0 58 1 0 0 0 0
fn=runtime.notetsleep_internal
1 6 0 0 4 0 0 0 0 0
fn=runtime.profilealloc
1 6 3 1 0 0 0 3 0 0
fn=runtime.purgecachedstats
1 592 12 5 592 0 0 0 0 0
fn=runtime.readyWithTime
1 12 3 0 0 0 0 6 0 0
fn=runtime.reentersyscall
1 34716 0 0 11572 0 0 0 0 0
fn=runtime.reflectcallmove
1 2 0 0 0 0 0 0 0 0
fn=runtime.round2
1 40 0 0 40 0 0 0 0 0
fn=runtime.runqempty
1 133068 0 0 133064 0 0 0 0 0
fn=runtime.runqget
1 2356772 0 0 1178386 0 0 589193 0 0
fn=runtime.scavengeSleep
1 6 2 2 0 0 0 3 0 0
fn=runtime.semrelease1
1 48 21 15 0 0 0 24 11 2
fn=runtime.setsig
1 56 0 0 0 0 0 0 0 0
fn=runtime.sigFetchG
1 92 0 0 46 0 0 46 0 0
fn=runtime.signalstack
1 24 0 0 16 0 0 0 0 0
fn=runtime.stackinit
1 1 0 0 1 0 0 0 0 0
fn=runtime.stacklog2
1 8 0 0 8 0 0 0 0 0
fn=runtime.startTheWorld.func1
1 54 0 0 36 0 0 0 0 0
fn=runtime.sysAlloc
1 380 0 0 190 0 0 95 0 0
fn=runtime.sysFree
1 15 0 0 10 0 0 0 0 0
fn=runtime.timediv
1 1 0 0 1 0 0 0 0 0
fn=runtime.typedslicecopy
1 3 0 0 2 0 0 0 0 0
fn=sort.(*StringSlice).Len
1 45 6 6 18 0 0 6 0 0
fn=sort.maxDepth
1 6 0 0 3 0 0 3 0 0
fn=strconv.bigFtoa
1 6 3 3 0 0 0 3 0 0
fn=sync.runtime_procPin
1 71 0 0 71 0 0 0 0 0
fn=sync.runtime_procUnpin
1 71 0 0 71 0 0 0 0 0
fn=testing.runTests.func1.1
1 3 0 0 2 0 0 0 0 0
fn=testing/internal/testdeps.(*TestDeps).ImportPath
1 16 2 2 7 1 0 3 0 0
fn=testing/internal/testdeps.(*TestDeps).MatchString
1 174 17 11 78 0 0 54 1 0
fn=time.(*Time).addSec
1 1000000 0 0 0 0 0 0 0 0
fn=time.getnum
1 85000000 59 44 5000000 0 0 20000000 0 0
fn=time.readFile
1 2 0 0 0 0 0 1 0 0
fl=./_testmain.go
fn=main.init.0
34 6 1 1 2 0 0 1 0 0
35 4 1 1 1 0 0 2 0 0
36 3 0 0 2 0 0 0 0 0
fn=main.main
40 6 1 1 2 0 0 1 0 0
42 18 2 2 9 2 2 9 0 0
44 5 2 2 1 0 0 4 0 0
fl=???
fn=???
0 137772 1745 88 45924 0 0 0 0 0
fn=_rt0_amd64_linux
0 1 1 1 0 0 0 0 0 0
fn=indexbytebody
0 2496791 0 0 2496791 0 0 0 0 0
fn=internal/cpu.xgetbv
0 1 0 0 1 0 0 0 0 0
fn=internal/testlog.Open
0 2 2 1 0 0 0 1 1 1
fn=memeqbody
0 15 0 0 15 0 0 0 0 0
fn=runtime.asyncPreempt
0 1 0 0 1 0 0 0 0 0
fn=runtime.duffcopy
0 8 0 0 8 0 0 0 0 0
fn=runtime.memclrNoHeapPointers
0 58033 0 0 58033 0 0 0 0 0
fn=runtime/internal/atomic.Store64
0 13 0 0 13 0 0 0 0 0
fn=sync/atomic.StoreUintptr
0 13 11 8 0 0 0 0 0 0
fn=unicode.init
0 2130 183 183 608 14 13 914 19 19
summary: 23988655007 3736471 116199 5487990506 197851039 101649123 3096306273 11953476 9733142
