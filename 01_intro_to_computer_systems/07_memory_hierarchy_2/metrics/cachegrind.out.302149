desc: I1 cache:         32768 B, 64 B, 8-way associative
desc: D1 cache:         32768 B, 64 B, 8-way associative
desc: LL cache:         8388608 B, 64 B, direct-mapped
cmd: ./metrics.test -test.bench .
events: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw 
fl=.//home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics/metrics.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.AverageAge
33 147 4 4 42 0 0 21 0 0
35 14700399 6 6 6300063 640542 373528 4200126 3 0
36 10500000 0 0 4200000 2 2 2100000 0 0
37 18900000 0 0 6300000 2100000 1079036 2100000 0 0
39 4200084 0 0 42 0 0 2100021 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.AveragePaymentAmount
42 210 6 6 60 0 0 30 2 0
44 27000570 12 12 15000090 915060 881382 6000180 13 7
45 165000000 6 6 36000000 19516650 18894754 0 0 0
46 66000000 0 0 30000000 6 6 3000000 0 0
48 183000180 6 6 3000000 0 0 3000000 0 0
51 180 0 0 90 30 30 30 10 10
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.LoadData
69 7 1 1 2 0 0 1 0 0
70 1 0 0 0 0 0 0 0 0
71 2 0 0 0 0 0 0 0 0
74 1 1 1 0 0 0 0 0 0
75 9 2 2 4 0 0 4 2 2
76 2 0 0 0 0 0 0 0 0
80 8 3 3 2 0 0 5 1 0
81 1600001 4 4 500001 37506 25914 400000 2 2
82 900000 0 0 300000 50990 43254 400000 0 0
83 800000 1 1 400000 24510 20804 200000 0 0
84 900000 1 1 300000 24511 20785 400000 0 0
85 800000 0 0 400000 25490 21605 200000 0 0
86 500000 1 1 100000 0 0 400000 3 1
87 3999999 9 5 1499999 21 5 1700000 194156 115800
90 1 0 0 0 0 0 0 0 0
91 2 0 0 0 0 0 0 0 0
94 1 1 1 0 0 0 0 0 0
95 9 2 2 4 0 0 4 2 2
96 2 0 0 0 0 0 0 0 0
100 14000002 17092 105 5000001 377575 375030 3000000 1 1
101 9000000 10 9 3000000 753708 752957 4000000 0 0
102 8000000 11 10 4000000 1680 38 4000000 323 10
103 3000000 0 0 3000000 0 0 0 0 0
104 51683636 37858 523 19863776 2254816 1688289 19261608 821720 724706
110 5 0 0 3 0 0 1 1 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.StdDevPaymentAmount
55 70 3 3 20 0 0 10 0 0
56 50 3 3 20 0 0 30 3 0
58 10000200 6 6 6000040 305020 288504 2000060 0 0
59 74000030 3 3 12000000 6505550 6171222 0 0 0
60 22000000 0 0 10000000 0 0 1000000 0 0
62 90000000 3 3 0 0 0 0 0 0
63 31000060 0 0 1000000 0 0 1000000 0 0
66 60 0 0 20 0 0 10 0 0
fl=.//home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics/metrics_test.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics
8 6 2 2 2 0 0 1 0 0
9 3 1 1 1 0 0 2 1 0
11 17 1 1 4 0 0 9 0 0
22 17 3 3 4 0 0 9 0 0
34 17 2 2 4 0 0 9 1 1
45 3 1 1 2 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func1
11 20 2 2 6 0 0 4 0 0
13 134 2 2 67 63 42 21 0 0
14 84 0 0 42 0 0 42 0 0
17 28 4 4 8 4 2 0 0 0
18 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func2
22 30 6 6 9 0 0 6 0 0
24 132 3 3 66 60 60 20 0 0
25 80 0 0 40 0 0 40 0 0
29 33 3 3 9 3 0 0 0 0
30 3 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func3
34 30 6 6 9 0 0 6 0 0
36 72 3 3 36 30 30 10 0 0
37 40 0 0 20 0 0 20 0 0
40 42 6 6 12 6 6 0 0 0
41 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/bufio/bufio.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.LoadData
55 10 2 2 2 0 0 6 0 0
56 12 0 0 2 0 0 8 0 0
62 2 0 0 0 0 0 0 0 0
75 56 7 7 12 0 0 26 1 1
fn=bufio.(*Reader).ReadSlice
117 4 0 0 4 0 0 0 0 0
118 11 0 0 2 0 0 4 0 0
318 57750 2 2 23100 0 0 11550 0 0
330 6600012 172 69 2200004 0 0 1100002 0 0
332 4400008 0 0 2200004 0 0 0 0 0
334 21142588 40 28 4446208 1217 48 1111552 0 0
335 2200000 126 35 1100000 0 0 0 0 0
336 18700000 121 36 4400000 0 0 0 0 0
337 1100000 0 0 0 0 0 1100000 0 0
338 1100000 39 27 0 0 0 0 0 0
342 34656 0 0 23104 0 0 0 0 0
343 30 2 2 8 0 0 0 0 0
344 2 0 0 0 0 0 2 0 0
345 2 0 0 0 0 0 0 0 0
346 2 0 0 0 0 0 0 0 0
350 23100 0 0 11550 0 0 0 0 0
359 57750 11 6 34650 32 10 23100 0 0
363 8800014 39 28 0 0 0 0 0 0
364 3300000 0 0 1100000 0 0 1100000 118 3
365 1100000 58 37 0 0 0 1100000 0 0
368 8800020 0 0 2200004 0 0 5500010 0 0
fn=bufio.(*Reader).fill
86 69300 315 72 23100 0 0 11550 0 0
88 46200 0 0 23100 0 0 0 0 0
89 265489 615 80 46192 0 0 46100 0 0
90 46169 0 0 34621 0 0 11548 0 0
91 11548 0 0 0 0 0 11548 0 0
94 57750 2 2 23100 0 0 0 0 0
99 34650 78 36 0 0 0 11550 0 0
100 277200 43 23 115500 1477 38 57750 2 1
101 34648 0 0 0 0 0 0 0 0
104 23100 0 0 23100 16 3 0 0 0
105 23100 171 39 0 0 0 0 0 0
106 11 1 1 2 0 0 4 0 0
107 6 0 0 4 0 0 0 0 0
109 11548 0 0 0 0 0 0 0 0
110 34644 0 0 23096 0 0 0 0 0
fn=bufio.init
22 16 2 2 5 0 0 6 1 1
23 10 1 1 3 0 0 5 0 0
24 10 1 1 3 0 0 5 0 0
25 10 1 1 3 0 0 5 0 0
83 10 1 1 3 0 0 5 0 0
522 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/bufio/scan.go
fn=bufio.init
69 10 1 1 3 0 0 5 0 0
70 10 1 1 3 0 0 5 0 0
71 10 1 1 3 0 0 5 0 0
123 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/bytes/buffer.go
fn=bytes.init
44 16 2 2 5 0 0 6 1 1
45 10 1 1 3 0 0 5 1 1
385 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/bytes/bytes.go
fn=bufio.(*Reader).ReadSlice
91 6680862 97 48 1111552 0 0 5557760 52 14
fn=bytes.IndexRune
91 30600000 36 30 13600000 0 0 17000000 66 17
155 20400000 75 53 6800000 2 0 3400000 0 0
156 3400000 0 0 0 0 0 0 0 0
157 13600000 0 0 3400000 0 0 0 0 0
158 13600000 39 33 6800000 1 0 3400000 1 0
fn=encoding/csv.(*Reader).readRecord
91 24500000 93 43 6900000 1 0 17600000 0 0
fl=.//usr/lib/golang/src/compress/flate/huffman_bit_writer.go
fn=compress/flate.init.0
611 7 1 1 2 0 0 1 0 0
612 8 1 1 1 0 0 3 0 0
613 1 0 0 0 0 0 1 0 0
614 1 0 0 0 0 0 1 0 0
615 7 0 0 0 0 0 6 0 0
616 3 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/compress/flate/huffman_code.go
fn=compress/flate.(*huffmanEncoder).generate
53 1 0 0 0 0 0 1 0 0
54 1 0 0 0 0 0 1 0 0
274 6 1 1 2 0 0 1 0 0
275 3 0 0 2 0 0 0 0 0
279 13 2 2 3 0 0 7 1 0
281 7 1 1 3 0 0 0 0 0
285 213 0 0 31 0 0 0 0 0
286 60 0 0 0 0 0 0 0 0
287 6 1 1 0 0 0 2 0 0
288 2 0 0 0 0 0 0 0 0
290 174 0 0 0 0 0 58 0 0
291 174 1 1 58 0 0 29 2 0
294 5 0 0 0 0 0 2 0 0
296 31 0 0 0 0 0 0 0 0
297 3 0 0 0 0 0 0 0 0
300 9 1 1 1 0 0 0 0 0
302 5 0 0 2 0 0 0 0 0
304 3 0 0 2 0 0 0 0 0
fn=compress/flate.generateFixedLiteralEncoding
60 16 2 2 4 0 0 10 0 0
64 6 1 1 2 0 0 1 0 0
65 1 0 0 0 0 0 0 0 0
66 2 0 0 1 0 0 0 0 0
68 861 0 0 0 0 0 0 0 0
72 572 0 0 0 0 0 0 0 0
74 288 0 0 0 0 0 0 0 0
77 284 1 1 0 0 0 0 0 0
79 224 0 0 0 0 0 0 0 0
81 112 0 0 0 0 0 0 0 0
82 60 0 0 0 0 0 0 0 0
84 48 0 0 0 0 0 0 0 0
86 24 0 0 0 0 0 0 0 0
89 12 0 0 0 0 0 0 0 0
90 6 0 0 0 0 0 0 0 0
92 2002 0 0 0 0 0 572 0 0
94 4 0 0 2 0 0 1 0 0
348 2002 1 1 0 0 0 0 0 0
fn=compress/flate.generateFixedOffsetEncoding
60 16 1 1 4 0 0 10 0 0
97 6 2 2 2 0 0 1 0 0
98 1 0 0 0 0 0 0 0 0
99 2 0 0 1 0 0 0 0 0
100 93 1 1 0 0 0 0 0 0
101 120 0 0 0 0 0 60 2 0
103 4 1 1 2 0 0 1 0 0
348 60 0 0 0 0 0 0 0 0
fn=compress/flate.init
106 11 1 1 4 0 0 3 1 0
107 8 1 1 4 0 0 2 0 0
fn=compress/flate.init.0
60 17 2 2 4 0 0 10 0 0
fl=.//usr/lib/golang/src/compress/gzip/gunzip.go
fn=compress/gzip.init
32 16 2 2 5 0 0 6 1 0
34 10 1 1 3 0 0 5 0 0
37 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/context/context.go
fn=context.init
157 16 2 2 5 0 0 6 1 1
200 7 1 1 2 0 0 3 0 0
201 7 0 0 2 0 0 3 0 0
333 11 1 1 4 0 0 4 0 0
fn=context.init.0
335 6 1 1 2 0 0 1 0 0
336 3 0 0 1 0 0 2 0 0
337 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/encoding/binary/varint.go
fn=encoding/binary.init
103 19 2 2 7 0 0 6 0 0
fl=.//usr/lib/golang/src/encoding/csv/reader.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.LoadData
171 30 3 3 4 0 0 16 1 1
173 2 0 0 0 0 0 0 0 0
fn=encoding/csv.(*Reader).ReadAll
200 20 4 4 4 0 0 2 0 0
201 2 0 0 0 0 0 0 0 0
202 15400032 66 35 6600012 566 35 7700018 516 21
203 2200018 0 0 1100006 516 17 8 0 0
204 22 2 2 10 0 0 8 0 0
206 2200000 0 0 0 0 0 0 0 0
209 21362363 499 120 4400504 105 29 6600438 412913 382910
fn=encoding/csv.(*Reader).readLine
217 7700014 231 57 2200004 0 0 1100002 0 0
218 11000030 583 53 7700014 0 0 3300016 102 28
219 3300020 2 2 1100006 514 36 8 0 0
227 13200020 88 60 1100006 71 20 0 0 0
234 2200004 2 2 2200004 223 15 0 0 0
236 11000008 66 38 1100000 0 0 0 0 0
240 14300024 0 0 2200008 0 0 5500010 66 18
fn=encoding/csv.(*Reader).readRecord
96 11000020 66 32 0 0 0 0 0 0
245 13200000 0 0 3300000 0 0 0 0 0
253 500000 0 0 100000 0 0 400000 0 0
257 7700014 199 66 2200004 82 21 1100002 0 0
258 12100022 86 34 3300006 52 14 0 0 0
265 2200004 13 11 0 0 0 0 0 0
266 7700014 18 7 5500010 0 0 2200004 50 13
267 6600012 0 0 2200004 16 5 0 0 0
271 4400004 58 30 0 0 0 0 0 0
278 2200022 2 2 1100006 0 0 12 0 0
279 20 4 4 8 0 0 8 0 0
285 3300000 32 19 1100000 0 0 1100000 320 27
286 2200000 0 0 1100000 0 0 1100000 0 0
287 1100000 0 0 0 0 0 1100000 69 20
288 1100000 0 0 0 0 0 1100000 0 0
289 1100000 0 0 0 0 0 0 0 0
291 9500000 0 0 5900000 0 0 0 0 0
292 7500000 9 6 0 0 0 0 0 0
294 26400000 55 40 4600000 0 0 10200000 615 52
296 29500000 39 21 6800000 0 0 20400000 1 0
298 19200000 37 23 6800000 0 0 0 0 0
299 6900000 0 0 2300000 1 0 0 0 0
301 5500000 0 0 1100000 0 0 0 0 0
304 10200000 44 22 6800000 2 0 0 0 0
305 14700000 0 0 0 0 0 3400000 1 0
311 89825860 170 78 37400020 189 5 34000035 0 0
312 31075405 4 4 10200042 473 32 6800056 62 20
313 3400000 0 0 0 0 0 0 0 0
314 38100000 39 22 15000000 1 0 0 0 0
315 4500000 0 0 0 0 0 0 0 0
320 700000 15 6 0 0 0 0 0 0
321 100000 0 0 0 0 0 0 0 0
322 300000 28 7 0 0 0 300000 0 0
323 200000 18 7 0 0 0 0 0 0
325 3014088 65 23 1100004 0 0 1100007 0 0
326 1700000 165 15 400000 0 0 300000 0 0
327 100000 0 0 0 0 0 0 0 0
328 200000 0 0 0 0 0 0 0 0
332 300000 39 7 200000 0 0 0 0 0
334 1300000 18 11 400000 0 0 0 0 0
335 1000000 12 7 400000 0 0 200000 0 0
336 100000 0 0 0 0 0 0 0 0
364 28500006 128 35 7200000 0 0 10800006 65 18
365 2400000 0 0 2400000 0 0 0 0 0
374 5500000 3 2 1100000 174 8 2200000 0 0
375 21200000 174 60 7000000 0 0 9400000 271 13
380 13689353 65 42 5500000 0 0 7700000 0 0
382 5500000 34 21 3300000 367 24 1100000 0 0
383 7700000 6 2 1100000 0 0 4400000 0 0
385 10389353 35 24 4400000 517 10 1100000 0 0
387 17300000 0 0 3500000 482 11 0 0 0
388 70657412 62 37 5700000 494 13 7000000 389204 286273
393 3300000 32 21 1100000 521 11 0 0 0
394 13199992 33 20 4400000 776 34 2200000 172 8
397 2 0 0 0 0 0 0 0 0
398 4 0 0 0 0 0 2 0 0
400 13400000 50 29 6800000 259 7 5500000 0 0
fn=encoding/csv.init
87 16 3 3 5 0 0 6 1 0
88 10 1 1 3 0 0 5 1 0
89 10 1 1 3 0 0 5 0 0
90 10 1 1 3 0 0 5 0 0
93 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/errors/errors.go
fn=errors.New
58 354 3 1 118 0 0 59 0 0
59 944 3 1 354 0 0 354 13 0
fl=.//usr/lib/golang/src/errors/wrap.go
fn=errors.init
103 24 3 3 10 1 1 8 1 1
fl=.//usr/lib/golang/src/flag/flag.go
fn=flag.(*FlagSet).Bool
112 8 0 0 4 0 0 4 0 0
624 56 1 1 20 0 0 32 0 0
635 24 2 2 8 0 0 4 0 0
636 20 0 0 4 0 0 12 0 0
637 4 0 0 0 0 0 0 0 0
638 20 1 1 12 0 0 4 0 0
fn=flag.(*FlagSet).Duration
264 2 1 1 1 0 0 1 0 0
807 14 0 0 5 0 0 8 0 0
820 6 1 1 2 0 0 1 0 0
821 5 0 0 1 0 0 3 0 0
822 1 0 0 0 0 0 0 0 0
823 5 0 0 3 0 0 1 0 0
fn=flag.(*FlagSet).Int
142 8 0 0 4 0 0 4 0 0
650 56 1 1 20 0 0 32 0 0
661 24 0 0 8 0 0 4 0 0
662 20 1 1 4 0 0 12 0 0
663 4 0 0 0 0 0 0 0 0
664 20 0 0 12 0 0 4 0 0
fn=flag.(*FlagSet).Parse
967 6 1 1 2 0 0 1 0 0
968 2 0 0 1 0 0 1 0 0
969 8 1 1 4 0 0 3 0 0
970 1 0 0 0 0 0 0 0 0
971 11 1 1 7 0 0 4 0 0
972 2 0 0 0 0 0 0 0 0
975 2 0 0 0 0 0 0 0 0
987 5 1 1 2 0 0 1 0 0
fn=flag.(*FlagSet).String
226 72 1 1 36 0 0 24 3 0
754 168 1 1 60 0 0 96 0 0
765 72 2 2 24 0 0 12 0 0
766 60 0 0 12 0 0 36 0 0
767 12 0 0 0 0 0 0 0 0
768 60 0 0 36 0 0 12 0 0
fn=flag.(*FlagSet).Uint
184 2 1 1 1 0 0 1 0 0
702 14 0 0 5 0 0 8 0 0
713 6 1 1 2 0 0 1 0 0
714 5 0 0 1 0 0 3 0 0
715 1 0 0 0 0 0 0 0 0
716 5 0 0 3 0 0 1 0 0
fn=flag.(*FlagSet).Var
839 161 2 2 46 0 0 23 0 0
841 874 3 3 414 6 0 345 23 0
842 207 1 1 69 1 0 115 0 0
843 23 0 0 0 0 0 0 0 0
853 69 0 0 46 0 0 0 0 0
854 7 1 1 3 0 0 2 0 0
856 346 2 2 138 0 0 138 4 0
857 69 0 0 46 0 0 0 0 0
fn=flag.(*FlagSet).parseOne
889 14 1 1 4 0 0 2 0 0
890 14 1 1 8 0 0 1 0 0
891 6 1 1 2 0 0 2 0 0
893 4 0 0 2 1 0 1 0 0
894 4 0 0 1 1 0 0 0 0
898 3 0 0 1 0 0 0 0 0
901 1 1 1 0 0 0 0 0 0
905 11 3 3 0 0 0 2 0 0
906 7 1 1 1 0 0 0 0 0
911 11 0 0 1 0 0 3 0 0
914 31 0 0 0 0 0 0 0 0
915 27 0 0 9 1 0 0 0 0
922 1 0 0 1 0 0 0 0 0
923 15 3 3 3 0 0 7 0 0
924 1 0 0 0 0 0 0 0 0
932 14 1 1 5 0 0 4 0 0
944 10 3 3 5 0 0 1 0 0
947 14 0 0 3 1 0 3 0 0
949 2 0 0 0 0 0 0 0 0
952 19 2 2 6 0 0 8 0 0
956 3 1 1 2 0 0 0 0 0
957 7 2 2 3 0 0 2 0 0
959 16 1 1 6 0 0 6 1 0
960 6 0 0 2 0 0 2 0 0
fn=flag.(*boolValue).String
127 24 2 2 12 0 0 8 0 0
fn=flag.(*durationValue).String
279 17 2 2 8 0 0 5 0 0
fn=flag.(*intValue).String
157 52 1 1 24 0 0 12 0 0
fn=flag.(*stringValue).Set
230 6 2 2 2 0 0 1 0 0
231 7 0 0 4 0 0 2 0 0
232 5 0 0 2 0 0 1 0 0
fn=flag.(*stringValue).String
237 12 1 1 12 0 0 0 0 0
fn=flag.(*uintValue).String
199 18 2 2 8 0 0 6 0 0
fn=flag.NewFlagSet
1027 6 1 1 2 0 0 1 0 0
1028 5 0 0 1 0 0 3 0 0
1029 6 1 1 3 0 0 2 1 0
1030 2 0 0 1 0 0 1 1 0
1032 11 1 1 3 0 0 5 1 0
1033 4 0 0 2 0 0 1 0 0
fn=flag.init
84 16 2 2 5 0 0 6 0 0
88 10 1 1 3 0 0 5 0 0
92 10 1 1 3 0 0 5 0 0
1010 17 1 1 8 2 0 5 1 1
fn=flag.init.0
1012 6 1 1 2 0 0 1 0 0
1017 6 1 1 2 0 0 1 0 0
1018 3 0 0 2 0 0 0 0 0
fn=testing.(*M).Run
992 1 0 0 1 1 0 0 0 0
999 18 1 1 4 1 0 5 0 0
1004 1 0 0 1 0 0 0 0 0
fn=testing.Init
644 33 4 4 6 0 0 21 0 0
670 44 4 4 8 0 0 28 0 0
722 11 1 1 2 0 0 7 0 0
774 132 13 13 22 0 0 77 0 0
830 11 1 1 2 0 0 7 0 0
fn=testing.initBenchmarkFlags
644 11 1 1 2 0 0 7 0 0
774 11 1 1 1 0 0 7 0 0
866 13 2 2 1 0 0 8 0 0
fn=testing.runBenchmarks
992 1 0 0 1 1 0 0 0 0
1004 1 0 0 1 1 0 0 0 0
fn=testing.runTests
992 1 0 0 1 0 0 0 0 0
1004 1 0 0 1 0 0 0 0 0
fl=.//usr/lib/golang/src/fmt/format.go
fn=fmt.(*fmt).fmtFloat
490 21 6 6 6 0 0 3 0 0
492 9 0 0 6 0 0 0 0 0
493 3 0 0 3 0 0 0 0 0
496 6 3 3 0 0 0 3 0 0
497 21 3 3 3 0 0 0 0 0
500 6 0 0 0 0 0 3 0 0
504 9 3 3 6 0 0 0 0 0
505 6 3 3 0 0 0 0 0 0
509 21 3 3 3 0 0 0 0 0
522 9 0 0 3 0 0 0 0 0
568 21 9 9 9 0 0 0 0 0
572 6 3 3 0 0 0 0 0 0
581 36 3 3 0 0 0 15 0 0
582 9 0 0 6 0 0 0 0 0
fn=fmt.(*fmt).fmtInteger
194 64 14 14 24 0 0 8 0 0
195 48 7 7 8 0 0 0 0 0
196 8 0 0 0 0 0 0 0 0
200 24 0 0 16 0 0 0 0 0
203 28 4 4 5 0 0 0 0 0
205 9 0 0 6 0 0 0 0 0
206 9 3 3 0 0 0 0 0 0
216 16 4 4 8 0 0 0 0 0
226 24 7 7 8 0 0 0 0 0
228 8 7 7 0 0 0 0 0 0
236 8 7 7 0 0 0 0 0 0
239 16 0 0 8 0 0 0 0 0
240 24 7 7 0 0 0 0 0 0
241 37 0 0 0 0 0 0 0 0
242 21 0 0 0 0 0 0 0 0
243 21 0 0 0 0 0 0 0 0
244 49 6 6 0 0 0 7 1 1
253 8 0 0 0 0 0 0 0 0
268 8 0 0 0 0 0 0 0 0
269 64 15 14 24 7 7 8 0 0
270 56 0 0 0 0 0 0 0 0
276 24 7 7 8 0 0 0 0 0
297 32 7 7 8 0 0 0 0 0
304 8 0 0 0 0 0 0 0 0
307 16 8 7 8 0 0 0 0 0
310 24 0 0 8 0 0 0 0 0
311 16 7 7 0 0 0 0 0 0
317 16 7 7 8 0 0 8 0 0
318 8 0 0 0 0 0 8 0 0
319 112 0 0 0 0 0 40 0 0
320 24 0 0 16 0 0 8 0 0
321 24 0 0 16 0 0 0 0 0
fn=fmt.(*fmt).fmtS
357 138 18 16 46 0 0 23 0 0
358 207 0 0 115 0 0 92 0 0
359 115 9 8 23 0 0 92 0 0
360 69 0 0 46 0 0 0 0 0
fn=fmt.(*fmt).pad
90 66 14 14 22 0 0 11 0 0
91 45 0 0 28 0 0 0 0 0
92 10 0 0 5 0 0 5 0 0
93 15 0 0 10 0 0 0 0 0
95 60 9 6 36 0 0 24 3 0
96 12 0 0 6 0 0 0 0 0
98 18 6 3 0 0 0 18 0 0
99 18 6 3 12 0 0 6 0 0
103 18 3 3 12 0 0 0 0 0
fn=fmt.(*fmt).padString
108 138 20 14 46 0 0 23 0 0
109 75 0 0 49 0 0 0 0 0
110 40 0 0 20 0 0 20 0 0
111 60 0 0 40 0 0 0 0 0
113 27 3 3 15 0 0 12 0 0
114 6 0 0 3 0 0 0 0 0
120 6 3 3 3 0 0 3 0 0
121 24 3 3 12 0 0 9 0 0
fn=fmt.(*fmt).truncateString
324 138 10 8 46 0 0 23 0 0
325 92 0 0 46 0 0 0 0 0
334 161 10 8 92 0 0 46 0 0
fn=fmt.(*fmt).writePadding
64 54 12 12 18 0 0 9 0 0
65 27 0 0 9 0 0 0 0 0
68 57 0 0 45 1 1 3 0 0
70 12 3 3 0 0 0 3 0 0
72 18 0 0 0 0 0 0 0 0
73 27 6 6 3 0 0 18 0 0
74 48 0 0 15 0 0 12 0 0
78 33 0 0 12 0 0 0 0 0
82 108 6 6 12 0 0 0 0 0
83 159 0 0 3 0 0 0 0 0
84 43 0 0 0 0 0 43 2 1
86 63 6 3 18 3 0 27 0 0
87 27 0 0 18 0 0 0 0 0
fn=fmt.(*pp).doPrintf
55 60 0 0 0 0 0 60 0 0
fn=fmt.newPrinter
55 46 0 0 0 0 0 46 2 2
59 69 9 8 23 0 0 23 5 3
60 23 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/fmt/print.go
fn=fmt.(*fmt).pad
78 320 23 17 122 0 0 131 0 0
fn=fmt.(*fmt).padString
82 653 30 24 254 1 1 272 2 0
fn=fmt.(*pp).argNumber
953 126 6 6 42 0 0 21 0 0
954 210 6 6 84 0 0 0 0 0
955 147 0 0 63 0 0 63 0 0
fn=fmt.(*pp).doPrintf
82 470 22 19 164 0 0 208 0 0
86 66 13 8 47 0 0 0 0 0
978 133 18 16 38 0 0 19 0 0
982 38 0 0 19 0 0 19 0 0
983 95 0 0 38 0 0 0 0 0
984 349 9 8 108 0 0 0 0 0
985 74 9 8 9 0 0 35 1 0
987 611 27 24 105 15 14 18 0 0
988 60 0 0 0 0 0 0 0 0
990 70 0 0 0 0 0 0 0 0
991 188 3 3 0 0 0 8 0 0
993 35 0 0 0 0 0 0 0 0
999 48 0 0 0 0 0 0 0 0
1002 30 0 0 0 0 0 0 0 0
1004 108 9 8 18 0 0 21 0 0
1005 84 0 0 51 0 0 0 0 0
1006 33 0 0 0 0 0 0 0 0
1007 33 0 0 0 0 0 0 0 0
1009 60 0 0 0 0 0 0 0 0
1011 66 9 8 0 0 0 0 0 0
1013 66 0 0 0 0 0 0 0 0
1014 3 0 0 0 0 0 3 0 0
1015 6 0 0 0 0 0 3 0 0
1021 195 10 8 21 0 0 0 0 0
1022 63 0 0 0 0 0 0 0 0
1030 210 9 8 63 0 0 105 0 0
1031 42 0 0 21 0 0 0 0 0
1032 42 0 0 21 0 0 0 0 0
1041 132 15 15 42 0 0 84 0 0
1044 72 0 0 27 0 0 0 0 0
1045 9 0 0 3 0 0 0 0 0
1046 45 3 3 21 0 0 21 0 0
1048 3 0 0 0 0 0 0 0 0
1054 9 3 3 3 0 0 0 0 0
1061 72 3 3 24 0 0 42 0 0
1062 12 3 3 0 0 0 0 0 0
1068 81 6 6 21 0 0 0 0 0
1070 6 0 0 0 0 0 0 0 0
1073 39 3 3 12 0 0 27 0 0
1074 24 3 3 9 0 0 0 0 0
1087 36 3 3 12 0 0 21 0 0
1088 3 0 0 0 0 0 0 0 0
1095 21 3 3 3 0 0 0 0 0
1096 99 12 12 27 0 0 63 0 0
1099 30 0 0 12 0 0 0 0 0
1104 36 3 3 24 0 0 0 0 0
1105 27 0 0 0 0 0 0 0 0
1108 18 6 6 0 0 0 9 0 0
1111 18 0 0 0 0 0 0 0 0
1113 18 6 6 9 0 0 0 0 0
1115 36 12 12 9 0 0 0 0 0
1117 18 0 0 0 0 0 0 0 0
1125 9 0 0 0 0 0 0 0 0
1126 90 6 6 27 0 0 45 0 0
1127 27 0 0 9 0 0 0 0 0
1134 95 18 16 38 0 0 0 0 0
1137 113 0 0 27 0 0 44 0 0
fn=fmt.(*pp).doPrintln
86 32 0 0 8 0 0 8 0 0
1168 24 4 3 8 0 0 4 0 0
1169 60 8 6 24 0 0 8 0 0
1170 12 0 0 0 0 0 0 0 0
1173 24 6 4 4 0 0 20 0 0
1175 20 0 0 16 0 0 0 0 0
fn=fmt.(*pp).fmtFloat
405 18 6 6 6 0 0 3 0 0
406 9 3 3 3 0 0 0 0 0
409 9 0 0 0 0 0 0 0 0
411 12 0 0 0 0 0 0 0 0
412 42 3 3 15 0 0 18 0 0
fn=fmt.(*pp).fmtInteger
370 48 14 14 16 0 0 8 0 0
371 24 7 7 8 0 0 0 0 0
378 16 0 0 0 0 0 0 0 0
379 120 7 7 24 0 0 64 0 0
382 8 0 0 0 0 0 0 0 0
383 24 7 7 16 0 0 0 0 0
388 8 0 0 0 0 0 0 0 0
fn=fmt.(*pp).fmtString
441 138 10 8 46 0 0 23 0 0
442 46 0 0 23 0 0 0 0 0
443 8 0 0 0 0 0 0 0 0
444 12 0 0 8 0 0 0 0 0
447 32 3 3 8 0 0 16 0 0
449 46 9 8 0 0 0 0 0 0
450 190 9 8 57 0 0 76 0 0
455 23 0 0 0 0 0 0 0 0
458 69 10 8 46 0 0 0 0 0
fn=fmt.(*pp).free
146 138 21 16 46 0 0 23 0 0
153 69 0 0 46 0 0 0 0 0
157 23 0 0 0 0 0 23 0 0
158 92 0 0 23 2 0 46 0 0
159 115 8 8 23 0 0 46 0 0
160 92 0 0 23 0 0 46 1 0
161 138 8 8 0 0 0 92 0 0
162 69 0 0 46 0 0 0 0 0
fn=fmt.(*pp).printArg
638 238 20 16 68 0 0 34 0 0
639 272 13 8 136 0 0 68 3 1
640 170 0 0 34 0 0 68 0 0
642 102 10 8 0 0 0 0 0 0
655 102 13 8 34 0 0 0 0 0
658 68 10 8 0 0 0 0 0 0
664 753 91 72 159 22 18 0 0 0
670 15 3 3 0 0 0 15 0 0
676 40 7 7 0 0 0 40 0 0
698 115 0 0 0 0 0 115 0 0
fn=fmt.Fprintf
202 66 13 12 22 0 0 11 0 0
203 33 0 0 11 0 0 22 0 0
204 121 6 6 55 0 0 66 0 0
205 198 9 6 110 7 6 88 0 0
206 33 0 0 11 0 0 22 0 0
207 99 9 4 55 0 0 33 0 0
fn=fmt.Fprintln
262 24 8 6 8 0 0 4 0 0
263 12 0 0 4 0 0 8 0 0
264 28 0 0 12 0 0 16 0 0
265 72 7 6 40 4 3 32 0 0
266 12 0 0 4 0 0 8 0 0
267 36 4 3 20 0 0 12 0 0
fn=fmt.Sprintf
217 48 12 11 16 0 0 8 0 0
218 24 0 0 8 0 0 16 0 0
219 88 7 7 40 0 0 48 0 0
220 104 7 7 48 0 0 56 0 0
221 24 0 0 8 0 0 16 0 0
222 56 7 7 32 0 0 16 0 0
fn=fmt.glob..func1
132 80 10 10 25 0 0 25 0 0
fn=fmt.intFromArg
302 9 3 3 0 0 0 0 0 0
893 18 3 3 6 0 0 3 0 0
895 12 3 3 6 0 0 0 0 0
896 30 0 0 12 0 0 0 0 0
897 6 0 0 0 0 0 0 0 0
916 3 0 0 0 0 0 0 0 0
917 6 0 0 0 0 0 0 0 0
922 21 0 0 6 0 0 9 0 0
fn=fmt.newPrinter
136 138 26 16 46 0 0 23 0 0
137 184 1 0 46 0 0 46 1 1
138 23 0 0 0 0 0 23 5 3
140 23 0 0 0 0 0 23 0 0
141 23 0 0 0 0 0 0 0 0
142 92 0 0 46 0 0 23 0 0
fn=fmt.parsenum
302 36 0 0 0 0 0 0 0 0
306 27 3 3 0 0 0 9 0 0
307 36 3 3 18 0 0 0 0 0
310 246 3 3 39 3 3 0 0 0
311 12 0 0 0 0 0 0 0 0
314 60 0 0 0 0 0 0 0 0
317 54 3 3 18 0 0 27 0 0
fn=testing.(*M).Run
274 9 0 0 1 1 1 6 0 0
fl=.//usr/lib/golang/src/fmt/scan.go
fn=fmt.init
465 16 2 2 5 0 0 6 1 0
466 13 1 1 5 0 0 5 1 1
fl=.//usr/lib/golang/src/hash/crc32/crc32.go
fn=hash/crc32.init
99 15 2 2 6 0 0 4 0 0
fl=.//usr/lib/golang/src/hash/crc32/crc32_generic.go
fn=hash/crc32.simpleMakeTable
18 6 1 1 2 0 0 1 0 0
19 5 1 1 1 0 0 3 0 0
20 3 0 0 1 0 0 2 0 0
21 5 0 0 3 0 0 1 0 0
fn=hash/crc32.simplePopulateTable
27 1285 1 1 1 0 0 0 0 0
29 6912 0 0 0 0 0 0 0 0
30 4096 0 0 0 0 0 0 0 0
31 3072 0 0 0 0 0 0 0 0
33 2048 0 0 0 0 0 0 0 0
36 768 0 0 256 0 0 256 0 0
fl=.//usr/lib/golang/src/internal/bytealg/count_amd64.s
fn=countbody
37 7 0 0 0 0 0 0 0 0
38 7 0 0 0 0 0 0 0 0
39 7 0 0 0 0 0 0 0 0
40 7 0 0 0 0 0 0 0 0
42 7 0 0 0 0 0 0 0 0
43 7 0 0 0 0 0 0 0 0
45 5 0 0 0 0 0 0 0 0
47 5 0 0 0 0 0 0 0 0
49 5 0 0 0 0 0 0 0 0
50 5 0 0 0 0 0 0 0 0
52 5 5 4 0 0 0 0 0 0
53 5 0 0 0 0 0 0 0 0
57 6 0 0 6 2 1 0 0 0
59 6 0 0 0 0 0 0 0 0
61 6 0 0 0 0 0 0 0 0
63 6 0 0 0 0 0 0 0 0
65 6 0 0 0 0 0 0 0 0
67 6 0 0 0 0 0 0 0 0
69 11 0 0 0 0 0 0 0 0
70 11 0 0 0 0 0 0 0 0
73 5 0 0 0 0 0 0 0 0
74 5 0 0 0 0 0 0 0 0
78 2 0 0 0 0 0 0 0 0
79 2 0 0 0 0 0 0 0 0
80 2 0 0 0 0 0 0 0 0
81 2 0 0 0 0 0 0 0 0
82 2 0 0 0 0 0 0 0 0
86 2 0 0 2 0 0 0 0 0
87 2 2 2 0 0 0 0 0 0
88 2 0 0 0 0 0 0 0 0
90 2 0 0 0 0 0 0 0 0
91 2 0 0 0 0 0 0 0 0
92 2 0 0 0 0 0 0 0 0
94 5 3 1 0 0 0 5 0 0
95 5 0 0 5 0 0 0 0 0
99 2 2 1 0 0 0 0 0 0
100 2 0 0 0 0 0 0 0 0
103 1 0 0 0 0 0 0 0 0
104 1 0 0 0 0 0 0 0 0
105 1 0 0 0 0 0 0 0 0
109 1 0 0 0 0 0 0 0 0
110 1 0 0 0 0 0 0 0 0
111 1 0 0 0 0 0 0 0 0
112 1 0 0 0 0 0 0 0 0
115 1 0 0 1 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
119 1 1 0 0 0 0 0 0 0
121 1 0 0 0 0 0 0 0 0
122 1 0 0 0 0 0 0 0 0
125 1 0 0 0 0 0 1 0 0
126 1 0 0 1 0 0 0 0 0
128 1 1 1 0 0 0 1 0 0
129 1 0 0 1 0 0 0 0 0
fn=internal/bytealg.CountString
1 7 0 0 0 0 0 0 0 0
19 7 7 4 7 3 1 0 0 0
20 7 0 0 0 0 0 0 0 0
22 7 0 0 7 0 0 0 0 0
23 7 0 0 7 0 0 0 0 0
24 7 0 0 7 0 0 0 0 0
25 7 7 4 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/bytealg/equal_amd64.s
fn=memeqbody
39 127 19 11 0 0 0 0 0 0
40 127 0 0 0 0 0 0 0 0
41 111 0 0 0 0 0 0 0 0
42 111 18 11 0 0 0 0 0 0
100 112 17 11 0 0 0 0 0 0
101 112 18 11 0 0 0 0 0 0
102 10 0 0 10 0 0 0 0 0
103 10 0 0 10 3 3 0 0 0
104 10 0 0 0 0 0 0 0 0
105 10 0 0 0 0 0 0 0 0
106 10 0 0 0 0 0 0 0 0
107 10 0 0 0 0 0 0 0 0
108 10 0 0 0 0 0 0 0 0
109 9 0 0 0 0 0 9 0 0
110 9 0 0 9 0 0 0 0 0
114 102 0 0 102 0 0 0 0 0
115 102 0 0 102 32 11 0 0 0
116 102 0 0 0 0 0 0 0 0
117 102 0 0 0 0 0 102 0 0
118 102 0 0 102 0 0 0 0 0
121 16 2 0 0 0 0 0 0 0
122 16 0 0 0 0 0 0 0 0
124 16 0 0 0 0 0 0 0 0
125 16 0 0 0 0 0 0 0 0
127 16 3 2 0 0 0 0 0 0
128 16 0 0 0 0 0 0 0 0
131 16 0 0 16 0 0 0 0 0
132 16 0 0 0 0 0 0 0 0
140 16 0 0 0 0 0 0 0 0
141 16 0 0 0 0 0 0 0 0
142 16 0 0 16 2 2 0 0 0
143 16 0 0 0 0 0 0 0 0
149 16 0 0 0 0 0 0 0 0
150 16 0 0 0 0 0 0 0 0
152 16 0 0 0 0 0 16 0 0
fn=runtime.memequal
1 5 0 0 5 0 0 0 0 0
10 132 19 11 132 0 0 0 0 0
11 132 0 0 132 0 0 0 0 0
12 132 0 0 0 0 0 0 0 0
13 132 0 0 0 0 0 0 0 0
14 127 0 0 127 0 0 0 0 0
15 127 0 0 0 0 0 0 0 0
16 127 0 0 0 0 0 0 0 0
18 5 0 0 0 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/bytealg/index_amd64.go
fn=internal/bytealg.init.0
12 2 1 1 1 0 0 0 0 0
13 2 0 0 1 0 0 1 0 0
fl=.//usr/lib/golang/src/internal/bytealg/indexbyte_amd64.s
fn=indexbytebody
30 8011727 68 30 0 0 0 0 0 0
31 8011727 0 0 0 0 0 0 0 0
32 8011727 0 0 0 0 0 0 0 0
33 8011727 0 0 0 0 0 0 0 0
35 8011727 0 0 0 0 0 0 0 0
36 8011727 0 0 0 0 0 0 0 0
38 4515088 0 0 0 0 0 0 0 0
40 4515088 0 0 0 0 0 0 0 0
41 4515088 0 0 0 0 0 0 0 0
43 2017495 0 0 0 0 0 0 0 0
44 2017495 0 0 0 0 0 0 0 0
48 2013351 0 0 2013351 68 64 0 0 0
50 2013351 0 0 0 0 0 0 0 0
52 2013351 0 0 0 0 0 0 0 0
54 2013351 0 0 0 0 0 0 0 0
55 2013351 0 0 0 0 0 0 0 0
57 2013177 0 0 0 0 0 0 0 0
59 4030672 6 4 0 0 0 0 0 0
60 4030672 0 0 0 0 0 0 0 0
64 2017321 0 0 0 0 0 0 0 0
65 2017321 0 0 2017321 0 0 0 0 0
66 2017321 0 0 0 0 0 0 0 0
67 2017321 0 0 0 0 0 0 0 0
68 2017321 0 0 0 0 0 0 0 0
69 2017321 0 0 0 0 0 0 0 0
72 4510754 0 0 0 0 0 4510754 0 0
73 4510754 0 0 4510754 0 0 0 0 0
80 1003380 0 0 0 0 0 0 0 0
81 1003380 0 0 0 0 0 0 0 0
82 1003380 0 0 0 0 0 1003380 1 0
83 1003380 0 0 1003380 0 0 0 0 0
87 3496639 52 25 0 0 0 0 0 0
88 3496639 0 0 0 0 0 0 0 0
91 3496610 0 0 0 0 0 0 0 0
92 3496610 0 0 0 0 0 0 0 0
93 3496610 0 0 0 0 0 0 0 0
95 3491630 0 0 3491630 1520 19 0 0 0
96 3491630 0 0 0 0 0 0 0 0
97 3491630 0 0 0 0 0 0 0 0
98 3491630 0 0 0 0 0 0 0 0
99 3491630 0 0 0 0 0 0 0 0
100 1239676 0 0 0 0 0 0 0 0
101 1239676 0 0 0 0 0 0 0 0
106 4980 0 0 4980 0 0 0 0 0
107 4980 0 0 0 0 0 0 0 0
108 4980 0 0 0 0 0 0 0 0
109 4980 0 0 0 0 0 0 0 0
110 4980 0 0 0 0 0 0 0 0
111 4980 0 0 0 0 0 0 0 0
112 4980 0 0 0 0 0 0 0 0
113 4980 0 0 0 0 0 0 0 0
118 2497657 57 31 2497657 489 31 0 0 0
119 2497657 0 0 0 0 0 0 0 0
120 2497593 60 31 0 0 0 0 0 0
121 2497593 0 0 0 0 0 0 0 0
122 2497593 0 0 0 0 0 0 0 0
124 3613137 0 0 3613137 176190 3076 0 0 0
125 3613137 0 0 0 0 0 0 0 0
126 3613137 0 0 0 0 0 0 0 0
127 3613137 0 0 0 0 0 0 0 0
128 1177971 0 0 0 0 0 0 0 0
129 1177971 0 0 0 0 0 0 0 0
130 1177971 0 0 0 0 0 0 0 0
131 62427 0 0 0 0 0 0 0 0
132 62427 0 0 62427 2 0 0 0 0
133 62427 0 0 0 0 0 0 0 0
134 62427 0 0 0 0 0 0 0 0
135 62427 0 0 0 0 0 0 0 0
136 800 0 0 0 0 0 0 0 0
137 800 0 0 0 0 0 800 0 0
138 800 0 0 800 0 0 0 0 0
141 2496793 56 33 0 0 0 0 0 0
142 2496793 0 0 0 0 0 0 0 0
143 2496793 0 0 0 0 0 0 0 0
144 2496793 0 0 0 0 0 0 0 0
145 2496793 0 0 0 0 0 2496793 0 0
146 2496793 0 0 0 0 0 0 0 0
fn=internal/bytealg.IndexByte
1 8011552 0 0 0 0 0 0 0 0
9 8011552 26 17 8011552 0 0 0 0 0
10 8011552 0 0 8011552 0 0 0 0 0
11 8011552 0 0 8011552 0 0 0 0 0
12 8011552 0 0 0 0 0 0 0 0
fn=internal/bytealg.IndexByteString
1 175 0 0 0 0 0 0 0 0
16 175 20 9 175 0 0 0 0 0
17 175 0 0 175 0 0 0 0 0
18 175 0 0 175 0 0 0 0 0
19 175 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu.go
fn=internal/cpu.Initialize
141 6 1 1 2 0 0 1 0 0
142 1 0 0 0 0 0 1 0 0
143 5 0 0 2 0 0 3 0 0
144 3 0 0 2 0 0 0 0 0
fn=internal/cpu.processOptions
167 7 1 1 2 0 0 1 0 0
169 4 1 1 2 0 0 0 0 0
217 189 3 3 64 0 0 61 0 0
218 30 0 0 15 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu_x86.go
fn=internal/cpu.doinit
41 6 1 1 2 0 0 1 0 0
42 5 1 1 1 0 0 3 1 1
43 5 0 0 2 0 0 1 0 0
44 2 0 0 0 0 0 1 0 0
45 2 1 1 0 0 0 1 0 0
46 2 0 0 0 0 0 1 0 0
47 2 0 0 0 0 0 1 0 0
48 2 0 0 0 0 0 1 0 0
49 2 0 0 0 0 0 1 0 0
50 2 1 1 0 0 0 1 0 0
51 2 0 0 0 0 0 1 0 0
52 2 0 0 0 0 0 1 0 0
53 2 0 0 0 0 0 1 0 0
54 2 1 1 0 0 0 1 0 0
55 2 0 0 0 0 0 1 0 0
56 2 0 0 0 0 0 1 0 0
59 12 1 1 2 0 0 6 0 0
62 4 0 0 1 0 0 3 0 0
64 2 0 0 0 0 0 0 0 0
68 5 2 2 2 0 0 3 0 0
69 2 0 0 0 0 0 1 0 0
71 2 0 0 0 0 0 1 0 0
72 2 0 0 0 0 0 1 0 0
73 2 0 0 0 0 0 1 0 0
74 2 1 1 0 0 0 1 0 0
75 2 0 0 0 0 0 1 0 0
76 2 0 0 0 0 0 1 0 0
77 2 0 0 0 0 0 1 0 0
78 2 0 0 0 0 0 1 0 0
79 1 0 0 0 0 0 1 0 0
83 1 0 0 0 0 0 0 0 0
84 2 0 0 1 0 0 1 0 0
86 2 0 0 0 0 0 0 0 0
89 2 0 0 0 0 0 1 0 0
91 3 0 0 1 0 0 0 0 0
95 3 0 0 1 0 0 2 0 0
96 2 1 1 0 0 0 1 0 0
97 5 0 0 1 0 0 2 0 0
98 2 0 0 0 0 0 1 0 0
99 2 0 0 0 0 0 1 0 0
100 2 0 0 0 0 0 1 0 0
101 3 0 0 2 0 0 0 0 0
104 10 1 1 1 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/cpu/cpu_x86.s
fn=internal/cpu.cpuid
1 3 0 0 3 0 0 0 0 0
11 3 1 1 3 0 0 0 0 0
12 3 0 0 3 0 0 0 0 0
13 3 0 0 0 0 0 0 0 0
14 3 0 0 0 0 0 3 0 0
15 3 1 1 0 0 0 3 0 0
16 3 0 0 0 0 0 3 0 0
17 3 0 0 0 0 0 3 0 0
fn=internal/cpu.xgetbv
22 1 0 0 0 0 0 0 0 0
23 1 0 0 0 0 0 0 0 0
24 1 0 0 0 0 0 1 0 0
25 1 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/internal/oserror/errors.go
fn=internal/oserror.init
13 16 3 3 5 0 0 6 1 1
14 10 1 1 3 0 0 5 1 1
15 10 1 1 3 0 0 5 0 0
16 10 1 1 3 0 0 5 0 0
17 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/poll/errno_unix.go
fn=internal/poll.(*pollDesc).init
22 6 0 0 2 0 0 0 0 0
29 2 0 0 0 0 0 0 0 0
32 8 2 2 2 0 0 4 0 0
fl=.//usr/lib/golang/src/internal/poll/fd.go
fn=internal/poll.init
20 16 3 3 5 0 0 6 0 0
24 10 1 1 3 0 0 5 0 0
28 10 1 1 3 0 0 5 1 0
51 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_mutex.go
fn=internal/poll.(*FD).Read
221 103950 0 0 34650 1482 32 34650 361 23
fn=internal/poll.(*FD).Write
239 81 7 6 27 7 6 27 0 0
fn=internal/poll.(*FD).decref
211 12 2 2 4 0 0 2 0 0
212 12 0 0 6 0 0 4 1 1
213 20 3 3 10 0 0 8 0 0
fn=internal/poll.(*FD).readUnlock
230 69300 65 29 23100 0 0 11550 0 0
231 115500 57 27 57750 15 1 34650 0 0
fn=internal/poll.(*FD).writeUnlock
248 54 7 6 18 0 0 9 0 0
249 90 7 6 45 0 0 27 0 0
fn=internal/poll.(*fdMutex).decref
102 12 4 4 4 0 0 2 0 0
103 2 0 0 2 0 0 0 0 0
104 2 0 0 2 0 0 0 0 0
105 4 0 0 0 0 0 0 0 0
108 2 0 0 0 0 0 0 0 0
109 10 0 0 2 0 0 0 0 0
110 12 2 1 4 0 0 2 0 0
fn=internal/poll.(*fdMutex).increfAndClose
71 12 2 2 4 0 0 2 0 0
72 2 0 0 2 0 0 0 0 0
73 4 0 0 2 0 0 2 0 0
74 4 2 2 0 0 0 0 0 0
78 6 0 0 0 0 0 0 0 0
79 4 0 0 0 0 0 0 0 0
83 4 0 0 0 0 0 0 0 0
84 10 0 0 2 0 0 0 0 0
87 10 2 2 2 0 0 0 0 0
91 6 2 2 0 0 0 0 0 0
95 8 0 0 4 0 0 2 0 0
fn=internal/poll.(*fdMutex).rwlock
117 92472 512 94 34677 0 0 11559 0 0
120 11559 0 0 0 0 0 0 0 0
124 69300 0 0 23100 0 0 0 0 0
129 63 12 12 18 0 0 0 0 0
132 11559 0 0 11559 0 0 0 0 0
133 23118 0 0 0 0 0 0 0 0
137 69354 0 0 0 0 0 11559 0 0
139 34677 0 0 0 0 0 0 0 0
140 23118 0 0 0 0 0 0 0 0
145 11559 0 0 0 0 0 11559 0 0
146 11559 0 0 0 0 0 11559 0 0
150 57795 992 60 11559 0 0 0 0 0
151 11559 0 0 0 0 0 0 0 0
152 46236 393 50 23118 0 0 11559 0 0
154 11559 81 29 0 0 0 11559 0 0
fn=internal/poll.(*fdMutex).rwunlock
162 92472 935 110 34677 0 0 11559 0 0
165 11559 0 0 0 0 0 0 0 0
169 80859 0 0 11550 0 0 0 0 0
174 63 16 12 18 0 0 0 0 0
177 11559 0 0 11559 0 0 0 0 0
178 46236 486 60 0 0 0 0 0 0
182 46236 0 0 0 0 0 0 0 0
183 34677 0 0 0 0 0 0 0 0
184 23118 0 0 0 0 0 0 0 0
186 57795 0 0 11559 0 0 0 0 0
187 11559 0 0 0 0 0 0 0 0
190 69354 87 43 23118 0 0 11559 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_poll_runtime.go
fn=internal/poll.(*FD).Close
61 8 0 0 4 0 0 0 0 0
fn=internal/poll.(*FD).Read
76 69300 66 32 23100 0 0 46200 0 0
fn=internal/poll.(*FD).Write
80 54 6 6 18 0 0 36 0 0
fn=internal/poll.(*FD).destroy
52 4 0 0 0 0 0 0 0 0
fn=internal/poll.(*pollDesc).init
37 12 2 2 4 0 0 2 0 0
38 2 0 0 2 1 1 0 0 0
39 16 4 4 8 0 0 8 0 0
40 4 0 0 0 0 0 0 0 0
41 4 0 0 0 0 0 0 0 0
42 4 0 0 0 0 0 4 0 0
43 8 0 0 2 0 0 4 0 0
45 12 0 0 4 0 0 4 0 0
fn=internal/poll.(*pollDesc).prepare
67 69354 237 53 23118 0 0 11559 0 0
68 46236 0 0 23118 0 0 0 0 0
69 57795 335 52 23118 0 0 11559 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_posix.go
fn=internal/poll.(*FD).Read
17 23110 37 22 4 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/poll/fd_unix.go
fn=internal/poll.(*FD).Close
86 12 2 2 4 0 0 2 0 0
87 12 2 2 6 1 1 4 1 1
100 8 1 1 4 0 0 4 0 0
108 6 0 0 4 1 1 0 0 0
112 10 2 2 4 0 0 4 0 0
fn=internal/poll.(*FD).Init
54 40 3 2 15 0 0 5 0 0
56 30 3 2 15 3 2 0 0 0
57 10 0 0 5 0 0 5 0 0
59 5 0 0 0 0 0 0 0 0
60 3 1 1 0 0 0 3 0 0
61 15 0 0 6 0 0 3 0 0
63 14 0 0 6 0 0 6 0 0
64 4 0 0 0 0 0 0 0 0
67 4 2 1 2 0 0 2 0 0
69 10 0 0 4 0 0 4 0 0
fn=internal/poll.(*FD).Read
145 138600 16048 100 23100 0 0 57750 311 20
146 23100 196 40 0 0 0 0 0 0
149 57750 0 0 11550 0 0 34650 0 0
150 34650 0 0 11550 0 0 0 0 0
158 57750 0 0 11550 611 3 11550 0 0
161 69300 66 35 34650 0 0 0 0 0
165 34650 0 0 11550 0 0 11550 0 0
166 34650 0 0 0 0 0 0 0 0
180 46206 71 48 4 0 0 0 0 0
181 115500 0 0 34650 217 10 69300 14 4
fn=internal/poll.(*FD).Write
254 108 14 12 18 0 0 45 0 0
255 18 0 0 0 0 0 0 0 0
258 45 0 0 9 0 0 27 0 0
259 99 8 6 45 7 6 9 0 0
265 63 7 6 9 0 0 0 0 0
266 9 0 0 0 0 0 9 0 0
268 117 13 12 9 0 0 0 0 0
269 18 0 0 0 0 0 0 0 0
270 18 0 0 9 0 0 0 0 0
272 27 6 6 9 0 0 0 0 0
273 90 8 6 27 0 0 54 0 0
fn=internal/poll.(*FD).destroy
74 12 2 2 4 0 0 2 0 0
77 4 0 0 4 0 0 0 0 0
78 18 3 3 10 2 2 8 1 1
79 4 0 0 2 0 0 2 0 0
80 6 2 2 0 0 0 4 0 0
81 14 0 0 8 0 0 4 1 1
fl=.//usr/lib/golang/src/internal/reflectlite/type.go
fn=internal/reflectlite.(*rtype).Elem
490 2 0 0 1 1 1 0 0 0
547 6 1 1 2 0 0 1 0 0
548 3 1 1 1 0 0 0 0 0
555 2 1 1 0 0 0 0 0 0
558 2 1 1 0 0 0 0 0 0
560 6 1 1 3 1 1 2 0 0
916 3 0 0 0 0 0 0 0 0
fn=internal/reflectlite.TypeOf
664 1 1 1 1 0 0 0 0 0
665 3 0 0 1 0 0 2 0 0
916 3 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/internal/syscall/unix/nonblocking.go
fn=internal/syscall/unix.IsNonblock
15 18 1 1 6 0 0 3 0 0
16 27 1 1 12 1 1 15 0 0
17 6 0 0 0 0 0 0 0 0
20 21 1 1 6 0 0 6 0 0
fl=.//usr/lib/golang/src/internal/testlog/log.go
fn=internal/testlog.Open
43 8 0 0 4 0 0 4 0 0
44 4 2 2 0 0 0 0 0 0
58 15 4 4 6 0 0 2 0 0
59 14 0 0 4 0 0 0 0 0
60 4 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/io/io.go
fn=io.init
28 16 2 2 5 0 0 6 1 1
31 10 1 1 3 0 0 5 0 0
38 10 1 1 3 0 0 5 1 1
42 10 1 1 3 0 0 5 1 1
47 10 1 1 3 0 0 5 0 0
483 10 1 1 3 0 0 5 0 0
484 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/io/pipe.go
fn=io.init
36 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/log/log.go
fn=log.New
65 6 1 1 2 0 0 1 0 0
66 22 2 2 10 0 0 8 0 0
fn=log.init
76 21 3 3 7 1 0 7 0 0
fl=.//usr/lib/golang/src/math/abs.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func1
13 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func2
13 3 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func3
13 3 0 0 0 0 0 0 0 0
fn=testing.prettyPrint
13 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/math/bits.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func1
39 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func2
39 3 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func3
39 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/math/bits/bits.go
fn=compress/flate.generateFixedLiteralEncoding
234 2574 0 0 572 4 4 0 0 0
fn=compress/flate.generateFixedOffsetEncoding
234 210 0 0 60 0 0 0 0 0
fl=.//usr/lib/golang/src/math/exp_asm.go
fn=math.init
11 5 1 1 3 0 0 1 0 0
fl=.//usr/lib/golang/src/math/unsafe.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func1
23 2 2 2 0 0 0 0 0 0
29 2 0 0 0 0 0 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func2
23 3 0 0 0 0 0 0 0 0
29 12 3 3 3 3 3 0 0 0
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.BenchmarkMetrics.func3
23 3 0 0 0 0 0 0 0 0
29 3 0 0 0 0 0 0 0 0
fn=testing.prettyPrint
29 3 3 3 0 0 0 0 0 0
fl=.//usr/lib/golang/src/os/error.go
fn=os.errClosed
32 1 1 1 1 0 0 0 0 0
fn=os.errExist
30 1 1 1 1 0 0 0 0 0
fn=os.errInvalid
28 1 1 1 1 0 0 0 0 0
fn=os.errNoDeadline
33 1 0 0 1 0 0 0 0 0
fn=os.errNotExist
31 1 0 0 1 0 0 0 0 0
fn=os.errPermission
29 1 0 0 1 0 0 0 0 0
fn=os.init
19 13 2 2 5 0 0 4 1 1
21 7 0 0 3 0 0 3 1 1
22 7 1 1 3 0 0 3 0 0
23 7 1 1 3 0 0 3 0 0
24 7 0 0 3 0 0 3 1 0
25 7 1 1 3 0 0 3 0 0
fl=.//usr/lib/golang/src/os/exec_unix.go
fn=os.init
53 10 1 1 3 0 0 5 0 0
fl=.//usr/lib/golang/src/os/executable_procfs.go
fn=os.glob..func1
17 6 1 1 2 0 0 1 0 0
29 15 1 1 6 0 0 7 0 0
fn=os.init
17 12 1 1 6 1 0 4 2 1
30 1 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/os/file.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.LoadData
287 19 2 2 6 0 0 12 1 1
fn=os.(*File).Read
112 69300 578 66 23100 0 0 11550 0 0
113 34650 0 0 11550 0 0 0 0 0
116 11550 0 0 0 0 0 0 0 0
117 69304 0 0 23104 0 0 34650 16 5
340 69314 8026 71 6 0 0 8 0 0
343 2 0 0 2 0 0 0 0 0
fn=os.(*File).Write
149 54 7 6 18 0 0 9 0 0
150 27 0 0 9 0 0 0 0 0
153 9 0 0 0 0 0 0 0 0
154 18 0 0 0 0 0 0 0 0
157 54 0 0 9 0 0 9 0 0
161 9 6 6 0 0 0 0 0 0
163 18 7 6 0 0 0 0 0 0
167 72 7 6 18 0 0 27 0 0
346 9 0 0 9 0 0 0 0 0
fn=os.OpenFile
305 12 2 2 4 0 0 2 1 1
306 10 2 2 4 0 0 6 1 1
307 24 2 2 14 0 0 10 0 0
308 4 0 0 0 0 0 0 0 0
311 8 0 0 4 0 0 2 0 0
313 12 2 1 4 0 0 4 0 0
fn=os.Readlink
330 2 1 1 0 0 0 0 0 0
fn=os.init
63 10 1 1 3 1 0 5 1 1
64 10 1 1 3 1 1 5 1 0
65 10 1 1 3 0 0 5 0 0
170 13 1 1 5 0 0 5 1 0
fl=.//usr/lib/golang/src/os/file_posix.go
fn=os.(*File).Read
175 46200 0 0 0 0 0 0 0 0
fn=os.(*File).Write
175 36 0 0 0 0 0 0 0 0
fn=os.openFileNolog
18 2 0 0 0 0 0 0 0 0
19 4 2 2 0 0 0 0 0 0
20 4 0 0 0 0 0 0 0 0
22 2 0 0 0 0 0 0 0 0
23 4 0 0 0 0 0 0 0 0
25 2 0 0 0 0 0 0 0 0
26 4 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/os/file_unix.go
fn=os.(*File).Read
263 196350 818 44 92400 6582 37 92400 751 47
fn=os.(*File).Write
178 45 7 6 0 0 0 0 0 0
280 144 12 12 72 4 0 63 0 0
fn=os.(*file).close
240 12 4 4 4 0 0 2 0 0
241 6 0 0 2 0 0 0 0 0
248 14 1 1 4 0 0 4 1 1
256 18 4 4 2 1 1 8 0 0
257 18 2 2 8 0 0 8 0 0
fn=os.NewFile
87 18 1 1 6 0 0 3 0 0
89 30 2 2 9 0 0 6 0 0
92 39 0 0 18 0 0 18 0 0
fn=os.Readlink
406 7 2 2 2 0 0 1 0 0
407 1 0 0 0 0 0 0 0 0
408 8 1 1 1 0 0 6 0 0
409 2 0 0 0 0 0 0 0 0
414 1 0 0 0 0 0 0 0 0
417 3 0 0 1 0 0 0 0 0
418 16 1 1 5 0 0 8 0 0
fn=os.newFile
108 30 5 3 10 0 0 5 0 0
110 15 0 0 5 0 0 0 0 0
113 65 3 2 20 0 0 30 1 0
115 10 0 0 5 0 0 5 1 1
117 5 0 0 0 0 0 5 0 0
119 30 3 2 15 1 0 10 1 1
120 38 3 2 5 0 0 10 0 0
123 47 8 5 8 0 0 5 0 0
155 40 0 0 5 0 0 25 0 0
162 3 0 0 0 0 0 0 0 0
170 50 2 1 10 0 0 25 0 0
171 25 0 0 15 0 0 5 0 0
fn=os.openFileNolog
189 12 4 4 4 0 0 2 0 0
200 12 0 0 2 0 0 2 1 1
201 2 2 2 0 0 0 0 0 0
226 28 4 4 10 0 0 14 0 0
fl=.//usr/lib/golang/src/os/proc.go
fn=os.Exit
61 6 2 2 2 0 0 1 0 0
62 3 0 0 1 0 0 0 0 0
65 2 0 0 0 0 0 1 0 0
67 3 0 0 1 0 0 2 0 0
fn=os.init.0
17 6 1 1 2 0 0 1 0 0
22 9 1 1 4 0 0 4 1 1
23 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/os/types.go
fn=os.openFileNolog
105 6 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/path/filepath/match.go
fn=path/filepath.init
17 16 3 3 5 0 0 6 1 0
fl=.//usr/lib/golang/src/path/filepath/path.go
fn=path/filepath.init
336 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/reflect/type.go
fn=reflect.TypeOf
1366 1 1 1 1 0 0 0 0 0
1367 3 0 0 1 0 0 2 0 0
2963 3 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/reflect/value.go
fn=reflect.init
918 24 3 3 8 1 0 5 1 0
fl=.//usr/lib/golang/src/regexp/backtrack.go
fn=regexp.(*Regexp).backtrack
50 47 6 4 12 0 0 12 1 0
51 6 0 0 0 0 0 0 0 0
52 30 5 4 5 0 0 10 0 0
307 42 6 4 12 0 0 6 0 0
308 18 6 4 12 0 0 6 1 0
309 12 0 0 0 0 0 0 0 0
312 24 0 0 6 2 0 0 0 0
317 6 6 4 0 0 0 6 0 0
318 48 0 0 0 0 0 18 0 0
319 48 5 4 18 0 0 30 0 0
322 54 10 8 36 6 0 0 0 0
339 24 5 4 0 0 0 0 0 0
340 12 0 0 6 3 0 0 0 0
350 18 0 0 12 0 0 0 0 0
351 6 5 4 0 0 0 6 0 0
353 72 0 0 18 6 0 42 0 0
364 108 10 8 36 3 0 42 0 0
365 18 5 4 6 0 0 12 0 0
366 54 5 4 30 0 0 18 0 0
fn=regexp.(*Regexp).tryBacktrack
121 66 10 8 30 0 0 0 0 0
122 108 5 4 48 5 2 12 0 0
125 36 5 4 24 0 0 24 0 0
134 78 5 4 24 5 3 0 0 0
135 96 5 4 36 0 0 24 5 2
140 42 5 4 12 0 0 6 0 0
141 30 5 4 24 3 0 6 0 0
143 6 0 0 0 0 0 0 0 0
144 36 5 4 12 0 0 6 0 0
145 6 0 0 0 0 0 0 0 0
147 18 6 4 6 0 0 0 0 0
148 6 0 0 6 0 0 0 0 0
149 6 0 0 6 0 0 0 0 0
150 6 0 0 0 0 0 6 0 0
159 6 0 0 0 0 0 0 0 0
161 18 0 0 0 0 0 0 0 0
166 216 10 8 78 5 3 42 0 0
168 60 6 4 12 0 0 0 0 0
217 12 5 4 0 0 0 0 0 0
226 12 0 0 0 0 0 0 0 0
227 36 0 0 18 5 4 18 0 0
228 24 0 0 0 0 0 0 0 0
231 12 0 0 6 0 0 0 0 0
232 6 0 0 6 0 0 0 0 0
233 6 0 0 0 0 0 0 0 0
235 12 5 4 0 0 0 0 0 0
244 12 5 4 0 0 0 0 0 0
245 24 0 0 6 0 0 12 0 0
259 12 5 4 0 0 0 0 0 0
260 12 0 0 12 0 0 0 0 0
274 24 5 4 12 0 0 0 0 0
275 24 0 0 12 0 0 6 0 0
294 12 0 0 0 0 0 12 0 0
fn=regexp.(*bitState).reset
80 36 6 4 12 0 0 6 0 0
81 18 0 0 12 0 0 6 2 0
83 12 0 0 6 2 0 0 0 0
84 65 10 8 15 0 0 35 0 0
86 1 1 0 0 0 0 1 0 0
89 70 10 8 17 4 3 5 0 0
90 23 0 0 6 0 0 0 0 0
91 70 0 0 20 3 0 35 3 0
93 3 0 0 0 0 0 1 0 0
94 8 0 0 1 0 0 3 0 0
99 30 5 4 13 4 0 0 0 0
102 18 0 0 0 0 0 6 0 0
104 30 5 4 6 0 0 0 0 0
108 18 0 0 6 0 0 0 0 0
111 18 0 0 0 0 0 6 0 0
113 48 5 4 18 0 0 0 0 0
fn=regexp.compile
65 1 0 0 0 0 0 0 0 0
68 5 0 0 0 0 0 0 0 0
74 3 0 0 2 0 0 0 0 0
fn=regexp.freeBitState
57 36 5 4 12 0 0 6 0 0
58 12 0 0 12 0 0 0 0 0
59 36 0 0 0 0 0 24 0 0
60 18 0 0 12 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/exec.go
fn=regexp.(*Regexp).backtrack
62 36 0 0 18 0 0 12 2 0
63 6 0 0 0 0 0 0 0 0
89 18 0 0 6 0 0 0 0 0
92 6 6 4 0 0 0 0 0 0
fn=regexp.(*Regexp).doExecute
521 42 11 8 12 0 0 6 0 0
522 18 0 0 6 0 0 0 0 0
527 54 12 8 30 4 3 0 0 0
531 18 0 0 12 4 3 0 0 0
534 36 11 8 18 4 3 0 0 0
535 156 10 8 60 4 0 90 5 0
547 66 10 8 12 0 0 18 0 0
fn=regexp.freeBitState
76 6 0 0 0 0 0 0 0 0
78 12 5 4 6 0 0 0 0 0
81 30 5 4 6 0 0 12 0 0
fn=testing/internal/testdeps.TestDeps.MatchString
514 84 10 8 18 0 0 60 0 0
fl=.//usr/lib/golang/src/regexp/onepass.go
fn=regexp.compileOnePass
465 6 2 2 2 0 0 1 0 0
466 4 0 0 2 0 0 0 0 0
470 10 0 0 3 0 0 0 0 0
472 4 2 2 2 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/regexp.go
fn=regexp.(*inputString).step
365 36 10 8 12 0 0 6 0 0
366 36 0 0 24 3 0 0 0 0
367 12 0 0 6 3 1 0 0 0
368 12 0 0 0 0 0 0 0 0
369 30 0 0 12 0 0 12 0 0
fn=regexp.compile
169 7 2 2 2 0 0 1 0 0
170 11 1 1 6 0 0 5 0 0
171 2 0 0 0 0 0 0 0 0
174 4 0 0 1 0 0 3 0 0
175 9 1 1 4 0 0 5 0 0
177 5 0 0 2 0 0 3 0 0
178 7 1 1 3 0 0 3 0 0
179 2 0 0 0 0 0 0 0 0
182 2 0 0 1 0 0 1 0 0
183 3 0 0 1 0 0 0 0 0
186 5 0 0 1 0 0 3 0 0
187 6 1 1 3 0 0 2 0 0
188 2 0 0 1 0 0 1 0 0
189 6 1 1 2 0 0 4 0 0
190 2 0 0 1 0 0 1 0 0
191 8 0 0 4 0 0 3 0 0
192 7 2 2 3 0 0 4 0 0
193 2 0 0 1 0 0 1 0 0
194 3 0 0 0 0 0 1 0 0
195 7 0 0 3 0 0 4 0 0
197 1 0 0 1 0 0 0 0 0
198 11 2 2 5 0 0 5 0 0
199 2 1 1 0 0 0 1 0 0
203 5 1 1 2 0 0 0 0 0
210 3 1 1 2 0 0 0 0 0
212 9 0 0 1 1 1 0 0 0
215 1 0 0 0 0 0 1 0 0
217 6 1 1 2 0 0 2 0 0
fn=regexp.init.0
693 1 1 1 0 0 0 0 0 0
694 73 1 1 14 1 0 0 0 0
695 168 0 0 14 0 0 14 0 0
fn=regexp.minInputLen
270 6 1 1 2 0 0 1 0 0
271 4 0 0 2 0 0 0 0 0
274 3 1 1 0 0 0 0 0 0
275 4 1 1 2 0 0 1 0 0
276 2 0 0 0 0 0 0 0 0
fn=testing/internal/testdeps.TestDeps.MatchString
133 8 1 1 3 0 0 5 0 0
507 6 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/compile.go
fn=regexp/syntax.(*compiler).compile
98 7 2 2 2 0 0 1 0 0
99 8 1 1 2 0 0 0 0 0
120 2 0 0 0 0 0 0 0 0
121 17 2 2 8 2 1 8 0 0
fn=regexp/syntax.(*compiler).rune
172 4 0 0 3 0 0 1 0 0
173 46 4 4 13 0 0 17 1 0
266 7 2 2 2 0 0 1 0 0
267 1 0 0 0 0 0 0 0 0
268 9 1 1 5 0 0 0 0 0
269 10 0 0 4 0 0 3 0 0
270 2 0 0 1 0 0 0 0 0
271 5 1 1 0 0 0 0 0 0
275 6 0 0 0 0 0 1 0 0
276 1 0 0 0 0 0 0 0 0
279 1 0 0 0 0 0 0 0 0
280 4 1 1 0 0 0 0 0 0
282 2 0 0 0 0 0 0 0 0
284 9 1 1 4 1 1 0 0 0
285 3 0 0 0 0 0 1 0 0
288 5 0 0 2 0 0 2 0 0
fn=regexp/syntax.Compile
80 7 2 2 2 0 0 1 0 0
81 1 0 0 0 0 0 1 0 0
82 1 0 0 0 0 0 0 0 0
83 9 1 1 3 0 0 5 0 0
84 7 0 0 3 0 0 4 0 0
85 4 0 0 3 0 0 1 0 0
86 7 1 1 3 0 0 2 0 0
90 5 1 1 1 0 0 3 0 0
91 1 0 0 0 0 0 1 1 0
92 1 0 0 0 0 0 0 0 0
172 5 0 0 3 0 0 1 0 0
173 93 8 8 26 0 0 34 1 0
fn=regexp/syntax.patchList.patch
29 3 1 1 0 0 0 1 0 0
30 10 0 0 5 0 0 0 0 0
31 7 1 1 2 0 0 0 0 0
32 2 0 0 0 0 0 0 0 0
33 1 0 0 1 0 0 0 0 0
34 2 0 0 0 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/syntax/parse.go
fn=regexp/syntax.(*parser).alternate
89 1 0 0 1 0 0 0 0 0
317 6 1 1 2 0 0 1 0 0
320 5 0 0 4 0 0 0 0 0
321 9 0 0 2 0 0 0 0 0
324 13 2 2 0 0 0 3 0 0
325 1 0 0 0 0 0 1 0 0
329 4 0 0 1 0 0 0 0 0
330 4 1 1 1 0 0 2 0 0
335 1 0 0 0 0 0 0 0 0
339 18 1 1 7 0 0 10 0 0
fn=regexp/syntax.(*parser).collapse
369 14 1 1 4 0 0 2 0 0
370 6 1 1 2 0 0 0 0 0
371 12 2 2 8 0 0 2 0 0
fn=regexp/syntax.(*parser).concat
297 6 1 1 2 0 0 1 0 0
298 5 0 0 1 0 0 4 0 0
301 5 1 1 4 0 0 0 0 0
302 9 0 0 2 0 0 0 0 0
305 10 1 1 0 0 0 0 0 0
306 1 0 0 0 0 0 1 0 0
309 2 0 0 0 0 0 0 0 0
313 16 2 2 5 0 0 10 0 0
fn=regexp/syntax.(*parser).maybeConcat
152 28 2 2 8 0 0 4 0 0
153 12 0 0 12 0 0 0 0 0
154 8 0 0 0 0 0 0 0 0
155 16 2 2 8 0 0 4 0 0
fn=regexp/syntax.(*parser).op
89 1 0 0 1 0 0 0 0 0
90 2 0 0 0 0 0 0 0 0
94 5 2 2 1 0 0 2 0 0
96 2 1 1 1 0 0 1 0 0
215 6 2 2 2 0 0 1 0 0
216 1 0 0 1 0 0 0 0 0
217 3 0 0 2 0 0 1 0 0
218 8 0 0 3 0 0 4 0 0
fn=regexp/syntax.(*parser).push
108 18 2 2 6 0 0 3 0 0
109 12 0 0 6 0 0 0 0 0
117 18 1 1 0 0 0 0 0 0
119 9 1 1 0 0 0 0 0 0
120 12 2 2 0 0 0 0 0 0
121 18 2 2 3 0 0 0 0 0
123 9 0 0 0 0 0 0 0 0
136 18 1 1 3 0 0 12 0 0
139 63 3 3 24 0 0 14 1 0
140 12 0 0 6 0 0 3 0 0
fn=regexp/syntax.(*parser).swapVerticalBar
1174 6 1 1 2 0 0 1 0 0
1177 4 0 0 3 0 0 1 0 0
1178 2 0 0 0 0 0 0 0 0
1192 2 1 1 0 0 0 0 0 0
1206 4 1 1 2 0 0 1 0 0
fn=regexp/syntax.Parse
701 12 1 1 2 0 0 1 0 0
702 3 1 1 1 0 0 0 0 0
712 5 0 0 1 0 0 3 1 1
718 2 0 0 1 0 0 1 1 0
719 6 1 1 3 0 0 2 0 0
721 12 1 1 1 0 0 2 0 0
724 4 0 0 1 0 0 0 0 0
731 1 1 1 0 0 0 0 0 0
747 2 1 1 0 0 0 0 0 0
753 1 0 0 0 0 0 0 0 0
766 2 0 0 0 0 0 0 0 0
767 3 0 0 1 0 0 0 0 0
770 4 1 1 0 0 0 3 0 0
772 9 0 0 2 0 0 0 0 0
777 3 1 1 0 0 0 0 0 0
788 5 0 0 1 0 0 1 0 0
807 2 0 0 0 0 0 0 0 0
891 2 1 1 0 0 0 2 0 0
892 6 1 1 2 0 0 2 0 0
896 3 1 1 1 0 0 2 0 0
898 3 0 0 3 0 0 0 0 0
899 1 1 1 0 0 0 0 0 0
900 2 0 0 2 0 0 0 0 0
902 7 0 0 3 0 0 2 0 0
fn=regexp/syntax.cleanAlt
343 6 1 1 2 0 0 1 0 0
344 2 0 0 2 0 0 0 0 0
345 4 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/perl_groups.go
fn=regexp/syntax.init
27 119 11 11 39 0 0 58 4 0
28 6 1 1 3 1 1 3 0 0
29 6 1 1 3 0 0 3 0 0
30 6 0 0 3 2 2 3 0 0
31 6 1 1 3 0 0 3 0 0
32 6 1 1 3 0 0 3 0 0
33 6 1 1 3 0 0 3 0 0
105 511 48 48 171 0 0 255 13 1
106 6 1 1 3 1 1 3 0 0
107 6 1 1 3 0 0 3 0 0
108 6 0 0 3 0 0 3 0 0
109 6 0 0 3 0 0 3 0 0
110 6 1 1 3 1 1 3 0 0
111 6 1 1 3 0 0 3 0 0
112 6 0 0 3 0 0 3 0 0
113 6 0 0 3 0 0 3 0 0
114 6 1 1 3 1 1 3 0 0
115 6 1 1 3 0 0 3 0 0
116 6 0 0 3 0 0 3 0 0
117 6 0 0 3 0 0 3 0 0
118 6 1 1 3 1 1 3 0 0
119 6 1 1 3 0 0 3 0 0
120 6 0 0 3 0 0 3 0 0
121 6 0 0 3 0 0 3 0 0
122 6 1 1 3 1 1 3 0 0
123 6 1 1 3 0 0 3 0 0
124 6 0 0 3 0 0 3 0 0
125 6 0 0 3 0 0 3 0 0
126 6 1 1 3 1 1 3 0 0
127 6 1 1 3 0 0 3 0 0
128 6 1 1 3 0 0 3 0 0
129 6 1 1 3 0 0 3 0 0
130 6 0 0 3 0 0 3 0 0
131 6 0 0 3 0 0 3 0 0
132 6 0 0 3 0 0 3 0 0
133 6 1 1 3 0 0 3 0 0
fl=.//usr/lib/golang/src/regexp/syntax/prog.go
fn=regexp/syntax.(*Prog).Prefix
136 1 0 0 1 0 0 0 0 0
138 4 0 0 0 0 0 0 0 0
147 6 2 2 2 0 0 1 0 0
148 6 0 0 3 0 0 3 0 0
151 4 1 1 1 0 0 0 0 0
152 7 1 1 2 0 0 2 0 0
fn=regexp/syntax.(*Prog).StartCond
166 3 1 1 0 0 0 1 0 0
168 2 0 0 2 0 0 0 0 0
169 7 0 0 2 0 0 0 0 0
170 1 0 0 0 0 0 0 0 0
172 3 1 1 1 0 0 0 0 0
175 2 0 0 0 0 0 0 0 0
177 3 1 1 0 0 0 0 0 0
185 4 0 0 2 0 0 1 0 0
fn=regexp/syntax.(*Prog).skipNop
126 3 1 1 0 0 0 1 0 0
127 8 1 1 4 0 0 0 0 0
128 6 0 0 1 0 0 0 0 0
131 4 0 0 2 0 0 1 0 0
fl=.//usr/lib/golang/src/regexp/syntax/regexp.go
fn=regexp/syntax.(*Regexp).CapNames
307 6 1 1 2 0 0 1 0 0
308 13 0 0 3 0 0 8 0 0
309 7 1 1 2 0 0 5 0 0
310 8 0 0 4 0 0 3 0 0
fn=regexp/syntax.(*Regexp).MaxCap
293 12 2 2 4 0 0 2 0 0
295 8 0 0 4 0 0 0 0 0
298 16 1 1 4 0 0 4 0 0
303 10 1 1 4 0 0 2 0 0
fn=regexp/syntax.(*Regexp).capNames
313 6 1 1 2 0 0 1 0 0
314 4 0 0 2 0 0 0 0 0
317 11 2 2 4 0 0 2 0 0
318 2 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/regexp/syntax/simplify.go
fn=regexp/syntax.(*Regexp).Simplify
14 7 2 2 2 0 0 1 0 0
15 3 0 0 1 0 0 0 0 0
18 3 0 0 1 0 0 0 0 0
19 2 0 0 0 0 0 0 0 0
37 3 1 1 0 0 0 0 0 0
116 4 1 1 2 0 0 1 0 0
fl=.//usr/lib/golang/src/runtime/alg.go
fn=runtime.alginit
347 6 1 1 2 0 0 1 0 0
349 1 0 0 0 0 0 0 0 0
350 2 0 0 1 0 0 0 0 0
351 2 1 1 1 0 0 0 0 0
352 1 0 0 1 0 0 0 0 0
353 1 1 1 0 0 0 0 0 0
354 3 0 0 2 0 0 0 0 0
368 1 0 0 0 0 0 1 0 0
370 5 1 1 0 0 0 4 0 0
fn=runtime.ifaceeq
295 600036 6 6 200012 0 0 100006 0 0
296 300018 0 0 100006 0 0 0 0 0
299 100006 0 0 100006 10 4 0 0 0
300 100006 0 0 100006 11 5 0 0 0
301 200012 0 0 0 0 0 0 0 0
304 100006 0 0 0 0 0 0 0 0
306 700042 11 5 400024 0 0 100006 0 0
fn=runtime.mcommoninit
326 60 0 0 12 0 0 36 0 0
fn=runtime.memhash64Fallback
379 4 0 0 4 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/asm_amd64.s
fn=_rt0_amd64
1 1 0 0 0 0 0 0 0 0
15 1 1 1 1 1 1 0 0 0
16 1 0 0 0 0 0 0 0 0
fn=aeshashbody
917 912 1 1 912 0 0 0 0 0
918 912 0 0 0 0 0 0 0 0
919 912 0 0 0 0 0 0 0 0
920 912 7 5 0 0 0 0 0 0
921 912 0 0 912 6 2 0 0 0
922 912 0 0 0 0 0 0 0 0
924 912 0 0 0 0 0 0 0 0
925 912 0 0 0 0 0 0 0 0
926 148 0 0 0 0 0 0 0 0
927 108 0 0 0 0 0 0 0 0
928 108 0 0 0 0 0 0 0 0
929 2 0 0 0 0 0 0 0 0
930 2 0 0 0 0 0 0 0 0
936 764 0 0 0 0 0 0 0 0
937 764 0 0 0 0 0 0 0 0
939 764 2 0 0 0 0 0 0 0
940 764 0 0 0 0 0 0 0 0
941 764 0 0 0 0 0 0 0 0
945 763 0 0 763 88 55 0 0 0
946 763 0 0 0 0 0 0 0 0
947 763 0 0 0 0 0 0 0 0
948 763 0 0 763 17 10 0 0 0
950 804 2 2 0 0 0 0 0 0
951 804 0 0 0 0 0 0 0 0
952 804 0 0 0 0 0 0 0 0
953 804 0 0 0 0 0 0 0 0
954 804 0 0 0 0 0 804 0 0
955 804 0 0 804 0 0 0 0 0
961 1 0 0 1 0 0 0 0 0
962 1 0 0 0 0 0 0 0 0
963 1 0 0 0 0 0 0 0 0
964 1 0 0 1 1 1 0 0 0
965 1 0 0 0 0 0 0 0 0
974 40 2 2 40 6 3 0 0 0
975 40 0 0 0 0 0 0 0 0
979 106 6 3 106 0 0 0 0 0
980 106 0 0 0 0 0 0 0 0
983 106 0 0 106 24 19 0 0 0
984 106 0 0 106 4 3 0 0 0
987 106 0 0 0 0 0 0 0 0
988 106 0 0 0 0 0 0 0 0
991 106 8 5 0 0 0 0 0 0
992 106 0 0 0 0 0 0 0 0
993 106 0 0 0 0 0 0 0 0
994 106 0 0 0 0 0 0 0 0
995 106 0 0 0 0 0 0 0 0
996 106 0 0 0 0 0 0 0 0
999 106 0 0 0 0 0 0 0 0
1000 106 0 0 0 0 0 106 0 0
1001 106 0 0 106 0 0 0 0 0
1005 2 0 0 0 0 0 0 0 0
1006 2 0 0 0 0 0 0 0 0
1007 2 0 0 2 0 0 0 0 0
1008 2 0 0 2 1 0 0 0 0
1009 2 1 1 2 0 0 0 0 0
1010 2 0 0 0 0 0 0 0 0
1011 2 0 0 0 0 0 0 0 0
1012 2 0 0 0 0 0 0 0 0
1014 2 0 0 2 1 1 0 0 0
1015 2 0 0 2 0 0 0 0 0
1016 2 0 0 2 0 0 0 0 0
1017 2 0 0 2 0 0 0 0 0
1019 2 0 0 0 0 0 0 0 0
1020 2 0 0 0 0 0 0 0 0
1021 2 0 0 0 0 0 0 0 0
1022 2 0 0 0 0 0 0 0 0
1024 2 0 0 0 0 0 0 0 0
1025 2 1 1 0 0 0 0 0 0
1026 2 0 0 0 0 0 0 0 0
1027 2 0 0 0 0 0 0 0 0
1029 2 0 0 0 0 0 0 0 0
1030 2 0 0 0 0 0 0 0 0
1031 2 0 0 0 0 0 0 0 0
1032 2 0 0 0 0 0 0 0 0
1034 2 0 0 0 0 0 0 0 0
1035 2 0 0 0 0 0 0 0 0
1036 2 0 0 0 0 0 0 0 0
1037 2 0 0 0 0 0 0 0 0
1039 2 0 0 0 0 0 0 0 0
1040 2 0 0 0 0 0 0 0 0
1041 2 0 0 0 0 0 0 0 0
1042 2 1 1 0 0 0 2 0 0
1043 2 0 0 2 0 0 0 0 0
fn=callRet
1 6 0 0 4 0 0 0 0 0
530 6 2 2 0 0 0 2 0 0
532 2 0 0 0 0 0 2 0 0
533 2 0 0 0 0 0 2 0 0
534 2 0 0 0 0 0 2 0 0
535 2 0 0 0 0 0 2 0 0
536 2 0 0 0 0 0 2 0 0
fn=runtime.asminit
1 6 1 0 6 0 0 0 0 0
fn=runtime.call32
1 112 3 3 86 3 3 70 1 1
539 6 2 2 4 0 0 0 0 0
fn=runtime.checkASM
1 1 0 0 1 0 0 0 0 0
1311 1 1 1 0 0 0 0 0 0
1312 1 0 0 0 0 0 0 0 0
1313 1 0 0 0 0 0 0 0 0
1314 1 0 0 0 0 0 0 0 0
1315 1 0 0 0 0 0 1 0 0
fn=runtime.cputicks
1 6 0 0 6 0 0 0 0 0
875 6 6 1 6 0 0 0 0 0
876 6 0 0 0 0 0 0 0 0
877 6 0 0 0 0 0 0 0 0
878 6 0 0 0 0 0 0 0 0
882 6 6 2 0 0 0 0 0 0
883 6 0 0 0 0 0 0 0 0
884 6 0 0 0 0 0 0 0 0
885 6 0 0 0 0 0 6 0 0
fn=runtime.gcWriteBarrier
1 7615 0 0 0 0 0 0 0 0
1394 5835192 89 34 0 0 0 1945064 7 2
1397 1945064 0 0 0 0 0 1945064 358 23
1398 1945064 0 0 0 0 0 1945064 0 0
1402 1945064 21 20 1945064 9 4 0 0 0
1403 1945064 0 0 1945064 9 4 0 0 0
1404 1945064 0 0 1945064 13 4 0 0 0
1405 1945064 0 0 1945064 1073 51 0 0 0
1407 1945064 0 0 0 0 0 0 0 0
1408 1945064 0 0 0 0 0 1945064 0 0
1409 1945064 0 0 1945064 0 0 0 0 0
1411 1945064 0 0 0 0 0 1945064 961 37
1418 1945064 0 0 1945064 28839 28573 0 0 0
1419 1945064 0 0 0 0 0 1945064 107877 2768
1421 1945064 0 0 0 0 0 0 0 0
1423 1945064 0 0 1945064 0 0 0 0 0
1424 1945064 0 0 1945064 1 0 0 0 0
1426 1945064 0 0 0 0 0 1945064 995 4
1427 5835192 21 19 3890128 807 24 0 0 0
1442 7615 0 0 0 0 0 7615 7 0
1443 7615 0 0 0 0 0 7615 0 0
1444 7615 0 0 0 0 0 7615 1 0
1445 7615 0 0 0 0 0 7615 2 0
1446 7615 0 0 0 0 0 7615 0 0
1448 7615 0 0 0 0 0 7615 1 0
1449 7615 0 0 0 0 0 7615 0 0
1450 7615 0 0 0 0 0 7615 0 0
1451 7615 0 0 0 0 0 7615 0 0
1452 7615 0 0 0 0 0 7615 0 0
1453 7615 0 0 0 0 0 7615 0 0
1454 7615 39 18 0 0 0 7615 0 0
1457 7615 0 0 0 0 0 7615 0 0
1460 7615 0 0 0 0 0 7615 0 0
1462 7615 0 0 7615 698 18 0 0 0
1463 7615 0 0 7615 0 0 0 0 0
1464 7615 0 0 7615 0 0 0 0 0
1465 7615 0 0 7615 0 0 0 0 0
1466 7615 0 0 7615 0 0 0 0 0
1467 7615 0 0 7615 0 0 0 0 0
1468 7615 0 0 0 0 0 0 0 0
1469 7615 0 0 7615 0 0 0 0 0
1470 7615 0 0 7615 918 27 0 0 0
1471 7615 0 0 7615 0 0 0 0 0
1472 7615 46 20 7615 0 0 0 0 0
1473 7615 0 0 7615 0 0 0 0 0
1474 7615 0 0 7615 0 0 0 0 0
fn=runtime.goexit
1374 8 8 7 0 0 0 8 0 0
fn=runtime.gogo
1 263379 0 0 0 0 0 0 0 0
272 790137 70 38 0 0 0 263379 17 11
273 263379 60 33 263379 0 0 0 0 0
274 263379 0 0 263379 109 81 0 0 0
275 263379 0 0 263379 0 0 0 0 0
277 263379 0 0 0 0 0 263379 0 0
278 263379 0 0 263379 0 0 0 0 0
279 263379 0 0 263379 0 0 0 0 0
280 263379 0 0 263379 0 0 0 0 0
281 263379 0 0 263379 0 0 0 0 0
282 263379 0 0 0 0 0 263379 0 0
283 263379 0 0 0 0 0 263379 0 0
284 263379 0 0 0 0 0 263379 0 0
285 263379 70 31 0 0 0 263379 0 0
286 263379 0 0 263379 0 0 0 0 0
fn=runtime.mcall
294 263298 15 9 263298 0 0 0 0 0
297 263298 0 0 263298 0 0 0 0 0
298 263298 0 0 263298 0 0 0 0 0
299 263298 0 0 0 0 0 263298 76 8
300 263298 0 0 0 0 0 0 0 0
301 263298 0 0 0 0 0 263298 0 0
302 263298 0 0 0 0 0 263298 0 0
303 263298 0 0 0 0 0 263298 0 0
306 263298 0 0 263298 0 0 0 0 0
307 263298 63 37 263298 0 0 0 0 0
308 263298 0 0 263298 93 10 0 0 0
309 263298 0 0 0 0 0 0 0 0
310 263298 0 0 0 0 0 0 0 0
313 263298 0 0 0 0 0 263298 0 0
314 263298 0 0 263298 71 7 0 0 0
315 263298 0 0 0 0 0 263298 87 19
316 263298 0 0 0 0 0 0 0 0
317 263298 0 0 263298 166 65 0 0 0
318 263298 0 0 0 0 0 263298 0 0
fn=runtime.memhash
891 14 1 0 14 0 0 0 0 0
892 14 0 0 0 0 0 0 0 0
893 14 0 0 14 0 0 0 0 0
894 14 0 0 14 0 0 0 0 0
895 14 0 0 0 0 0 0 0 0
896 14 0 0 0 0 0 0 0 0
fn=runtime.memhash64
1 2 0 0 0 0 0 0 0 0
1260 2100012 26922 94 2100012 294 1 0 0 0
1261 2100012 0 0 0 0 0 0 0 0
1262 2100010 0 0 2100010 0 0 0 0 0
1263 2100010 0 0 2100010 0 0 0 0 0
1264 2100010 0 0 2100010 0 0 0 0 0
1265 2100010 0 0 2100010 3149 57 0 0 0
1266 2100010 0 0 2100010 0 0 0 0 0
1267 2100010 627 65 2100010 2680 58 0 0 0
1268 2100010 0 0 0 0 0 2100010 0 0
1269 2100010 0 0 2100010 0 0 0 0 0
fn=runtime.morestack
410 80 38 29 80 0 0 0 0 0
411 80 0 0 80 0 0 0 0 0
412 80 0 0 80 2 0 0 0 0
413 80 0 0 80 0 0 0 0 0
414 80 0 0 0 0 0 0 0 0
419 80 0 0 80 14 3 0 0 0
420 80 0 0 80 0 0 0 0 0
421 80 0 0 0 0 0 0 0 0
428 80 39 29 80 0 0 0 0 0
429 80 0 0 0 0 0 80 0 0
430 80 0 0 0 0 0 0 0 0
431 80 0 0 0 0 0 80 0 0
433 80 0 0 80 0 0 0 0 0
434 80 0 0 0 0 0 80 0 0
437 80 0 0 80 0 0 0 0 0
438 80 0 0 0 0 0 80 20 9
439 80 0 0 0 0 0 80 0 0
440 80 0 0 0 0 0 0 0 0
441 80 0 0 0 0 0 80 0 0
442 80 0 0 0 0 0 80 0 0
443 80 0 0 0 0 0 80 0 0
446 80 0 0 80 0 0 0 0 0
447 80 0 0 0 0 0 80 0 0
448 80 0 0 80 1 1 0 0 0
449 80 0 0 0 0 0 80 1 1
fn=runtime.morestack_noctxt
1 80 0 0 0 0 0 0 0 0
455 80 37 29 0 0 0 0 0 0
fn=runtime.procyield
1 109 0 0 109 1 0 0 0 0
567 109 4 2 109 0 0 0 0 0
569 2050 0 0 0 0 0 0 0 0
570 2050 0 0 0 0 0 0 0 0
571 2050 0 0 0 0 0 0 0 0
fn=runtime.publicationBarrier
1 5868218 84 39 5868218 0 0 0 0 0
fn=runtime.reflectcall
472 2 1 1 2 0 0 0 0 0
473 8 2 2 0 0 0 0 0 0
fn=runtime.rt0_go
89 1 0 0 0 0 0 0 0 0
90 1 0 0 0 0 0 0 0 0
91 1 0 0 0 0 0 0 0 0
92 1 0 0 0 0 0 0 0 0
93 1 0 0 0 0 0 1 1 1
94 1 0 0 0 0 0 1 0 0
98 1 0 0 0 0 0 0 0 0
99 1 0 0 0 0 0 0 0 0
100 1 0 0 0 0 0 1 1 1
101 1 0 0 0 0 0 1 0 0
102 1 1 1 0 0 0 1 0 0
103 1 0 0 0 0 0 1 0 0
106 1 0 0 0 0 0 0 0 0
107 1 0 0 0 0 0 0 0 0
108 1 0 0 0 0 0 0 0 0
109 1 0 0 0 0 0 0 0 0
110 1 0 0 0 0 0 0 0 0
115 1 0 0 0 0 0 0 0 0
116 1 0 0 0 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
118 1 0 0 0 0 0 0 0 0
119 1 0 0 0 0 0 0 0 0
120 1 0 0 0 0 0 0 0 0
121 1 0 0 0 0 0 1 1 1
122 1 0 0 0 0 0 1 0 0
126 1 0 0 0 0 0 0 0 0
127 1 1 1 0 0 0 0 0 0
128 1 0 0 0 0 0 1 1 1
132 1 0 0 1 1 1 0 0 0
133 1 0 0 0 0 0 0 0 0
134 1 0 0 0 0 0 0 0 0
183 1 1 1 0 0 0 0 0 0
184 1 0 0 0 0 0 1 0 0
188 1 0 0 0 0 0 1 1 1
189 1 0 0 1 0 0 0 0 0
190 1 0 0 0 0 0 0 0 0
191 1 0 0 0 0 0 0 0 0
196 1 0 0 0 0 0 0 0 0
197 1 1 1 0 0 0 1 0 0
198 1 0 0 0 0 0 0 0 0
201 1 0 0 0 0 0 1 1 1
203 1 0 0 0 0 0 1 0 0
205 1 0 0 0 0 0 0 0 0
206 1 0 0 0 0 0 1 0 0
208 1 0 0 1 0 0 0 0 0
209 1 0 0 0 0 0 1 0 0
210 1 0 0 1 0 0 0 0 0
211 1 0 0 0 0 0 1 0 0
212 1 0 0 0 0 0 1 0 0
213 1 0 0 0 0 0 1 0 0
214 1 0 0 0 0 0 1 0 0
217 1 1 0 0 0 0 0 0 0
218 1 0 0 0 0 0 1 0 0
219 1 0 0 0 0 0 1 0 0
220 1 1 1 0 0 0 1 0 0
221 1 0 0 0 0 0 0 0 0
222 1 0 0 1 0 0 0 0 0
225 1 0 0 0 0 0 1 0 0
fn=runtime.setg
1 147 0 0 147 0 0 0 0 0
835 147 29 25 147 0 0 0 0 0
847 147 0 0 0 0 0 147 0 0
fn=runtime.stackcheck
1 5 0 0 5 0 0 0 0 0
864 5 4 0 5 0 0 0 0 0
865 5 0 0 5 0 0 0 0 0
866 5 0 0 0 0 0 0 0 0
868 5 0 0 5 0 0 0 0 0
869 5 0 0 0 0 0 0 0 0
fn=runtime.strhash
902 898 7 4 898 0 0 0 0 0
903 898 0 0 0 0 0 0 0 0
904 898 0 0 898 0 0 0 0 0
905 898 0 0 898 4 0 0 0 0
906 898 0 0 898 0 0 0 0 0
907 898 0 0 0 0 0 0 0 0
908 898 0 0 0 0 0 0 0 0
fn=runtime.systemstack
334 77237 468 49 77237 0 0 0 0 0
336 77237 0 0 77237 0 0 0 0 0
337 77237 0 0 77237 0 0 0 0 0
339 77237 0 0 77237 406 91 0 0 0
340 77237 0 0 0 0 0 0 0 0
342 77237 0 0 77237 20319 254 0 0 0
343 77237 0 0 0 0 0 0 0 0
344 77237 0 0 0 0 0 0 0 0
346 75425 0 0 75425 1055 17 0 0 0
347 75425 0 0 0 0 0 0 0 0
352 75425 0 0 0 0 0 0 0 0
353 75425 19 8 0 0 0 75425 20834 147
354 75425 0 0 0 0 0 75425 0 0
355 75425 0 0 0 0 0 75425 0 0
356 75425 0 0 0 0 0 75425 0 0
359 75425 0 0 0 0 0 75425 0 0
360 75425 0 0 75425 17808 4210 0 0 0
362 75425 0 0 0 0 0 0 0 0
363 75425 0 0 0 0 0 0 0 0
364 75425 0 0 0 0 0 75425 16991 114
365 75425 0 0 0 0 0 0 0 0
368 75425 0 0 0 0 0 0 0 0
369 75425 0 0 75425 197 110 0 0 0
370 75425 0 0 0 0 0 75425 0 0
374 75425 3 0 75425 46 11 0 0 0
375 75425 139 57 75425 29 8 0 0 0
376 75425 0 0 75425 1093 93 0 0 0
377 75425 0 0 0 0 0 75425 0 0
378 75425 0 0 75425 1155 68 0 0 0
379 75425 0 0 0 0 0 75425 0 0
380 75425 0 0 75425 2326 93 0 0 0
386 1812 6 4 0 0 0 0 0 0
387 1812 0 0 1812 40 31 0 0 0
388 1812 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/atomic_pointer.go
fn=runtime.atomicstorep
31 69 6 2 0 0 0 23 0 0
32 46 0 0 23 0 0 0 0 0
33 5 1 1 2 0 0 3 0 0
35 69 5 1 92 2 0 0 0 0
36 69 0 0 46 0 0 0 0 0
fn=runtime.atomicwb
21 3 1 1 0 0 0 1 0 0
23 12 1 1 8 0 0 0 0 0
fn=sync/atomic.StorePointer
47 39 11 7 0 0 0 13 0 0
48 26 11 8 13 0 0 0 0 0
51 78 0 0 26 0 0 52 0 0
52 39 0 0 26 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cgo_mmap.go
fn=runtime.mmap
28 333 69 48 0 0 0 111 13 1
29 222 0 0 111 67 31 0 0 0
44 1443 142 94 666 0 0 777 154 22
fn=runtime.munmap
47 30 5 5 10 10 4 5 0 0
48 10 0 0 5 5 0 0 0 0
52 25 5 5 10 0 0 15 5 2
53 15 0 0 10 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cgo_sigaction.go
fn=runtime.sigaction
20 342 1 1 0 0 0 114 0 0
31 228 0 0 114 1 0 0 0 0
32 1140 1 1 570 0 0 456 0 0
fl=.//usr/lib/golang/src/runtime/chan.go
fn=runtime.(*waitq).dequeue
748 144 17 8 48 0 0 24 0 0
749 24 0 0 24 0 0 0 0 0
750 24 0 0 24 0 0 0 0 0
751 48 0 0 0 0 0 0 0 0
752 60 9 2 30 0 0 15 0 0
754 9 0 0 9 8 7 0 0 0
755 18 0 0 0 0 0 0 0 0
756 27 9 7 9 0 0 0 0 0
757 18 7 6 0 0 0 9 0 0
772 45 9 7 9 0 0 0 0 0
776 54 0 0 18 0 0 9 0 0
fn=runtime.chanparkcommit
609 54 9 7 18 0 0 9 0 0
615 18 9 7 9 0 0 9 0 0
619 27 0 0 18 0 0 0 0 0
625 27 0 0 9 0 0 18 0 0
626 36 0 0 18 0 0 9 0 0
fn=runtime.chanrecv
121 2 1 1 1 0 0 0 0 0
427 106 17 14 38 0 0 10 1 1
435 30 0 0 10 0 0 0 0 0
455 40 10 7 0 0 0 0 0 0
456 30 0 0 0 0 0 0 0 0
458 10 10 7 0 0 0 0 0 0
462 30 0 0 10 2 0 0 0 0
466 40 0 0 0 0 0 30 1 1
468 30 0 0 20 0 0 0 0 0
479 60 10 7 10 0 0 20 0 0
484 14 2 2 2 0 0 9 0 0
485 5 1 1 2 0 0 2 0 0
488 27 0 0 18 0 0 0 0 0
490 1 0 0 1 0 0 0 0 0
495 3 0 0 1 0 0 0 0 0
498 4 0 0 1 0 0 3 0 0
499 4 0 0 2 0 0 1 0 0
500 2 0 0 1 0 0 0 0 0
503 1 1 1 1 0 0 0 0 0
504 3 0 0 1 0 0 2 0 0
505 5 0 0 2 0 0 2 0 0
508 8 0 0 0 0 0 0 0 0
514 16 8 7 8 0 0 8 0 0
515 24 0 0 8 0 0 16 0 0
516 8 0 0 0 0 0 8 0 0
517 34 8 7 8 0 0 10 1 1
522 32 0 0 16 0 0 8 0 0
523 8 0 0 0 0 0 8 4 2
524 56 8 7 16 0 0 16 6 2
525 8 0 0 0 0 0 8 1 1
526 8 0 0 0 0 0 8 0 0
527 48 0 0 16 0 0 16 0 0
528 24 8 7 0 0 0 16 1 0
529 8 0 0 0 0 0 0 0 0
534 24 0 0 16 0 0 0 0 0
535 56 8 2 8 0 0 40 0 0
538 32 8 6 24 17 17 0 0 0
541 24 8 7 8 0 0 8 0 0
542 8 0 0 0 0 0 8 0 0
543 24 0 0 8 1 0 0 0 0
546 40 0 0 16 0 0 8 0 0
547 24 0 0 8 0 0 8 0 0
548 8 0 0 0 0 0 8 7 6
549 16 8 7 0 0 0 16 0 0
550 40 0 0 16 3 3 16 8 7
735 24 0 0 8 0 0 8 0 0
736 16 0 0 8 0 0 0 0 0
737 16 8 7 0 0 0 0 0 0
738 32 8 7 8 0 0 8 0 0
739 8 0 0 0 0 0 8 0 0
740 8 0 0 0 0 0 8 0 0
fn=runtime.chanrecv.func1
484 11 1 1 3 0 0 3 0 0
fn=runtime.chanrecv1
411 30 10 7 0 0 0 10 0 0
412 60 9 2 20 0 0 40 0 0
fn=runtime.chansend
121 2 0 0 1 0 0 0 0 0
142 82 9 7 31 0 0 10 0 0
143 30 0 0 10 0 0 0 0 0
173 10 0 0 0 0 0 0 0 0
179 30 10 7 10 8 0 0 0 0
183 40 10 7 0 0 0 30 1 1
185 30 0 0 20 7 7 0 0 0
190 60 0 0 10 0 0 20 0 0
193 112 16 14 16 0 0 72 0 0
194 32 0 0 16 0 0 8 0 0
197 8 2 1 6 1 0 0 0 0
199 1 1 1 1 0 0 0 0 0
204 6 0 0 2 0 0 4 0 0
205 4 1 1 2 0 0 1 0 0
206 2 0 0 1 0 0 0 0 0
209 1 0 0 1 0 0 0 0 0
210 3 0 0 1 0 0 2 0 0
211 4 0 0 2 0 0 1 0 0
214 1 0 0 0 0 0 0 0 0
220 2 1 1 1 0 0 1 0 0
221 3 0 0 1 0 0 2 0 0
222 1 0 0 0 0 0 1 0 0
223 13 0 0 1 0 0 10 1 1
228 4 0 0 2 0 0 1 0 0
229 1 1 1 0 0 0 1 1 0
230 2 0 0 1 0 0 1 0 0
231 1 0 0 0 0 0 1 0 0
232 6 0 0 2 0 0 2 0 0
233 6 2 2 1 0 0 2 1 0
234 3 0 0 0 0 0 2 0 0
235 1 0 0 0 0 0 0 0 0
240 3 1 1 2 0 0 0 0 0
241 7 0 0 1 0 0 5 0 0
249 4 1 1 3 0 0 0 0 0
252 3 0 0 1 0 0 1 0 0
253 1 0 0 0 0 0 1 0 0
254 2 0 0 1 0 0 0 0 0
260 3 1 1 1 0 0 1 0 0
261 3 0 0 1 0 0 0 0 0
264 3 0 0 1 0 0 1 0 0
265 2 0 0 0 0 0 2 0 0
266 4 0 0 2 0 0 1 0 0
735 3 0 0 1 0 0 1 0 0
736 2 0 0 1 0 0 0 0 0
737 2 0 0 0 0 0 0 0 0
738 4 1 1 1 0 0 1 0 0
739 1 0 0 0 0 0 1 0 0
740 1 0 0 0 0 0 1 0 0
fn=runtime.chansend.func1
193 88 16 14 24 0 0 24 7 6
fn=runtime.chansend1
126 30 9 7 0 0 0 10 0 0
127 80 9 7 30 0 0 50 1 1
fn=runtime.closechan
340 12 4 2 4 0 0 2 0 0
341 6 0 0 2 0 0 0 0 0
345 8 0 0 0 0 0 6 0 0
346 6 0 0 4 1 0 0 0 0
357 2 0 0 0 0 0 2 0 0
359 2 0 0 0 0 0 2 0 0
362 2 2 1 0 0 0 0 0 0
363 8 0 0 2 0 0 4 0 0
364 4 0 0 0 0 0 0 0 0
384 10 1 1 4 0 0 4 0 0
385 4 0 0 0 0 0 0 0 0
399 6 1 1 2 0 0 4 0 0
402 10 2 2 4 0 0 0 0 0
fn=runtime.makechan
71 60 8 4 20 0 0 10 0 0
72 30 0 0 20 8 6 10 0 0
75 30 0 0 10 7 6 0 0 0
78 20 8 4 10 0 0 0 0 0
82 20 0 0 10 0 0 0 0 0
83 70 0 0 10 0 0 0 0 0
93 20 0 0 0 0 0 0 0 0
95 45 7 4 9 0 0 36 0 0
97 45 0 0 9 0 0 9 4 0
98 2 1 1 1 0 0 0 0 0
101 6 0 0 1 0 0 4 0 0
102 4 0 0 1 0 0 1 1 1
109 30 8 4 20 0 0 10 0 0
110 30 0 0 10 0 0 10 2 0
111 20 0 0 10 0 0 10 1 0
116 40 0 0 20 0 0 10 0 0
786 9 0 0 0 0 0 0 0 0
fn=runtime.recv
566 6 2 2 2 0 0 1 0 0
567 3 0 0 2 0 0 0 0 0
571 3 0 0 1 0 0 0 0 0
599 5 1 1 2 0 0 1 0 0
600 2 0 0 1 0 0 1 0 0
601 3 0 0 2 0 0 1 1 1
602 6 0 0 3 0 0 1 0 0
603 2 0 0 1 0 0 0 0 0
606 5 1 1 1 0 0 3 0 0
607 3 0 0 2 0 0 0 0 0
fn=runtime.send
275 48 16 14 16 0 0 8 0 0
295 24 0 0 16 1 1 0 0 0
299 16 0 0 8 0 0 8 0 0
300 24 0 0 16 0 0 8 1 1
301 48 0 0 24 0 0 8 7 7
302 16 8 7 8 0 0 0 0 0
305 40 0 0 8 0 0 24 0 0
306 24 0 0 16 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/cpuflags_amd64.go
fn=runtime.init.0
15 2 1 1 1 0 0 0 0 0
17 2 0 0 1 0 0 0 0 0
18 2 0 0 0 0 0 0 0 0
19 2 0 0 0 0 0 0 0 0
20 2 1 1 0 0 0 0 0 0
21 1 0 0 0 0 0 0 0 0
23 4 0 0 1 0 0 1 0 0
24 1 0 0 1 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/debug.go
fn=runtime.GOMAXPROCS
17 132 15 8 44 0 0 22 0 0
22 66 0 0 0 0 0 44 0 0
23 44 0 0 22 0 0 22 0 0
24 66 13 8 0 0 0 44 0 0
25 78 0 0 26 0 0 0 0 0
26 110 0 0 66 0 0 22 0 0
fl=.//usr/lib/golang/src/runtime/defs_linux_amd64.go
fn=runtime.futexsleep
105 399 0 0 0 0 0 133 0 0
106 931 69 42 0 0 0 133 0 0
fl=.//usr/lib/golang/src/runtime/duff_amd64.s
fn=runtime.duffcopy
277 1 1 1 1 1 1 0 0 0
278 1 1 1 0 0 0 0 0 0
279 1 0 0 0 0 0 1 1 1
280 1 0 0 0 0 0 0 0 0
282 1 0 0 1 0 0 0 0 0
283 1 0 0 0 0 0 0 0 0
284 1 0 0 0 0 0 1 0 0
285 1 0 0 0 0 0 0 0 0
287 1 0 0 1 0 0 0 0 0
288 1 0 0 0 0 0 0 0 0
289 1 0 0 0 0 0 1 0 0
290 1 0 0 0 0 0 0 0 0
292 1 0 0 1 0 0 0 0 0
293 1 0 0 0 0 0 0 0 0
294 1 0 0 0 0 0 1 0 0
295 1 0 0 0 0 0 0 0 0
297 1 0 0 1 1 1 0 0 0
298 1 0 0 0 0 0 0 0 0
299 1 0 0 0 0 0 1 1 1
300 1 1 1 0 0 0 0 0 0
302 1 0 0 1 0 0 0 0 0
303 1 0 0 0 0 0 0 0 0
304 1 0 0 0 0 0 1 0 0
305 1 0 0 0 0 0 0 0 0
307 1 0 0 1 0 0 0 0 0
308 1 0 0 0 0 0 0 0 0
309 1 0 0 0 0 0 1 0 0
310 1 0 0 0 0 0 0 0 0
312 1 0 0 1 0 0 0 0 0
313 1 0 0 0 0 0 0 0 0
314 1 0 0 0 0 0 1 0 0
315 1 0 0 0 0 0 0 0 0
317 1 0 0 1 1 1 0 0 0
318 1 0 0 0 0 0 0 0 0
319 1 0 0 0 0 0 1 1 1
320 1 0 0 0 0 0 0 0 0
322 1 0 0 1 0 0 0 0 0
323 1 1 1 0 0 0 0 0 0
324 1 0 0 0 0 0 1 0 0
325 1 0 0 0 0 0 0 0 0
327 1 0 0 1 0 0 0 0 0
328 1 0 0 0 0 0 0 0 0
329 1 0 0 0 0 0 1 0 0
330 1 0 0 0 0 0 0 0 0
332 1 0 0 1 0 0 0 0 0
333 1 0 0 0 0 0 0 0 0
334 1 0 0 0 0 0 1 0 0
335 1 0 0 0 0 0 0 0 0
337 1 0 0 1 1 1 0 0 0
338 1 0 0 0 0 0 0 0 0
339 1 0 0 0 0 0 1 1 1
340 1 0 0 0 0 0 0 0 0
342 1 0 0 1 0 0 0 0 0
343 1 0 0 0 0 0 0 0 0
344 1 0 0 0 0 0 1 0 0
345 1 0 0 0 0 0 0 0 0
347 1 1 1 1 0 0 0 0 0
348 1 0 0 0 0 0 0 0 0
349 1 0 0 0 0 0 1 0 0
350 1 0 0 0 0 0 0 0 0
352 1 0 0 1 0 0 0 0 0
353 1 0 0 0 0 0 0 0 0
354 1 0 0 0 0 0 1 0 0
355 1 0 0 0 0 0 0 0 0
357 1 0 0 1 1 1 0 0 0
358 1 0 0 0 0 0 0 0 0
359 1 0 0 0 0 0 1 1 1
360 1 0 0 0 0 0 0 0 0
362 1 0 0 1 0 0 0 0 0
363 1 0 0 0 0 0 0 0 0
364 1 0 0 0 0 0 1 0 0
365 1 0 0 0 0 0 0 0 0
367 1 0 0 1 0 0 0 0 0
368 1 0 0 0 0 0 0 0 0
369 1 1 1 0 0 0 1 0 0
370 1 0 0 0 0 0 0 0 0
372 1 0 0 1 0 0 0 0 0
373 1 0 0 0 0 0 0 0 0
374 1 0 0 0 0 0 1 0 0
375 1 0 0 0 0 0 0 0 0
377 1 0 0 1 1 1 0 0 0
378 1 0 0 0 0 0 0 0 0
379 1 0 0 0 0 0 1 1 1
380 1 0 0 0 0 0 0 0 0
382 1 0 0 1 0 0 0 0 0
383 1 0 0 0 0 0 0 0 0
384 1 0 0 0 0 0 1 0 0
385 1 0 0 0 0 0 0 0 0
387 1 0 0 1 0 0 0 0 0
388 1 0 0 0 0 0 0 0 0
389 1 0 0 0 0 0 1 0 0
390 1 0 0 0 0 0 0 0 0
392 1 1 1 1 0 0 0 0 0
393 1 0 0 0 0 0 0 0 0
394 1 0 0 0 0 0 1 0 0
395 1 0 0 0 0 0 0 0 0
397 2 1 1 2 1 1 0 0 0
398 2 0 0 0 0 0 0 0 0
399 2 0 0 0 0 0 2 1 1
400 2 0 0 0 0 0 0 0 0
402 8 3 1 8 1 1 0 0 0
403 8 0 0 0 0 0 0 0 0
404 8 0 0 0 0 0 8 1 1
405 8 0 0 0 0 0 0 0 0
407 8 0 0 8 0 0 0 0 0
408 8 0 0 0 0 0 0 0 0
409 8 0 0 0 0 0 8 1 1
410 8 0 0 0 0 0 0 0 0
412 8 0 0 8 0 0 0 0 0
413 8 0 0 0 0 0 0 0 0
414 8 0 0 0 0 0 8 1 0
415 8 0 0 0 0 0 0 0 0
417 8 0 0 8 1 1 0 0 0
418 8 0 0 0 0 0 0 0 0
419 8 0 0 0 0 0 8 1 1
420 8 0 0 0 0 0 0 0 0
422 8 0 0 8 1 1 0 0 0
423 8 0 0 0 0 0 0 0 0
424 8 0 0 0 0 0 8 1 1
425 8 0 0 0 0 0 0 0 0
fn=runtime.duffzero
1 4055 0 0 4055 0 0 0 0 0
27 3 3 3 0 0 0 3 3 3
28 3 0 0 0 0 0 3 0 0
29 3 0 0 0 0 0 3 0 0
30 3 0 0 0 0 0 0 0 0
32 3 0 0 0 0 0 3 0 0
33 3 0 0 0 0 0 3 3 3
34 3 0 0 0 0 0 3 0 0
35 3 0 0 0 0 0 3 0 0
36 3 0 0 0 0 0 0 0 0
38 3 3 3 0 0 0 3 0 0
39 3 0 0 0 0 0 3 3 3
40 3 0 0 0 0 0 3 0 0
41 3 0 0 0 0 0 3 0 0
42 3 0 0 0 0 0 0 0 0
44 3 0 0 0 0 0 3 0 0
45 3 0 0 0 0 0 3 3 3
46 3 0 0 0 0 0 3 0 0
47 3 0 0 0 0 0 3 0 0
48 3 0 0 0 0 0 0 0 0
50 3 0 0 0 0 0 3 0 0
51 3 0 0 0 0 0 3 3 3
52 3 0 0 0 0 0 3 0 0
53 3 0 0 0 0 0 3 0 0
54 3 0 0 0 0 0 0 0 0
56 3 0 0 0 0 0 3 0 0
57 3 0 0 0 0 0 3 3 3
58 3 0 0 0 0 0 3 0 0
59 3 0 0 0 0 0 3 0 0
60 3 0 0 0 0 0 0 0 0
62 3 0 0 0 0 0 3 0 0
63 3 0 0 0 0 0 3 3 3
64 3 0 0 0 0 0 3 0 0
65 3 0 0 0 0 0 3 0 0
66 3 0 0 0 0 0 0 0 0
68 4 1 1 0 0 0 4 0 0
69 4 0 0 0 0 0 4 3 3
70 4 0 0 0 0 0 4 0 0
71 451 21 16 0 0 0 451 20 6
72 451 0 0 0 0 0 0 0 0
74 451 0 0 0 0 0 451 0 0
75 451 0 0 0 0 0 451 6 3
76 460 6 4 0 0 0 460 16 4
77 460 0 0 0 0 0 460 3 0
78 460 28 11 0 0 0 0 0 0
80 2351 621 107 0 0 0 2351 870 53
81 2351 0 0 0 0 0 2351 495 31
82 2351 0 0 0 0 0 2351 40 5
83 2351 0 0 0 0 0 2351 6 1
84 2351 0 0 0 0 0 0 0 0
86 2351 0 0 0 0 0 2351 202 15
87 2351 0 0 0 0 0 2351 502 33
88 2351 0 0 0 0 0 2351 26 3
89 2351 0 0 0 0 0 2351 5 1
90 2351 0 0 0 0 0 0 0 0
92 2355 0 0 0 0 0 2355 210 14
93 2356 1 0 0 0 0 2356 495 31
94 2420 8 8 0 0 0 2420 39 11
95 4055 6 0 0 0 0 4055 166 2
96 4055 0 0 0 0 0 0 0 0
98 4055 0 0 0 0 0 4055 202 14
99 4055 473 118 0 0 0 4055 496 26
100 4055 0 0 0 0 0 4055 12 10
101 4055 0 0 0 0 0 4055 1 1
102 4055 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/env_posix.go
fn=runtime.gogetenv
11 24 2 2 8 0 0 4 0 0
12 12 0 0 8 0 0 4 0 0
13 8 0 0 0 0 0 0 0 0
16 1874 1 1 550 7 0 56 0 0
17 2004 2 2 253 48 0 0 0 0
18 28 0 0 28 0 0 0 0 0
21 20 0 0 8 0 0 4 0 0
37 84 1 1 28 0 0 56 0 0
fl=.//usr/lib/golang/src/runtime/extern.go
fn=testing.(*B).Run
215 24 0 0 4 0 0 20 0 0
fn=testing.callerName
215 6 1 1 1 0 0 5 0 0
fl=.//usr/lib/golang/src/runtime/fastlog2.go
fn=runtime.fastexprand
18 731 0 0 0 0 0 0 0 0
21 2924 0 0 0 0 0 0 0 0
22 2193 0 0 0 0 0 0 0 0
23 1462 460 103 0 0 0 0 0 0
25 4386 0 0 1462 814 343 0 0 0
26 7310 543 110 731 706 105 0 0 0
fl=.//usr/lib/golang/src/runtime/float.go
fn=runtime.fastexprand
46 731 0 0 0 0 0 0 0 0
fn=runtime.float64frombits
52 1 1 1 1 0 0 0 0 0
fn=runtime.init
9 11 2 2 3 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/hash64.go
fn=runtime.memhash64Fallback
94 6 2 2 4 1 1 0 0 0
95 2 0 0 0 0 0 0 0 0
96 8 0 0 0 0 0 0 0 0
97 6 0 0 0 0 0 0 0 0
98 4 1 1 0 0 0 0 0 0
99 6 0 0 0 0 0 0 0 0
100 2 0 0 0 0 0 2 0 0
107 2 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/iface.go
fn=runtime.(*itab).init
191 7 1 1 2 0 0 1 0 0
192 3 0 0 2 0 0 1 0 0
193 2 1 1 1 0 0 1 0 0
194 4 0 0 1 0 0 3 0 0
200 3 0 0 2 0 0 1 0 0
201 2 0 0 1 1 1 1 0 0
202 6 0 0 1 0 0 0 0 0
204 2 1 1 0 0 0 0 0 0
206 1 0 0 0 0 0 0 0 0
207 3 1 1 0 0 0 1 0 0
208 5 0 0 2 0 0 1 0 0
209 1 0 0 1 1 1 0 0 0
210 3 0 0 3 0 0 0 0 0
211 6 0 0 2 0 0 4 0 0
212 5 0 0 3 0 0 2 0 0
213 2 1 1 0 0 0 0 0 0
214 7 1 1 4 0 0 2 0 0
216 30 1 1 12 0 0 4 0 0
217 9 0 0 0 0 0 3 0 0
218 6 0 0 3 1 0 0 0 0
219 27 1 1 15 0 0 0 0 0
224 13 0 0 10 0 0 2 0 0
238 2 1 1 1 0 0 1 0 0
239 7 0 0 4 0 0 2 0 0
241 1 0 0 0 0 0 1 0 0
fn=runtime.(*itabTableType).add
30 104 0 0 104 64 64 0 0 0
161 156 0 0 104 0 0 0 0 0
162 260 4 2 156 41 41 0 0 0
163 55 0 0 0 0 0 0 0 0
164 55 0 0 0 0 0 0 0 0
165 55 0 0 55 36 36 0 0 0
166 110 0 0 0 0 0 0 0 0
173 110 0 0 0 0 0 0 0 0
178 52 0 0 104 0 0 0 0 0
179 52 0 0 52 0 0 0 0 0
180 52 0 0 52 0 0 0 0 0
182 6 0 0 0 0 0 0 0 0
183 3 0 0 0 0 0 0 0 0
fn=runtime.(*itabTableType).find
30 8 1 1 8 1 1 0 0 0
100 6 1 1 4 1 0 0 0 0
101 4 0 0 0 0 0 0 0 0
102 2 0 0 0 0 0 0 0 0
103 2 0 0 0 0 0 0 0 0
107 2 0 0 2 1 1 0 0 0
108 4 0 0 0 0 0 0 0 0
109 2 1 0 0 0 0 2 0 0
fn=runtime.assertI2I2
459 6 1 1 2 0 0 1 0 0
461 3 0 0 1 0 0 0 0 0
464 3 0 0 2 0 0 0 0 0
465 6 1 1 2 0 0 4 0 0
466 2 0 0 0 0 0 0 0 0
467 6 1 1 2 0 0 2 0 0
fn=runtime.convT64
353 96 20 16 32 0 0 16 0 0
354 48 0 0 16 0 0 0 0 0
357 96 5 4 32 6 4 64 0 0
358 48 0 0 16 0 0 16 1 0
360 64 0 0 32 0 0 16 0 0
fn=runtime.convTslice
373 18 3 3 6 0 0 3 0 0
375 6 0 0 3 0 0 0 0 0
376 3 0 0 0 0 0 0 0 0
381 12 3 3 6 0 0 3 0 0
fn=runtime.convTstring
363 120 22 13 40 0 0 20 0 0
364 60 0 0 20 0 0 0 0 0
365 1 0 0 0 0 0 0 0 0
367 114 13 8 38 5 4 76 0 0
368 133 0 0 57 0 0 38 0 0
370 99 0 0 40 0 0 20 0 0
fn=runtime.getitab
33 8 2 1 3 0 0 1 0 0
34 4 0 0 3 1 1 0 0 0
39 4 0 0 2 1 0 0 0 0
53 1 1 1 1 1 0 0 0 0
54 7 0 0 1 0 0 4 0 0
59 3 1 1 0 0 0 2 0 0
60 10 1 1 4 0 0 4 0 0
66 12 1 1 3 0 0 5 0 0
67 5 0 0 2 0 0 1 1 1
68 2 0 0 1 0 0 1 0 0
74 1 1 1 0 0 0 1 0 0
75 2 0 0 0 0 0 2 0 0
76 3 0 0 1 0 0 2 0 0
77 3 0 0 0 0 0 2 0 0
78 1 0 0 0 0 0 0 0 0
79 3 0 0 2 0 0 0 0 0
82 1 0 0 0 0 0 0 0 0
83 4 1 1 2 0 0 1 0 0
fn=runtime.init
303 8 1 1 3 1 1 3 1 1
304 8 1 1 3 0 0 3 0 0
305 8 0 0 3 0 0 3 0 0
306 8 1 1 3 0 0 3 0 0
307 8 1 1 3 1 1 3 0 0
fn=runtime.itabAdd
121 312 1 1 104 0 0 52 0 0
126 208 2 1 156 0 0 0 0 0
130 52 0 0 52 1 1 0 0 0
131 312 0 0 104 1 1 0 0 0
153 208 0 0 52 0 0 156 0 0
154 156 2 1 104 0 0 0 0 0
fn=runtime.itabsinit
245 6 2 2 2 0 0 1 0 0
246 3 0 0 0 0 0 2 0 0
247 164 1 1 154 0 0 3 0 0
248 416 1 1 206 9 8 53 0 0
249 102 0 0 0 0 0 102 0 0
252 3 0 0 0 0 0 2 0 0
253 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/atomic/asm_amd64.s
fn=runtime/internal/atomic.Store
1 5 0 0 5 0 0 0 0 0
131 5 4 1 5 0 0 0 0 0
132 5 0 0 5 0 0 0 0 0
133 5 0 0 10 1 0 0 0 0
fn=runtime/internal/atomic.Store64
146 13 11 8 13 0 0 0 0 0
147 13 0 0 13 0 0 0 0 0
148 13 0 0 26 0 0 0 0 0
fn=runtime/internal/atomic.Storeuintptr
1 13 11 8 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/sys/intrinsics.go
fn=runtime.adjustpointers
58 570 0 0 190 21 7 0 0 0
fl=.//usr/lib/golang/src/runtime/internal/sys/intrinsics_common.go
fn=runtime.(*pageBits).popcntRange
92 6709 0 0 0 0 0 0 0 0
93 6709 29 17 0 0 0 0 0 0
94 5549 489 88 0 0 0 0 0 0
95 3480 0 0 0 0 0 0 0 0
96 3480 23 3 0 0 0 0 0 0
97 3480 0 0 0 0 0 0 0 0
98 1160 29 17 0 0 0 0 0 0
fn=runtime.(*pageCache).alloc
126 353680 6878 66 44210 17658 126 0 0 0
fn=runtime.(*pageCache).allocN
92 894 0 0 0 0 0 0 0 0
93 894 31 12 0 0 0 0 0 0
94 745 0 0 0 0 0 0 0 0
95 447 0 0 0 0 0 0 0 0
96 447 0 0 0 0 0 0 0 0
97 447 29 15 0 0 0 0 0 0
98 149 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).find1
112 1622 0 0 0 0 0 0 0 0
126 5677 499 97 811 345 2 0 0 0
fn=runtime.(*pallocBits).findLargeN
49 69 10 5 0 0 0 0 0 0
50 30 0 0 0 0 0 0 0 0
53 55 3 1 0 0 0 0 0 0
54 14 0 0 0 0 0 0 0 0
55 14 0 0 0 0 0 0 0 0
57 42 0 0 0 0 0 0 0 0
58 13 0 0 0 0 0 0 0 0
59 20 1 1 0 0 0 0 0 0
61 105 5 3 21 15 3 0 0 0
112 156 9 5 0 0 0 0 0 0
126 77 20 10 11 4 2 0 0 0
130 63 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).findSmallN
49 201 0 0 50 0 0 0 0 0
50 98 0 0 0 0 0 0 0 0
53 101 1 1 0 0 0 0 0 0
54 50 0 0 0 0 0 0 0 0
55 50 0 0 0 0 0 0 0 0
57 100 14 12 0 0 0 0 0 0
58 50 0 0 0 0 0 0 0 0
59 50 0 0 0 0 0 0 0 0
61 200 0 0 50 47 5 0 0 0
112 401 0 0 0 0 0 0 0 0
126 1376 53 32 181 3 2 0 0 0
130 150 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
133 1626770 0 0 0 0 0 0 0 0
137 3190464 0 0 1063488 2048 266 0 0 0
142 1626770 0 0 813385 1412 208 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
49 132 24 23 0 0 0 0 0 0
50 48 0 0 0 0 0 0 0 0
53 80 15 15 0 0 0 0 0 0
54 31 0 0 0 0 0 0 0 0
55 31 0 0 0 0 0 0 0 0
57 80 0 0 0 0 0 0 0 0
58 29 0 0 0 0 0 0 0 0
59 29 2 2 0 0 0 0 0 0
61 160 1 1 40 23 19 0 0 0
130 120 0 0 0 0 0 0 0 0
fn=runtime.findBitRange64
112 6422 0 0 0 0 0 0 0 0
126 22616 103 40 3043 159 7 0 0 0
fl=.//usr/lib/golang/src/runtime/lfstack.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
56 86 20 19 43 24 8 0 0 0
fn=runtime.(*lfstack).pop
42 32258 29 21 32258 0 0 0 0 0
43 32258 0 0 32258 0 0 0 0 0
44 64516 0 0 0 0 0 0 0 0
45 616 16 8 0 0 0 616 0 0
47 31642 0 0 0 0 0 0 0 0
48 31642 0 0 31642 30483 7262 0 0 0
49 126568 0 0 31642 0 0 0 0 0
50 63284 0 0 31642 0 0 31642 0 0
fn=runtime.(*lfstack).push
25 206460 868 63 68820 0 0 34410 0 0
26 137640 0 0 68820 0 0 34410 0 0
27 34410 0 0 0 0 0 0 0 0
28 103230 0 0 34410 0 0 0 0 0
33 34410 0 0 34410 6906 163 0 0 0
34 34410 0 0 0 0 0 34410 0 0
35 172050 0 0 34410 0 0 0 0 0
36 103230 0 0 68820 0 0 0 0 0
fn=runtime.findrunnable
56 224 0 0 112 65 2 0 0 0
fn=runtime.gcAssistAlloc1
56 1894 0 0 947 43 1 0 0 0
fn=runtime.gcBgMarkWorker
56 44 19 15 22 0 0 0 0 0
fn=runtime.gcMarkDone
56 90 0 0 45 13 0 0 0 0
fn=runtime.handoffp
56 8 4 1 4 4 0 0 0 0
fn=runtime.lfnodeValidate
61 16608 23 19 5536 0 0 2768 0 0
62 16608 0 0 8304 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/lfstack_64bit.go
fn=runtime.(*lfstack).pop
52 94926 0 0 0 0 0 0 0 0
fn=runtime.(*lfstack).push
45 172050 0 0 0 0 0 0 0 0
52 103230 58 30 0 0 0 0 0 0
fn=runtime.lfnodeValidate
45 8304 28 20 0 0 0 0 0 0
52 5536 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/lock_futex.go
fn=runtime.forEachP
127 49 0 0 0 0 0 49 0 0
fn=runtime.gcBgMarkStartWorkers
127 16 0 0 0 0 0 16 0 0
fn=runtime.lock
46 4959822 420 22 1653274 177 14 826637 481 23
47 826637 0 0 826637 0 0 0 0 0
49 3306548 400 16 1653274 457 68 0 0 0
52 1653274 0 0 0 0 0 826637 0 0
55 2479911 0 0 2479911 39291 1093 0 0 0
56 1653274 0 0 0 0 0 0 0 0
57 2479875 16262 113 1653250 0 0 0 0 0
72 24 0 0 12 0 0 0 0 0
77 570 17 16 167 0 0 60 1 0
78 177 3 1 118 4 3 0 0 0
79 103 0 0 11 0 0 0 0 0
80 33 0 0 22 0 0 0 0 0
83 96 0 0 0 0 0 96 0 0
87 108 7 7 24 0 0 12 0 0
88 36 0 0 24 0 0 0 0 0
89 58 0 0 0 0 0 23 0 0
93 12 0 0 0 0 0 12 0 0
97 24 0 0 24 0 0 0 0 0
98 24 0 0 0 0 0 0 0 0
99 3 0 0 2 0 0 0 0 0
102 44 0 0 0 0 0 44 0 0
fn=runtime.notesleep
139 1590 163 52 530 0 0 265 0 0
140 530 0 0 265 0 0 265 0 0
141 795 0 0 530 178 56 0 0 0
145 795 13 7 530 2 0 0 0 0
149 2887 124 28 1574 190 68 0 0 0
150 530 18 7 265 0 0 265 0 0
151 2381 0 0 261 0 0 1325 208 19
152 1044 154 48 522 143 27 0 0 0
155 783 156 49 522 393 130 261 186 57
fn=runtime.notetsleep
210 786 77 41 262 4 0 131 0 0
211 131 39 33 131 0 0 0 0 0
212 393 0 0 262 38 22 0 0 0
216 1310 87 47 655 0 0 524 42 20
fn=runtime.notetsleep_internal
164 441 54 22 0 0 0 147 0 0
165 294 85 41 147 0 0 147 0 0
167 441 0 0 147 0 0 0 0 0
168 48 0 0 32 2 0 0 0 0
172 128 1 1 64 0 0 0 0 0
173 32 0 0 16 0 0 16 0 0
174 128 0 0 16 0 0 80 0 0
175 64 2 1 32 0 0 0 0 0
178 48 0 0 32 0 0 16 0 0
180 64 0 0 32 0 0 16 0 0
183 524 86 42 262 1 0 0 0 0
184 2 0 0 0 0 0 2 0 0
187 387 80 42 129 0 0 129 0 0
188 129 0 0 0 0 0 0 0 0
189 407 0 0 266 138 42 0 0 0
192 399 48 30 266 0 0 133 18 0
193 665 0 0 133 0 0 532 0 0
194 532 17 7 266 34 2 0 0 0
197 399 0 0 266 65 33 133 48 18
198 532 74 41 266 71 14 0 0 0
201 22 0 0 0 0 0 0 0 0
202 70 0 0 22 0 0 0 0 0
205 8 0 0 0 0 0 0 0 0
207 903 0 0 516 0 0 129 2 0
fn=runtime.notetsleepg
221 96 4 2 32 0 0 16 0 0
222 16 0 0 16 0 0 0 0 0
223 48 0 0 32 0 0 0 0 0
227 16 0 0 0 0 0 16 0 0
228 112 1 1 48 0 0 64 0 0
229 16 0 0 0 0 0 16 0 0
230 80 0 0 48 0 0 16 0 0
fn=runtime.notewakeup
130 2346 168 59 782 0 0 391 0 0
131 1173 0 0 1173 0 0 0 0 0
132 782 0 0 0 0 0 0 0 0
136 1173 147 48 0 0 0 1173 53 3
137 1173 21 8 782 42 11 0 0 0
fn=runtime.stopTheWorldWithSema
127 35 0 0 0 0 0 35 0 0
fn=runtime.sysmon
127 29 17 13 0 0 0 29 0 0
fn=runtime.unlock
106 4959825 16261 92 1653276 298 81 826637 6 1
107 2479911 0 0 2479911 393 2 0 0 0
108 1653274 0 0 0 0 0 0 0 0
111 1653274 0 0 0 0 0 0 0 0
112 76 0 0 0 0 0 57 0 0
115 826637 0 0 826637 0 0 0 0 0
116 1653274 0 0 1653274 227 73 0 0 0
117 3306548 14004 82 1653274 0 0 0 0 0
120 2132149 0 0 652756 823 197 0 0 0
121 2479937 0 0 1653274 0 0 26 0 0
fl=.//usr/lib/golang/src/runtime/malloc.go
fn=runtime.(*hmap).newoverflow
1165 9942 1 1 3314 29 1 6628 0 0
fn=runtime.(*linearAlloc).alloc
1393 72 6 6 24 0 0 12 0 0
1394 24 0 0 24 5 4 0 0 0
1395 48 6 6 24 0 0 0 0 0
1396 48 6 6 24 0 0 12 0 0
fn=runtime.(*mcache).nextFree
858 713913 2002 217 237972 0 0 118985 3 2
859 832895 0 0 356955 0 0 118985 7 7
861 356955 452 48 118985 0 0 237970 46 19
862 547956 0 0 237970 0 0 0 0 0
864 140907 0 0 46969 632 38 0 0 0
868 234845 0 0 93938 0 0 140907 0 0
870 187876 297 71 140907 95 42 46969 0 0
872 140907 0 0 46969 0 0 93938 0 0
875 331908 284 25 165954 0 0 0 0 0
879 356955 0 0 237970 77 1 0 0 0
880 356955 126 46 118985 0 0 118985 0 0
881 475940 0 0 118985 0 0 0 0 0
885 785926 98 17 237970 0 0 356955 6 1
fn=runtime.(*mheap).sysAlloc
617 42 6 6 12 0 0 6 0 0
618 6 0 0 0 0 0 0 0 0
621 60 12 12 12 0 0 30 1 0
622 30 0 0 12 0 0 0 0 0
628 24 6 6 6 0 0 6 1 0
630 6 0 0 6 5 5 0 0 0
631 12 0 0 6 0 0 0 0 0
632 18 0 0 6 0 0 0 0 0
634 36 6 6 0 0 0 12 0 0
637 12 6 6 0 0 0 0 0 0
641 6 6 6 0 0 0 0 0 0
643 42 0 0 6 0 0 0 0 0
645 6 6 6 6 0 0 0 0 0
648 24 0 0 6 0 0 6 0 0
661 12 0 0 12 0 0 0 0 0
665 12 0 0 0 0 0 0 0 0
694 12 0 0 0 0 0 6 0 0
695 24 6 6 0 0 0 6 0 0
697 12 0 0 0 0 0 0 0 0
699 12 0 0 0 0 0 0 0 0
702 60 0 0 0 0 0 0 0 0
710 12 0 0 0 0 0 0 0 0
715 30 6 6 0 0 0 24 0 0
719 134 6 6 32 0 0 18 0 0
720 12 0 0 6 6 5 0 0 0
721 12 0 0 0 0 0 0 0 0
723 5 1 1 1 0 0 4 0 0
724 2 0 0 0 0 0 0 0 0
727 4 1 1 3 0 0 0 0 0
730 49 6 6 7 6 4 6 0 0
734 48 6 6 6 0 0 30 0 0
735 12 0 0 0 0 0 0 0 0
736 36 11 11 6 0 0 24 0 0
737 12 0 0 0 0 0 0 0 0
743 24 0 0 18 0 0 0 0 0
744 1 0 0 0 0 0 0 0 0
745 2 0 0 0 0 0 0 0 0
746 1 0 0 1 0 0 0 0 0
748 7 1 1 1 0 0 5 0 0
749 2 0 0 0 0 0 0 0 0
753 7 1 1 4 0 0 2 0 0
754 12 0 0 1 0 0 4 0 0
760 37 5 5 13 0 0 6 0 0
761 30 0 0 12 0 0 6 6 5
767 14 1 1 19 0 0 1 0 0
775 30 5 5 12 0 0 12 0 0
fn=runtime.allocmcache
1215 64 0 0 32 1 1 32 0 0
fn=runtime.fastexprand
1220 2193 481 96 0 0 0 731 3 0
1223 731 0 0 0 0 0 0 0 0
1224 2193 0 0 731 0 0 0 0 0
1226 1462 331 92 0 0 0 0 0 0
1239 1462 0 0 0 0 0 0 0 0
1240 2924 453 100 731 643 73 0 0 0
1241 2924 0 0 0 0 0 0 0 0
1245 9503 0 0 2193 708 100 731 0 0
fn=runtime.largeAlloc
1136 294 76 49 98 0 0 49 0 0
1139 196 0 0 49 0 0 0 0 0
1142 98 0 0 0 0 0 0 0 0
1143 98 0 0 0 0 0 0 0 0
1144 49 0 0 0 0 0 0 0 0
1150 343 21 18 0 0 0 196 5 0
1152 539 0 0 196 2 0 294 0 0
1153 49 0 0 0 0 0 0 0 0
1156 147 0 0 49 1 0 49 2 0
1157 294 45 25 0 0 0 294 0 0
1158 245 0 0 147 23 1 49 28 3
fn=runtime.mallocgc
832 23472676 19 10 5868169 31100 419 0 0 0
833 11736338 0 0 0 0 0 0 0 0
834 11707206 0 0 5853603 7513 115 0 0 0
835 17560809 32 19 5853603 0 0 0 0 0
836 11635446 0 0 0 0 0 0 0 0
837 23339431 9 2 0 0 0 0 0 0
840 34495104 25 10 0 0 0 5749184 0 0
841 5749184 6 3 0 0 0 5749184 0 0
842 17247552 0 0 5749184 14927 167 5749184 0 0
843 17247552 0 0 11498368 14290 197 0 0 0
891 52814030 232 114 17604631 0 0 5868256 2 2
892 11736512 0 0 5868256 1122 19 0 0 0
896 17604768 0 0 5868256 0 0 0 0 0
897 5 1 1 2 0 0 1 0 0
900 11736510 0 0 5868255 2992 78 0 0 0
926 16894675 6698 122 5868255 844 16 0 0 0
928 710090 0 0 710090 0 0 0 0 0
929 7998528 17 13 1420180 0 0 0 0 0
934 2132699 10 8 710090 1176 14 712516 5 2
936 1420180 0 0 0 0 0 0 0 0
940 7278 0 0 0 0 0 4852 12 5
945 5868255 0 0 0 0 0 0 0 0
946 11736510 0 0 5868255 1 1 0 0 0
949 17604765 0 0 11736510 2237 154 0 0 0
952 5868255 1496 55 0 0 0 5868255 0 0
955 11736510 11229 127 5868255 545 29 5868255 925 47
956 5868255 0 0 0 0 0 0 0 0
958 46084157 0 0 10874664 1203 39 5868255 26 24
959 11736510 0 0 0 0 0 0 0 0
960 17604618 0 0 0 0 0 0 0 0
990 87 0 0 87 1 0 0 0 0
992 174 20 10 0 0 0 0 0 0
993 40 0 0 0 0 0 0 0 0
994 94 1 0 0 0 0 0 0 0
995 5 0 0 0 0 0 0 0 0
996 84 0 0 0 0 0 0 0 0
997 8 0 0 0 0 0 0 0 0
999 411 0 0 50 0 0 0 0 0
1001 37 0 0 0 0 0 0 0 0
1002 37 0 0 0 0 0 37 0 0
1003 37 0 0 37 0 0 0 0 0
1004 37 0 0 0 0 0 37 0 0
1005 37 0 0 0 0 0 0 0 0
1006 148 0 0 74 0 0 37 0 0
1009 50 17 10 50 3 2 0 0 0
1010 100 11 8 0 0 0 0 0 0
1011 139 11 8 0 0 0 0 0 0
1012 66 11 8 22 0 0 33 0 0
1015 100 0 0 0 0 0 50 27 17
1019 207 1 0 134 0 0 0 0 0
1020 80 0 0 0 0 0 40 0 0
1021 80 2 0 40 0 0 40 0 0
1023 60 0 0 0 0 0 50 0 0
1026 11736238 189 43 0 0 0 0 0 0
1027 35191956 6131 136 5865326 2967 116 0 0 0
1029 19551 897 29 2793 26 14 0 0 0
1031 29340595 0 0 5868119 3094 76 5868119 0 0
1032 5868119 0 0 0 0 0 0 0 0
1033 29340595 0 0 5868119 34923 4780 0 0 0
1034 5850015 29 23 0 0 0 0 0 0
1035 17485383 30 21 0 0 0 0 0 0
1036 832818 125 72 356922 0 0 356922 27 15
1038 119273 0 0 0 0 0 119273 0 0
1039 15404179 542 76 4768030 0 0 0 0 0
1040 596365 0 0 119273 0 0 357819 1 1
1044 49 25 19 0 0 0 49 0 0
1046 735 26 21 49 0 0 441 0 0
1049 98 27 21 49 0 0 49 23 0
1050 98 0 0 49 0 0 49 14 0
1051 49 0 0 49 0 0 0 0 0
1052 1100349 2 2 98 14 0 49 29 4
1056 7968409 0 0 0 0 0 0 0 0
1063 7774361 13083 124 4006334 2409 135 0 0 0
1066 33912243 299 78 3768027 0 0 22608162 299 20
1067 15072108 0 0 11304081 67 0 0 0 0
1071 2932160 0 0 1466080 0 0 0 0 0
1072 4398240 340 28 0 0 0 0 0 0
1075 4603894 853 68 2301947 0 0 0 0 0
1077 16538188 0 0 7536054 1852 88 0 0 0
1086 5868218 0 0 0 0 0 5868218 191 7
1092 11736436 50 28 5868218 906 64 0 0 0
1093 15316909 21 9 2130249 0 0 8708550 0 0
1104 11974743 2 1 6106525 1 1 5868218 26 5
1105 5868218 0 0 0 0 0 0 0 0
1107 11736436 47 30 5868218 1574 81 0 0 0
1111 17604654 0 0 5868218 2409 94 0 0 0
1112 41315822 0 0 17842950 808 111 0 0 0
1113 11735006 46 29 0 0 0 5867503 0 0
1115 715 0 0 0 0 0 0 0 0
1116 4290 506 96 1430 0 0 2860 0 0
1117 715 0 0 0 0 0 0 0 0
1121 23713642 9 5 6108951 972 47 5868255 0 0
1124 15016859 0 0 2368577 21 2 5868218 0 0
1127 35447656 0 0 5987491 0 0 5987491 0 0
1128 135604 0 0 0 0 0 0 0 0
1129 50 1 1 0 0 0 30 0 0
1133 47064829 103 51 17723927 2 2 11736436 1 1
fn=runtime.mallocgc.func1
1046 539 49 24 294 0 0 98 0 0
1047 392 49 9 147 0 0 245 33 4
1048 147 0 0 98 1 0 0 0 0
fn=runtime.mallocinit
415 6 1 1 2 2 0 1 0 0
416 2 0 0 1 1 1 0 0 0
420 2 1 1 0 0 0 1 0 0
422 1 0 0 0 0 0 0 0 0
429 203 0 0 0 0 0 0 0 0
430 335 0 0 67 2 2 67 26 26
434 3 0 0 1 1 0 0 0 0
438 2 1 1 0 0 0 0 0 0
442 2 0 0 0 0 0 0 0 0
446 3 0 0 0 0 0 0 0 0
450 4 0 0 1 0 0 0 0 0
454 2 0 0 0 0 0 0 0 0
461 2 1 1 1 0 0 0 0 0
464 176 0 0 44 0 0 0 0 0
465 42 0 0 0 0 0 21 0 0
470 3 1 1 0 0 0 2 0 0
471 2 0 0 1 0 0 1 0 0
472 6 0 0 3 0 0 2 1 1
475 1 0 0 0 0 0 0 0 0
509 517 2 2 2 0 0 128 0 0
532 640 0 0 128 0 0 0 0 0
534 512 0 0 128 0 0 256 0 0
535 128 0 0 0 0 0 128 17 17
536 384 0 0 128 1 1 256 32 32
fn=runtime.mapassign_faststr
1165 72 0 0 24 6 6 48 0 0
fn=runtime.newarray
1179 182 8 6 52 0 0 26 0 0
1180 78 0 0 26 0 0 0 0 0
1183 78 8 6 52 0 0 0 0 0
1184 156 0 0 0 0 0 0 0 0
1187 234 9 7 78 0 0 130 0 0
fn=runtime.newobject
1164 19201656 22943 189 6400552 0 0 3200276 0 0
1165 35203036 5 1 16001380 7589 244 16001380 422 73
fn=runtime.persistentalloc
1288 3378 395 102 1126 0 0 563 5 1
1289 563 0 0 0 0 0 563 224 9
1290 9571 638 187 1689 0 0 5630 282 24
1293 2815 0 0 1689 0 0 563 0 0
fn=runtime.persistentalloc.func1
1290 6193 985 192 3378 0 0 1126 171 2
1291 3941 479 110 1126 0 0 2815 26 1
1292 1689 0 0 1126 0 0 0 0 0
fn=runtime.persistentalloc1
1299 3378 379 98 1126 0 0 563 260 10
1304 1689 0 0 563 0 0 0 0 0
1307 2096 0 0 563 0 0 0 0 0
1308 468 0 0 0 0 0 0 0 0
1311 312 0 0 0 0 0 0 0 0
1318 1126 418 106 0 0 0 0 0 0
1319 477 152 74 28 0 0 35 0 0
1322 556 0 0 0 0 0 0 0 0
1324 2780 0 0 556 1 1 0 0 0
1325 1092 452 107 0 0 0 0 0 0
1327 30 1 1 0 0 0 20 1 0
1328 20 0 0 0 0 0 0 0 0
1330 2224 1 1 556 517 89 1668 194 3
1331 3272 450 106 543 0 0 0 0 0
1332 224 28 25 56 0 0 140 21 0
1333 56 0 0 28 0 0 0 0 0
1342 28 0 0 28 26 19 0 0 0
1343 56 0 0 28 0 0 28 28 28
1344 196 26 5 56 0 0 28 0 0
1348 28 0 0 0 0 0 28 0 0
1350 1640 433 106 1112 0 0 0 0 0
1351 1668 0 0 556 0 0 556 0 0
1352 556 0 0 0 0 0 0 0 0
1353 1668 476 104 0 0 0 0 0 0
1354 40 1 1 0 0 0 20 0 0
1357 2224 0 0 556 0 0 0 0 0
1358 1663 0 0 10 0 0 1653 407 12
1359 3306 473 108 551 0 0 1653 0 0
1361 2785 0 0 1673 0 0 556 0 0
1421 1112 0 0 0 0 0 556 0 0
fn=runtime.profilealloc
1195 4290 384 103 1430 0 0 715 0 0
1196 2860 457 113 2145 20 3 715 0 0
1197 3575 0 0 1430 0 0 2145 0 0
1198 2145 0 0 1430 0 0 0 0 0
1215 2145 0 0 715 0 0 1430 0 0
fl=.//usr/lib/golang/src/runtime/map.go
fn=runtime.(*hmap).incrnoverflow
230 10740 3 3 5370 0 0 0 0 0
231 8055 7 5 2685 0 0 2685 0 0
fn=runtime.(*hmap).newoverflow
208 4112 0 0 3084 1024 1024 0 0 0
212 16116 19 10 8057 0 0 2687 0 0
245 16110 4 4 5370 0 0 2685 0 0
247 18765 9 5 8045 540 6 0 0 0
251 1028 0 0 0 0 0 0 0 0
253 4104 0 0 1026 0 0 1026 0 0
258 2 0 0 0 0 0 0 0 0
259 10 0 0 4 0 0 2 0 0
262 4971 3 2 3314 0 0 0 0 0
264 7027 0 0 1657 0 0 5370 0 0
265 13425 38 6 8055 191 2 0 0 0
267 2685 17 5 0 0 0 2685 0 0
269 2685 0 0 0 0 0 0 0 0
270 10740 20 6 5370 0 0 2685 0 0
fn=runtime.advanceEvacuationMark
203 50 0 0 50 0 0 0 0 0
204 150 0 0 0 0 0 0 0 0
1116 100 0 0 50 0 0 0 0 0
1117 50 0 0 0 0 0 0 0 0
1242 318 2 2 106 0 0 53 0 0
1243 212 2 2 106 0 0 53 0 0
1246 53 0 0 0 0 0 0 0 0
1247 212 0 0 106 0 0 0 0 0
1250 313 0 0 70 0 0 0 0 0
1251 34 0 0 0 0 0 17 0 0
1253 106 2 2 0 0 0 0 0 0
1255 60 0 0 20 0 0 20 0 0
1259 60 0 0 20 0 0 0 0 0
1260 9 0 0 3 0 0 3 0 0
1262 219 2 2 126 0 0 20 0 0
fn=runtime.evacuate_faststr
111 664 0 0 0 0 0 0 0 0
185 392 2 2 0 0 0 70 0 0
203 84 0 0 84 0 0 0 0 0
204 252 0 0 0 0 0 0 0 0
208 166 0 0 166 8 1 0 0 0
1087 1700 2 2 1082 0 0 0 0 0
1092 84 0 0 84 0 0 0 0 0
1093 84 0 0 0 0 0 0 0 0
1094 168 6 4 0 0 0 0 0 0
1096 70 0 0 0 0 0 70 0 0
fn=runtime.growWork_faststr
185 135 0 0 0 0 0 0 0 0
1082 90 0 0 90 0 0 0 0 0
1087 90 0 0 45 0 0 0 0 0
1092 45 0 0 45 0 0 0 0 0
1093 45 0 0 0 0 0 0 0 0
1094 90 2 2 0 0 0 0 0 0
1096 45 0 0 0 0 0 0 0 0
1101 45 0 0 0 0 0 0 0 0
fn=runtime.hashGrow
185 40 2 2 0 0 0 0 0 0
1017 120 2 2 40 0 0 20 0 0
1022 120 0 0 60 0 0 0 0 0
1026 40 0 0 20 0 0 20 0 0
1027 202 2 2 80 0 0 102 0 0
1029 80 0 0 40 0 0 0 0 0
1030 40 0 0 0 0 0 0 0 0
1034 80 0 0 40 0 0 20 0 0
1035 20 0 0 0 0 0 20 0 0
1036 80 2 2 40 0 0 20 0 0
1037 20 0 0 0 0 0 20 0 0
1038 20 0 0 0 0 0 20 1 0
1039 20 0 0 0 0 0 20 0 0
1041 63 0 0 21 0 0 0 0 0
1049 40 2 2 0 0 0 0 0 0
1050 6 0 0 3 0 0 0 0 0
1051 18 2 2 6 0 0 6 0 0
1053 79 3 2 48 0 0 3 0 0
1062 120 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
185 89 8 6 0 0 0 26 0 0
212 38 1 1 4 1 0 4 1 1
344 156 8 6 52 0 0 26 0 0
345 26 0 0 26 0 0 0 0 0
349 74 0 0 0 0 0 0 0 0
353 8 3 3 0 0 0 0 0 0
354 20 0 0 12 0 0 0 0 0
355 4 0 0 0 0 0 0 0 0
356 9 3 3 0 0 0 0 0 0
357 15 0 0 0 0 0 0 0 0
361 78 0 0 26 0 0 0 0 0
362 156 16 12 52 0 0 78 0 0
368 71 7 5 22 0 0 26 0 0
376 149 16 12 52 0 0 0 0 0
382 12 0 0 8 2 0 0 0 0
383 8 0 0 0 0 0 0 0 0
384 4 0 0 0 0 0 0 0 0
386 130 0 0 52 0 0 52 0 0
fn=runtime.makemap
185 60 0 0 0 0 0 0 0 0
303 36 12 9 12 0 0 6 0 0
304 30 0 0 24 12 10 0 0 0
305 30 6 5 0 0 0 0 0 0
310 18 0 0 6 0 0 0 0 0
311 30 0 0 6 0 0 12 0 0
313 18 6 5 0 0 0 12 0 0
318 48 6 5 0 0 0 6 0 0
319 30 0 0 0 0 0 0 0 0
321 6 0 0 0 0 0 6 0 0
326 12 0 0 0 0 0 0 0 0
328 67 2 2 30 0 0 31 1 0
329 12 0 0 0 0 0 0 0 0
330 8 0 0 3 0 0 3 1 0
331 3 0 0 1 0 0 1 0 0
335 25 1 1 12 0 0 6 0 0
1062 198 0 0 6 0 0 0 0 0
fn=runtime.makemap_small
292 84 4 2 28 0 0 14 0 0
293 56 7 2 14 0 0 28 0 0
294 14 0 0 0 0 0 14 4 0
295 56 0 0 28 0 0 14 0 0
fn=runtime.mapaccess1_fast64
111 2000000 0 0 0 0 0 0 0 0
185 6000000 0 0 0 0 0 0 0 0
190 2000000 0 0 0 0 0 0 0 0
208 453640 0 0 340230 56523 23239 0 0 0
216 2113410 0 0 0 0 0 0 0 0
fn=runtime.mapaccess2_faststr
111 2 2 2 0 0 0 0 0 0
185 210 0 0 0 0 0 0 0 0
190 70 0 0 0 0 0 0 0 0
195 70 0 0 0 0 0 0 0 0
196 140 2 2 0 0 0 0 0 0
197 2 0 0 0 0 0 0 0 0
203 6 0 0 6 0 0 0 0 0
204 18 0 0 0 0 0 0 0 0
208 148 2 2 148 1 0 0 0 0
216 93 1 1 0 0 0 0 0 0
1087 12 0 0 6 0 0 0 0 0
fn=runtime.mapassign_fast64
111 402865 0 0 0 0 0 0 0 0
185 499984 0 0 0 0 0 0 0 0
190 100000 0 0 0 0 0 0 0 0
195 102670 0 0 2670 0 0 0 0 0
196 200000 0 0 0 0 0 0 0 0
197 1893 0 0 0 0 0 0 0 0
208 5654 0 0 5654 5613 859 0 0 0
1062 599968 0 0 0 0 0 0 0 0
1073 200000 0 0 0 0 0 0 0 0
1077 400000 0 0 0 0 0 0 0 0
1082 200000 3 3 200000 0 0 0 0 0
fn=runtime.mapassign_faststr
111 2062 0 0 0 0 0 0 0 0
185 2004 0 0 0 0 0 0 0 0
190 384 5 5 0 0 0 0 0 0
195 813 0 0 45 0 0 0 0 0
196 1143 0 0 0 0 0 0 0 0
197 9 0 0 0 0 0 0 0 0
208 66 0 0 66 0 0 0 0 0
1062 1929 0 0 0 0 0 0 0 0
1073 753 0 0 0 0 0 0 0 0
1077 1356 0 0 0 0 0 0 0 0
1082 768 0 0 768 0 0 0 0 0
fn=runtime.mapclear
973 30 5 5 10 0 0 5 0 0
980 25 0 0 10 5 5 0 0 0
981 15 0 0 10 0 0 0 0 0
fn=runtime.mapiterinit
185 122 0 0 0 0 0 0 0 0
190 61 0 0 0 0 0 0 0 0
797 384 22 21 128 0 0 64 0 0
803 320 0 0 128 8 8 0 0 0
804 9 0 0 6 0 0 0 0 0
810 366 0 0 183 0 0 61 0 0
811 61 0 0 0 0 0 61 0 0
814 122 8 8 61 0 0 61 0 0
815 244 0 0 122 0 0 61 0 0
816 183 0 0 122 69 69 0 0 0
827 61 0 0 0 0 0 0 0 0
828 122 0 0 61 0 0 0 0 0
831 183 8 8 61 0 0 61 0 0
832 427 0 0 61 0 0 61 0 0
835 122 8 8 61 0 0 61 0 0
839 245 0 0 61 0 0 0 0 0
840 2 0 0 2 0 0 0 0 0
843 122 0 0 0 0 0 122 4 0
844 183 0 0 122 0 0 0 0 0
fn=runtime.mapiternext
111 9298352 0 0 0 0 0 0 0 0
185 1998848 0 0 0 0 0 0 0 0
208 4649176 0 0 2324588 461585 359782 0 0 0
846 36600366 16 16 12200122 0 0 6100061 0 0
847 18300183 0 0 12200122 0 0 6100061 10 7
852 18300183 0 0 6100061 0 0 0 0 0
855 12200122 0 0 6100061 0 0 6100061 4 0
856 6100061 0 0 6100061 0 0 0 0 0
857 6100061 0 0 6100061 0 0 0 0 0
858 6100061 0 0 6100061 0 0 0 0 0
859 6100061 0 0 6100061 0 0 0 0 0
861 6100061 0 0 0 0 0 0 0 0
862 14524710 8 8 0 0 0 0 0 0
863 1999214 0 0 999607 0 0 0 0 0
865 122 0 0 61 0 0 0 0 0
866 122 0 0 0 0 0 61 0 0
867 183 8 8 122 0 0 0 0 0
869 999424 0 0 0 0 0 0 0 0
883 1998848 8 8 999424 0 0 0 0 0
884 999424 0 0 0 0 0 0 0 0
886 999424 8 8 0 0 0 0 0 0
887 3997635 0 0 999424 0 0 0 0 0
889 122 0 0 0 0 0 61 0 0
893 30219644 8 8 0 0 0 6100000 9 9
894 18596704 0 0 9298352 0 0 0 0 0
895 65088464 0 0 9298352 412716 313909 0 0 0
900 24400000 0 0 6100000 0 0 0 0 0
901 6100000 0 0 0 0 0 0 0 0
904 18300000 0 0 6100000 0 0 0 0 0
905 27561142 0 0 0 0 0 7262294 0 0
933 48800000 16 16 6100000 0 0 0 0 0
939 18300000 8 8 6100000 0 0 6100000 0 0
940 12200000 0 0 0 0 0 0 0 0
943 30500000 0 0 6100000 0 0 6100000 0 0
952 12200000 0 0 0 0 0 6100000 0 0
959 39761081 16 16 6100000 0 0 13362294 1 0
960 18300000 0 0 12200000 0 0 0 0 0
961 3480660 0 0 1160220 0 0 1160220 0 0
963 18300000 0 0 6100000 0 0 6100000 0 0
964 18300000 0 0 6100000 0 0 6100000 0 0
965 18300000 0 0 12200000 0 0 0 0 0
967 16523436 0 0 0 0 0 7262294 0 0
1082 1998848 0 0 999424 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/map_fast32.go
fn=runtime.mapaccess1_fast32
12 24 1 1 8 0 0 4 0 0
17 12 0 0 4 0 0 0 0 0
18 20 2 2 8 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/map_fast64.go
fn=runtime.mapaccess1_fast64
12 14000003 19639 91 4000002 0 0 2000000 1 0
17 10000000 0 0 4000000 2770 110 0 0 0
20 6000000 0 0 2000000 0 0 0 0 0
24 4000000 0 0 2000000 0 0 0 0 0
28 18000000 27033 103 10000000 5166 107 6000000 0 0
29 4000000 0 0 4000000 0 0 0 0 0
30 10000000 46 22 4000000 0 0 0 0 0
31 6000000 0 0 2000000 0 0 0 0 0
42 8226820 0 0 0 0 0 0 0 0
43 24676776 18167 72 0 0 0 0 0 0
44 28336546 0 0 18224364 1493774 765498 0 0 0
45 14000000 0 0 8000000 0 0 2000000 0 0
fn=runtime.mapassign_fast64
92 700000 1 1 200000 0 0 100000 0 0
93 300000 0 0 100000 0 0 0 0 0
100 300000 0 0 100000 5 1 0 0 0
103 1000000 3 3 500000 10 5 400000 0 0
106 400000 0 0 200000 0 0 100000 0 0
108 400000 1 1 200000 0 0 0 0 0
113 200000 3 3 100000 0 0 0 0 0
114 100000 0 0 0 0 0 0 0 0
117 500000 0 0 200000 0 0 0 0 0
125 1936627 0 0 0 0 0 0 0 0
126 1819665 0 0 402865 102595 41039 0 0 0
127 97330 0 0 0 0 0 0 0 0
131 194660 0 0 0 0 0 0 0 0
136 305535 0 0 305535 32465 7834 0 0 0
137 611070 0 0 305535 0 0 0 0 0
138 305535 0 0 0 0 0 0 0 0
144 5654 0 0 0 0 0 0 0 0
145 11308 0 0 0 0 0 0 0 0
146 2670 0 0 0 0 0 0 0 0
155 699992 0 0 300000 0 0 0 0 0
160 1008400 12 4 0 0 0 0 0 0
162 16020 1 0 2670 0 0 10680 0 0
163 2670 0 0 0 0 0 0 0 0
165 1311384 2 2 0 0 0 100000 2080 1903
167 100000 0 0 0 0 0 0 0 0
169 200000 0 0 100000 0 0 100000 11438 3951
171 105340 0 0 102670 0 0 0 0 0
174 202670 0 0 102670 0 0 0 0 0
175 300000 0 0 100000 0 0 0 0 0
178 200000 0 0 0 0 0 100000 0 0
179 400000 0 0 200000 0 0 100000 0 0
fl=.//usr/lib/golang/src/runtime/map_faststr.go
fn=runtime.evacuate_faststr
393 588 2 2 168 0 0 84 0 0
394 504 0 0 420 0 0 0 0 0
395 84 0 0 0 0 0 0 0 0
396 84 0 0 0 0 0 0 0 0
401 350 3 2 0 0 0 280 0 0
403 210 0 0 70 0 0 70 0 0
404 70 0 0 0 0 0 70 0 0
405 70 0 0 0 0 0 70 0 0
407 70 0 0 0 0 0 0 0 0
411 280 0 0 70 0 0 70 0 0
412 70 0 0 0 0 0 70 0 0
413 140 0 0 0 0 0 70 0 0
416 389 6 2 0 0 0 83 0 0
417 83 0 0 0 0 0 0 0 0
418 83 0 0 0 0 0 0 0 0
419 4297 0 0 1128 0 0 928 0 0
420 1592 2 2 1128 0 0 464 0 0
421 664 0 0 0 0 0 0 0 0
422 200 0 0 0 0 0 200 0 0
423 200 0 0 0 0 0 0 0 0
425 928 0 0 0 0 0 0 0 0
429 464 0 0 0 0 0 0 0 0
432 3248 9 4 1856 0 0 1392 0 0
433 3248 0 0 1392 0 0 464 0 0
438 1856 0 0 928 0 0 464 0 0
439 2320 0 0 0 0 0 464 0 0
441 1392 2 2 464 0 0 0 0 0
442 464 0 0 464 0 0 0 0 0
447 2784 0 0 1392 0 0 464 32 16
450 4176 2 2 2320 0 0 1392 27 15
452 3712 0 0 1856 5 4 1856 0 0
453 1856 0 0 928 0 0 464 0 0
458 928 0 0 464 0 0 464 0 0
459 2320 2 2 1392 0 0 464 0 0
463 420 6 2 210 0 0 0 0 0
464 210 7 2 70 0 0 0 0 0
467 70 0 0 0 0 0 0 0 0
468 70 0 0 0 0 0 0 0 0
469 280 0 0 0 0 0 210 0 0
473 1488 0 0 1320 0 0 0 0 0
474 1333 0 0 1068 0 0 212 0 0
fn=runtime.growWork_faststr
382 270 6 4 90 0 0 45 0 0
385 360 2 2 135 0 0 180 0 0
388 180 0 0 90 0 0 0 0 0
389 273 0 0 78 0 0 156 0 0
fn=runtime.mapaccess2_faststr
107 724 7 6 218 0 0 109 0 0
112 537 0 0 214 7 3 0 0 0
113 126 12 6 42 0 0 42 0 0
115 264 4 4 88 0 0 0 0 0
119 176 0 0 88 0 0 0 0 0
121 36 0 0 18 0 0 18 0 0
122 54 0 0 18 0 0 0 0 0
124 277 7 7 2 0 0 2 0 0
125 2 0 0 0 0 0 2 0 0
126 275 0 0 182 2 1 0 0 0
127 348 0 0 87 0 0 0 0 0
132 24 0 0 6 0 0 8 0 0
136 102 0 0 34 0 0 34 0 0
140 6 0 0 0 0 0 0 0 0
142 4 0 0 2 2 2 0 0 0
143 8 0 0 2 0 0 0 0 0
165 2 0 0 0 0 0 0 0 0
171 6 1 1 2 0 0 2 0 0
174 630 4 4 350 0 0 210 0 0
175 140 0 0 140 0 0 0 0 0
176 350 0 0 140 0 0 0 0 0
177 210 2 2 70 0 0 0 0 0
178 6 0 0 0 0 0 0 0 0
180 12 1 1 0 0 0 0 0 0
182 12 0 0 0 0 0 0 0 0
183 6 0 0 0 0 0 0 0 0
184 2 0 0 0 0 0 0 0 0
187 70 0 0 0 0 0 70 0 0
188 435 2 2 0 0 0 75 0 0
189 2015 0 0 1 0 0 1 0 0
190 1 0 0 0 0 0 1 0 0
191 1868 0 0 1221 4 1 0 0 0
194 12 1 1 3 0 0 4 0 0
195 8 0 0 4 0 0 2 0 0
199 414 0 0 138 0 0 138 0 0
fn=runtime.mapassign_faststr
202 2568 5 5 728 0 0 364 0 0
203 1092 0 0 364 0 0 0 0 0
210 1092 5 5 364 0 0 0 0 0
214 3640 0 0 1820 15 13 1456 0 0
217 1456 5 5 728 0 0 364 0 0
219 1456 0 0 728 2 0 0 0 0
220 84 10 6 48 0 0 12 0 0
224 859 5 5 398 0 0 45 0 0
225 384 0 0 0 0 0 0 0 0
226 225 0 0 0 0 0 180 0 0
228 1307 0 0 923 0 0 0 0 0
229 1527 6 4 0 0 0 384 0 0
237 6729 3 2 2 0 0 2 0 0
238 8322 0 0 2080 5 0 0 0 0
239 6186 5 5 0 0 0 0 0 0
241 361 0 0 0 0 0 0 0 0
243 4124 0 0 0 0 0 0 0 0
248 28 1 1 0 0 0 0 0 0
249 42 0 0 28 0 0 0 0 0
250 12 0 0 0 0 0 0 0 0
252 26 0 0 6 0 0 8 0 0
253 2 0 0 0 0 0 0 0 0
260 788 6 5 0 0 0 394 0 0
261 66 0 0 0 0 0 0 0 0
262 23 0 0 0 0 0 0 0 0
271 2448 5 5 1057 0 0 0 0 0
272 60 0 0 0 0 0 60 0 0
273 60 0 0 40 0 0 0 0 0
276 1093 4 4 2 0 0 2 0 0
278 98 0 0 15 0 0 60 0 0
279 15 0 0 0 0 0 0 0 0
281 2235 0 0 17 0 0 366 2 0
283 728 0 0 0 0 0 0 0 0
285 2184 0 0 1092 0 0 728 16 2
286 379 0 0 379 0 0 0 0 0
289 745 0 0 381 0 0 0 0 0
290 1094 5 5 366 0 0 0 0 0
293 728 0 0 0 0 0 364 0 0
294 1456 0 0 728 0 0 364 0 0
fl=.//usr/lib/golang/src/runtime/mbarrier.go
fn=runtime.memclrHasPointers
345 210 2 2 0 0 0 70 0 0
346 420 2 2 140 0 0 280 0 0
347 350 0 0 140 0 0 210 0 0
fn=runtime.reflectcallmove
225 6 2 2 0 0 0 2 0 0
226 8 0 0 3 0 0 0 0 0
229 14 4 4 6 0 0 8 0 0
230 6 0 0 4 0 0 0 0 0
fn=runtime.typedmemclr
319 3 1 0 0 0 0 1 0 0
320 3 1 1 2 0 0 0 0 0
323 5 0 0 2 0 0 3 0 0
324 3 0 0 2 0 0 0 0 0
fn=runtime.typedmemmove
156 1395 4 2 0 0 0 465 0 0
157 1860 0 0 930 0 0 0 0 0
160 1395 0 0 930 5 4 0 0 0
161 2190 1 1 365 0 0 1460 0 0
170 3420 3 2 1560 0 0 1860 0 0
171 2325 0 0 1395 0 0 0 0 0
fn=runtime.typedslicecopy
233 9 3 1 0 0 0 3 0 0
235 12 2 1 6 0 0 0 0 0
238 11 0 0 0 0 0 2 0 0
239 1 1 1 0 0 0 1 0 0
259 4 0 0 2 0 0 0 0 0
263 8 2 1 4 0 0 0 0 0
271 6 0 0 4 0 0 0 0 0
272 4 0 0 2 0 0 0 0 0
277 8 0 0 0 0 0 8 0 0
278 10 2 1 6 0 0 2 0 0
fl=.//usr/lib/golang/src/runtime/mbitmap.go
fn=runtime.(*mcentral).grow
339 44302 0 0 0 0 0 0 0 0
340 221510 1175 39 88604 6 0 0 0 0
344 88604 0 0 0 0 0 0 0 0
349 177208 0 0 0 0 0 0 0 0
350 88604 28673 118 0 0 0 0 0 0
352 44302 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).countAlloc
910 1862160 4159 72 620720 0 0 0 0 0
911 19957176 3127 66 0 0 0 0 0 0
912 9513048 0 0 9513048 119654 59215 0 0 0
913 14269572 0 0 4756524 7644 194 0 0 0
915 797557 0 0 0 0 0 0 0 0
916 353674 0 0 353674 69 15 0 0 0
917 707348 0 0 0 0 0 0 0 0
918 176837 0 0 0 0 0 0 0 0
919 707348 0 0 176837 895 9 0 0 0
921 754243 20 8 310360 0 0 310360 0 0
fn=runtime.(*mspan).nextFreeIndex
195 3016620 323 95 1005540 0 0 502770 27 3
196 1005540 0 0 1005540 66 2 0 0 0
197 889533 0 0 502770 0 0 386763 36 1
198 1005540 0 0 0 0 0 0 0 0
199 464028 214 41 232014 0 0 116007 0 0
201 773526 0 0 0 0 0 0 0 0
205 386763 0 0 386763 0 0 0 0 0
207 1160289 0 0 0 0 0 0 0 0
208 2828379 849 122 333618 0 0 0 0 0
210 1076934 30 7 0 0 0 333618 0 0
211 1076934 0 0 0 0 0 0 0 0
212 38040 0 0 0 0 0 38040 0 0
213 152160 0 0 76080 0 0 38040 0 0
215 333618 0 0 0 0 0 0 0 0
217 1000854 0 0 0 0 0 1000854 172 3
218 667236 0 0 667236 0 0 0 0 0
219 1000854 0 0 0 0 0 0 0 0
223 750946 1731 112 333618 0 0 68605 0 0
224 697446 0 0 0 0 0 0 0 0
225 173982 8 5 0 0 0 173982 0 0
226 695928 0 0 347964 0 0 173982 0 0
229 1223187 857 108 174741 0 0 174741 0 0
230 418087 0 0 0 0 0 68605 0 0
232 698964 0 0 0 0 0 0 0 0
238 68605 0 0 0 0 0 0 0 0
239 274420 339 44 0 0 0 205815 0 0
241 311951 0 0 137210 0 0 174741 0 0
242 767569 0 0 418087 0 0 174741 0 0
fn=runtime.(*mspan).refillAllocCache
178 2278656 0 0 2278656 28 0 0 0 0
180 759552 0 0 759552 144470 105143 0 0 0
188 1519104 0 0 0 0 0 759552 9 0
fn=runtime.(*mspan).sweep
102 4547 0 0 4547 0 0 0 0 0
277 4547 0 0 0 0 0 0 0 0
287 9094 0 0 4547 1475 761 0 0 0
300 6 0 0 4 0 0 4 1 0
fn=runtime.adjustpointers
102 434 0 0 434 0 0 0 0 0
fn=runtime.bulkBarrierPreWrite
608 1305 1 0 0 0 0 435 0 0
609 3480 2 2 1305 0 0 0 0 0
612 870 0 0 435 0 0 0 0 0
613 1305 2 2 870 0 0 0 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
122 2360992 0 0 0 0 0 0 0 0
339 52908 0 0 0 0 0 0 0 0
340 264540 6333 22 105816 4 0 0 0 0
344 105816 0 0 0 0 0 0 0 0
349 211632 0 0 0 0 0 0 0 0
350 105816 0 0 0 0 0 0 0 0
352 52908 0 0 0 0 0 0 0 0
448 9449907 3831 14 5909 0 0 0 0 0
449 7083004 0 0 0 0 0 0 0 0
450 2372812 0 0 11818 0 0 0 0 0
451 1180496 0 0 0 0 0 0 0 0
454 9 0 0 4 0 0 5 0 0
536 4721999 0 0 4721999 16081 8800 0 0 0
551 4721999 0 0 4721999 0 0 4721999 257 18
676 158724 29 15 0 0 0 52908 0 0
677 423264 0 0 158724 0 0 0 0 0
680 105816 0 0 52908 0 0 0 0 0
683 211632 3432 14 158724 0 0 0 0 0
685 19217264 9171 40 117636 0 0 4721999 0 0
686 4745635 569 22 0 0 0 23636 0 0
687 1526804 0 0 5910 0 0 0 0 0
688 3041788 0 0 1520894 595029 476549 0 0 0
689 23636 0 0 0 0 0 11818 0 0
692 5910 43 8 5909 146 10 0 0 0
fn=runtime.findObject
397 161123493 3006 43 0 0 0 53707831 6 0
398 160345836 6 4 53707831 0 0 0 0 0
401 107415662 0 0 0 0 0 0 0 0
402 3338568 0 0 1112856 0 0 1669284 0 0
408 372059481 0 0 53151318 6622479 1632972 0 0 0
410 170 0 0 0 0 0 0 0 0
411 510 30 28 170 0 0 255 0 0
422 159453954 0 0 53151318 3631300 1067517 0 0 0
425 90311211 262 25 0 0 0 0 0 0
426 180622422 0 0 30103737 0 0 0 0 0
432 92411468 258 22 23047581 0 0 0 0 0
434 319570118 448 22 68479311 0 0 0 0 0
435 45652874 0 0 0 0 0 0 0 0
438 388714083 19 14 106302636 1 1 159453954 1 1
fn=runtime.gcmarknewobject
295 710083 70 27 1420166 6275 232 0 0 0
fn=runtime.getStackMap
102 4012 0 0 0 0 0 0 0 0
fn=runtime.greyobject
102 49316471 426 30 0 0 0 0 0 0
277 98632942 0 0 98632942 0 0 0 0 0
287 98632942 650 37 49316471 25869708 4697614 0 0 0
295 33304462 0 0 66608924 0 0 0 0 0
fn=runtime.heapBits.forward
493 133080 4974 110 0 0 0 44360 405 4
494 133080 0 0 88720 0 0 0 0 0
495 221800 0 0 44360 0 0 0 0 0
496 44360 0 0 0 0 0 0 0 0
497 177440 0 0 44360 0 0 0 0 0
498 44349 30379 124 0 0 0 0 0 0
499 354792 0 0 133047 0 0 177396 0 0
503 22 8 8 0 0 0 0 0 0
504 55 0 0 11 0 0 0 0 0
506 88 0 0 22 0 0 0 0 0
508 16 0 0 0 0 0 0 0 0
509 8 4 1 0 0 0 0 0 0
511 3 0 0 0 0 0 0 0 0
513 83 3 0 22 0 0 44 0 0
fn=runtime.heapBits.forwardOrBoundary
519 266163 35137 235 88722 16 0 44360 3 2
520 310520 0 0 88720 0 0 0 0 0
521 221800 6515 105 133080 0 0 0 0 0
524 887200 1405 86 310520 0 0 532320 13021 133
fn=runtime.heapBits.initSpan
122 512 0 0 0 0 0 0 0 0
802 266106 28535 98 88702 20 9 44351 0 0
804 177404 0 0 88702 0 0 0 0 0
805 88702 5494 123 0 0 0 0 0 0
808 133053 0 0 44351 0 0 0 0 0
811 310467 0 0 133057 0 0 44351 0 0
812 443522 6877 66 88702 0 0 44354 0 0
813 1241885 41103 358 532231 44 2 532238 12897 142
814 88708 0 0 0 0 0 0 0 0
815 44354 0 0 0 0 0 0 0 0
817 1546 0 0 2 0 0 0 0 0
818 512 0 0 0 0 0 512 8 8
819 512 0 0 0 0 0 0 0 0
822 221760 0 0 44352 0 0 133056 0 0
825 133060 0 0 88706 0 0 0 0 0
fn=runtime.heapBits.nextArena
468 3 0 0 0 0 0 1 0 0
469 2 1 1 1 0 0 0 0 0
471 1 0 0 1 0 0 0 0 0
472 2 0 0 0 0 0 0 0 0
478 3 0 0 1 0 0 0 0 0
479 2 0 0 0 0 0 0 0 0
483 1 0 0 0 0 0 0 0 0
484 7 0 0 2 0 0 4 0 0
fn=runtime.heapBitsSetType
102 18 0 0 12 5 0 0 0 0
122 16161962 0 0 0 0 0 0 0 0
339 3768007 0 0 0 0 0 0 0 0
340 44475844 1338 159 23868245 468 43 0 0 0
344 7536020 0 0 0 0 0 0 0 0
349 28736382 3 3 13664342 3 0 0 0 0
350 11304030 0 0 0 0 0 0 0 0
352 3768010 0 0 0 0 0 0 0 0
947 27842261 11914 112 7536054 0 0 3768027 1 1
958 11304081 1115 101 3768027 0 0 0 0 0
972 60 11 8 40 0 0 0 0 0
976 10468164 3116 112 7536014 6511 227 0 0 0
983 7536014 131 38 0 0 0 0 0 0
984 210 7 2 105 0 0 0 0 0
1000 45 0 0 5 1 0 5 0 0
1002 15 1 1 10 0 0 0 0 0
1012 100 0 0 100 7 2 0 0 0
1013 200 0 0 0 0 0 0 0 0
1018 800 0 0 100 14 7 0 0 0
1019 600 12 7 0 0 0 100 0 0
1020 300 7 3 200 0 0 0 0 0
1031 49605403 101 32 5234063 0 0 3767902 751 22
1039 6 0 0 0 0 0 0 0 0
1059 7535798 299 104 0 0 0 0 0 0
1065 11303706 0 0 3767902 60 11 0 0 0
1117 17373435 0 0 7535804 0 0 0 0 0
1122 5864300 0 0 1466075 0 0 0 0 0
1134 13195191 28562 117 1466161 0 0 1466161 0 0
1135 13195363 0 0 2932322 1132 69 0 0 0
1136 1466161 0 0 0 0 0 0 0 0
1138 4398222 28838 136 0 0 0 0 0 0
1146 4398311 0 0 0 0 0 2932236 1119 45
1148 7330372 0 0 1466072 0 0 0 0 0
1149 19792702 0 0 0 0 0 0 0 0
1150 50581674 0 0 8430279 0 0 0 0 0
1151 8430279 0 0 0 0 0 0 0 0
1156 14660720 930 68 0 0 0 0 0 0
1157 20158855 0 0 0 0 0 8430279 0 0
1173 18209187 6619 68 0 0 0 0 0 0
1174 2301827 0 0 2301827 4945 179 0 0 0
1175 2301827 0 0 0 0 0 0 0 0
1179 15907360 0 0 3767902 0 0 0 0 0
1181 4603654 24 16 2301827 0 0 0 0 0
1186 14660750 166 40 1466075 0 0 0 0 0
1188 7535804 31 21 0 0 0 0 0 0
1194 7535804 0 0 0 0 0 0 0 0
1205 1144010 0 0 0 0 0 0 0 0
1209 3767902 0 0 0 0 0 0 0 0
1224 5247784 0 0 0 0 0 0 0 0
1225 2623892 0 0 0 0 0 0 0 0
1226 6347802 5 2 0 0 0 0 0 0
1229 1523874 998 31 0 0 0 1523874 63343 3609
1230 1523874 0 0 0 0 0 0 0 0
1231 1523874 0 0 0 0 0 0 0 0
1232 9117477 16017 174 1523874 0 0 3767902 890 17
1234 1144010 28 18 0 0 0 0 0 0
1241 4898105 0 0 0 0 0 0 0 0
1244 1144010 0 0 0 0 0 0 0 0
1245 1144009 7 5 0 0 0 0 0 0
1246 3432027 0 0 1144009 0 0 0 0 0
1249 2288020 0 0 1144010 1597 41 0 0 0
1250 2288020 0 0 0 0 0 1144010 0 0
1251 1144010 0 0 0 0 0 0 0 0
1252 10967833 0 0 0 0 0 0 0 0
1257 2 0 0 0 0 0 0 0 0
1258 1 0 0 0 0 0 0 0 0
1268 2667883 3338 21 0 0 0 0 0 0
1269 2667883 0 0 0 0 0 0 0 0
1275 18337352 0 0 0 0 0 0 0 0
1276 7001745 17227 120 0 0 0 0 0 0
1277 25339097 0 0 0 0 0 0 0 0
1278 2516147 0 0 0 0 0 0 0 0
1280 4485598 0 0 0 0 0 4485598 3262 27
1281 4485598 0 0 0 0 0 0 0 0
1282 4485598 0 0 0 0 0 0 0 0
1285 23095982 0 0 0 0 0 0 0 0
1290 2112422 0 0 0 0 0 0 0 0
1291 4224844 0 0 1056211 24 4 0 0 0
1292 1056211 0 0 0 0 0 0 0 0
1300 6858774 24 13 0 0 0 0 0 0
1303 9874594 30 14 0 0 0 0 0 0
1304 8099478 0 0 3 0 0 0 0 0
1305 4811795 443 47 0 0 0 0 0 0
1307 6858774 0 0 0 0 0 0 0 0
1311 11192636 1156 112 0 0 0 0 0 0
1314 2301827 0 0 0 0 0 0 0 0
1323 8971196 0 0 0 0 0 0 0 0
1324 4485598 13888 87 0 0 0 0 0 0
1325 13456794 0 0 0 0 0 0 0 0
1328 4333862 0 0 0 0 0 4333862 79835 21406
1329 4333862 0 0 0 0 0 0 0 0
1330 4333862 0 0 0 0 0 0 0 0
1335 13286689 2360 133 0 0 0 0 0 0
1339 35211517 0 0 0 0 0 0 0 0
1340 12804188 24 14 0 0 0 0 0 0
1344 9837634 13 11 0 0 0 0 0 0
1348 9210356 4 3 0 0 0 0 0 0
1349 2660205 0 0 0 0 0 2660205 21441 6359
1350 2660205 0 0 0 0 0 0 0 0
1352 13301631 0 0 0 0 0 0 0 0
1353 202 0 0 0 0 0 202 0 0
1354 202 0 0 0 0 0 0 0 0
1366 15021601 0 0 0 0 0 0 0 0
1367 17214270 36 21 1157704 13837 153 1157704 0 0
1372 3767902 36 25 0 0 0 0 0 0
1378 3 0 0 0 0 0 0 0 0
1379 3 0 0 0 0 0 0 0 0
1393 6 0 0 0 0 0 0 0 0
1402 24 3 3 0 0 0 6 3 0
1405 108 3 3 30 0 0 66 3 2
1408 12 0 0 0 0 0 6 0 0
1409 36 3 3 12 0 0 24 0 0
1410 18 0 0 12 5 0 0 0 0
1412 6 0 0 0 0 0 0 0 0
1419 9 0 0 0 0 0 0 0 0
1420 30 3 3 24 0 0 6 0 0
1436 11303739 118 78 7535810 27 0 18 0 0
fn=runtime.largeAlloc
339 49 0 0 0 0 0 0 0 0
340 245 0 0 98 14 8 0 0 0
344 98 32 20 0 0 0 0 0 0
349 196 0 0 0 0 0 0 0 0
350 98 0 0 0 0 0 0 0 0
352 49 0 0 0 0 0 0 0 0
fn=runtime.markBitsForAddr
102 710083 0 0 710083 1 0 0 0 0
259 1420166 0 0 0 0 0 0 0 0
260 1425583 0 0 0 0 0 0 0 0
263 1409332 38 23 704666 1 1 0 0 0
265 1487910 0 0 297582 0 0 0 0 0
267 5699176 0 0 1221252 0 0 0 0 0
271 1420166 0 0 0 0 0 0 0 0
272 1409332 0 0 0 0 0 0 0 0
273 2840332 0 0 710083 0 0 2130249 1 1
277 710083 0 0 0 0 0 0 0 0
fn=runtime.progToPointerMask
1608 12 1 1 4 0 0 2 0 0
1609 10 1 1 2 0 0 2 0 0
1610 26 1 1 4 0 0 12 0 0
1611 8 0 0 2 0 0 2 2 2
1612 14 1 1 4 0 0 10 0 0
1613 10 0 0 6 0 0 0 0 0
1616 10 0 0 4 0 0 4 0 0
fn=runtime.runGCProg
122 5378 0 0 0 0 0 0 0 0
134 6 0 0 0 0 0 0 0 0
1641 8 1 1 0 0 0 2 0 0
1653 1021 3 3 136 0 0 0 0 0
1654 216 0 0 0 0 0 0 0 0
1655 108 0 0 0 0 0 108 0 0
1656 108 0 0 0 0 0 0 0 0
1657 216 0 0 0 0 0 0 0 0
1671 542 1 1 138 6 6 0 0 0
1672 136 0 0 0 0 0 0 0 0
1673 272 0 0 0 0 0 0 0 0
1674 272 0 0 0 0 0 0 0 0
1676 262 0 0 0 0 0 0 0 0
1678 274 0 0 2 0 0 0 0 0
1685 258 1 1 0 0 0 0 0 0
1686 9957 0 0 0 0 0 0 0 0
1687 7656 1 1 1914 26 25 0 0 0
1688 1914 0 0 0 0 0 0 0 0
1689 3828 0 0 0 0 0 0 0 0
1690 1914 0 0 0 0 0 1914 30 30
1691 1914 0 0 0 0 0 0 0 0
1692 3828 0 0 0 0 0 0 0 0
1704 387 1 1 0 0 0 0 0 0
1705 508 0 0 127 3 3 0 0 0
1706 127 0 0 0 0 0 0 0 0
1707 127 0 0 0 0 0 0 0 0
1709 129 0 0 0 0 0 0 0 0
1713 15 1 1 0 0 0 0 0 0
1726 2 0 0 0 0 0 0 0 0
1727 12 1 1 7 0 0 0 0 0
1728 7 0 0 0 0 0 0 0 0
1729 65 0 0 0 0 0 0 0 0
1730 14 0 0 0 0 0 0 0 0
1734 20 2 2 0 0 0 0 0 0
1745 10 0 0 0 0 0 0 0 0
1751 15 0 0 0 0 0 0 0 0
1752 5 0 0 0 0 0 0 0 0
1753 17 0 0 0 0 0 0 0 0
1754 1 0 0 0 0 0 0 0 0
1755 2 0 0 1 0 0 0 0 0
1756 1 0 0 0 0 0 0 0 0
1757 1 0 0 0 0 0 0 0 0
1773 10 1 1 0 0 0 0 0 0
1774 30 0 0 0 0 0 0 0 0
1779 10 0 0 0 0 0 0 0 0
1786 10 0 0 0 0 0 0 0 0
1790 5 0 0 0 0 0 0 0 0
1813 30 2 2 0 0 0 0 0 0
1814 40 0 0 0 0 0 0 0 0
1815 5 1 1 0 0 0 0 0 0
1816 5 0 0 0 0 0 0 0 0
1817 2350 0 0 0 0 0 0 0 0
1818 1170 0 0 0 0 0 1170 18 18
1819 1170 0 0 0 0 0 0 0 0
1820 1170 0 0 0 0 0 0 0 0
1821 1170 0 0 0 0 0 0 0 0
1834 15 0 0 0 0 0 0 0 0
1835 10 0 0 0 0 0 0 0 0
1836 5 0 0 0 0 0 0 0 0
1839 5 0 0 0 0 0 0 0 0
1897 4 0 0 0 0 0 0 0 0
1898 8 0 0 2 0 0 0 0 0
1899 8 0 0 0 0 0 0 0 0
1900 12 1 1 0 0 0 0 0 0
1901 2 0 0 0 0 0 2 0 0
1902 2 0 0 0 0 0 0 0 0
1903 2 0 0 0 0 0 0 0 0
1906 4 0 0 2 0 0 0 0 0
1909 10 0 0 0 0 0 0 0 0
1915 8 0 0 4 0 0 2 0 0
fn=runtime.scanobject
122 90468912 0 0 0 0 0 0 0 0
339 21588354 0 0 0 0 0 0 0 0
340 107941770 465 36 43176708 515 29 0 0 0
344 43176708 0 0 0 0 0 0 0 0
349 86353416 620 38 0 0 0 0 0 0
350 64765062 0 0 0 0 0 0 0 0
352 21588354 0 0 0 0 0 0 0 0
448 422505106 0 0 0 0 0 0 0 0
449 166018097 0 0 0 0 0 0 0 0
450 90468912 47 13 0 0 0 0 0 0
451 45234456 0 0 0 0 0 0 0 0
536 931363628 0 0 232840907 19453753 11977180 0 0 0
fn=runtime.wbBufFlush1
277 3834840 0 0 3834840 0 0 0 0 0
287 7669680 99 30 3834840 272713 57633 0 0 0
295 618965 0 0 1237930 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mcache.go
fn=runtime.(*mcache).prepareForSweep
170 369216 299 107 123072 0 0 61536 0 0
178 61536 0 0 61536 104 22 0 0 0
179 246144 0 0 123072 484 86 0 0 0
180 183648 121 56 122432 0 0 0 0 0
181 960 0 0 0 0 0 0 0 0
185 640 0 0 0 0 0 640 0 0
186 960 0 0 320 0 0 640 0 0
187 960 14 3 1280 6 0 0 0 0
188 960 0 0 640 0 0 0 0 0
fn=runtime.(*mcache).refill
122 281814 9218 136 93938 0 0 46969 0 0
124 281814 0 0 140907 0 0 0 0 0
126 140907 131 48 93938 0 0 0 0 0
129 140907 0 0 0 0 0 0 0 0
131 186716 0 0 93358 14990 111 0 0 0
134 46679 0 0 93358 0 0 0 0 0
138 281814 263 53 46969 0 0 93938 22 17
139 93938 0 0 0 0 0 0 0 0
143 140907 0 0 93938 0 0 0 0 0
149 140907 0 0 46969 3 0 46969 0 0
151 140907 0 0 93938 64 34 46969 97 20
152 140907 0 0 93938 0 0 0 0 0
fn=runtime.(*mcache).releaseAll
154 3840 36 23 1280 0 0 640 0 0
155 260770 0 0 640 0 0 290 0 0
156 171520 0 0 85760 10930 8485 0 0 0
157 257280 36 24 0 0 0 0 0 0
158 1740 0 0 0 0 0 870 2 0
159 1450 0 0 580 6 2 290 6 0
163 1280 0 0 0 0 0 640 110 73
165 1920 0 0 1280 0 0 0 0 0
fn=runtime.allocmcache
85 112 7 2 32 0 0 16 0 0
86 16 0 0 0 0 0 16 0 0
87 144 0 0 0 0 0 80 0 0
93 6480 2 1 0 0 0 0 0 0
94 8576 0 0 2144 0 0 2144 278 278
96 32 0 0 16 0 0 16 0 0
97 80 2 1 48 0 0 16 0 0
fn=runtime.allocmcache.func1
87 128 3 1 48 0 0 32 0 0
88 48 0 0 0 0 0 32 0 0
89 96 0 0 32 0 0 48 0 0
90 32 0 0 16 1 1 16 16 16
91 48 2 1 0 0 0 32 0 0
92 48 0 0 32 0 0 0 0 0
fn=runtime.stackalloc
74 78 0 0 0 0 0 0 0 0
fn=runtime.stackcache_clear
74 2619 0 0 0 0 0 0 0 0
fn=runtime.stackcacherefill
74 88 0 0 0 0 0 0 0 0
fn=runtime.stackfree
74 10 0 0 0 0 0 0 0 0
fn=runtime.stackpoolalloc
74 136 0 0 0 0 0 0 0 0
fn=runtime.stackpoolfree
74 70 0 0 11 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mcentral.go
fn=runtime.(*mcentral).cacheSpan
40 281814 833 177 93938 0 0 46969 8 7
42 422721 0 0 140907 50079 687 46969 25 7
43 140907 0 0 0 0 0 140907 198 32
45 140907 221 75 46969 3 2 93938 0 0
47 93938 0 0 46969 2538 20 0 0 0
50 93938 0 0 46969 12 2 46969 0 0
51 46969 0 0 0 0 0 0 0 0
53 355284 786 130 142014 8 0 249 0 0
54 25552 76 46 24297 192 111 0 0 0
55 40 5 4 0 0 0 30 0 0
56 60 3 1 20 0 0 30 0 0
57 30 0 0 10 0 0 20 0 0
58 50 0 0 10 0 0 30 0 0
59 249 70 15 0 0 0 0 0 0
61 717 0 0 239 0 0 0 0 0
66 956 0 0 0 0 0 717 0 0
67 1434 33 16 478 0 0 717 0 0
68 956 0 0 239 0 0 478 0 0
72 309488 10940 247 70758 0 0 26456 0 0
73 477016 0 0 97140 68149 18648 0 0 0
76 132280 0 0 0 0 0 105824 0 0
78 132280 38 21 52912 0 0 79368 0 0
79 79368 0 0 26456 0 0 52912 0 0
80 105824 0 0 26456 0 0 79368 0 0
81 105824 0 0 52912 1 0 52912 0 0
82 79368 0 0 52912 0 0 0 0 0
83 4836 0 0 0 0 0 2418 0 0
84 46646 0 0 0 0 0 0 0 0
86 72114 0 0 24038 3 0 48076 0 0
91 132684 0 0 44228 0 0 0 0 0
99 177208 950 57 44302 0 0 44302 0 0
103 88604 0 0 0 0 0 88604 0 0
106 221510 1 0 88604 0 0 132906 52 33
107 88604 0 0 0 0 0 0 0 0
110 132906 0 0 44302 27 7 88604 0 0
111 265812 7006 136 88604 0 0 132906 0 0
112 132906 0 0 44302 0 0 88604 0 0
116 44302 0 0 0 0 0 0 0 0
117 138718 0 0 91271 3 0 0 0 0
120 279396 1077 145 138489 35 20 46969 0 0
121 281814 0 0 46969 0 0 0 0 0
126 93938 0 0 140907 0 0 0 0 0
127 140907 0 0 93938 19 10 0 0 0
128 187876 19446 157 140907 177 2 0 0 0
129 93938 0 0 46969 0 0 0 0 0
133 93938 0 0 46969 15 0 0 0 0
135 21672 268 25 0 0 0 10836 0 0
137 99356 0 0 52387 0 0 0 0 0
138 46969 0 0 0 0 0 0 0 0
140 140907 0 0 0 0 0 140907 0 0
144 328783 420 74 140907 0 0 46969 0 0
146 187876 0 0 93938 0 0 46969 0 0
fn=runtime.(*mcentral).freeSpan
209 250542 5333 118 99733 0 0 25538 0 0
210 229842 0 0 76614 6 0 0 0 0
213 25538 0 0 0 0 0 25538 0 0
215 25538 0 0 0 0 0 0 0 0
218 2419 0 0 0 0 0 0 0 0
221 4838 2413 33 7257 0 0 0 0 0
222 9676 0 0 4838 0 0 2419 0 0
225 92476 811 18 46238 796 34 46238 0 0
228 23119 0 0 0 0 0 0 0 0
229 131502 1542 25 43834 0 0 65751 0 0
230 153419 0 0 43834 0 0 65751 0 0
237 69357 0 0 92476 0 0 0 0 0
239 46238 810 21 23119 0 0 0 0 0
240 25620 0 0 8540 0 0 17080 0 0
241 34160 0 0 17080 0 0 8540 0 0
244 72895 0 0 14579 0 0 43737 0 0
245 43737 7 7 14579 0 0 29158 0 0
246 72895 0 0 14579 0 0 43737 0 0
247 58316 0 0 29158 0 0 14579 0 0
fn=runtime.(*mcentral).grow
251 265812 11813 207 88604 0 0 44302 0 0
252 354416 0 0 132906 17 0 44302 66 1
253 132906 2776 32 44302 18 1 44302 0 0
255 354416 0 0 44302 0 0 265812 191 33
256 88604 0 0 0 0 0 0 0 0
262 664530 36195 138 177208 17 10 0 0 0
263 177208 0 0 88604 3 0 44302 3 0
264 265812 0 0 0 0 0 265812 0 0
265 221510 0 0 132906 0 0 44302 29 5
fn=runtime.(*mcentral).uncacheSpan
150 1740 28 21 580 0 0 290 0 0
151 870 0 0 580 231 49 0 0 0
155 290 0 0 290 1 0 0 0 0
156 3078 27 21 1386 26 10 548 0 0
157 290 26 22 0 0 0 0 0 0
164 532 0 0 532 0 0 0 0 0
167 48 9 4 48 0 0 0 0 0
170 1160 0 0 580 125 30 0 0 0
171 580 0 0 0 0 0 0 0 0
176 1096 0 0 822 225 93 274 0 0
178 548 0 0 0 0 0 548 2 0
179 1644 0 0 548 0 0 822 0 0
180 1644 29 22 548 0 0 822 0 0
181 274 0 0 0 0 0 0 0 0
189 168 0 0 120 1 0 0 0 0
191 1096 20 18 274 0 0 548 0 0
194 1160 0 0 580 4 0 0 0 0
197 1338 0 0 274 0 0 798 0 0
fn=runtime.(*mheap).init
34 134 0 0 0 0 0 134 133 133
35 134 0 0 0 0 0 0 0 0
36 134 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mem_linux.go
fn=runtime.(*mheap).allocSpan
128 119664 0 0 29916 0 0 89748 0 0
fn=runtime.(*mheap).sysAlloc
157 54 6 6 12 0 0 30 0 0
158 6 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow
128 20 0 0 5 0 0 15 0 0
fn=runtime.(*pageAlloc).sysInit
157 45 1 1 10 0 0 25 0 0
158 5 0 0 0 0 0 0 0 0
fn=runtime.sysAlloc
20 267 70 48 0 0 0 89 0 0
21 979 102 75 267 0 0 534 83 8
22 178 0 0 0 0 0 0 0 0
33 445 0 0 178 0 0 267 0 0
34 89 30 24 89 0 0 0 0 0
fn=runtime.sysFree
147 15 5 3 0 0 0 5 0 0
148 25 5 5 10 0 0 15 1 0
149 25 0 0 10 0 0 15 0 0
fn=runtime.sysHugePage
131 179526 4117 110 59842 0 0 29921 0 0
132 89763 0 0 29921 13984 83 0 0 0
134 29921 0 0 29921 0 0 0 0 0
136 59842 0 0 29921 0 0 0 0 0
138 149605 24272 105 59842 0 0 0 0 0
139 70 10 4 0 0 0 40 0 0
fn=runtime.sysMap
164 66 6 6 22 0 0 11 0 0
165 55 0 0 22 0 0 33 0 0
167 121 6 6 44 0 0 55 0 0
168 22 0 0 0 0 0 0 0 0
171 88 6 6 33 0 0 0 0 0
fn=runtime.sysUnused
39 120 16 11 40 0 0 20 0 0
65 60 15 11 20 0 0 0 0 0
71 100 0 0 20 0 0 0 0 0
73 20 0 0 0 0 0 0 0 0
75 80 0 0 20 0 0 0 0 0
77 40 0 0 0 0 0 0 0 0
83 140 0 0 0 0 0 20 0 0
89 20 0 0 0 0 0 0 0 0
90 120 16 11 20 0 0 80 0 0
92 140 15 11 40 0 0 20 0 0
98 180 14 10 60 0 0 0 0 0
106 40 0 0 20 7 5 0 0 0
109 40 15 11 20 11 5 0 0 0
111 320 0 0 80 2 2 100 0 0
fl=.//usr/lib/golang/src/runtime/memclr_amd64.s
fn=runtime.memclrNoHeapPointers
14 179542 35962 129 179542 0 0 0 0 0
15 179542 0 0 179542 0 0 0 0 0
16 179542 0 0 0 0 0 0 0 0
21 179542 0 0 0 0 0 0 0 0
22 179542 35787 133 0 0 0 0 0 0
23 179531 0 0 0 0 0 0 0 0
24 179531 0 0 0 0 0 0 0 0
25 179529 0 0 0 0 0 0 0 0
26 179529 0 0 0 0 0 0 0 0
27 179526 0 0 0 0 0 0 0 0
28 179526 0 0 0 0 0 0 0 0
29 179508 0 0 0 0 0 0 0 0
30 179486 0 0 0 0 0 0 0 0
31 179486 0 0 0 0 0 0 0 0
32 178472 0 0 0 0 0 0 0 0
33 178472 0 0 0 0 0 0 0 0
34 178472 34207 138 0 0 0 0 0 0
35 93694 0 0 0 0 0 0 0 0
36 93694 0 0 0 0 0 0 0 0
37 78583 0 0 0 0 0 0 0 0
38 78583 0 0 0 0 0 0 0 0
39 60869 0 0 0 0 0 0 0 0
40 60869 0 0 0 0 0 0 0 0
41 15791 0 0 15791 4449 42 0 0 0
42 15791 0 0 0 0 0 0 0 0
69 15791 5231 80 0 0 0 0 0 0
73 15791 141 34 0 0 0 0 0 0
74 15791 0 0 0 0 0 0 0 0
76 1264784 0 0 0 0 0 1264784 1264677 1215521
77 1264784 0 0 0 0 0 1264784 6 4
78 1264784 0 0 0 0 0 1264784 1264760 1215658
79 1264784 0 0 0 0 0 1264784 3 3
80 1264784 0 0 0 0 0 0 0 0
81 1264784 0 0 0 0 0 0 0 0
82 1264784 0 0 0 0 0 0 0 0
83 1264784 0 0 0 0 0 0 0 0
84 15791 0 0 0 0 0 15791 2 2
85 15791 0 0 0 0 0 15791 0 0
86 15791 0 0 0 0 0 15791 0 0
87 15791 871 65 0 0 0 15791 0 0
88 15791 0 0 0 0 0 0 0 0
89 15791 0 0 15791 120 5 0 0 0
120 2 0 0 0 0 0 2 0 0
121 2 0 0 0 0 0 2 0 0
122 2 0 0 2 0 0 0 0 0
124 11 1 0 11 0 0 0 0 0
126 3 1 1 0 0 0 3 2 2
127 3 0 0 0 0 0 3 0 0
128 3 0 0 3 0 0 0 0 0
130 18 3 1 0 0 0 18 8 8
131 18 0 0 0 0 0 18 0 0
132 18 0 0 18 0 0 0 0 0
135 22 17 11 0 0 0 22 14 11
136 22 0 0 22 0 0 0 0 0
138 1014 5 5 0 0 0 1014 271 268
139 1014 0 0 0 0 0 1014 1 1
140 1014 0 0 1014 0 0 0 0 0
142 84778 79 27 0 0 0 84778 84467 84459
143 84778 0 0 0 0 0 84778 7 4
144 84778 0 0 84778 0 0 0 0 0
146 15111 45 12 0 0 0 15111 8615 8605
147 15111 0 0 0 0 0 15111 2203 2202
148 15111 0 0 0 0 0 15111 0 0
149 15111 0 0 0 0 0 15111 2150 2149
150 15111 0 0 15111 0 0 0 0 0
152 17714 66 21 0 0 0 17714 17638 17607
153 17714 0 0 0 0 0 17714 25 0
154 17714 0 0 0 0 0 17714 31 4
155 17714 0 0 0 0 0 17714 26 0
156 17714 9 5 0 0 0 17714 17597 17597
157 17714 0 0 0 0 0 17714 1 1
158 17714 0 0 0 0 0 17714 9 5
159 17714 0 0 0 0 0 17714 25 0
160 17714 0 0 17714 0 0 0 0 0
162 45078 420 90 0 0 0 45078 45012 44932
163 45078 0 0 0 0 0 45078 2 2
164 45078 0 0 0 0 0 45078 2 2
165 45078 0 0 0 0 0 45078 8 8
166 45078 0 0 0 0 0 45078 45003 44921
167 45078 0 0 0 0 0 45078 2 2
168 45078 0 0 0 0 0 45078 2 2
169 45078 0 0 0 0 0 45078 8 8
170 45078 940 117 0 0 0 45078 45002 44920
171 45078 0 0 0 0 0 45078 0 0
172 45078 0 0 0 0 0 45078 0 0
173 45078 0 0 0 0 0 45078 1 1
174 45078 0 0 0 0 0 45078 45005 44924
175 45078 0 0 0 0 0 45078 2 2
176 45078 0 0 0 0 0 45078 4 4
177 45078 0 0 0 0 0 45078 1 1
fl=.//usr/lib/golang/src/runtime/memmove_amd64.s
fn=runtime.memmove
36 5084262 714 98 5084262 0 0 0 0 0
37 5084262 0 0 5084262 0 0 0 0 0
38 5084262 0 0 5084262 0 0 0 0 0
51 5084263 0 0 0 0 0 0 0 0
52 5084263 0 0 0 0 0 0 0 0
53 4984208 0 0 0 0 0 0 0 0
54 4984208 0 0 0 0 0 0 0 0
55 4899636 0 0 0 0 0 0 0 0
56 4899636 0 0 0 0 0 0 0 0
57 4871991 0 0 0 0 0 0 0 0
58 4763915 0 0 0 0 0 0 0 0
59 4763915 0 0 0 0 0 0 0 0
60 3582682 563 84 0 0 0 0 0 0
61 2679125 0 0 0 0 0 0 0 0
62 2679125 0 0 0 0 0 0 0 0
63 2582556 0 0 0 0 0 0 0 0
64 2582556 0 0 0 0 0 0 0 0
65 1415933 0 0 0 0 0 0 0 0
66 1415933 0 0 0 0 0 0 0 0
67 176076 0 0 0 0 0 0 0 0
68 176076 0 0 0 0 0 0 0 0
69 74566 0 0 0 0 0 0 0 0
70 74566 0 0 0 0 0 0 0 0
72 7618 871 92 7618 221 21 0 0 0
73 7618 0 0 0 0 0 0 0 0
78 1 0 0 0 0 0 0 0 0
79 1 0 0 0 0 0 0 0 0
85 1 0 0 0 0 0 0 0 0
86 1 0 0 0 0 0 0 0 0
115 1 1 1 0 0 0 0 0 0
116 1 0 0 0 0 0 0 0 0
117 1 0 0 0 0 0 0 0 0
118 1 0 0 0 0 0 0 0 0
146 84572 0 0 84572 4 4 0 0 0
147 84572 0 0 84572 0 0 0 0 0
148 84572 0 0 0 0 0 84572 16 0
149 84572 0 0 0 0 0 84572 0 0
150 84572 0 0 84572 0 0 0 0 0
152 100055 192 52 100055 0 0 0 0 0
154 108076 0 0 108076 1 1 0 0 0
155 108076 0 0 0 0 0 108076 33 0
156 108076 0 0 108076 0 0 0 0 0
158 27645 0 0 27645 0 0 0 0 0
159 27645 0 0 27645 0 0 0 0 0
160 27645 0 0 0 0 0 27645 12 0
161 27645 0 0 0 0 0 27645 0 0
162 27645 0 0 27645 0 0 0 0 0
164 1181233 10 5 1181233 5 5 0 0 0
165 1181233 0 0 1181233 0 0 0 0 0
166 1181233 0 0 0 0 0 1181233 320 9
167 1181233 0 0 0 0 0 1181233 82 1
168 1181233 0 0 1181233 0 0 0 0 0
171 903557 24 14 903557 9 1 0 0 0
172 903557 0 0 0 0 0 903557 410 74
173 903557 0 0 903557 0 0 0 0 0
175 96569 5 2 96569 4 4 0 0 0
176 96569 0 0 96569 0 0 0 0 0
177 96569 14 9 0 0 0 96569 1036 12
178 96569 0 0 0 0 0 96569 0 0
179 96569 0 0 96569 0 0 0 0 0
181 1166623 90 31 1166623 90491 76941 0 0 0
182 1166623 0 0 1166623 0 0 0 0 0
183 1166623 0 0 0 0 0 1166623 95205 89692
184 1166623 0 0 0 0 0 1166623 7 3
185 1166623 0 0 1166623 0 0 0 0 0
187 1239857 258 53 1239857 81710 69288 0 0 0
188 1239857 0 0 1239857 0 0 0 0 0
189 1239857 0 0 1239857 0 0 0 0 0
190 1239857 0 0 1239857 0 0 0 0 0
191 1239857 0 0 0 0 0 1239857 260582 201460
192 1239857 0 0 0 0 0 1239857 111712 76901
193 1239857 0 0 0 0 0 1239857 16 10
194 1239857 70 36 0 0 0 1239857 111298 75124
195 1239857 0 0 1239857 0 0 0 0 0
197 101510 60 23 101510 75104 73605 0 0 0
198 101510 0 0 101510 2 1 0 0 0
199 101510 0 0 101510 10 7 0 0 0
200 101510 0 0 101510 34 4 0 0 0
201 101510 0 0 101510 74955 67227 0 0 0
202 101510 0 0 101510 0 0 0 0 0
203 101510 0 0 101510 0 0 0 0 0
204 101510 0 0 101510 2 0 0 0 0
205 101510 0 0 0 0 0 101510 93291 69123
206 101510 0 0 0 0 0 101510 1024 460
207 101510 0 0 0 0 0 101510 1140 540
208 101510 26 16 0 0 0 101510 1053 471
209 101510 0 0 0 0 0 101510 92585 68658
210 101510 0 0 0 0 0 101510 1 1
211 101510 0 0 0 0 0 101510 20 12
212 101510 0 0 0 0 0 101510 1056 478
213 101510 0 0 101510 0 0 0 0 0
215 66948 20 16 66948 63470 63387 0 0 0
216 66948 0 0 66948 21 12 0 0 0
217 66948 0 0 66948 12 7 0 0 0
218 66948 0 0 66948 38 6 0 0 0
219 66948 0 0 66948 63392 63361 0 0 0
220 66948 0 0 66948 15 8 0 0 0
221 66948 0 0 66948 9 6 0 0 0
222 66948 368 67 66948 38 7 0 0 0
223 66948 0 0 66948 63374 63300 0 0 0
224 66948 0 0 66948 0 0 0 0 0
225 66948 0 0 66948 4 4 0 0 0
226 66948 0 0 66948 43 10 0 0 0
227 66948 0 0 66948 63356 56210 0 0 0
228 66948 0 0 66948 0 0 0 0 0
229 66948 0 0 66948 1 0 0 0 0
230 66948 0 0 66948 0 0 0 0 0
231 66948 442 84 0 0 0 66948 64145 52659
232 66948 0 0 0 0 0 66948 41 34
233 66948 0 0 0 0 0 66948 281 200
234 66948 0 0 0 0 0 66948 44 33
235 66948 0 0 0 0 0 66948 64269 52650
236 66948 0 0 0 0 0 66948 42 32
237 66948 0 0 0 0 0 66948 282 199
238 66948 0 0 0 0 0 66948 45 33
239 66948 0 0 0 0 0 66948 64217 52632
240 66948 0 0 0 0 0 66948 0 0
241 66948 0 0 0 0 0 66948 15 11
242 66948 0 0 0 0 0 66948 39 20
243 66948 17568 105 0 0 0 66948 64077 52712
244 66948 0 0 0 0 0 66948 30 25
245 66948 0 0 0 0 0 66948 45 32
246 66948 0 0 0 0 0 66948 65 39
247 66948 0 0 66948 0 0 0 0 0
249 6 1 1 0 0 0 0 0 0
250 6 0 0 6 0 0 0 0 0
251 6 0 0 6 0 0 0 0 0
252 6 0 0 6 0 0 0 0 0
253 6 0 0 6 0 0 0 0 0
254 6 0 0 6 0 0 0 0 0
255 6 1 1 6 0 0 0 0 0
256 6 0 0 6 0 0 0 0 0
257 6 0 0 6 0 0 0 0 0
258 6 0 0 6 0 0 0 0 0
259 6 0 0 6 0 0 0 0 0
260 6 0 0 6 0 0 0 0 0
261 6 0 0 6 0 0 0 0 0
262 6 0 0 6 0 0 0 0 0
263 6 1 1 6 0 0 0 0 0
264 6 0 0 6 0 0 0 0 0
265 6 0 0 6 0 0 0 0 0
266 6 0 0 0 0 0 6 6 6
267 6 0 0 0 0 0 6 0 0
268 6 0 0 0 0 0 6 0 0
269 6 0 0 0 0 0 6 0 0
270 6 0 0 0 0 0 6 6 6
271 6 0 0 0 0 0 6 0 0
272 6 0 0 0 0 0 6 0 0
273 6 0 0 0 0 0 6 0 0
274 6 1 1 0 0 0 6 6 6
275 6 0 0 0 0 0 6 0 0
276 6 0 0 0 0 0 6 0 0
277 6 0 0 0 0 0 6 0 0
278 6 0 0 0 0 0 6 6 6
279 6 0 0 0 0 0 6 0 0
280 6 0 0 0 0 0 6 0 0
281 6 1 1 0 0 0 6 0 0
282 6 0 0 0 0 0 0 0 0
283 6 0 0 0 0 0 0 0 0
284 6 0 0 0 0 0 0 0 0
285 6 0 0 0 0 0 0 0 0
286 1 0 0 0 0 0 0 0 0
292 7617 2812 89 0 0 0 0 0 0
293 7617 0 0 0 0 0 0 0 0
295 7617 0 0 0 0 0 0 0 0
297 7617 0 0 0 0 0 0 0 0
300 7617 0 0 0 0 0 0 0 0
301 7617 0 0 0 0 0 0 0 0
329 7599 2971 87 0 0 0 0 0 0
330 7599 0 0 0 0 0 0 0 0
332 7599 0 0 7599 2868 2747 0 0 0
333 7599 0 0 7599 12 9 0 0 0
334 7599 0 0 0 0 0 0 0 0
336 7599 0 0 0 0 0 0 0 0
337 7599 0 0 0 0 0 0 0 0
339 7599 0 0 7599 10 3 0 0 0
340 7599 0 0 7599 11 5 0 0 0
342 7599 0 0 0 0 0 0 0 0
343 7599 0 0 0 0 0 0 0 0
345 7599 0 0 7599 2786 2237 0 0 0
346 7599 0 0 7599 3 1 0 0 0
348 7599 0 0 0 0 0 0 0 0
350 7599 2992 83 7599 6 0 0 0 0
351 7599 0 0 7599 0 0 0 0 0
354 7599 0 0 7599 3022 2775 0 0 0
356 7599 0 0 0 0 0 0 0 0
357 7599 0 0 0 0 0 0 0 0
360 134000 0 0 134000 105 43 0 0 0
361 134000 0 0 134000 98761 18734 0 0 0
362 134000 0 0 134000 95 47 0 0 0
363 134000 0 0 134000 95963 15996 0 0 0
364 134000 0 0 0 0 0 0 0 0
365 134000 0 0 0 0 0 134000 13352 12008
366 134000 0 0 0 0 0 134000 123404 93423
367 134000 0 0 0 0 0 134000 10061 9000
368 134000 0 0 0 0 0 134000 123418 93438
369 134000 0 0 0 0 0 0 0 0
370 134000 1116 89 0 0 0 0 0 0
371 134000 0 0 0 0 0 0 0 0
373 7599 0 0 0 0 0 0 0 0
374 7599 0 0 0 0 0 0 0 0
375 7599 0 0 0 0 0 7599 333 23
376 7599 0 0 0 0 0 0 0 0
377 7599 0 0 0 0 0 7599 559 504
378 7599 0 0 0 0 0 7599 45 18
379 7599 0 0 0 0 0 7599 309 237
380 7599 0 0 0 0 0 7599 347 229
381 7599 0 0 0 0 0 7599 4685 4491
382 7599 0 0 0 0 0 7599 375 269
383 7599 0 0 0 0 0 7599 635 487
384 7599 0 0 0 0 0 7599 665 471
385 7599 103 57 7599 42 3 0 0 0
391 18 11 8 0 0 0 0 0 0
392 18 0 0 18 14 2 0 0 0
393 18 0 0 18 5 1 0 0 0
394 18 0 0 18 0 0 0 0 0
395 18 0 0 18 0 0 0 0 0
396 18 0 0 18 9 1 0 0 0
397 18 0 0 18 5 1 0 0 0
398 18 0 0 18 0 0 0 0 0
399 18 0 0 18 0 0 0 0 0
400 18 0 0 18 18 7 0 0 0
401 18 0 0 0 0 0 0 0 0
402 18 0 0 0 0 0 0 0 0
403 18 18 16 0 0 0 0 0 0
404 18 0 0 0 0 0 0 0 0
405 18 0 0 0 0 0 0 0 0
406 18 0 0 0 0 0 0 0 0
407 18 0 0 0 0 0 0 0 0
408 18 0 0 0 0 0 0 0 0
409 18 0 0 0 0 0 0 0 0
411 883630 0 0 0 0 0 0 0 0
412 883630 0 0 0 0 0 0 0 0
417 883630 0 0 883630 0 0 0 0 0
418 883630 0 0 883630 883630 750902 0 0 0
419 883630 0 0 883630 0 0 0 0 0
420 883630 0 0 883630 883630 750920 0 0 0
421 883630 18 13 0 0 0 0 0 0
422 883630 0 0 0 0 0 883630 18 14
423 883630 0 0 0 0 0 883630 883630 843912
424 883630 0 0 0 0 0 883630 0 0
425 883630 0 0 0 0 0 883630 883630 843896
426 883630 0 0 0 0 0 0 0 0
427 883630 0 0 0 0 0 0 0 0
428 883630 0 0 0 0 0 0 0 0
431 18 0 0 0 0 0 0 0 0
432 18 0 0 0 0 0 18 18 7
433 18 0 0 0 0 0 0 0 0
434 18 0 0 0 0 0 18 0 0
435 18 0 0 0 0 0 18 0 0
436 18 0 0 0 0 0 18 0 0
437 18 18 15 0 0 0 18 0 0
438 18 0 0 0 0 0 18 12 11
439 18 0 0 0 0 0 18 6 5
440 18 0 0 0 0 0 18 0 0
441 18 0 0 0 0 0 18 0 0
442 18 0 0 18 18 12 0 0 0
fl=.//usr/lib/golang/src/runtime/mfinal.go
fn=runtime.SetFinalizer
309 49 5 4 14 0 0 7 0 0
310 14 5 4 7 1 1 0 0 0
316 14 0 0 7 0 0 7 0 0
317 14 0 0 0 0 0 0 0 0
320 28 0 0 7 4 3 0 0 0
324 14 0 0 7 5 4 0 0 0
329 42 5 4 14 0 0 21 0 0
331 14 0 0 0 0 0 0 0 0
356 35 6 4 7 0 0 0 0 0
365 12 5 4 7 0 0 5 0 0
366 14 0 0 0 0 0 0 0 0
368 18 2 2 0 0 0 10 0 0
371 6 0 0 4 0 0 0 0 0
374 20 0 0 5 3 2 0 0 0
378 5 0 0 0 0 0 0 0 0
381 15 3 2 5 0 0 0 0 0
384 20 0 0 5 0 0 5 0 0
386 17 5 4 7 0 0 0 0 0
390 5 3 2 0 0 0 0 0 0
409 35 0 0 5 0 0 0 0 0
410 10 0 0 10 3 1 0 0 0
412 5 0 0 0 0 0 5 0 0
415 5 0 0 0 0 0 5 0 0
417 90 3 2 10 0 0 55 0 0
422 20 4 2 10 0 0 0 0 0
fn=runtime.SetFinalizer.func1
368 14 2 2 6 0 0 2 0 0
369 6 0 0 2 0 0 4 1 1
370 6 2 2 4 0 0 0 0 0
fn=runtime.SetFinalizer.func2
417 55 6 4 35 0 0 5 0 0
418 65 0 0 25 0 0 30 1 0
fn=runtime.createfing
153 30 6 4 10 0 0 5 0 0
155 44 0 0 16 0 0 0 0 0
156 9 3 2 0 0 0 3 0 0
fn=runtime.queuefinalizer
77 12 2 2 4 0 0 2 0 0
78 4 0 0 2 0 0 0 0 0
88 6 2 2 0 0 0 4 1 0
89 6 0 0 2 2 1 0 0 0
90 4 0 0 2 1 0 0 0 0
91 7 1 1 1 0 0 5 0 0
92 2 0 0 1 1 1 1 1 1
93 2 0 0 1 0 0 1 0 0
94 4 1 1 1 1 1 0 0 0
105 258 0 0 0 0 0 0 0 0
106 1024 1 1 64 2 1 64 0 0
110 2 1 1 2 0 0 0 0 0
111 4 0 0 2 1 1 2 0 0
112 4 0 0 2 0 0 2 0 0
113 2 0 0 0 0 0 2 0 0
115 10 2 2 4 0 0 0 0 0
116 4 0 0 4 0 0 0 0 0
117 12 0 0 4 1 0 2 0 0
118 4 0 0 2 0 0 2 0 0
119 12 0 0 4 0 0 2 0 0
120 8 0 0 2 0 0 2 0 0
121 8 4 4 2 0 0 2 0 0
122 2 0 0 0 0 0 2 1 0
123 6 0 0 0 0 0 4 0 0
124 6 0 0 4 0 0 0 0 0
fn=runtime.runfinq
161 8 2 1 2 0 0 1 1 0
168 15 0 0 0 0 0 10 1 0
169 7 0 0 5 5 1 2 0 0
170 5 0 0 0 0 0 5 0 0
171 10 0 0 0 0 0 0 0 0
172 3 0 0 3 0 0 0 0 0
173 11 4 4 3 0 0 3 0 0
174 3 0 0 0 0 0 3 1 0
175 3 0 0 0 0 0 0 0 0
176 2 0 0 0 0 0 0 0 0
178 6 0 0 0 0 0 4 0 0
179 8 2 2 6 0 0 0 0 0
182 18 2 2 6 0 0 2 0 0
183 18 0 0 6 2 2 0 0 0
184 12 2 2 0 0 0 4 0 0
186 8 0 0 2 0 0 2 0 0
187 22 2 2 2 2 2 9 0 0
192 5 2 1 1 0 0 4 0 0
193 1 0 0 0 0 0 0 0 0
196 8 1 0 4 2 0 0 0 0
203 19 6 5 2 0 0 11 4 3
204 6 2 2 4 2 2 0 0 0
205 4 2 2 0 0 0 0 0 0
207 10 0 0 4 0 0 2 0 0
208 4 0 0 0 0 0 0 0 0
221 2 2 2 0 0 0 2 0 0
222 23 0 0 7 1 1 12 0 0
223 2 2 2 0 0 0 2 0 0
229 9 1 1 2 0 0 2 0 0
230 8 1 1 0 0 0 2 0 0
231 8 0 0 0 0 0 2 0 0
232 7 2 1 7 0 0 0 0 0
234 4 0 0 2 0 0 2 0 0
235 6 0 0 0 0 0 4 0 0
236 6 0 0 4 2 1 2 0 0
237 2 0 0 0 0 0 2 0 0
238 6 2 1 0 0 0 4 0 0
fn=runtime.wakefing
136 12 2 2 4 0 0 2 0 0
138 6 2 2 0 0 0 4 0 0
139 8 0 0 4 0 0 0 0 0
140 2 0 0 0 0 0 2 0 0
141 2 0 0 0 0 0 2 0 0
142 2 0 0 2 2 0 0 0 0
144 6 2 2 0 0 0 4 0 0
145 12 0 0 6 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/mfixalloc.go
fn=runtime.(*fixalloc).alloc
64 270660 1254 105 90220 0 0 45110 223 2
65 180440 1113 112 90220 1395 184 0 0 0
70 135400 0 0 45110 688 98 70 0 0
72 2960 0 0 1480 1479 1130 1480 0 0
73 2960 0 0 2960 0 0 0 0 0
74 2960 0 0 1480 1 0 0 0 0
75 350 65 6 70 0 0 210 0 0
77 5990 0 0 3030 0 0 1480 0 0
79 130890 998 99 43630 0 0 0 0 0
80 2896 273 89 1086 1 0 1810 0 0
81 724 0 0 0 0 0 362 0 0
84 86828 79 29 43630 0 0 42836 149 5
85 130890 0 0 43630 0 0 0 0 0
86 257016 0 0 85672 675 95 128508 0 0
88 130096 0 0 130096 15 2 0 0 0
89 87260 0 0 87260 0 0 0 0 0
90 87260 0 0 87260 0 0 0 0 0
91 217356 81 35 130096 0 0 43630 0 0
fn=runtime.(*mheap).freeSpanLocked
95 57056 0 0 42792 65 6 14264 0 0
97 28528 0 0 14264 0 0 14264 1 1
98 14264 0 0 0 0 0 14264 0 0
fn=runtime.(*mheap).init
53 5 0 0 0 0 0 5 2 2
54 12 3 3 5 1 0 1 1 1
55 5 0 0 0 0 0 5 0 0
57 6 0 0 0 0 0 5 1 1
58 5 2 2 0 0 0 5 0 0
59 5 0 0 0 0 0 5 1 1
60 18 2 2 5 0 0 5 1 1
61 5 0 0 0 0 0 5 1 1
fn=runtime.freespecial
95 921 0 0 614 146 10 307 0 0
97 921 42 25 614 0 0 307 0 0
98 307 0 0 0 0 0 307 0 0
fl=.//usr/lib/golang/src/runtime/mgc.go
fn=runtime.(*gcControllerState).endCycle
559 150 40 36 60 0 0 20 0 0
560 40 0 0 20 0 0 0 0 0
565 50 1 1 30 10 8 10 0 0
584 10 10 9 0 0 0 10 2 1
585 150 10 9 40 8 2 20 0 0
586 20 10 9 20 0 0 0 0 0
591 20 0 0 0 0 0 0 0 0
592 100 0 0 30 10 7 0 0 0
595 120 0 0 30 0 0 0 0 0
599 40 10 9 10 0 0 10 0 0
601 20 0 0 10 1 0 0 0 0
626 50 10 9 30 0 0 10 0 0
903 130 10 9 20 18 3 0 0 0
904 30 0 0 0 0 0 0 0 0
fn=runtime.(*gcControllerState).enlistWorker
634 93270 399 55 31090 0 0 15545 0 0
645 46635 0 0 31090 5283 12 0 0 0
649 31090 0 0 15545 0 0 0 0 0
652 15545 0 0 15545 0 0 0 0 0
653 124360 122 26 31090 5626 164 0 0 0
656 46635 0 0 15545 9580 226 15545 0 0
657 312131 311 22 28901 0 0 1555 0 0
658 149658 373 39 74829 0 0 0 0 0
659 154418 0 0 307 0 0 0 0 0
660 70376 0 0 0 0 0 0 0 0
662 453427 11 9 224487 19255 658 0 0 0
663 149658 0 0 74829 58693 3432 0 0 0
666 6527 0 0 1555 0 0 3110 0 0
667 3744 0 0 2496 2 1 0 0 0
fn=runtime.(*gcControllerState).findRunnableGCWorker
674 318 54 52 106 0 0 53 0 0
675 106 0 0 53 0 0 0 0 0
678 212 0 0 106 13 2 0 0 0
682 36 12 11 18 0 0 9 0 0
685 123 16 15 0 0 0 0 0 0
690 155 12 12 62 0 0 31 0 0
694 13 0 0 0 0 0 0 0 0
695 78 0 0 26 0 0 0 0 0
704 52 0 0 26 0 0 0 0 0
707 13 13 12 0 0 0 13 0 0
726 13 0 0 13 0 0 0 0 0
727 52 0 0 0 0 0 39 0 0
728 26 0 0 13 0 0 0 0 0
731 65 13 12 39 0 0 13 0 0
2018 6 0 0 0 0 0 0 0 0
2021 43 0 0 0 0 0 0 0 0
2024 137 11 10 84 0 0 0 0 0
fn=runtime.(*gcControllerState).revise
489 10855 156 39 10855 34 2 0 0 0
490 21710 0 0 0 0 0 0 0 0
495 10855 0 0 10855 0 0 0 0 0
499 10855 0 0 10855 3376 30 0 0 0
510 134890 222 69 21710 2880 42 0 0 0
512 37949 0 0 9260 752 8 0 0 0
517 59542 0 0 8506 2748 35 0 0 0
530 24059 0 0 21710 1390 3 0 0 0
531 10855 126 37 0 0 0 0 0 0
544 13204 0 0 0 0 0 0 0 0
545 10855 0 0 0 0 0 0 0 0
554 75985 0 0 0 0 0 10855 2224 8
555 65130 55 4 0 0 0 10855 0 0
556 10855 0 0 10855 0 0 0 0 0
fn=runtime.(*gcControllerState).startCycle
412 120 20 18 40 0 0 20 0 0
413 60 0 0 20 0 0 20 20 15
416 20 0 0 0 0 0 20 0 0
418 20 0 0 0 0 0 20 0 0
427 80 20 18 40 19 0 0 0 0
428 6 0 0 0 0 0 6 0 0
436 100 0 0 40 20 10 0 0 0
437 80 0 0 20 0 0 20 0 0
438 120 20 18 20 20 13 0 0 0
440 120 20 18 40 16 7 0 0 0
451 60 0 0 0 0 0 20 20 16
455 40 20 18 20 0 0 0 0 0
461 1400 20 18 360 6 0 0 0 0
462 320 0 0 0 0 0 0 0 0
463 320 0 0 0 0 0 320 308 49
468 40 0 0 0 0 0 40 4 0
470 100 0 0 60 4 0 0 0 0
fn=runtime.GC
1063 60 20 18 20 0 0 10 0 0
1090 20 0 0 10 10 7 10 0 0
1091 20 0 0 0 0 0 20 5 4
1096 40 10 9 0 0 0 40 0 0
1099 60 3 2 20 3 2 30 0 0
1105 2508240 30 21 752466 72 6 250822 0 0
1106 250812 0 0 250812 70 0 0 0 0
1107 250812 0 0 0 0 0 0 0 0
1121 250902 0 0 250842 63 8 0 0 0
1128 10 0 0 0 0 0 0 0 0
1129 10 0 0 10 0 0 0 0 0
1130 20 0 0 0 0 0 0 0 0
1131 10 0 0 0 0 0 10 0 0
1133 10 0 0 0 0 0 0 0 0
fn=runtime.clearpools
2219 120 20 18 40 0 0 20 2 0
2221 60 20 18 20 15 8 0 0 0
2222 60 20 18 20 20 16 20 0 0
2229 60 0 0 0 0 0 40 0 0
2231 80 0 0 20 0 0 0 0 0
2235 60 20 18 20 0 0 20 0 0
2236 60 0 0 0 0 0 40 0 0
2240 80 0 0 0 0 0 40 0 0
2241 360 40 36 0 0 0 0 0 0
2245 500 0 0 100 0 0 0 0 0
2249 300 0 0 100 0 0 100 0 0
2251 60 0 0 0 0 0 40 0 0
2252 60 0 0 40 0 0 0 0 0
fn=runtime.findrunnable
2018 6 0 0 0 0 0 0 0 0
2021 112 51 39 0 0 0 0 0 0
2024 297 0 0 198 2 1 0 0 0
fn=runtime.gcAssistAlloc1
2021 947 0 0 0 0 0 0 0 0
2024 21 6 2 14 0 0 0 0 0
fn=runtime.gcBgMarkStartWorkers
1816 120 20 18 40 0 0 20 1 0
1819 1564 39 35 448 4 1 56 0 0
1820 960 0 0 320 319 268 0 0 0
1821 80 1 1 0 0 0 64 0 0
1822 64 0 0 0 0 0 48 0 0
1823 16 0 0 0 0 0 0 0 0
fn=runtime.gcBgMarkWorker
1844 96 1 1 32 0 0 16 0 0
1845 32 0 0 16 0 0 16 16 15
1854 96 1 1 32 0 0 32 0 0
1855 80 0 0 16 0 0 48 16 15
1856 96 1 1 48 0 0 32 0 0
1858 32 0 0 0 0 0 0 0 0
1859 16 0 0 0 0 0 0 0 0
1867 48 0 0 0 0 0 32 0 0
1873 294 41 34 42 1 0 210 0 0
1905 178 20 16 78 51 41 0 0 0
1912 52 0 0 0 0 0 0 0 0
1914 52 0 0 26 0 0 0 0 0
1918 26 0 0 0 0 0 0 0 0
1919 52 0 0 26 0 0 26 0 0
1921 104 20 18 52 4 2 0 0 0
1922 78 0 0 26 0 0 0 0 0
1927 286 22 20 26 0 0 182 0 0
1969 52 0 0 26 23 16 0 0 0
1970 52 0 0 52 23 16 0 0 0
1971 52 0 0 0 0 0 0 0 0
1972 26 0 0 26 0 0 0 0 0
1973 39 11 9 26 0 0 0 0 0
1974 26 23 15 0 0 0 0 0 0
1977 26 0 0 0 0 0 0 0 0
1978 39 0 0 26 0 0 0 0 0
1983 104 11 7 52 10 5 0 0 0
1984 78 0 0 26 0 0 0 0 0
1992 130 3 3 0 0 0 0 0 0
1997 22 0 0 0 0 0 0 0 0
1998 44 0 0 44 19 13 0 0 0
2000 22 0 0 0 0 0 22 0 0
2008 44 0 0 0 0 0 0 0 0
2009 44 10 8 0 0 0 0 0 0
2021 22 0 0 0 0 0 0 0 0
2024 66 0 0 44 0 0 0 0 0
fn=runtime.gcBgMarkWorker.func1
1878 84 7 5 84 5 3 0 0 0
1887 126 0 0 42 0 0 0 0 0
1888 38 0 0 0 0 0 0 0 0
1889 38 0 0 0 0 0 0 0 0
1893 114 0 0 38 0 0 0 0 0
1899 84 0 0 42 0 0 42 0 0
fn=runtime.gcBgMarkWorker.func2
1927 260 42 40 104 0 0 78 0 0
1935 104 0 0 0 0 0 78 0 0
1936 78 0 0 52 0 0 0 0 0
1939 52 22 21 0 0 0 0 0 0
1940 65 0 0 0 0 0 52 0 0
1941 39 2 2 26 0 0 0 0 0
1947 3 0 0 0 0 0 2 0 0
1948 1 0 0 0 0 0 0 0 0
1949 4 1 1 2 0 0 2 0 0
1950 2 0 0 0 0 0 0 0 0
1955 3 0 0 0 0 0 2 0 0
1959 52 9 8 13 3 1 39 0 0
1960 26 11 8 0 0 0 0 0 0
1962 26 0 0 0 0 0 0 0 0
1963 65 10 10 0 0 0 39 0 0
1965 130 20 16 26 0 0 78 0 0
1966 78 0 0 52 20 15 0 0 0
fn=runtime.gcMark
2033 120 20 18 40 0 0 20 0 0
2034 40 0 0 20 0 0 0 0 0
2038 40 0 0 20 0 0 0 0 0
2041 40 20 18 20 0 0 20 1 0
2044 140 0 0 60 20 0 20 0 0
2049 40 0 0 20 0 0 0 0 0
2054 40 20 18 20 0 0 0 0 0
2064 3040 20 18 1320 0 0 680 0 0
2070 1280 20 18 640 0 0 0 0 0
2075 1600 0 0 320 320 0 640 0 0
2078 960 0 0 320 0 0 0 0 0
2099 640 0 0 0 0 0 640 0 0
2102 20 0 0 0 0 0 20 0 0
2104 20 0 0 0 0 0 20 0 0
2107 40 0 0 20 0 0 20 0 0
2112 40 20 18 20 0 0 20 0 0
2113 40 0 0 20 2 0 20 0 0
2115 100 0 0 60 0 0 0 0 0
fn=runtime.gcMarkDone
1430 180 25 19 62 0 0 29 0 0
1433 29 0 0 0 0 0 0 0 0
1442 488 42 27 144 4 1 0 0 0
1443 9 7 2 0 0 0 0 0 0
1444 72 24 17 18 9 3 0 0 0
1448 45 0 0 0 0 0 45 0 0
1449 135 0 0 0 0 0 90 0 0
1497 90 23 19 45 0 0 0 0 0
1521 20 0 0 0 0 0 0 0 0
1522 20 0 0 0 0 0 20 20 16
1523 20 0 0 0 0 0 20 0 0
1524 180 40 36 60 0 0 40 0 0
1525 40 0 0 20 0 0 0 0 0
1528 60 0 0 0 0 0 40 0 0
1567 20 1 0 0 0 0 20 2 0
1568 180 20 18 0 0 0 100 16 2
1577 40 0 0 20 0 0 0 0 0
1589 60 20 18 40 0 0 0 0 0
1593 20 0 0 0 0 0 20 0 0
1598 20 0 0 0 0 0 0 0 0
1602 40 0 0 0 0 0 40 0 0
1607 80 0 0 20 0 0 40 0 0
1610 40 0 0 0 0 0 40 0 0
1611 60 20 18 40 21 11 0 0 0
2021 45 0 0 0 0 0 0 0 0
2024 135 20 18 90 0 0 0 0 0
fn=runtime.gcMarkDone.func1
1449 270 25 21 90 0 0 45 0 0
1450 180 0 0 135 0 0 45 0 0
1455 180 20 19 0 0 0 135 0 0
1456 135 0 0 0 0 0 90 0 0
1494 225 12 3 45 1 1 135 0 0
1495 135 23 20 90 5 1 0 0 0
fn=runtime.gcMarkDone.func1.1
1456 4320 24 22 1440 3 0 720 0 0
1459 2160 0 0 720 0 0 1440 2 2
1474 3600 27 22 1440 335 1 1440 0 0
1476 2160 0 0 1440 0 0 0 0 0
1477 102 0 0 68 1 0 0 0 0
1478 2194 0 0 1440 0 0 34 0 0
fn=runtime.gcMarkDone.func2
1568 160 1 0 60 0 0 40 1 0
1569 3040 40 38 1320 0 0 680 0 0
1570 640 0 0 0 0 0 640 0 0
1571 640 0 0 320 0 0 0 0 0
1572 380 20 19 360 0 0 0 0 0
fn=runtime.gcMarkTermination
277 60 20 18 40 0 0 0 0 0
278 160 20 18 20 0 0 20 0 0
279 60 0 0 0 0 0 20 0 0
1613 140 20 18 40 0 0 20 0 0
1616 60 0 0 40 0 0 0 0 0
1617 20 0 0 0 0 0 0 0 0
1619 40 20 18 20 0 0 20 1 0
1620 20 0 0 0 0 0 0 0 0
1622 20 0 0 0 0 0 0 0 0
1623 160 40 36 20 0 0 60 0 0
1624 40 0 0 20 0 0 20 0 0
1625 40 20 18 20 0 0 20 4 2
1626 60 0 0 40 0 0 20 0 0
1627 80 0 0 0 0 0 60 0 0
1628 40 20 18 20 0 0 20 0 0
1635 180 0 0 20 0 0 100 20 15
1646 60 20 18 0 0 0 40 1 0
1667 60 0 0 40 0 0 20 0 0
1668 100 0 0 20 0 0 60 0 0
1670 40 20 18 20 0 0 0 0 0
1675 100 0 0 40 0 0 40 0 0
1677 40 20 18 20 0 0 0 0 0
1682 40 0 0 20 20 8 20 0 0
1683 40 0 0 20 20 3 20 0 0
1686 60 0 0 20 0 0 40 0 0
1689 20 0 0 0 0 0 20 0 0
1692 20 0 0 0 0 0 0 0 0
1693 60 0 0 40 0 0 20 0 0
1694 40 0 0 0 0 0 0 0 0
1695 100 0 0 60 0 0 0 0 0
1696 20 0 0 0 0 0 20 0 0
1697 60 20 18 40 0 0 0 0 0
1698 60 0 0 40 0 0 0 0 0
1699 80 0 0 40 5 0 20 20 18
1700 60 20 18 20 0 0 20 20 18
1701 60 0 0 40 0 0 20 0 0
1704 100 0 0 60 0 0 20 0 0
1707 60 20 18 60 0 0 0 0 0
1708 80 0 0 40 0 0 20 0 0
1709 40 0 0 0 0 0 0 0 0
1710 40 0 0 20 0 0 20 0 0
1713 100 20 18 60 1 0 0 0 0
1714 120 0 0 0 0 0 20 0 0
1718 20 0 0 0 0 0 20 0 0
1720 40 20 18 20 0 0 0 0 0
1721 10 0 0 10 0 0 0 0 0
1725 60 0 0 0 0 0 40 0 0
1726 20 0 0 20 0 0 0 0 0
1727 60 0 0 0 0 0 40 0 0
1728 60 0 0 0 0 0 40 0 0
1733 20 20 18 0 0 0 20 0 0
1735 60 0 0 0 0 0 40 0 0
1740 20 1 0 0 0 0 20 0 0
1744 20 0 0 0 0 0 20 0 0
1747 60 0 0 0 0 0 40 1 0
1753 60 0 0 0 0 0 40 0 0
1762 40 20 18 20 1 1 0 0 0
1799 20 20 18 0 0 0 0 0 0
1802 20 0 0 0 0 0 0 0 0
fn=runtime.gcMarkTermination.func1
1635 140 40 38 60 0 0 20 0 0
1636 40 0 0 0 0 0 40 0 0
1644 60 0 0 40 0 0 0 0 0
fn=runtime.gcMarkTermination.func2
277 60 0 0 40 0 0 0 0 0
278 160 20 19 20 0 0 20 0 0
279 80 0 0 20 0 0 20 0 0
1646 120 20 19 40 0 0 20 0 0
1647 40 0 0 20 0 0 20 20 15
1648 40 0 0 20 0 0 0 0 0
1663 20 0 0 0 0 0 0 0 0
1664 60 0 0 20 0 0 40 0 0
1665 60 0 0 40 0 0 0 0 0
fn=runtime.gcMarkTermination.func3
1735 160 40 38 40 0 0 60 0 0
fn=runtime.gcMarkTermination.func4
1753 120 40 36 40 0 0 20 0 0
1754 60 0 0 0 0 0 40 0 0
1757 60 15 11 40 13 10 0 0 0
fn=runtime.gcMarkTermination.func4.1
1754 1920 6 3 640 1 0 320 0 0
1755 1280 0 0 640 300 0 640 0 0
1756 960 0 0 640 2 0 0 0 0
fn=runtime.gcResetMarkState
2184 120 40 36 40 0 0 20 0 0
2187 60 0 0 0 0 0 40 0 0
2188 1940 20 18 495 74 63 0 0 0
2189 455 0 0 0 0 0 455 412 378
2190 455 0 0 0 0 0 455 436 384
2192 60 0 0 0 0 0 40 0 0
2196 60 0 0 0 0 0 40 0 0
2197 80 0 0 40 20 14 40 0 0
2198 60 20 18 0 0 0 40 0 0
2199 648 20 18 304 20 16 66 0 0
2200 330 0 0 132 6 4 0 0 0
2201 330 0 0 0 0 0 198 0 0
2206 20 0 0 0 0 0 20 20 14
2207 40 20 17 20 8 0 20 11 7
2208 60 0 0 40 0 0 0 0 0
fn=runtime.gcSetTriggerRatio
763 126 42 36 42 0 0 21 0 0
768 84 0 0 21 0 0 0 0 0
769 189 21 18 21 0 0 0 0 0
773 21 0 0 0 0 0 0 0 0
774 84 0 0 21 13 3 0 0 0
777 42 0 0 21 8 4 0 0 0
778 83 0 0 21 0 0 0 0 0
794 42 21 18 21 0 0 0 0 0
795 83 20 17 0 0 0 0 0 0
807 42 1 1 0 0 0 21 0 0
814 42 0 0 21 0 0 0 0 0
815 252 21 18 63 30 18 0 0 0
817 21 0 0 21 16 9 0 0 0
818 21 0 0 0 0 0 0 0 0
824 40 20 18 20 0 0 0 0 0
825 40 0 0 0 0 0 0 0 0
829 62 0 0 0 0 0 0 0 0
832 42 21 18 0 0 0 0 0 0
836 21 0 0 0 0 0 0 0 0
845 42 0 0 0 0 0 42 3 2
846 42 0 0 0 0 0 21 0 0
847 42 0 0 21 0 0 0 0 0
852 42 0 0 21 0 0 0 0 0
857 21 0 0 0 0 0 0 0 0
858 2 0 0 0 0 0 1 0 0
865 20 0 0 20 0 0 0 0 0
866 20 0 0 0 0 0 0 0 0
870 20 20 18 0 0 0 0 0 0
871 40 0 0 0 0 0 0 0 0
875 20 0 0 20 0 0 0 0 0
876 20 0 0 20 0 0 0 0 0
877 20 0 0 0 0 0 0 0 0
878 20 0 0 0 0 0 0 0 0
881 160 0 0 0 0 0 20 0 0
882 20 0 0 0 0 0 20 0 0
886 60 0 0 40 0 0 0 0 0
890 21 0 0 0 0 0 21 17 15
891 63 0 0 42 0 0 0 0 0
fn=runtime.gcStart
277 60 0 0 40 0 0 0 0 0
278 120 20 18 20 0 0 20 0 0
279 60 0 0 0 0 0 20 0 0
1200 65832 40 36 32916 0 0 0 0 0
1204 32916 0 0 10972 0 0 0 0 0
1209 60 0 0 40 0 0 0 0 0
1210 21904 0 0 0 0 0 0 0 0
1215 10952 0 0 10952 0 0 0 0 0
1216 21904 20 18 0 0 0 0 0 0
1218 76654 0 0 21914 0 0 0 0 0
1229 120 30 27 40 0 0 20 0 0
1234 20 0 0 0 0 0 0 0 0
1235 180 20 18 80 0 0 0 0 0
1239 20 0 0 0 0 0 0 0 0
1252 98568 10 9 10952 0 0 10952 5 5
1253 10932 0 0 10932 1 1 0 0 0
1258 20 0 0 0 0 0 0 0 0
1260 80 0 0 0 0 0 0 0 0
1266 60 20 18 20 0 0 20 0 0
1273 60 0 0 20 2 2 0 0 0
1275 20 20 18 0 0 0 0 0 0
1280 20 0 0 0 0 0 0 0 0
1282 40 20 18 20 4 0 0 0 0
1287 1400 0 0 360 45 13 0 0 0
1288 1600 0 0 960 592 259 0 0 0
1294 20 20 18 0 0 0 20 0 0
1296 60 1 0 0 0 0 40 0 0
1298 60 0 0 20 1 1 40 0 0
1299 60 0 0 20 0 0 0 0 0
1304 40 20 18 20 0 0 20 20 14
1305 20 0 0 0 0 0 20 0 0
1306 120 0 0 20 7 0 40 0 0
1308 20 0 0 0 0 0 20 0 0
1309 20 0 0 0 0 0 20 0 0
1310 20 0 0 0 0 0 20 0 0
1311 40 20 18 20 0 0 0 0 0
1314 60 0 0 0 0 0 40 0 0
1316 60 0 0 0 0 0 40 2 0
1321 20 0 0 0 0 0 20 0 0
1323 20 0 0 20 0 0 0 0 0
1325 60 20 18 0 0 0 40 0 0
1326 40 0 0 20 0 0 20 20 13
1331 100 20 18 40 5 0 0 0 0
1349 20 0 0 0 0 0 0 0 0
1351 20 0 0 0 0 0 0 0 0
1352 20 0 0 0 0 0 20 0 0
1359 20 0 0 0 0 0 20 0 0
1366 60 20 18 40 0 0 0 0 0
1370 40 0 0 20 5 0 20 0 0
1373 180 0 0 0 0 0 100 5 0
1381 20 0 0 0 0 0 0 0 0
1385 60 2 2 40 4 3 0 0 0
1840 20 0 0 0 0 0 20 0 0
1841 20 0 0 0 0 0 20 0 0
fn=runtime.gcStart.func1
1316 120 20 18 40 0 0 20 0 0
1317 20 0 0 0 0 0 20 3 0
1318 60 20 19 40 0 0 0 0 0
fn=runtime.gcStart.func2
1373 160 0 0 60 0 0 40 0 0
1374 120 20 19 60 0 0 60 1 0
1375 60 0 0 40 1 0 0 0 0
1376 40 0 0 20 0 0 20 0 0
1377 60 0 0 40 1 1 0 0 0
fn=runtime.gcSweep
2123 120 40 36 40 0 0 20 0 0
2124 40 0 0 20 0 0 0 0 0
2128 60 0 0 0 0 0 40 0 0
2129 60 0 0 20 20 0 20 0 0
2130 20 20 18 0 0 0 20 0 0
2131 140 0 0 20 19 10 0 0 0
2137 20 0 0 0 0 0 20 12 5
2138 160 20 18 80 40 30 60 0 0
2140 40 0 0 0 0 0 20 0 0
2141 60 0 0 0 0 0 40 0 0
2143 60 20 18 20 0 0 0 0 0
2166 60 40 36 0 0 0 40 0 0
2167 40 0 0 20 0 0 0 0 0
2168 20 0 0 0 0 0 20 0 0
2169 120 20 18 20 0 0 80 0 0
2171 60 0 0 0 0 0 40 0 0
2172 60 0 0 40 0 0 0 0 0
fn=runtime.gcWaitOnMark
1138 120 28 22 40 0 0 20 0 0
1139 20 0 0 0 0 0 0 0 0
1141 90 23 17 0 0 0 60 6 5
1142 30 0 0 30 0 0 0 0 0
1143 60 0 0 30 0 0 0 0 0
1145 30 0 0 0 0 0 0 0 0
1147 90 23 17 30 1 0 0 0 0
1149 60 0 0 0 0 0 40 0 0
1150 60 0 0 40 0 0 0 0 0
1155 10 0 0 10 0 0 0 0 0
1156 10 0 0 0 0 0 0 0 0
fn=runtime.gcenable
211 6 1 1 2 0 0 1 0 0
213 6 1 1 1 0 0 4 0 0
214 4 0 0 0 0 0 3 0 0
215 6 1 1 1 0 0 4 0 0
216 4 0 0 1 0 0 3 0 0
217 4 1 0 1 0 0 3 0 0
218 1 1 0 0 0 0 1 0 0
219 3 0 0 2 1 0 0 0 0
fn=runtime.gcinit
172 6 2 2 2 0 0 1 0 0
178 1 0 0 0 0 0 1 0 0
181 2 0 0 1 1 1 1 0 0
186 12 1 1 3 2 2 1 0 0
190 2 0 0 0 0 0 2 0 0
193 2 0 0 0 0 0 1 1 1
194 3 1 1 2 0 0 0 0 0
fn=runtime.handoffp
2018 25 0 0 8 0 0 0 0 0
2021 4 0 0 0 0 0 0 0 0
2024 9 0 0 6 0 0 0 0 0
fn=runtime.mallocgc
1200 287450 1482 136 141000 20514 131 0 0 0
1209 124704 0 0 83136 27 5 0 0 0
fn=runtime.readgogc
196 6 1 1 2 0 0 1 0 0
197 6 1 1 2 0 0 3 0 0
198 2 0 0 0 0 0 0 0 0
201 4 1 1 0 0 0 0 0 0
204 4 0 0 2 0 0 1 0 0
fn=runtime.setGCPercent.func1
224 10 2 2 4 0 0 3 0 0
225 3 0 0 0 0 0 2 0 0
226 3 0 0 2 0 0 1 0 0
227 3 0 0 2 0 0 0 0 0
230 2 1 1 1 0 0 1 0 0
231 7 0 0 0 0 0 1 0 0
233 3 0 0 1 0 0 2 0 0
234 3 1 1 0 0 0 2 0 0
235 3 0 0 2 0 0 0 0 0
fn=runtime.sysmon
1200 1493 334 103 867 47 18 0 0 0
1211 482 0 0 241 0 0 0 0 0
1214 241 151 41 241 172 15 0 0 0
1215 1848 0 0 450 29 6 0 0 0
fn=runtime/debug.setGCPercent
222 7 2 2 2 0 0 2 0 0
224 12 1 1 0 0 0 7 0 0
237 1 0 0 0 0 0 1 0 0
241 2 0 0 1 0 0 0 0 0
245 3 0 0 2 0 0 0 0 0
fn=sync.runtime_registerPoolCleanup
2215 6 2 2 2 0 0 1 0 0
2216 4 0 0 2 0 0 1 0 0
2217 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mgcmark.go
fn=runtime.gcAssistAlloc
382 15503 3162 55 4852 0 0 2426 1 1
385 12130 0 0 9704 820 7 0 0 0
386 9 1 0 6 0 0 0 0 0
388 16945 0 0 7265 10 4 0 0 0
389 12 2 2 8 0 0 0 0 0
398 4842 132 11 2421 0 0 0 0 0
399 9684 0 0 2421 1063 4 0 0 0
400 4852 0 0 0 0 0 0 0 0
402 12065 1548 34 4832 1206 24 0 0 0
411 2421 3 1 2421 991 12 0 0 0
413 4842 0 0 0 0 0 0 0 0
414 2948 0 0 0 0 0 0 0 0
416 14 1 0 4 0 0 2 0 0
419 2944 56 14 1472 0 0 0 0 0
421 7368 1159 13 2948 0 0 0 0 0
423 1474 0 0 0 0 0 0 0 0
425 2948 0 0 0 0 0 0 0 0
428 1472 0 0 0 0 0 0 0 0
431 4416 0 0 2944 0 0 0 0 0
435 2847 1096 47 949 358 8 0 0 0
441 9490 0 0 0 0 0 6643 7 4
447 4743 1076 44 1898 944 38 0 0 0
448 4741 417 20 949 935 15 949 0 0
449 949 0 0 0 0 0 0 0 0
450 14 0 0 0 0 0 7 0 0
453 2852 12 1 956 17 1 0 0 0
461 8 0 0 4 0 0 0 0 0
462 2 0 0 0 0 0 0 0 0
463 6 0 0 4 0 0 0 0 0
475 6 2 2 2 0 0 2 0 0
482 9052 71 18 2841 582 29 949 0 0
fn=runtime.gcAssistAlloc.func1
441 7592 654 34 3796 0 0 949 0 0
442 2847 0 0 0 0 0 2847 37 3
445 2847 0 0 1898 535 7 0 0 0
fn=runtime.gcAssistAlloc1
497 5694 417 17 1898 0 0 949 0 0
500 8535 39 15 1898 1 0 1896 47 3
502 2847 184 16 949 0 0 0 0 0
510 2 0 0 0 0 0 2 0 0
511 6 0 0 4 0 0 0 0 0
516 947 0 0 0 0 0 0 0 0
518 3788 39 15 1894 644 7 0 0 0
519 2841 0 0 947 0 0 0 0 0
525 4735 0 0 947 0 0 2841 0 0
526 1894 23 14 947 0 0 947 0 0
530 4735 0 0 2841 0 0 0 0 0
531 5682 0 0 1894 0 0 3788 535 6
533 4735 24 14 947 404 5 2841 0 0
541 8523 102 21 3788 1883 36 947 0 0
545 3788 0 0 1894 937 11 0 0 0
546 2841 0 0 947 0 0 0 0 0
552 5675 659 25 0 0 0 0 0 0
557 49 0 0 14 2 0 7 0 0
559 1894 0 0 947 0 0 0 0 0
560 2841 646 23 2841 933 20 0 0 0
561 2841 0 0 947 944 29 947 0 0
562 1894 0 0 0 0 0 0 0 0
563 1894 0 0 1894 0 0 0 0 0
564 3788 0 0 1894 0 0 947 0 0
fn=runtime.gcDrain
967 234 21 20 78 0 0 39 0 0
968 78 0 0 39 1 0 0 0 0
972 156 44 39 117 0 0 39 0 0
973 61344440 32 28 20930646 0 0 0 0 0
974 1487278 0 0 763829 0 0 0 0 0
975 13 0 0 0 0 0 0 0 0
977 91 0 0 78 0 0 13 0 0
983 143 0 0 39 0 0 0 0 0
984 13 10 9 0 0 0 0 0 0
985 26 0 0 0 0 0 0 0 0
993 182 17 16 78 12 9 0 0 0
994 6283 0 0 3581 1066 5 0 0 0
995 2715 0 0 1810 557 0 0 0 0
996 2715 13 12 905 0 0 0 0 0
999 3568 0 0 0 0 0 2676 0 0
1000 6528 4 4 1105 554 4 71 0 0
1007 101071248 0 0 40452182 925 215 0 0 0
1013 40412030 0 0 20206015 502 48 0 0 0
1014 1221 20 16 0 0 0 814 0 0
1017 20166027 9 5 0 0 0 0 0 0
1018 40412030 0 0 0 0 0 0 0 0
1019 120036 21 18 40012 0 0 80024 0 0
1020 80024 0 0 0 0 0 0 0 0
1024 108 0 0 0 0 0 72 0 0
1025 180 0 0 72 0 0 72 0 0
1028 40452042 0 0 0 0 0 0 0 0
1030 36 0 0 0 0 0 0 0 0
1032 60657949 22 19 40012 0 0 60617937 0 0
1037 100306510 1 1 40411958 794 177 0 0 0
1038 1446770 0 0 1446770 29244 355 0 0 0
1039 723385 0 0 0 0 0 0 0 0
1040 3616925 23 20 1446770 27 3 1446770 0 0
1041 723385 0 0 0 0 0 0 0 0
1043 63552837 44 39 21694060 0 0 20207310 0 0
1044 723385 0 0 0 0 0 723385 0 0
1046 2168873 0 0 0 0 0 0 0 0
1047 2564 0 0 1282 0 0 0 0 0
1048 40503966 25 21 20250244 1182 41 1321 0 0
1057 195 9 7 78 0 0 0 0 0
1058 50 16 13 50 0 0 0 0 0
1059 25 0 0 0 0 0 0 0 0
1060 59938705 0 0 19525212 0 0 20207347 0 0
1062 167 2 2 103 0 0 25 0 0
fn=runtime.gcDrainN
1079 5682 74 36 1894 0 0 947 0 0
1080 1894 0 0 947 0 0 0 0 0
1086 2841 0 0 1894 9 3 0 0 0
1088 3788 0 0 2841 0 0 947 0 0
1089 17998267 538 21 6927809 355 12 0 0 0
1091 2765126 250 17 1382563 912 22 0 0 0
1092 1731 23 18 0 0 0 1154 0 0
1100 1377067 0 0 0 0 0 0 0 0
1101 2765126 0 0 0 0 0 0 0 0
1102 16536 8 7 5512 0 0 11024 0 0
1103 11024 0 0 0 0 0 0 0 0
1106 792 0 0 0 0 0 528 0 0
1107 1320 0 0 528 0 0 528 0 0
1111 2765126 0 0 0 0 0 0 0 0
1116 774 0 0 516 87 2 0 0 0
1117 759 2 2 506 0 0 0 0 0
1118 759 0 0 253 0 0 0 0 0
1119 6271 0 0 5512 0 0 759 0 0
1120 253 0 0 0 0 0 0 0 0
1126 4146915 252 20 0 0 0 4146915 0 0
1129 6875972 0 0 2764610 136 6 0 0 0
1130 71106 0 0 71106 390 1 0 0 0
1131 5607179 35 9 1424200 68 0 1382563 0 0
1132 35553 0 0 0 0 0 35553 0 0
1140 5682 2 2 2841 0 0 947 409 6
fn=runtime.gcFlushBgCredit
625 4340460 21 19 1446820 394 12 723410 0 0
626 1446820 0 0 723410 59352 878 0 0 0
631 2170230 20 18 2170230 0 0 0 0 0
632 2170230 0 0 1446820 0 0 0 0 0
fn=runtime.gcMarkRootPrepare
57 80 20 18 0 0 0 0 0 0
60 40 20 18 0 0 0 20 0 0
61 20 0 0 0 0 0 20 0 0
64 160 0 0 20 20 18 0 0 0
65 40 0 0 40 20 18 0 0 0
66 40 0 0 20 0 0 0 0 0
67 40 20 18 0 0 0 20 0 0
71 160 0 0 20 0 0 0 0 0
72 40 0 0 40 0 0 0 0 0
73 40 0 0 20 0 0 0 0 0
74 40 0 0 0 0 0 20 0 0
88 100 0 0 20 0 0 20 0 0
97 40 0 0 20 20 0 20 0 0
99 20 0 0 0 0 0 20 0 0
100 140 20 18 100 0 0 20 0 0
101 20 0 0 20 0 0 0 0 0
fn=runtime.gcMarkTinyAllocs
1533 120 40 36 40 0 0 20 0 0
1534 1560 20 18 436 21 0 64 0 0
1535 332 0 0 320 237 0 12 0 0
1536 1600 0 0 320 169 54 0 0 0
1539 72 0 0 24 0 0 36 1 0
1540 24 0 0 12 0 0 0 0 0
1541 120 10 10 24 0 0 72 0 0
fn=runtime.gcParkAssist
584 12 2 2 4 0 0 2 0 0
585 6 0 0 0 0 0 4 0 0
589 6 0 0 2 2 0 0 0 0
590 6 2 2 0 0 0 4 0 0
591 8 0 0 4 0 0 2 0 0
fn=runtime.gcWakeAllAssists
571 150 20 18 60 0 0 20 0 0
572 60 0 0 0 0 0 40 2 0
573 20 10 8 0 0 0 20 0 0
574 60 0 0 0 0 0 40 0 0
575 60 0 0 0 0 0 40 0 0
576 60 0 0 40 0 0 0 0 0
fn=runtime.gcmarknewobject
1520 2130249 118 24 0 0 0 710083 0 0
1521 1420166 0 0 710083 35 3 0 0 0
1524 3550415 0 0 2130249 0 0 1420166 0 0
1525 2840332 0 0 2130249 0 0 0 0 0
1526 1420166 0 0 1420166 898 55 0 0 0
1527 1420166 0 0 1420166 0 0 0 0 0
1528 2130249 0 0 1420166 0 0 0 0 0
fn=runtime.greyobject
1396 295898826 74 48 98632942 1 0 49316471 0 0
1398 147949413 0 0 49316471 0 0 0 0 0
1401 49316471 0 0 0 0 0 0 0 0
1403 98632942 0 0 49316471 25 10 0 0 0
1427 98632942 646 34 49316471 38 15 0 0 0
1436 49316471 0 0 0 0 0 0 0 0
1437 48036027 6 2 32024018 0 0 0 0 0
1439 33304462 0 0 0 0 0 0 0 0
1442 66608924 0 0 0 0 0 0 0 0
1443 199826772 552 27 33304462 6242807 52246 0 0 0
1444 286471 21 18 572942 0 0 0 0 0
1449 87577287 9 7 33304462 0 0 0 0 0
1450 49344396 0 0 37008297 13 1 12336099 0 0
1451 37008297 0 0 24672198 0 0 0 0 0
1461 125767840 13 12 41936726 1 1 0 0 0
1462 169456 0 0 0 0 0 127092 11425 1128
fn=runtime.markroot
141 6870 26 18 2290 71 11 1145 0 0
145 2310 0 0 1145 0 0 20 0 0
146 4600 0 0 1145 0 0 20 0 0
147 4580 26 18 1145 0 0 0 0 0
148 4580 0 0 1145 635 3 0 0 0
149 3435 0 0 1145 0 0 0 0 0
152 4480 25 18 0 0 0 0 0 0
153 4580 0 0 1145 0 0 0 0 0
156 3435 26 18 0 0 0 0 0 0
157 3715 1 1 2370 651 8 60 0 0
158 280 20 18 120 43 21 120 0 0
161 3375 26 18 0 0 0 0 0 0
162 300 0 0 80 56 0 60 0 0
163 280 20 18 120 60 0 120 0 0
166 2210 21 18 0 0 0 0 0 0
167 170 20 18 48 20 16 14 0 0
168 28 0 0 14 13 12 0 0 0
169 154 14 14 14 0 0 84 0 0
172 2170 1 0 0 0 0 0 0 0
175 80 20 18 0 0 0 40 0 0
177 3195 0 0 0 0 0 0 0 0
179 3660 20 18 610 0 0 1830 502 3
184 1820 0 0 0 0 0 0 0 0
185 2730 20 18 1365 102 26 0 0 0
192 455 0 0 0 0 0 0 0 0
193 2715 0 0 440 0 0 0 0 0
194 240 0 0 120 0 0 120 0 0
199 5460 1 0 455 0 0 3185 0 0
fn=runtime.markroot.func1
199 4550 40 38 1820 0 0 1365 0 0
204 1820 0 0 1365 11 8 455 0 0
205 3189 24 19 447 0 0 455 0 0
206 455 0 0 0 0 0 0 0 0
208 435 30 19 0 0 0 0 0 0
218 4071 20 19 1365 0 0 2251 1 0
219 455 0 0 0 0 0 0 0 0
220 16 0 0 8 0 0 8 0 0
221 24 0 0 16 0 0 0 0 0
223 1341 0 0 894 0 0 0 0 0
226 1788 21 19 447 0 0 1341 0 0
227 894 3 0 447 0 0 447 0 0
228 3129 0 0 1341 0 0 1788 0 0
230 1788 0 0 894 0 0 0 0 0
fn=runtime.markrootBlock
241 240 40 36 80 0 0 40 0 0
250 120 0 0 40 0 0 0 0 0
251 120 0 0 40 0 0 0 0 0
254 80 0 0 40 0 0 0 0 0
255 40 0 0 0 0 0 0 0 0
257 80 20 18 0 0 0 0 0 0
258 80 0 0 0 0 0 0 0 0
262 360 0 0 40 0 0 240 0 0
263 120 0 0 80 6 0 0 0 0
fn=runtime.markrootFreeGStacks
269 120 40 36 40 0 0 20 0 0
271 60 0 0 0 0 0 40 0 0
272 40 0 0 20 20 2 20 0 0
273 20 0 0 0 0 0 20 0 0
274 60 0 0 0 0 0 40 0 0
275 20 20 18 0 0 0 0 0 0
276 60 20 18 40 0 0 0 0 0
fn=runtime.markrootSpans
299 3660 26 18 1220 0 0 610 0 0
313 1220 0 0 610 594 0 610 50 1
314 7930 20 18 1830 0 0 3050 2 0
323 933485 0 0 10624 36 1 4397 40 2
326 619070 0 0 309535 38152 34561 4397 3 0
330 1830828 0 0 0 0 0 0 0 0
334 2445501 60 54 614673 38485 35570 0 0 0
347 610276 0 0 305138 152001 139988 0 0 0
353 17588 0 0 0 0 0 13191 80 2
355 35475 20 18 13314 339 223 70 0 0
356 8900 0 0 4450 2431 1512 0 0 0
363 700 0 0 210 0 0 0 0 0
368 280 20 18 70 3 0 210 0 0
371 770 0 0 140 0 0 420 0 0
374 17588 0 0 4397 0 0 8794 0 0
fn=runtime.scanblock
1151 11748 21 18 3916 0 0 1958 0 0
1158 232994 42 36 9790 0 0 0 0 0
1160 230450 0 0 98374 1116 923 0 0 0
1161 173724 0 0 0 0 0 0 0 0
1162 24390 0 0 0 0 0 0 0 0
1163 66038 0 0 0 0 0 0 0 0
1165 1925667 0 0 64672 0 0 32336 40 0
1166 687454 21 19 0 0 0 32336 0 0
1168 548030 0 0 257847 40822 34690 64672 0 0
1169 451022 0 0 0 0 0 0 0 0
1170 291024 22 19 97008 0 0 129344 41 1
1171 45903 2 2 12519 0 0 29211 0 0
1172 89709 0 0 28824 40 1 0 0 0
1173 185 0 0 0 0 0 148 0 0
1177 359895 21 18 32336 0 0 0 0 0
1178 359895 0 0 32336 0 0 0 0 0
fn=runtime.scanframeworker
853 11872 21 18 3392 0 0 1696 0 0
858 10176 21 18 5088 0 0 0 0 0
859 6784 0 0 3392 0 0 0 0 0
901 21760 21 18 10176 0 0 11584 0 0
904 3392 0 0 0 0 0 0 0 0
905 1408 0 0 0 0 0 0 0 0
906 8448 21 18 2816 0 0 4224 0 0
910 4096 0 0 704 0 0 0 0 0
911 15290 21 18 5192 0 0 6732 0 0
915 5088 0 0 3392 0 0 0 0 0
919 19715 41 36 10264 91 74 1288 0 0
921 1288 0 0 1288 0 0 0 0 0
922 1288 0 0 0 0 0 0 0 0
923 4 0 0 4 0 0 0 0 0
925 644 0 0 0 0 0 0 0 0
926 1288 0 0 644 0 0 0 0 0
933 3864 0 0 644 0 0 2576 0 0
fn=runtime.scanobject
1189 151118478 437 33 43176708 12 0 21588354 0 0
1195 96 20 19 0 0 0 96 0 0
1196 21588354 0 0 0 0 0 0 0 0
1197 21588354 0 0 21588354 1437403 292436 0 0 0
1198 43176708 632 42 0 0 0 0 0 0
1202 64764069 0 0 0 0 0 0 0 0
1205 1962 0 0 0 0 0 0 0 0
1211 48 0 0 24 1 1 0 0 0
1222 5013 0 0 2010 0 0 0 0 0
1223 2907 20 19 0 0 0 0 0 0
1232 2979 1 0 1986 0 0 0 0 0
1233 993 0 0 0 0 0 0 0 0
1239 1572762230 766 61 99675782 0 0 254429261 270 7
1241 465681814 0 0 0 0 0 0 0 0
1243 249189455 0 0 199351564 2 2 0 0 0
1246 199351564 0 0 0 0 0 199351564 21 6
1251 931363628 444 33 0 0 0 0 0 0
1254 424350216 0 0 212175108 0 0 212175108 680 25
1260 210173735 0 0 130005813 41278396 40569668 0 0 0
1264 359695312 0 0 0 0 0 0 0 0
1274 448541019 85 33 149513673 0 0 199351564 395 17
1275 542435146 524 38 147936858 4 3 345186002 0 0
1279 93014575 91 39 93014575 364 20 0 0 0
1280 22510909 429 25 21588354 0 0 0 0 0
1281 64765062 0 0 43176708 226 9 0 0 0
fn=runtime.scanstack
685 3129 21 18 894 0 0 447 0 0
686 1341 20 18 447 0 0 0 0 0
691 1341 0 0 0 0 0 0 0 0
700 1335 42 36 0 0 0 0 0 0
704 1341 0 0 447 0 0 0 0 0
708 894 0 0 0 0 0 0 0 0
710 1332 31 18 0 0 0 888 20 4
713 3 0 0 0 0 0 3 0 0
716 3129 21 18 447 0 0 894 0 0
717 2232 0 0 1338 0 0 894 0 0
730 894 0 0 447 0 0 0 0 0
735 3576 21 18 447 0 0 2235 17 4
739 4470 21 18 0 0 0 4023 13 1
745 2682 21 18 447 0 0 1788 0 0
748 3129 21 18 1341 0 0 447 0 0
766 1341 24 18 447 0 0 0 0 0
776 447 0 0 0 0 0 0 0 0
778 2957 0 0 976 0 0 1005 0 0
779 484 0 0 0 0 0 0 0 0
782 148 25 18 37 0 0 74 0 0
783 74 0 0 0 0 0 0 0 0
786 17 0 0 17 0 0 0 0 0
787 34 0 0 0 0 0 0 0 0
791 8 0 0 0 0 0 0 0 0
801 8 0 0 8 8 6 0 0 0
803 32 0 0 8 0 0 0 0 0
817 16 0 0 16 0 0 0 0 0
818 8 0 0 0 0 0 0 0 0
821 80 8 7 16 0 0 48 0 0
824 32 8 7 8 0 0 8 0 0
831 2481 21 18 827 0 0 0 0 0
833 760 24 18 380 0 0 380 0 0
843 380 0 0 0 0 0 380 0 0
844 760 0 0 0 0 0 760 0 0
846 4023 21 18 2235 0 0 0 0 0
fn=runtime.scanstack.func1
735 13568 32 29 6784 0 0 1696 0 0
736 8480 0 0 1696 0 0 6784 0 0
737 6784 0 0 3392 0 0 1696 0 0
fl=.//usr/lib/golang/src/runtime/mgcscavenge.go
fn=runtime.(*mheap).grow
98 207 65 49 138 126 41 0 0 0
fn=runtime.(*pageAlloc).resetScavengeAddr
408 42 7 7 14 0 0 7 0 0
409 21 7 7 14 7 1 0 0 0
410 14 0 0 7 1 0 0 0 0
416 14 0 0 14 0 0 0 0 0
417 28 0 0 7 7 1 7 0 0
418 21 7 7 14 0 0 0 0 0
fn=runtime.(*pageAlloc).scavenge
371 7 1 1 2 0 0 1 0 0
373 5 0 0 1 0 0 1 0 0
374 8 1 1 3 0 0 4 0 0
375 2 0 0 0 0 0 0 0 0
381 5 0 0 3 0 0 1 0 0
fn=runtime.(*pageAlloc).scavengeOne
435 294 15 15 125 4 2 21 0 0
442 63 0 0 21 0 0 0 0 0
443 21 0 0 0 0 0 0 0 0
444 21 0 0 0 0 0 0 0 0
452 42 0 0 21 0 0 0 0 0
453 21 0 0 0 0 0 0 0 0
459 26 0 0 0 0 0 0 0 0
460 140 17 15 65 16 8 50 0 0
464 26 0 0 0 0 0 0 0 0
465 125 0 0 50 2 2 50 0 0
469 21 0 0 0 0 0 0 0 0
470 63 17 16 42 11 8 0 0 0
471 42 0 0 21 0 0 0 0 0
472 1 0 0 0 0 0 0 0 0
473 4 1 1 2 0 0 1 0 0
481 380 33 29 160 24 19 60 0 0
487 215 13 12 100 0 0 115 0 0
490 40 0 0 0 0 0 0 0 0
491 105 12 12 30 0 0 75 0 0
492 15 0 0 0 0 0 0 0 0
493 90 0 0 45 5 4 15 0 0
501 30 4 4 5 0 0 15 0 0
520 5 0 0 0 0 0 0 0 0
522 45 10 8 20 0 0 20 0 0
523 15 5 4 0 0 0 0 0 0
526 5 0 0 0 0 0 0 0 0
531 10 0 0 0 0 0 0 0 0
532 341 0 0 34 0 0 12 0 0
540 951 18 16 312 12 11 21 0 0
550 60 0 0 12 0 0 0 0 0
551 144 4 4 12 0 0 36 0 0
552 7 0 0 0 0 0 0 0 0
556 5 0 0 0 0 0 0 0 0
559 5 0 0 0 0 0 0 0 0
560 92 5 4 20 0 0 51 0 0
561 10 0 0 0 0 0 0 0 0
564 35 5 4 10 0 0 25 0 0
565 5 0 0 0 0 0 0 0 0
566 30 0 0 15 0 0 5 0 0
583 12 0 0 12 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne.func3
501 40 8 7 15 0 0 10 0 0
502 35 0 0 15 0 0 15 0 0
503 10 0 0 0 0 0 0 0 0
506 45 5 4 25 0 0 0 0 0
509 30 0 0 15 0 0 0 0 0
512 15 0 0 0 0 0 10 0 0
fn=runtime.(*pageAlloc).scavengeRangeLocked
596 120 32 29 40 0 0 20 0 0
597 160 0 0 40 0 0 80 0 0
600 100 0 0 20 0 0 0 0 0
603 80 15 14 20 0 0 20 0 0
607 40 0 0 20 0 0 0 0 0
610 120 14 14 20 0 0 80 0 0
614 100 0 0 20 0 0 60 0 0
615 60 0 0 40 0 0 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
728 150 15 15 50 0 0 25 0 0
729 150 15 14 25 0 0 0 0 0
732 50 0 0 0 0 0 0 0 0
741 75 0 0 25 0 0 0 0 0
744 25 0 0 0 0 0 0 0 0
747 50 0 0 25 0 0 0 0 0
749 548 16 15 207 0 0 79 0 0
751 848 15 14 222 29 23 222 0 0
752 74 0 0 0 0 0 0 0 0
756 25 0 0 0 0 0 0 0 0
758 25 4 3 10 0 0 10 0 0
764 265 14 14 100 0 0 60 0 0
765 40 0 0 0 0 0 0 0 0
766 100 0 0 20 0 0 20 0 0
767 180 17 15 0 0 0 0 0 0
770 20 0 0 0 0 0 0 0 0
789 139 17 15 74 0 0 25 0 0
792 100 0 0 20 0 0 0 0 0
799 80 0 0 40 0 0 0 0 0
806 20 0 0 0 0 0 0 0 0
807 20 0 0 0 0 0 0 0 0
811 60 0 0 0 0 0 0 0 0
825 120 0 0 40 0 0 40 0 0
fn=runtime.(*pallocData).hasScavengeCandidate
681 72 10 8 24 0 0 12 0 0
682 72 0 0 12 0 0 0 0 0
685 48 0 0 0 0 0 0 0 0
691 389 5 4 72 0 0 77 0 0
698 765 0 0 380 14 12 231 0 0
701 77 0 0 0 0 0 0 0 0
702 20 0 0 10 0 0 5 0 0
705 28 4 4 14 0 0 7 0 0
fn=runtime.bgscavenge
225 6 2 2 2 0 0 1 0 0
226 4 0 0 2 0 0 1 0 0
228 3 0 0 0 0 0 2 1 1
229 1 1 1 0 0 0 1 0 0
231 7 0 0 2 0 0 3 1 0
232 2 0 0 0 0 0 1 1 1
236 5 1 1 1 0 0 3 0 0
237 1 0 0 0 0 0 0 0 0
257 33 0 0 0 0 0 33 0 0
260 66 0 0 0 0 0 33 0 0
264 396 25 23 0 0 0 231 29 24
282 99 1 1 33 0 0 0 0 0
283 39 13 11 0 0 0 26 0 0
284 13 0 0 0 0 0 13 0 0
285 13 0 0 0 0 0 0 0 0
286 13 0 0 0 0 0 0 0 0
289 60 0 0 20 2 2 0 0 0
307 100 14 14 20 0 0 0 0 0
308 20 3 2 20 16 13 0 0 0
317 40 15 15 20 0 0 20 0 0
323 60 0 0 20 16 13 0 0 0
324 2 0 0 0 0 0 2 0 0
333 106 28 25 53 29 25 33 1 0
334 60 4 3 20 0 0 0 0 0
337 59 15 14 19 0 0 40 0 0
340 95 0 0 19 0 0 0 0 0
347 57 0 0 0 0 0 0 0 0
353 114 15 14 38 15 14 0 0 0
fn=runtime.bgscavenge.func1
232 78 8 8 26 0 0 13 0 0
233 13 0 0 0 0 0 13 0 0
234 39 9 8 26 0 0 0 0 0
fn=runtime.bgscavenge.func2
98 99 0 0 66 46 13 0 0 0
264 330 49 46 132 0 0 99 4 4
265 99 0 0 0 0 0 66 0 0
268 33 0 0 33 7 6 0 0 0
269 66 0 0 0 0 0 0 0 0
270 39 0 0 0 0 0 26 0 0
271 39 13 12 26 0 0 0 0 0
273 60 14 13 0 0 0 40 0 0
276 20 0 0 0 0 0 0 0 0
277 180 16 15 60 9 7 100 6 2
278 40 0 0 40 2 2 0 0 0
279 120 12 12 40 0 0 20 0 0
280 60 0 0 40 2 2 0 0 0
fn=runtime.fillAligned
625 1026 16 15 342 0 0 171 0 0
646 342 0 0 171 0 0 0 0 0
647 342 16 15 0 0 0 0 0 0
648 855 16 15 513 0 0 171 0 0
651 171 0 0 0 0 0 0 0 0
fn=runtime.gcPaceScavenger
98 60 0 0 40 19 11 0 0 0
111 126 21 18 42 0 0 21 0 0
116 83 21 18 21 0 0 0 0 0
117 1 1 1 0 0 0 1 0 0
118 3 0 0 2 0 0 0 0 0
121 180 0 0 20 0 0 0 0 0
122 200 20 18 40 0 0 0 0 0
127 80 20 18 0 0 0 0 0 0
130 120 0 0 20 15 4 0 0 0
143 20 0 0 0 0 0 0 0 0
148 61 7 7 7 0 0 0 0 0
149 13 0 0 0 0 0 13 0 0
150 39 0 0 26 0 0 0 0 0
152 7 0 0 0 0 0 7 0 0
153 21 0 0 0 0 0 14 0 0
154 21 0 0 14 0 0 0 0 0
fn=runtime.scavengeSleep
201 138 17 16 52 0 0 20 1 0
202 60 0 0 0 0 0 40 4 4
209 20 0 0 0 0 0 0 0 0
210 60 0 0 40 0 0 0 0 0
213 20 0 0 0 0 0 20 0 0
214 20 0 0 0 0 0 0 0 0
217 114 0 0 57 15 14 19 15 14
fn=runtime.wakeScavenger
168 204 28 23 68 0 0 34 0 0
169 102 0 0 0 0 0 68 2 2
170 68 0 0 34 0 0 0 0 0
177 33 27 22 33 0 0 0 0 0
185 33 0 0 0 0 0 33 0 0
186 132 0 0 0 0 0 66 0 0
190 102 1 1 0 0 0 68 0 0
191 102 0 0 68 0 0 0 0 0
fn=runtime.wakeScavenger.func1
186 198 27 25 66 0 0 33 0 0
187 165 14 13 33 0 0 132 2 2
188 99 0 0 66 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mgcstack.go
fn=runtime.(*stackScanState).addObject
165 644 0 0 0 0 0 644 0 0
276 3864 20 18 1288 0 0 644 0 0
277 1288 0 0 1288 0 0 0 0 0
278 1288 0 0 0 0 0 0 0 0
280 760 24 18 380 0 0 380 0 0
281 380 0 0 0 0 0 380 0 0
282 760 0 0 380 0 0 380 0 0
283 760 0 0 0 0 0 380 0 0
285 5744 21 18 1700 0 0 0 0 0
288 1288 21 18 0 0 0 0 0 0
296 2576 0 0 644 0 0 0 0 0
297 1288 0 0 0 0 0 644 0 0
298 2312 0 0 1024 0 0 644 101 55
299 1932 0 0 1288 205 172 644 0 0
300 644 0 0 0 0 0 0 0 0
302 644 31 18 644 0 0 0 0 0
303 1932 0 0 1288 0 0 0 0 0
fn=runtime.(*stackScanState).findObject
338 111 20 18 111 0 0 0 0 0
339 37 0 0 37 0 0 0 0 0
341 230 0 0 0 0 0 0 0 0
342 20 0 0 0 0 0 20 0 0
344 285 25 10 95 0 0 0 0 0
345 2 0 0 2 0 0 0 0 0
346 2 0 0 0 0 0 0 0 0
348 372 0 0 93 0 0 0 0 0
349 76 0 0 76 0 0 0 0 0
350 76 0 0 0 0 0 0 0 0
352 34 0 0 17 0 0 17 0 0
fn=runtime.(*stackScanState).getPtr
243 2904 42 36 968 0 0 484 0 0
244 9905 21 18 1415 0 0 1936 0 0
245 931 0 0 931 0 0 0 0 0
246 1862 0 0 0 0 0 0 0 0
250 130 0 0 65 0 0 0 0 0
251 84 0 0 28 0 0 0 0 0
256 28 0 0 0 0 0 28 0 0
257 28 0 0 28 0 0 0 0 0
258 28 0 0 0 0 0 28 0 0
259 56 0 0 0 0 0 0 0 0
264 111 20 18 37 0 0 37 0 0
265 333 0 0 111 0 0 74 0 0
268 1341 21 18 447 0 0 0 0 0
269 56 20 18 0 0 0 56 0 0
270 84 0 0 28 0 0 28 0 0
272 2235 1 0 894 0 0 894 0 0
fn=runtime.(*stackScanState).putPtr
208 296 20 18 111 0 0 37 0 0
209 222 20 18 148 0 0 0 0 0
212 37 0 0 0 0 0 0 0 0
213 37 0 0 0 0 0 0 0 0
216 74 0 0 37 0 0 37 0 0
217 74 0 0 0 0 0 0 0 0
219 56 20 18 28 0 0 28 0 0
220 56 0 0 0 0 0 28 0 0
222 84 0 0 28 0 0 28 0 0
223 18 0 0 9 0 0 0 0 0
234 176 20 18 65 0 0 37 0 0
235 37 0 0 37 0 0 0 0 0
236 111 0 0 74 0 0 0 0 0
fn=runtime.binarySearchTree
317 10410 52 36 3470 0 0 1735 0 0
318 5205 0 0 1735 0 0 0 0 0
319 8728 21 18 4364 0 0 3273 0 0
322 10304 21 18 3220 0 0 4508 0 0
323 5796 21 18 0 0 0 1288 0 0
324 644 0 0 0 0 0 0 0 0
325 1932 0 0 0 0 0 0 0 0
329 7728 24 18 3220 0 0 2576 0 0
330 2576 0 0 1932 0 0 644 0 0
331 644 0 0 0 0 0 644 0 0
332 4508 0 0 1932 0 0 1932 0 0
fn=runtime.scanstack
165 16 0 0 0 0 0 8 0 0
309 3576 24 18 1341 0 0 2235 0 0
fl=.//usr/lib/golang/src/runtime/mgcsweep.go
fn=runtime.(*mspan).ensureSwept
172 4332 529 150 1444 0 0 722 0 0
176 722 0 0 722 0 0 0 0 0
177 2166 0 0 1444 0 0 0 0 0
181 722 0 0 722 173 5 0 0 0
182 1444 0 0 1444 3 0 0 0 0
183 3532 602 93 0 0 0 0 0 0
184 2163 108 67 1442 0 0 0 0 0
187 6 0 0 1 0 0 0 0 0
188 3 1 1 0 0 0 3 0 0
189 3 0 0 2 0 0 0 0 0
fn=runtime.(*mspan).sweep
206 2172520 133 76 620720 21 4 310360 1176 7
209 310360 0 0 310360 0 0 0 0 0
210 931376 0 0 620868 16 2 0 0 0
213 620720 373 66 310360 7 0 310360 2269 38
214 2482880 0 0 931080 3482 1856 310360 0 0
219 620720 0 0 310360 23 0 0 0 0
223 931080 5103 69 931080 3458 2536 0 0 0
225 620720 0 0 310360 0 0 310360 15 1
226 620720 0 0 310360 37535 20803 310360 39 6
229 940174 0 0 620720 41 9 310360 1507 37
248 310360 0 0 0 0 0 0 0 0
249 310360 0 0 310360 84460 44408 0 0 0
250 945642 5114 73 0 0 0 0 0 0
252 22735 0 0 4547 2842 1755 0 0 0
253 9094 0 0 0 0 0 0 0 0
254 4547 0 0 0 0 0 0 0 0
255 4547 0 0 0 0 0 0 0 0
259 614 0 0 0 0 0 307 0 0
260 3367 41 22 612 33 15 0 0 0
261 614 0 0 307 0 0 0 0 0
263 2 0 0 0 0 0 0 0 0
269 3070 40 22 921 0 0 0 0 0
272 307 0 0 0 0 0 0 0 0
273 2149 32 22 614 0 0 307 0 0
276 614 0 0 307 0 0 307 0 0
277 6082 0 0 307 0 0 614 0 0
278 1842 0 0 307 0 0 1228 9 0
289 8480 0 0 4240 358 239 0 0 0
293 1551800 8563 189 620720 86 7 0 0 0
320 931080 362 62 310360 0 0 620720 2179 44
321 1602924 0 0 25586 0 0 0 0 0
322 144 1 1 48 0 0 48 0 0
325 1862064 215 56 620672 0 0 310360 0 0
326 620720 0 0 0 0 0 0 0 0
331 310360 0 0 0 0 0 310360 0 0
332 2559494 133 52 982156 3 1 1241440 0 0
333 310360 0 0 0 0 0 310360 0 0
334 620720 0 0 310360 0 0 0 0 0
340 620720 231 54 310360 0 0 310360 0 0
341 1862160 0 0 931080 73 8 931080 73 0
344 931080 229 54 0 0 0 931080 0 0
351 2482736 3 2 620672 72 11 310360 0 0
354 1424417 0 0 569951 0 0 0 0 0
361 854773 28 22 854773 0 0 0 0 0
364 1241440 84 12 310360 0 0 0 0 0
365 235001 332 44 51688 2398 81 25538 0 0
366 357532 185 21 102152 0 0 127690 0 0
368 569596 1994 28 0 0 0 0 0 0
385 96 18 14 48 0 0 0 0 0
389 285014 1976 41 0 0 0 144 0 0
391 96 0 0 96 23 7 0 0 0
392 144 0 0 96 2 1 0 0 0
393 48 0 0 0 0 0 0 0 0
395 916453 3096 66 0 0 0 295733 0 0
398 3278601 0 0 617004 0 0 887199 0 0
400 1537173 0 0 916453 42 5 310360 5 1
fn=runtime.bgsweep
64 6 1 1 2 0 0 1 0 0
65 4 0 0 2 0 0 1 1 1
67 3 1 1 0 0 0 2 1 1
68 1 0 0 0 0 0 1 0 0
69 5 0 0 1 0 0 3 0 0
70 1 0 0 0 0 0 0 0 0
73 37093 64 55 12351 0 0 12351 3 2
74 12331 0 0 12331 17 1 0 0 0
75 12331 0 0 0 0 0 0 0 0
77 88 1 1 22 0 0 44 1 1
78 2 0 0 0 0 0 0 0 0
80 60 0 0 0 0 0 40 0 0
81 20 0 0 0 0 0 0 0 0
88 20 5 5 0 0 0 20 0 0
89 20 0 0 0 0 0 0 0 0
167 20 0 0 20 0 0 0 0 0
fn=runtime.deductSweepCredit
420 282108 5485 194 94036 0 0 47018 5 2
421 235090 0 0 47018 15809 121 0 0 0
423 18807 3599 17 12538 0 0 0 0 0
426 81498 0 0 40749 9329 58 0 0 0
431 203745 3959 144 122247 0 0 40749 499 14
434 168055 0 0 86557 11709 88 0 0 0
435 371800 29012 133 45808 0 0 40749 0 0
436 239158 0 0 55926 0 0 0 0 0
437 15207 0 0 5069 0 0 5069 0 0
438 20 0 0 0 0 0 10 0 0
441 20236 0 0 10118 1 0 0 0 0
447 203745 24535 103 122247 0 0 0 0 0
fn=runtime.finishsweep_m
51 120 40 36 40 0 0 20 0 0
57 80 0 0 20 0 0 20 0 0
61 20 0 0 0 0 0 20 0 0
62 60 0 0 40 0 0 0 0 0
fn=runtime.gcSetTriggerRatio
167 42 21 18 42 0 0 0 0 0
fn=runtime.sweepone
95 1675284 3594 90 558428 0 0 279214 4 3
96 558368 0 0 279214 0 0 279154 14 0
97 558368 0 0 279214 66 1 279154 112 10
101 558428 0 0 558428 4 0 0 0 0
102 837642 0 0 279214 9 0 0 0 0
103 120 68 48 120 0 0 0 0 0
104 240 0 0 120 0 0 60 0 0
106 1116596 2606 33 558308 0 0 0 0 0
110 279154 0 0 279154 0 0 0 0 0
111 279154 0 0 0 0 0 0 0 0
112 3103760 0 0 0 0 0 0 0 0
113 962016 170 15 0 0 0 0 0 0
114 60 0 0 40 0 0 0 0 0
115 20 0 0 0 0 0 0 0 0
117 620720 0 0 0 0 0 0 0 0
121 990 0 0 165 17 7 0 0 0
127 2698572 2689 33 589329 39095 27784 0 0 0
134 279174 2702 30 0 0 0 0 0 0
135 558288 23 21 279134 202810 131249 279134 0 0
136 1395670 0 0 279134 0 0 837402 110 11
140 57564 1 1 43173 6 1 0 0 0
151 3600160 717 11 837462 27 0 0 0 0
152 40 0 0 20 2 0 0 0 0
153 279134 0 0 279134 0 0 0 0 0
156 837442 0 0 837442 64 7 0 0 0
157 1395750 847 31 558308 0 0 279154 0 0
fl=.//usr/lib/golang/src/runtime/mgcsweepbuf.go
fn=runtime.(*gcSweepBuf).block
154 3660 20 18 1220 0 0 610 25 2
157 6100 20 18 1830 298 0 0 0 0
162 1220 0 0 1220 0 0 0 0 0
163 610 0 0 0 0 0 0 0 0
164 610 0 0 610 599 78 0 0 0
167 1220 0 0 610 295 0 0 0 0
168 1240 0 0 0 0 0 0 0 0
170 1220 0 0 0 0 0 0 0 0
171 1180 0 0 0 0 0 0 0 0
173 40 0 0 0 0 0 0 0 0
175 3680 0 0 1220 0 0 1830 0 0
fn=runtime.(*gcSweepBuf).push
56 2040504 4872 211 680168 0 0 340084 0 0
58 1360336 0 0 1020252 18900 125 340084 14635 102
59 1700420 0 0 340084 0 0 340084 0 0
62 340084 0 0 340084 37 0 0 0 0
64 340084 0 0 0 0 0 0 0 0
65 680168 2471 106 0 0 0 0 0 0
66 339941 26694 102 339941 0 0 0 0 0
67 339941 0 0 0 0 0 0 0 0
68 679882 0 0 339941 20171 213 0 0 0
72 286 0 0 0 0 0 286 58 5
75 429 0 0 286 0 0 143 0 0
76 429 0 0 143 0 0 0 0 0
81 429 105 68 143 0 0 0 0 0
83 2 2 1 0 0 0 0 0 0
84 4 0 0 0 0 0 0 0 0
87 22 2 1 4 2 1 10 0 0
88 6 0 0 4 0 0 0 0 0
94 2 0 0 4 0 0 0 0 0
95 6 0 0 2 0 0 2 0 0
106 1144 0 0 286 141 62 715 0 0
107 286 0 0 143 0 0 0 0 0
109 143 0 0 286 59 19 0 0 0
110 429 0 0 429 0 0 0 0 0
111 286 0 0 0 0 0 286 0 0
116 1700420 36269 129 1020395 60312 42619 0 0 0
117 1020252 32120 124 680168 0 0 0 0 0
fn=runtime.gcMarkRootPrepare
147 120 20 18 20 16 4 0 0 0
fn=runtime.sweepone
123 1862280 2521 30 620760 1544 5 0 0 0
124 620760 0 0 0 0 0 0 0 0
125 60 0 0 40 0 0 0 0 0
131 931080 59 24 0 0 0 0 0 0
132 310360 0 0 310360 0 0 0 0 0
133 310360 0 0 310360 1610 94 0 0 0
134 620720 0 0 310360 40303 38495 0 0 0
136 310360 0 0 0 0 0 310360 0 0
fl=.//usr/lib/golang/src/runtime/mgcwork.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
379 158 5 5 63 0 0 0 0 0
fn=runtime.(*gcWork).balance
354 5904 80 49 1968 19 3 984 0 0
355 3936 0 0 1968 0 0 0 0 0
356 24 7 6 16 0 0 0 0 0
358 3904 0 0 1952 104 6 0 0 0
359 2 0 0 0 0 0 0 0 0
360 2 0 0 0 0 0 2 0 0
361 2 0 0 1 0 0 1 0 0
362 4 0 0 2 0 0 2 0 0
363 2925 43 21 975 86 2 0 0 0
364 786 0 0 0 0 0 0 0 0
365 1965 0 0 786 0 0 1179 0 0
366 393 0 0 0 0 0 393 0 0
368 1746 0 0 1164 0 0 0 0 0
371 2363 47 25 1182 127 19 0 0 0
372 1576 1 0 0 0 0 788 0 0
fn=runtime.(*gcWork).dispose
318 6240 35 20 2080 0 0 1040 0 0
319 4160 0 0 2080 619 119 0 0 0
320 72 0 0 36 33 5 0 0 0
321 60 3 2 0 0 0 60 0 0
323 12 4 2 0 0 0 12 0 0
324 18 0 0 6 0 0 6 0 0
326 72 3 0 36 0 0 36 0 0
328 36 0 0 36 0 0 0 0 0
329 72 0 0 36 34 6 0 0 0
330 70 0 0 0 0 0 70 0 0
332 2 0 0 0 0 0 2 0 0
333 3 0 0 1 0 0 1 0 0
335 72 0 0 36 0 0 36 0 0
337 3120 28 18 1040 0 0 0 0 0
342 90 10 5 90 3 1 0 0 0
343 45 0 0 0 0 0 45 0 0
345 3120 21 15 1040 0 0 0 0 0
346 36 0 0 36 0 0 0 0 0
347 3138 0 0 2080 0 0 18 0 0
fn=runtime.(*gcWork).init
116 216 34 27 72 0 0 36 0 0
117 144 0 0 72 0 0 72 1 0
118 72 0 0 36 0 0 36 0 0
119 72 0 0 0 0 0 0 0 0
120 66 10 9 22 0 0 22 0 0
122 72 3 3 36 0 0 36 0 0
123 108 0 0 72 0 0 0 0 0
fn=runtime.(*gcWork).put
176 254184 247 43 84728 0 0 42364 523 8
180 84728 0 0 84728 0 0 0 0 0
181 84728 0 0 0 0 0 0 0 0
182 26 13 12 0 0 0 26 1 0
183 52 0 0 26 0 0 0 0 0
185 84702 0 0 42351 0 0 0 0 0
186 127053 0 0 42351 0 0 84702 0 0
188 207510 357 49 55053 8605 368 12702 0 0
189 25404 0 0 0 0 0 25404 0 0
190 25404 0 0 12702 0 0 12702 0 0
191 25404 0 0 12702 0 0 12702 0 0
192 25404 0 0 12702 0 0 12702 0 0
193 12702 0 0 0 0 0 0 0 0
197 211820 13 12 84728 0 0 42364 0 0
198 42364 0 0 42364 0 0 0 0 0
204 237224 0 0 97430 5505 152 0 0 0
205 50808 0 0 0 0 0 25404 0 0
fn=runtime.(*gcWork).putBatch
231 89184 581 44 29728 1781 119 14864 0 0
232 44592 0 0 14864 0 0 0 0 0
233 35607 4050 35 23738 0 0 0 0 0
239 5990 0 0 5990 191 23 0 0 0
240 17970 604 22 5990 0 0 0 0 0
241 6 3 3 0 0 0 6 0 0
242 9 0 0 6 0 0 0 0 0
245 38747 59 26 3 0 0 16377 0 0
246 35020 539 18 8034 2786 2 5459 0 0
247 5150 0 0 0 0 0 5150 1 0
248 10609 529 17 8034 0 0 2575 0 0
249 15450 0 0 7725 0 0 7725 0 0
253 114330 0 0 5150 0 0 27295 579 7
254 16377 0 0 16377 0 0 0 0 0
255 76117 0 0 18952 0 0 0 0 0
258 30791 0 0 13898 68 0 5459 1 1
259 9796 216 8 0 0 0 4898 0 0
fn=runtime.(*gcWork).tryGet
269 274944 778 37 91648 0 0 45824 0 0
270 91648 0 0 91648 0 0 0 0 0
271 91648 560 36 0 0 0 0 0 0
272 40 19 11 0 0 0 40 0 0
273 60 0 0 40 0 0 0 0 0
276 91648 0 0 45824 0 0 0 0 0
277 199530 422 20 91636 0 0 107894 0 0
279 91636 0 0 45818 6910 836 0 0 0
281 48180 0 0 16258 0 0 31922 44 0
282 32516 0 0 0 0 0 0 0 0
283 2376 22 15 1188 0 0 594 0 0
285 46992 0 0 15664 0 0 31328 0 0
286 62656 0 0 31328 0 0 15664 0 0
290 135690 0 0 45230 0 0 45230 0 0
291 316610 21 10 135690 15716 4672 45230 0 0
fn=runtime.(*workbuf).checkempty
409 208176 81 32 69392 0 0 34696 78 4
410 208176 28 7 138784 0 0 0 0 0
fn=runtime.(*workbuf).checknonempty
403 188136 1117 51 62712 0 0 31356 2 0
404 188136 0 0 125424 0 0 0 0 0
fn=runtime.findrunnable
379 204 0 0 78 12 0 0 0 0
fn=runtime.freeSomeWbufs
527 132 36 33 44 2 0 22 0 0
529 66 0 0 0 0 0 44 14 12
530 63 0 0 22 2 0 0 0 0
531 9 0 0 0 0 0 6 0 0
532 12 3 3 6 0 0 3 0 0
534 171 18 17 19 0 0 114 0 0
545 19 0 0 0 0 0 0 0 0
546 57 0 0 0 0 0 38 0 0
547 76 0 0 38 0 0 19 0 0
fn=runtime.freeSomeWbufs.func1
534 542 36 24 224 0 0 38 1 0
535 76 18 17 57 0 0 19 10 3
536 1948 18 17 519 2 0 167 0 0
537 351 0 0 184 0 0 167 0 0
538 425 0 0 38 0 0 0 0 0
541 668 0 0 0 0 0 501 0 0
542 1169 0 0 167 0 0 668 0 0
fn=runtime.gcDrain
299 40413683 1 0 40413683 2 0 0 0 0
300 40412030 0 0 0 0 0 0 0 0
303 60658009 0 0 20206003 285 4 0 0 0
307 40332006 3 2 0 0 0 20166003 0 0
308 60498009 0 0 20166003 322167 89203 0 0 0
fn=runtime.gcDrainN
299 1383140 0 0 1383140 0 0 0 0 0
300 2765126 0 0 0 0 0 0 0 0
303 4153169 0 0 1382555 567 4 0 0 0
307 2754102 213 9 0 0 0 1377051 0 0
308 4131153 0 0 1377051 149580 52351 0 0 0
fn=runtime.gcMark
379 960 20 18 320 216 1 0 0 0
fn=runtime.gcMarkDone.func2
379 960 0 0 320 184 14 0 0 0
fn=runtime.getempty
418 96822 264 55 32274 0 0 16137 0 0
420 32447 0 0 16137 16 2 0 0 0
421 79820 341 31 15964 0 0 47892 5673 177
422 31928 0 0 0 0 0 0 0 0
423 47892 0 0 0 0 0 31928 0 0
426 48411 0 0 15964 0 0 173 0 0
428 173 0 0 0 0 0 173 0 0
429 346 29 19 173 172 15 0 0 0
430 18 6 3 0 0 0 12 1 0
431 12 0 0 6 0 0 6 0 0
432 12 0 0 0 0 0 0 0 0
433 24 3 3 0 0 0 18 0 0
434 36 0 0 6 0 0 18 0 0
436 24 0 0 0 0 0 12 0 0
438 346 0 0 173 0 0 0 0 0
439 1503 17 15 0 0 0 835 10 0
442 334 25 18 167 0 0 0 0 0
446 501 0 0 0 0 0 334 0 0
447 835 0 0 167 0 0 501 0 0
448 668 27 20 0 0 0 334 0 0
452 17127 0 0 2768 0 0 5536 0 0
453 8650 0 0 2768 0 0 2768 0 0
454 2768 0 0 0 0 0 2768 2768 2729
455 5536 0 0 0 0 0 5536 0 0
456 8304 0 0 2768 0 0 0 0 0
457 173 0 0 0 0 0 0 0 0
459 10380 0 0 2595 0 0 5190 0 0
463 70257 43 17 35215 0 0 18905 0 0
fn=runtime.getempty.func1
439 1336 46 34 501 0 0 334 0 0
440 1503 0 0 334 0 0 835 0 0
441 501 20 12 334 0 0 0 0 0
fn=runtime.greyobject
215 41936726 219 28 41936726 13 5 0 0 0
216 41936726 0 0 0 0 0 0 0 0
218 62947401 0 0 20968350 78 3 0 0 0
222 62820361 13 10 0 0 0 20925999 461525 88944
223 41851998 0 0 20925999 0 0 0 0 0
fn=runtime.handoff
496 2358 26 10 786 0 0 393 0 0
498 1179 0 0 393 0 0 786 6 0
499 2358 49 23 786 0 0 0 0 0
500 786 0 0 0 0 0 393 0 0
501 393 0 0 0 0 0 393 0 0
502 4323 51 26 393 0 0 1572 0 0
505 1179 0 0 393 0 0 786 0 0
506 1965 0 0 1179 0 0 393 0 0
fn=runtime.handoffp
379 36 0 0 15 11 2 0 0 0
fn=runtime.prepareFreeWorkbufs
512 120 20 18 40 0 0 20 0 0
513 60 20 18 0 0 0 40 0 0
514 40 0 0 20 20 0 0 0 0
520 20 0 0 0 0 0 20 0 0
521 100 0 0 0 0 0 60 0 0
522 60 18 16 0 0 0 40 0 0
523 60 0 0 40 0 0 0 0 0
fn=runtime.putempty
469 112392 431 31 37464 0 0 18732 0 0
470 56196 469 43 18732 0 0 37464 0 0
471 112392 0 0 37464 0 0 56196 0 0
472 56196 0 0 37464 0 0 0 0 0
fn=runtime.putfull
478 94068 394 34 31356 0 0 15678 100 6
479 47034 0 0 15678 0 0 31356 5541 174
480 94068 240 15 31356 0 0 47034 0 0
481 47034 0 0 31356 0 0 0 0 0
fn=runtime.scanobject
215 969 0 0 969 0 0 0 0 0
216 1938 0 0 0 0 0 0 0 0
218 2907 0 0 969 0 0 0 0 0
222 1938 0 0 0 0 0 969 75 40
223 1938 0 0 969 0 0 0 0 0
fn=runtime.trygetfull
486 97764 728 30 32588 0 0 16294 0 0
487 80854 646 44 16294 0 0 48266 20 0
488 32588 0 0 0 0 0 0 0 0
489 31356 0 0 0 0 0 31356 0 0
490 78390 0 0 47034 0 0 15678 0 0
492 2464 22 19 1232 0 0 616 0 0
fl=.//usr/lib/golang/src/runtime/mheap.go
fn=runtime.(*mSpanList).insert
1503 134280 1662 89 44760 0 0 22380 0 0
1504 201420 0 0 89520 8 3 22380 1 1
1508 67140 0 0 44760 0 0 22380 0 0
1509 67140 90 42 22380 0 0 0 0 0
1512 22186 0 0 0 0 0 22186 870 28
1515 388 0 0 0 0 0 194 0 0
1517 22380 0 0 0 0 0 22380 0 0
1518 22380 0 0 0 0 0 22380 0 0
1519 67140 0 0 44760 0 0 0 0 0
fn=runtime.(*mSpanList).insertBack
1521 426042 1322 47 142014 0 0 71007 0 0
1522 639063 327 70 284028 5 0 71007 0 0
1526 213021 0 0 142014 82 0 71007 0 0
1527 213021 0 0 71007 0 0 0 0 0
1529 70828 0 0 0 0 0 70828 6710 174
1532 358 35 27 0 0 0 179 0 0
1534 71007 0 0 0 0 0 71007 0 0
1535 71007 0 0 0 0 0 71007 0 0
1536 213021 0 0 142014 0 0 0 0 0
fn=runtime.(*mSpanList).remove
1478 381954 3466 165 127318 0 0 63659 1 0
1479 318295 0 0 190977 5229 2664 0 0 0
1484 127318 0 0 63659 753 17 0 0 0
1485 83790 0 0 41895 3502 1968 41895 0 0
1487 87056 791 9 43528 1420 854 21764 10522 7510
1489 127318 0 0 63659 0 0 0 0 0
1490 1798 0 0 899 0 0 899 0 0
1492 251040 1537 56 125520 0 0 62760 39576 24791
1495 127318 0 0 0 0 0 63659 0 0
1496 63659 0 0 0 0 0 63659 0 0
1497 190977 36 18 127318 0 0 0 0 0
fn=runtime.(*mSpanList).takeAll
1500 80 0 0 40 0 0 0 0 0
1541 40 20 18 20 0 0 0 0 0
1546 599 20 18 193 41 35 0 0 0
1547 173 0 0 0 0 0 173 173 158
1551 20 0 0 0 0 0 0 0 0
1552 90 18 10 36 0 0 36 0 0
1555 4 0 0 2 0 0 2 0 0
1556 6 0 0 4 0 0 2 2 2
1557 4 0 0 2 0 0 2 0 0
1560 40 0 0 0 0 0 20 0 0
1561 20 0 0 20 0 0 0 0 0
fn=runtime.(*mcentral).cacheSpan
515 46969 0 0 0 0 0 0 0 0
fn=runtime.(*mcentral).freeSpan
1469 2419 0 0 2419 0 0 0 0 0
fn=runtime.(*mcentral).grow
445 44302 0 0 44302 0 0 0 0 0
515 88604 0 0 0 0 0 0 0 0
535 132906 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).alloc
445 15538 0 0 15538 0 0 0 0 0
860 354808 6879 111 133053 90 19 44351 2 1
864 44351 0 0 0 0 0 44351 601 17
865 753967 35680 211 133053 0 0 443510 401 6
874 133053 0 0 44351 0 0 0 0 0
875 133053 0 0 44351 0 0 0 0 0
876 93228 1803 63 15538 0 0 46614 0 0
878 88702 0 0 44351 1 0 44351 10 2
880 221755 0 0 133053 44 5 44351 10 2
fn=runtime.(*mheap).alloc.func1
865 547048 72733 270 266106 0 0 147889 13501 61
868 133053 0 0 44351 5 1 0 0 0
869 78916 16120 63 0 0 0 59187 10255 41
871 502697 59 20 147889 37 1 310457 9706 72
872 133053 0 0 88702 55 2 0 0 0
fn=runtime.(*mheap).allocMSpanLocked
1015 5160 1535 227 1720 0 0 860 0 0
1016 2580 0 0 2580 68 53 0 0 0
1017 1720 0 0 0 0 0 0 0 0
1019 220 3 2 88 0 0 66 0 0
1022 2367 639 105 838 126 11 0 0 0
1024 178278 0 0 0 0 0 44224 0 0
1025 398016 0 0 221120 6 0 132672 5503 628
1027 691 651 102 0 0 0 691 5 0
1030 4190 99 15 1676 120 9 0 0 0
1031 838 0 0 0 0 0 838 0 0
1032 3352 0 0 1676 0 0 838 4 2
fn=runtime.(*mheap).allocManual
897 1068 36 17 356 0 0 178 0 0
898 2314 40 23 1068 0 0 1068 147 2
fn=runtime.(*mheap).allocNeedsZero
535 133596 0 0 0 0 0 0 0 0
927 267174 433 99 89058 0 0 44529 0 0
928 445299 4016 93 133587 0 0 0 0 0
929 44532 0 0 0 0 0 0 0 0
930 267192 1443 95 89064 167 83 0 0 0
932 89064 0 0 44532 26905 168 0 0 0
933 89064 0 0 0 0 0 0 0 0
934 89064 0 0 0 0 0 0 0 0
952 133596 4978 120 0 0 0 0 0 0
953 133599 0 0 0 0 0 0 0 0
958 178125 0 0 0 0 0 0 0 0
959 144730 0 0 28946 0 0 0 0 0
974 104650 0 0 0 0 0 0 0 0
975 89064 0 0 0 0 0 0 0 0
977 267180 0 0 89058 0 0 44529 0 0
fn=runtime.(*mheap).allocSpan
342 311703 0 0 222645 3 0 44529 0 0
445 177938 299 40 177938 7 0 0 0 0
515 183775 13 9 50599 0 0 0 0 0
535 133053 0 0 0 0 0 0 0 0
664 44351 0 0 0 0 0 0 0 0
665 221755 0 0 88702 0 0 0 0 0
666 133053 0 0 0 0 0 0 0 0
667 221755 0 0 0 0 0 0 0 0
993 133077 0 0 133077 0 0 0 0 0
996 222485 0 0 44359 22981 198 0 0 0
1000 174676 485 75 43669 22056 706 0 0 0
1001 43669 0 0 0 0 0 43669 0 0
1075 546020 7474 213 228069 5 2 44529 3329 20
1077 89058 0 0 44529 0 0 44529 143 3
1081 89058 0 0 89058 12 1 0 0 0
1082 222662 4835 62 44507 0 0 0 0 0
1083 45295 0 0 827 0 0 0 0 0
1086 44468 0 0 0 0 0 0 0 0
1087 3308 179 61 1654 399 1 1654 382 11
1088 9097 0 0 4135 53 0 4135 53 0
1089 3491 788 137 827 7 0 1654 0 0
1093 223167 0 0 89763 46 1 133404 37374 164
1094 89045 36529 154 0 0 0 0 0 0
1095 87338 0 0 0 0 0 0 0 0
1097 296857 35563 124 43669 16 6 0 0 0
1118 25236 0 0 12618 3852 36 12618 2 0
1120 25236 28 20 6309 0 0 6309 31 0
1122 1530 51 15 680 0 0 680 0 0
1123 340 84 55 0 0 0 0 0 0
1124 483 0 0 207 16 0 207 0 0
1128 483 69 56 276 14 0 207 0 0
1129 138 0 0 0 0 0 0 0 0
1134 25236 3996 124 6309 0 0 6309 0 0
1137 4300 606 92 1720 0 0 1720 0 0
1139 6309 0 0 0 0 0 0 0 0
1144 30685 5261 122 30685 3760 125 0 0 0
1145 18411 0 0 12274 0 0 6137 0 0
1146 24548 4460 122 24548 4281 127 0 0 0
1147 18411 0 0 12274 0 0 6137 0 0
1150 18362 0 0 0 0 0 0 0 0
1151 218 2 1 98 0 0 0 0 0
1152 49 25 7 49 49 15 0 0 0
1153 98 0 0 98 0 0 0 0 0
1157 12274 4152 111 6137 74 32 0 0 0
1158 21668 0 0 0 0 0 10834 0 0
1161 18927 0 0 6309 0 0 12618 0 0
1163 6309 0 0 0 0 0 0 0 0
1166 214641 684 12 18895 0 0 101676 5 2
1167 340646 28665 127 89058 0 0 178116 0 0
1168 31172 0 0 15586 0 0 15586 0 0
1170 133587 0 0 44529 0 0 44529 0 0
1171 44529 0 0 0 0 0 0 0 0
1172 178 25 16 0 0 0 178 0 0
1173 178 0 0 0 0 0 178 0 0
1174 712 0 0 356 0 0 178 0 0
1176 1068 0 0 178 0 0 534 0 0
1177 178 0 0 0 0 0 0 0 0
1181 123062 0 0 78711 0 0 44351 0 0
1182 88702 0 0 0 0 0 0 0 0
1183 49 0 0 0 0 0 49 0 0
1184 49 0 0 0 0 0 49 0 0
1186 49 0 0 0 0 0 49 0 0
1187 49 0 0 0 0 0 49 0 0
1188 49 0 0 0 0 0 49 0 0
1189 49 4 3 0 0 0 49 0 0
1191 265812 726 37 44302 64 26 44302 0 0
1192 221510 0 0 0 0 0 44302 0 0
1194 132906 1140 126 0 0 0 0 0 0
1195 132906 0 0 44302 28828 329 44302 0 0
1196 88604 0 0 44302 328 8 44302 0 0
1197 88604 0 0 44302 0 0 44302 0 0
1198 132906 0 0 44302 1 1 44302 0 0
1202 88653 114 37 0 0 0 44351 0 0
1203 44351 0 0 0 0 0 44351 0 0
1204 266106 0 0 133053 8 0 133053 11 0
1205 266106 29 16 133053 4 0 133053 0 0
1210 177404 0 0 221755 17173 100 0 0 0
1222 44351 0 0 0 0 0 0 0 0
1226 209459 884 147 63254 0 0 57147 0 0
1229 29916 137 23 29916 0 0 0 0 0
1230 179496 33 13 29916 0 0 89748 0 0
1233 222645 1319 51 89058 3 0 133587 0 0
1234 222645 0 0 44529 0 0 133587 0 0
1242 311881 306 55 89236 0 0 222645 0 0
1244 44529 0 0 0 0 0 0 0 0
1251 532212 51 26 133053 0 0 133053 0 0
1258 88702 0 0 0 0 0 0 0 0
1259 177404 47 27 88702 19629 253 0 0 0
1262 133053 0 0 177404 0 0 0 0 0
1264 88702 7 4 44351 89 7 0 0 0
1269 222645 0 0 133587 0 0 44529 0 0
1451 89058 0 0 0 0 0 44529 44295 42756
1453 44529 0 0 0 0 0 44529 5522 5496
1454 44529 0 0 0 0 0 44529 5646 5624
1455 100563 2114 124 56034 0 0 44529 5523 5504
1456 44529 0 0 0 0 0 44529 35327 28460
1457 44529 0 0 0 0 0 44529 0 0
1458 44529 0 0 0 0 0 44529 784 642
1460 44529 0 0 0 0 0 44529 1028 479
1461 44529 0 0 0 0 0 44529 0 0
1462 44529 0 0 0 0 0 44529 0 0
1464 44529 0 0 0 0 0 44529 0 0
1465 44529 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).freeManual
1377 1002 23 22 334 0 0 167 0 0
1378 334 0 0 167 0 0 167 134 116
1379 668 0 0 334 15 0 334 1 0
1380 1169 18 17 501 45 43 501 0 0
1381 1169 0 0 334 0 0 501 0 0
1382 1002 5 5 334 0 0 668 0 0
1383 501 0 0 167 0 0 334 0 0
1384 501 0 0 334 0 0 0 0 0
fn=runtime.(*mheap).freeSpan
1343 87762 29 21 29254 0 0 14627 0 0
1344 175524 29 21 29254 0 0 102389 3 0
1364 43881 0 0 29254 0 0 0 0 0
fn=runtime.(*mheap).freeSpan.func1
1344 146270 42 30 58508 0 0 43881 10 1
1345 43881 0 0 29254 0 0 14627 0 0
1346 43881 0 0 14627 43 0 29254 3 0
1347 58508 27 21 58508 96 7 0 0 0
1348 29254 0 0 14627 0 0 14627 0 0
1349 43881 0 0 43881 57 0 0 0 0
1350 29254 21 18 14627 0 0 14627 0 0
1357 29254 0 0 14627 17 0 0 0 0
1361 87762 0 0 29254 0 0 58508 0 0
1362 43881 0 0 14627 0 0 29254 0 0
1363 43881 24 13 29254 0 0 0 0 0
fn=runtime.(*mheap).freeSpanLocked
342 29588 0 0 29588 0 0 0 0 0
346 29588 31 26 14794 0 0 0 0 0
445 29421 0 0 29421 0 0 0 0 0
535 43881 0 0 0 0 0 0 0 0
664 14627 0 0 0 0 0 0 0 0
665 73135 26 21 29254 124 4 0 0 0
666 43881 0 0 0 0 0 0 0 0
667 73135 0 0 0 0 0 0 0 0
1046 44382 0 0 44382 4 1 0 0 0
1048 73970 0 0 14794 77 21 0 0 0
1049 1060 0 0 0 0 0 530 99 51
1050 44912 0 0 30118 0 0 0 0 0
1055 14264 0 0 0 0 0 0 0 0
1386 147940 98 74 59176 0 0 14794 0 0
1387 29588 0 0 29588 0 0 0 0 0
1388 334 8 6 0 0 0 0 0 0
1389 501 0 0 167 0 0 0 0 0
1392 29588 0 0 0 0 0 0 0 0
1393 131643 26 21 58508 0 0 14627 16 2
1397 43881 0 0 43881 4 0 0 0 0
1400 29254 0 0 0 0 0 0 0 0
1401 73135 0 0 29254 242 77 0 0 0
1406 14794 0 0 0 0 0 0 0 0
1407 102389 54 42 14627 0 0 43881 5 0
1409 14794 0 0 0 0 0 0 0 0
1410 103558 31 26 14794 0 0 44382 2 0
1414 162567 0 0 88597 0 0 59176 0 0
1417 14794 0 0 0 0 0 0 0 0
1418 14794 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).grow
1276 414 69 52 138 30 6 69 0 0
1278 75 6 6 0 0 0 6 0 0
1281 345 69 52 207 136 49 0 0 0
1282 201 0 0 69 0 0 0 0 0
1286 36 0 0 12 0 0 24 1 0
1287 12 0 0 0 0 0 0 0 0
1292 30 6 6 12 0 0 0 0 0
1295 15 0 0 0 0 0 5 0 0
1300 5 1 1 1 0 0 0 0 0
1305 2 0 0 0 0 0 1 0 0
1306 3 0 0 0 0 0 1 0 0
1315 24 0 0 0 0 0 18 0 0
1316 30 5 5 6 0 0 18 0 0
1319 36 0 0 24 0 0 0 0 0
1323 69 0 0 69 0 0 0 0 0
1324 69 0 0 0 0 0 69 0 0
1325 552 68 53 0 0 0 414 0 0
1326 288 0 0 144 0 0 75 0 0
1332 345 0 0 138 68 2 0 0 0
1334 3 0 0 0 0 0 0 0 0
1337 6 0 0 1 0 0 4 0 0
1339 276 0 0 138 0 0 69 0 0
fn=runtime.(*mheap).init
672 6 1 1 2 0 0 1 0 0
673 2 0 0 1 0 0 0 0 0
674 1 0 0 0 0 0 0 0 0
676 1 0 0 0 0 0 0 0 0
677 1 0 0 0 0 0 0 0 0
686 2 1 1 0 0 0 1 0 0
690 405 1 1 0 0 0 0 0 0
691 268 0 0 0 0 0 0 0 0
694 6 0 0 0 0 0 4 0 0
695 3 0 0 2 0 0 0 0 0
1474 268 0 0 0 0 0 268 0 0
1475 268 0 0 0 0 0 268 0 0
fn=runtime.(*mheap).reclaim
703 118374 16252 53 39458 0 0 19729 1648 8
723 118374 16209 62 39458 0 0 0 0 0
724 39309 215 26 26206 0 0 0 0 0
730 6626 0 0 0 0 0 0 0 0
732 13252 0 0 6626 0 0 0 0 0
736 39756 241 13 19878 3887 14 19878 0 0
738 73967 0 0 6626 0 0 169 5 0
740 20518 4838 37 6952 16 0 0 0 0
742 13218 0 0 0 0 0 0 0 0
746 46263 0 0 6609 0 0 0 0 0
747 13218 0 0 0 0 0 0 0 0
753 366 30 25 348 0 0 18 0 0
754 865 0 0 169 0 0 0 0 0
756 5 1 1 10 0 0 0 0 0
760 20351 91 14 0 0 0 0 0 0
762 36 0 0 0 0 0 36 13 0
763 18 0 0 0 0 0 0 0 0
767 1780 26 23 597 0 0 1183 0 0
768 507 0 0 169 0 0 0 0 0
769 156 0 0 0 0 0 0 0 0
772 52 0 0 39 3 0 0 0 0
773 13 0 0 0 0 0 0 0 0
776 6626 0 0 0 0 0 0 0 0
777 54 9 9 0 0 0 36 0 0
780 13252 0 0 6626 0 0 0 0 0
783 6626 0 0 0 0 0 0 0 0
fn=runtime.(*mheap).reclaimChunk
792 1521 35 27 338 13 2 169 0 0
800 676 0 0 338 8 0 169 15 0
801 1859 30 27 676 0 0 169 8 0
802 22815 13 13 21801 41 12 169 0 0
803 11830 0 0 11154 63 6 169 0 0
806 507 0 0 0 0 0 169 5 0
807 2197 16 14 0 0 0 169 0 0
808 507 17 14 0 0 0 169 0 0
809 684 0 0 0 0 0 0 0 0
816 53185 15 13 4493 0 0 2541 0 0
817 109997 0 0 45101 338 316 21632 0 0
818 34820 0 0 10816 0 0 0 0 0
822 75151 16 14 4493 0 0 4493 0 0
823 94880 0 0 0 0 0 0 0 0
824 75784 30 26 21447 2372 2070 4493 0 0
825 105199 0 0 21447 12441 8533 0 0 0
826 8986 0 0 4493 3898 1623 4493 0 0
827 13479 0 0 4493 0 0 8986 13 2
828 26958 0 0 8986 0 0 17972 0 0
829 13479 0 0 8986 0 0 0 0 0
831 13479 17 14 4493 0 0 8986 0 0
836 43912 12 11 22465 0 0 0 0 0
843 19314 3 3 18976 0 0 0 0 0
844 19145 0 0 18976 0 0 0 0 0
846 338 0 0 169 4 0 0 0 0
849 74900 0 0 23469 0 0 4493 0 0
852 676 0 0 338 0 0 169 14 0
fn=runtime.(*mheap).setSpans
535 178134 1386 121 44529 0 0 0 0 0
903 133587 793 100 0 0 0 44529 0 0
904 89058 0 0 0 0 0 0 0 0
905 44529 0 0 0 0 0 0 0 0
906 311703 0 0 133587 22 0 0 0 0
907 656932 934 105 178116 0 0 0 0 0
908 128090 0 0 0 0 0 0 0 0
909 192126 0 0 0 0 0 0 0 0
910 27 0 0 0 0 0 0 0 0
911 54 0 0 18 0 0 0 0 0
913 128090 0 0 0 0 0 64045 22988 8235
fn=runtime.(*mheap).sysAlloc
535 115 24 24 0 0 0 0 0 0
fn=runtime.(*mspan).refillAllocCache
1780 759552 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).sweep
346 1164826 0 0 569644 8 0 595182 3 1
445 614 0 0 614 4 1 0 0 0
515 1241747 0 0 310667 0 0 310360 0 0
1780 4547 0 0 0 0 0 0 0 0
1786 27282 155 41 0 0 0 0 0 0
fn=runtime.(*pageAlloc).findMappedAddr
535 440 0 0 110 0 0 0 0 0
fn=runtime.addfinalizer
1684 30 6 4 10 0 0 5 0 0
1685 15 0 0 0 0 0 10 2 0
1686 25 0 0 5 0 0 15 0 0
1687 15 0 0 0 0 0 10 0 0
1688 10 3 2 5 0 0 5 3 3
1689 30 0 0 10 0 0 10 0 0
1690 10 0 0 5 0 0 5 1 1
1691 20 3 2 10 0 0 5 0 0
1692 10 0 0 5 0 0 5 1 1
1693 30 0 0 10 0 0 15 0 0
1698 10 0 0 5 0 0 0 0 0
1710 20 3 2 10 0 0 5 0 0
fn=runtime.addspecial
1585 4320 427 96 1440 0 0 720 0 0
1586 3600 431 101 1440 0 0 2160 0 0
1587 1440 0 0 0 0 0 0 0 0
1594 720 0 0 0 0 0 0 0 0
1595 1440 0 0 0 0 0 1440 0 0
1597 2880 107 65 2160 0 0 720 0 0
1598 2160 0 0 1440 0 0 720 0 0
1600 2880 0 0 0 0 0 2160 0 0
1603 1440 0 0 720 0 0 0 0 0
1604 2160 0 0 1440 0 0 0 0 0
1605 734 109 70 727 31 2 0 0 0
1606 1454 0 0 0 0 0 0 0 0
1609 21 0 0 7 2 0 0 0 0
1614 14 0 0 0 0 0 0 0 0
1621 1440 0 0 720 0 0 720 0 0
1622 1440 0 0 720 0 0 720 80 15
1623 720 0 0 0 0 0 720 0 0
1624 2160 211 75 720 0 0 1440 0 0
1625 720 0 0 0 0 0 0 0 0
1627 2880 462 116 1440 0 0 720 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
535 158724 0 0 0 0 0 0 0 0
fn=runtime.findObject
346 53151403 0 0 53151403 28646781 8427326 0 0 0
445 53151318 79 27 53151318 27938437 8093856 0 0 0
535 161123493 0 0 0 0 0 0 0 0
608 53707831 0 0 0 0 0 0 0 0
611 107415662 2964 43 0 0 0 0 0 0
620 53707831 80 31 53707831 56 3 0 0 0
624 107415662 0 0 53707831 6584 339 0 0 0
625 107415662 0 0 0 0 0 0 0 0
628 212605612 85 33 53151403 18328369 2005589 0 0 0
fn=runtime.freeSomeWbufs
1500 114 18 17 57 0 0 19 0 0
fn=runtime.freespecial
1753 1842 42 24 614 0 0 307 2 0
1754 614 0 0 614 0 0 0 0 0
1755 614 0 0 0 0 0 0 0 0
1757 22 4 4 10 2 2 12 0 0
1758 6 0 0 0 0 0 4 0 0
1759 2 0 0 0 0 0 0 0 0
1760 8 0 0 0 0 0 4 0 0
1761 610 0 0 0 0 0 0 0 0
1763 1525 40 22 610 27 19 915 12 0
1764 915 0 0 0 0 0 610 0 0
1765 305 0 0 0 0 0 0 0 0
1766 1836 0 0 614 0 0 610 0 0
fn=runtime.getempty
445 5536 22 18 5536 2 2 0 0 0
fn=runtime.greyobject
445 33304462 0 0 33304462 0 0 0 0 0
519 33304462 0 0 0 0 0 0 0 0
535 99913386 0 0 0 0 0 0 0 0
664 33304462 0 0 0 0 0 0 0 0
665 166522310 0 0 66608924 0 0 0 0 0
666 99913386 0 0 0 0 0 0 0 0
667 166522310 0 0 0 0 0 0 0 0
1780 49316471 0 0 0 0 0 0 0 0
1786 443848239 0 0 49316471 0 0 0 0 0
fn=runtime.heapBitsSetType
535 48420096 743 97 3768007 0 0 9837631 849 33
fn=runtime.largeAlloc
445 98 29 22 98 7 2 0 0 0
535 147 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
511 11736238 0 0 0 0 0 0 0 0
fn=runtime.markBitsForAddr
445 710083 0 0 710083 1 0 0 0 0
535 2130249 0 0 710083 0 0 0 0 0
608 710083 31 19 0 0 0 0 0 0
611 1420166 28 17 0 0 0 0 0 0
620 710083 25 16 710083 6 1 0 0 0
624 1420166 0 0 710083 24 5 0 0 0
625 1420166 0 0 0 0 0 0 0 0
628 2840332 0 0 710083 3264 45 0 0 0
1780 710083 0 0 0 0 0 0 0 0
1786 4260498 0 0 0 0 0 0 0 0
fn=runtime.markrootSpans
346 305138 0 0 305138 305102 280668 0 0 0
445 70 0 0 70 23 3 0 0 0
fn=runtime.newAllocBits
1887 266106 6903 125 88702 0 0 44351 0 0
1888 354808 1397 91 177404 0 0 133053 2 0
fn=runtime.newArenaMayUnlock
1927 780 110 89 260 0 0 130 0 0
1929 474 0 0 130 0 0 84 3 0
1930 138 32 26 0 0 0 92 37 2
1931 276 36 30 46 0 0 184 0 0
1932 92 0 0 0 0 0 0 0 0
1935 184 0 0 0 0 0 92 0 0
1938 168 0 0 84 84 82 84 0 0
1939 252 0 0 0 0 0 252 67 15
1941 260 23 21 130 67 9 130 130 46
1945 130 0 0 0 0 0 130 0 0
1949 520 0 0 260 0 0 130 17 1
fn=runtime.newMarkBits
1816 3196035 127 111 399607 22642 133 0 0 0
1820 1596332 32817 257 798296 23 3 0 0 0
1821 798124 0 0 0 0 0 0 0 0
1825 399062 0 0 0 0 0 0 0 0
1826 1596248 0 0 0 0 0 0 0 0
1831 2394372 4720 124 798124 0 0 399062 1 0
1832 1197316 116 79 399062 0 0 130 0 0
1833 798254 0 0 0 0 0 130 5 1
1836 399062 0 0 399062 23581 129 0 0 0
1837 1197077 21 18 0 0 0 0 0 0
1838 1595728 1802 106 797864 0 0 398932 0 0
1843 390 0 0 0 0 0 260 15 1
1847 390 0 0 130 0 0 0 0 0
1853 260 0 0 130 0 0 130 0 0
1857 390 0 0 130 84 0 0 0 0
1868 260 0 0 0 0 0 130 42 5
1869 260 0 0 0 0 0 0 0 0
1874 260 0 0 130 0 0 130 0 0
1875 260 0 0 260 0 0 0 0 0
1877 390 0 0 0 0 0 260 0 0
1878 650 0 0 390 0 0 130 21 0
fn=runtime.nextMarkBitArenaEpoch
1905 120 34 27 40 0 0 20 0 0
1906 60 0 0 0 0 0 40 0 0
1907 60 0 0 20 20 19 0 0 0
1908 66 0 0 18 0 0 0 0 0
1909 24 12 9 0 0 0 12 0 0
1913 274 6 6 70 70 66 0 0 0
1915 6 0 0 0 0 0 6 0 0
1916 12 0 0 6 0 0 6 0 0
1919 40 14 12 20 0 0 20 0 0
1920 40 0 0 20 0 0 20 0 0
1921 60 8 6 40 0 0 0 0 0
1922 60 0 0 0 0 0 40 0 0
1923 60 0 0 40 0 0 0 0 0
fn=runtime.recordspan
468 257016 625 96 85672 0 0 42836 493 26
471 214180 674 103 128508 2 0 0 0 0
473 42 0 0 0 0 0 0 0 0
476 18 1 1 0 0 0 12 0 0
478 60 6 6 6 0 0 30 4 0
479 6 0 0 0 0 0 0 0 0
482 18 0 0 12 0 0 6 0 0
483 12 6 6 6 0 0 6 0 0
484 24 0 0 12 0 0 0 0 0
485 55 5 5 5 0 0 20 0 0
487 23 0 0 23 10 2 0 0 0
488 36 6 6 18 4 2 18 0 0
489 6 0 0 0 0 0 0 0 0
490 35 0 0 0 0 0 20 0 0
493 257021 0 0 85677 0 0 42836 0 0
494 214180 640 92 85672 0 0 42836 6029 5468
495 128508 0 0 85672 0 0 0 0 0
fn=runtime.removefinalizer
1721 12 2 2 4 0 0 2 0 0
1722 10 2 2 4 0 0 6 0 0
1723 4 0 0 0 0 0 0 0 0
1724 6 2 2 4 0 0 0 0 0
fn=runtime.removespecial
1633 12 2 2 4 0 0 2 0 0
1634 10 2 2 4 0 0 6 0 0
1635 4 0 0 0 0 0 0 0 0
1642 2 0 0 0 0 0 0 0 0
1643 4 0 0 0 0 0 4 0 0
1645 8 0 0 6 0 0 2 0 0
1647 8 2 2 0 0 0 6 0 0
1648 4 0 0 2 0 0 0 0 0
1649 6 0 0 4 0 0 0 0 0
1650 8 0 0 5 1 1 0 0 0
1651 10 0 0 0 0 0 0 0 0
1656 9 0 0 3 0 0 0 0 0
1664 6 2 2 2 0 0 4 0 0
1665 2 0 0 0 0 0 0 0 0
1666 8 0 0 4 0 0 2 0 0
fn=runtime.scanobject
445 993 0 0 993 973 203 0 0 0
519 24 0 0 0 0 0 0 0 0
535 86353416 0 0 21588354 0 0 0 0 0
639 107941794 0 0 21588354 1322567 75908 24 0 0
fn=runtime.setprofilebucket
1740 4290 649 104 1430 0 0 715 0 0
1741 2145 0 0 0 0 0 1430 0 0
1742 3575 618 107 715 0 0 2145 0 0
1743 2145 0 0 0 0 0 1430 0 0
1744 1430 0 0 715 0 0 715 639 234
1745 1430 0 0 715 0 0 715 80 80
1746 6435 526 100 2860 0 0 2145 0 0
fn=runtime.spanOfHeap
346 722 0 0 722 21 0 0 0 0
445 1444 0 0 722 21 0 0 0 0
535 2166 546 107 722 0 0 0 0 0
608 722 521 111 0 0 0 0 0 0
611 1444 0 0 0 0 0 0 0 0
620 722 627 108 722 19 0 0 0 0
624 1444 0 0 722 22 0 0 0 0
625 1444 0 0 0 0 0 0 0 0
628 2888 0 0 722 335 10 0 0 0
649 1444 0 0 0 0 0 0 0 0
655 6498 0 0 722 33 1 0 0 0
658 1444 0 0 722 0 0 722 0 0
fn=runtime.stackalloc
445 6 0 0 6 0 0 0 0 0
1500 18 0 0 6 2 1 0 0 0
fn=runtime.stackinit
1474 78 0 0 0 0 0 39 5 5
1475 39 0 0 0 0 0 39 9 8
fn=runtime.stackpoolalloc
445 48 0 0 48 0 0 0 0 0
fn=runtime.stackpoolfree
535 236 10 8 59 0 0 0 0 0
638 59 0 0 0 0 0 0 0 0
639 649 0 0 177 46 12 59 0 0
fn=runtime.sweepone
346 310360 0 0 310360 307737 209067 0 0 0
fn=runtime.updatememstats
515 5360 12 11 0 0 0 0 0 0
fn=runtime.wbBufFlush1
519 618965 0 0 0 0 0 0 0 0
1780 3834840 0 0 0 0 0 0 0 0
1786 23009040 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mpagealloc.go
fn=runtime.(*pageAlloc).alloc
108 1075 0 0 0 0 0 119 0 0
113 238 0 0 119 0 0 0 0 0
119 370 0 0 0 0 0 0 0 0
129 119 79 52 0 0 0 0 0 0
138 119 0 0 0 0 0 0 0 0
324 510 0 0 170 0 0 0 0 0
325 510 0 0 340 0 0 0 0 0
326 386 0 0 0 0 0 0 0 0
328 183 5 0 0 0 0 0 0 0
349 595 80 50 119 42 4 0 0 0
794 1434 180 117 478 0 0 239 0 0
797 1195 0 0 717 234 5 0 0 0
798 270 54 39 108 0 0 108 0 0
804 925 109 66 185 0 0 0 0 0
807 1487 0 0 456 160 9 119 0 0
808 833 0 0 238 0 0 476 8 0
809 238 0 0 0 0 0 0 0 0
814 476 0 0 0 0 0 0 0 0
815 357 0 0 0 0 0 0 0 0
816 119 0 0 0 0 0 0 0 0
821 330 29 20 132 0 0 198 23 0
822 132 0 0 0 0 0 0 0 0
823 45 0 0 15 15 0 0 0 0
831 75 15 8 30 1 0 30 0 0
835 1360 212 123 510 0 0 850 0 0
840 699 0 0 0 0 0 170 0 0
841 59 0 0 0 0 0 59 0 0
843 1020 27 15 510 0 0 340 0 0
920 304 0 0 0 0 0 0 0 0
923 304 30 14 0 0 0 0 0 0
fn=runtime.(*pageAlloc).allocRange
108 7594 14 14 0 0 0 42 0 0
119 4734 645 116 0 0 0 958 0 0
129 1012 748 118 14 0 0 0 0 0
138 978 0 0 0 0 0 0 0 0
349 11668 677 112 3878 3 0 1956 0 0
506 5664 749 113 1888 0 0 944 0 0
507 5664 732 112 1888 0 0 0 0 0
508 1888 0 0 0 0 0 0 0 0
509 1888 0 0 0 0 0 0 0 0
512 1888 0 0 0 0 0 0 0 0
514 930 0 0 0 0 0 0 0 0
515 10230 860 117 930 0 0 5580 1076 72
516 6510 767 116 1860 0 0 3720 0 0
519 14 0 0 0 0 0 0 0 0
520 154 14 14 14 0 0 84 0 0
521 84 0 0 28 0 0 56 0 0
522 252 14 14 116 0 0 20 0 0
523 20 0 0 0 0 0 0 0 0
524 220 8 8 60 0 0 100 0 0
525 40 0 0 0 0 0 40 0 0
527 14 14 14 0 0 0 0 0 0
528 230 28 28 56 0 0 118 0 0
529 70 7 1 14 0 0 56 0 0
531 7552 7 1 2832 0 0 4720 0 0
532 7538 653 110 3762 0 0 1888 0 0
fn=runtime.(*pageAlloc).allocToCache
108 4200 541 96 0 0 0 715 7 1
113 1430 0 0 715 0 0 0 0 0
119 1548 0 0 0 0 0 0 0 0
129 833 0 0 0 0 0 0 0 0
138 774 0 0 0 0 0 0 0 0
349 5359 507 134 833 723 101 1430 0 0
fn=runtime.(*pageAlloc).find
113 360 37 22 60 0 0 60 0 0
129 120 0 0 0 0 0 0 0 0
138 60 0 0 0 0 0 0 0 0
349 360 25 15 60 58 3 0 0 0
575 1246 284 157 356 0 0 178 65 1
617 356 0 0 0 0 0 178 63 7
620 178 0 0 0 0 0 178 0 0
621 356 144 81 0 0 0 178 0 0
632 890 0 0 0 0 0 534 0 0
654 1068 144 83 178 0 0 0 0 0
655 3925 70 55 1479 0 0 611 85 3
657 4888 0 0 611 160 13 611 0 0
658 1833 0 0 611 160 11 611 38 6
662 3608 0 0 0 0 0 671 150 9
665 10269 267 154 1833 99 7 611 0 0
672 9184 76 56 1833 159 10 0 0 0
673 1184 0 0 0 0 0 0 0 0
687 1666669 159 100 146 0 0 1293 0 0
688 1110232 0 0 554709 69611 53915 682 0 0
689 1663028 0 0 0 0 0 0 0 0
693 553888 0 0 0 0 0 0 0 0
698 13936 115 80 1992 0 0 2728 124 17
700 1364 0 0 0 0 0 0 0 0
701 558109 72 44 1364 0 0 554638 24 2
705 50 0 0 0 0 0 0 0 0
706 200 0 0 50 0 0 0 0 0
712 1896 0 0 0 0 0 0 0 0
721 474 0 0 0 0 0 0 0 0
726 264 0 0 0 0 0 0 0 0
727 792 0 0 132 0 0 0 0 0
728 132 0 0 0 0 0 0 0 0
731 14 0 0 0 0 0 0 0 0
733 372 61 44 136 68 0 0 0 0
736 2322 81 69 368 14 0 843 0 0
737 925 155 120 389 0 0 250 0 0
739 204 68 50 68 0 0 0 0 0
741 408 66 45 136 46 0 136 14 0
747 2347 89 65 632 0 0 1222 1 0
748 554638 0 0 554638 0 0 0 0 0
766 540 32 21 180 0 0 300 0 0
767 120 0 0 0 0 0 0 0 0
777 360 38 22 120 0 0 0 0 0
781 240 0 0 0 0 0 0 0 0
782 420 36 21 60 0 0 180 0 0
783 780 39 22 300 0 0 300 1 0
912 2810 0 0 0 0 0 0 0 0
915 2324 21 18 821 0 0 0 0 0
920 632 0 0 0 0 0 0 0 0
923 1896 0 0 0 0 0 0 0 0
928 132 17 15 0 0 0 0 0 0
931 264 24 18 0 0 0 0 0 0
fn=runtime.(*pageAlloc).find.func1
632 5194 93 54 2226 0 0 742 0 0
633 6678 0 0 2968 0 0 0 0 0
636 573 0 0 0 0 0 573 0 0
637 2799 35 23 1484 0 0 573 0 0
638 1014 0 0 169 0 0 0 0 0
fn=runtime.(*pageAlloc).findMappedAddr
541 660 89 46 220 0 0 110 0 0
544 110 0 0 0 0 0 0 0 0
545 1320 168 91 440 28 4 0 0 0
556 440 0 0 220 0 0 110 0 0
fn=runtime.(*pageAlloc).free
108 15986 11 10 0 0 0 42 2 0
119 30062 35 27 0 0 0 14 0 0
129 29426 13 11 14 0 0 0 0 0
138 14828 0 0 0 0 0 0 0 0
324 44382 0 0 14794 0 0 0 0 0
325 59176 0 0 29588 82 3 0 0 0
326 29614 0 0 0 0 0 0 0 0
349 74140 6 6 14828 84 4 0 0 0
849 88764 72 52 29588 0 0 14794 0 0
851 44356 0 0 0 0 0 0 0 0
852 26 15 13 0 0 0 26 0 0
854 44382 23 14 14794 0 0 0 0 0
857 14564 8 8 0 0 0 0 0 0
858 14564 0 0 0 0 0 0 0 0
861 920 0 0 0 0 0 0 0 0
862 460 0 0 0 0 0 0 0 0
863 460 0 0 0 0 0 0 0 0
865 460 0 0 0 0 0 0 0 0
867 864 0 0 0 0 0 0 0 0
870 42 0 0 0 0 0 0 0 0
871 238 24 20 102 0 0 20 0 0
872 20 0 0 0 0 0 0 0 0
874 42 6 5 14 0 0 0 0 0
877 118352 37 31 44382 0 0 73970 8 2
878 44382 0 0 29588 0 0 0 0 0
fn=runtime.(*pageAlloc).grow
108 759 69 54 138 0 0 207 0 0
129 183 0 0 0 0 0 1 0 0
138 92 0 0 1 0 0 0 0 0
325 276 0 0 138 0 0 0 0 0
326 261 66 48 69 0 0 0 0 0
328 30 15 12 0 0 0 0 0 0
349 275 0 0 93 0 0 0 0 0
356 414 79 64 138 0 0 69 0 0
359 69 0 0 69 0 0 0 0 0
360 69 0 0 0 0 0 0 0 0
364 276 0 0 0 0 0 276 0 0
369 276 0 0 138 15 0 0 0 0
370 138 0 0 0 0 0 0 0 0
371 275 64 8 0 0 0 0 0 0
372 1 0 0 0 0 0 1 0 0
374 138 0 0 69 0 0 0 0 0
375 69 69 49 0 0 0 69 0 0
380 345 0 0 0 0 0 276 0 0
385 168 0 0 0 0 0 0 0 0
386 108 0 0 54 0 0 54 0 0
394 1073 69 51 411 0 0 91 0 0
395 729 0 0 91 69 11 1 0 0
400 5 1 1 2 0 0 3 0 0
401 3 0 0 3 0 0 0 0 0
403 546 68 51 0 0 0 364 0 0
409 589 122 87 175 0 0 345 0 0
410 207 0 0 138 0 0 0 0 0
fn=runtime.(*pageAlloc).init
284 6 2 2 2 0 0 1 0 0
285 3 0 0 1 1 1 0 0 0
293 6 0 0 3 0 0 1 1 1
296 4 1 1 0 0 0 3 1 0
299 3 0 0 1 0 0 2 0 0
302 3 0 0 1 0 0 1 1 1
305 2 0 0 0 0 0 1 0 0
308 4 1 1 2 0 0 1 0 0
309 3 0 0 2 0 0 0 0 0
fn=runtime.(*pageAlloc).resetScavengeAddr
113 7 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne
108 186 24 22 10 0 0 45 0 0
119 40 14 14 0 0 0 0 0 0
129 76 0 0 20 0 0 12 0 0
138 42 5 4 5 0 0 0 0 0
349 174 0 0 47 13 9 0 0 0
920 232 4 4 0 0 0 0 0 0
923 232 5 4 0 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeRangeLocked
113 40 0 0 20 0 0 0 0 0
129 60 0 0 20 0 0 0 0 0
138 20 0 0 0 0 0 0 0 0
349 140 15 14 40 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
156 6850 69 52 1370 68 0 0 0 0
157 5480 0 0 685 0 0 0 0 0
165 5480 66 50 685 69 1 0 0 0
166 1370 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).update
108 182427 726 107 0 0 0 49779 42 7
129 16653 24 21 36 0 0 0 0 0
138 16625 0 0 8 0 0 0 0 0
156 128992 0 0 33512 761 119 0 0 0
157 115352 662 132 19872 0 0 13640 0 0
349 83093 0 0 16625 0 0 0 0 0
420 116211 1592 229 33234 0 0 16581 1 0
422 66324 0 0 33162 0 0 0 0 0
423 33162 0 0 0 0 0 0 0 0
426 33162 832 121 0 0 0 0 0 0
429 115815 1279 230 66180 278 40 16545 722 69
430 66180 398 73 16545 0 0 33090 527 50
431 49635 0 0 16545 0 0 0 0 0
432 31074 17 8 20716 0 0 0 0 0
434 49496 0 0 24748 0 0 6187 0 0
435 36 0 0 0 0 0 0 0 0
438 180 37 25 108 11 0 72 7 0
441 360 25 22 144 0 0 108 29 9
445 612 25 22 144 0 0 0 0 0
446 58 0 0 0 0 0 0 0 0
448 68 9 5 0 0 0 24 0 0
452 168 0 0 0 0 0 0 0 0
453 68 0 0 0 0 0 34 4 4
458 412 20 18 160 0 0 108 1 0
473 152979 734 120 16688 0 0 27289 664 47
479 59589 866 166 13640 789 115 13640 0 0
480 40920 0 0 13640 832 119 13640 0 0
483 13640 0 0 0 0 0 0 0 0
486 191059 1636 321 54596 0 0 13649 0 0
487 456640 814 121 54632 0 0 27298 0 0
488 95543 823 120 13649 0 0 68245 0 0
489 109192 0 0 81894 3882 637 0 0 0
490 31540 0 0 0 0 0 0 0 0
492 28221 0 0 0 0 0 9407 0 0
fn=runtime.(*pallocBits).summarize
902 33234 0 0 0 0 0 0 0 0
905 33234 0 0 0 0 0 0 0 0
906 49851 0 0 0 0 0 0 0 0
907 33234 91 23 0 0 0 0 0 0
fn=runtime.mergeSummaries
902 27298 0 0 0 0 0 0 0 0
905 27298 0 0 0 0 0 0 0 0
906 40947 0 0 0 0 0 0 0 0
907 27298 0 0 0 0 0 0 0 0
936 218384 0 0 0 0 0 0 0 0
939 218384 837 130 0 0 0 0 0 0
940 327576 0 0 0 0 0 0 0 0
941 218384 671 121 0 0 0 0 0 0
946 136490 557 120 0 0 0 13649 177 19
951 81894 101 63 40947 0 0 0 0 0
952 450417 280 110 13649 0 0 0 0 0
954 191086 0 0 95543 0 0 0 0 0
959 573258 0 0 0 0 0 0 0 0
960 95543 0 0 0 0 0 0 0 0
967 477715 0 0 0 0 0 0 0 0
970 191086 0 0 0 0 0 0 0 0
979 573258 0 0 0 0 0 0 0 0
980 95543 0 0 0 0 0 0 0 0
985 81894 0 0 27298 0 0 13649 0 0
fl=.//usr/lib/golang/src/runtime/mpagealloc_64bit.go
fn=runtime.(*pageAlloc).sysGrow
99 483 103 79 138 0 0 69 0 0
100 414 0 0 138 0 0 0 0 0
116 414 69 51 69 0 0 207 0 0
117 690 69 48 345 0 0 0 0 0
118 345 0 0 0 0 0 0 0 0
119 1380 0 0 690 0 0 0 0 0
121 340 0 0 0 0 0 340 0 0
122 340 0 0 0 0 0 340 0 0
129 552 69 50 0 0 0 345 0 0
143 552 0 0 138 15 0 276 107 3
146 2484 70 51 483 0 0 345 0 0
148 3450 69 47 1725 69 51 1380 0 0
154 2420 0 0 1385 136 7 0 0 0
155 51 0 0 0 0 0 17 0 0
159 345 0 0 0 0 0 0 0 0
165 1045 68 50 350 0 0 0 0 0
166 8840 200 152 3740 0 0 3060 0 0
168 2060 0 0 1370 0 0 0 0 0
172 1045 0 0 0 0 0 10 0 0
177 25 1 1 5 0 0 20 0 0
178 5 0 0 5 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
108 2055 69 52 0 0 0 685 38 4
109 685 0 0 685 0 0 0 0 0
110 3425 68 54 1370 0 0 1370 0 0
fn=runtime.(*pageAlloc).sysGrow.func2
116 1360 0 0 340 0 0 340 0 0
117 1020 68 53 680 0 0 0 0 0
118 340 0 0 0 0 0 0 0 0
119 3060 0 0 1020 0 0 0 0 0
120 1700 0 0 680 0 0 680 0 0
121 340 0 0 0 0 0 0 0 0
122 340 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func3
129 3060 136 109 1360 0 0 680 0 0
130 3400 68 48 2040 0 0 1360 44 4
131 4760 61 11 2380 0 0 2040 0 0
fn=runtime.(*pageAlloc).sysInit
70 7 1 1 2 0 0 1 0 0
73 38 1 1 10 1 1 8 0 0
74 40 0 0 0 0 0 5 0 0
77 5 1 1 5 0 0 0 0 0
78 10 0 0 0 0 0 0 0 0
79 5 0 0 0 0 0 0 0 0
84 35 1 1 5 0 0 25 0 0
85 60 1 1 20 0 0 15 3 3
fl=.//usr/lib/golang/src/runtime/mpagecache.go
fn=runtime.(*mheap).allocSpan
27 44468 0 0 44468 17085 133 0 0 0
fn=runtime.(*pageAlloc).allocToCache
106 4962 741 109 1654 0 0 827 0 0
109 4135 0 0 2481 1603 217 0 0 0
114 5789 0 0 2481 1607 251 0 0 0
116 715 539 99 0 0 0 0 0 0
117 5005 0 0 715 0 0 3575 403 19
118 1430 391 94 0 0 0 0 0 0
122 2860 0 0 0 0 0 0 0 0
123 715 43 30 0 0 0 0 0 0
124 3575 0 0 1430 0 0 0 0 0
129 448 111 70 112 0 0 336 68 5
130 224 0 0 0 0 0 0 0 0
133 159 53 4 53 53 0 53 53 0
134 318 47 3 106 7 0 106 46 0
136 59 0 0 0 0 0 0 0 0
137 59 0 0 0 0 0 0 0 0
139 59 0 0 0 0 0 0 0 0
140 118 55 8 0 0 0 0 0 0
141 118 0 0 0 0 0 0 0 0
146 6133 693 102 715 0 0 5418 0 0
149 5418 760 107 1548 0 0 3870 0 0
159 3096 0 0 1548 0 0 774 0 0
160 6192 612 93 3096 0 0 2322 412 3
fn=runtime.(*pageCache).alloc
38 266808 34066 238 88936 0 0 44468 2208 30
39 177872 0 0 88936 0 0 0 0 0
40 265 53 39 106 0 0 106 0 0
42 133245 0 0 44415 0 0 0 0 0
43 44210 0 0 0 0 0 0 0 0
44 265260 29261 134 44210 0 0 0 0 0
45 309470 0 0 0 0 0 44210 0 0
46 44210 0 0 44210 0 0 0 0 0
47 397890 0 0 132630 0 0 88420 0 0
49 2050 32 15 820 0 0 1025 136 2
fn=runtime.(*pageCache).allocN
58 1230 100 40 410 0 0 205 1 0
59 1435 0 0 820 0 0 615 160 2
60 410 0 0 0 0 0 0 0 0
61 280 16 5 112 0 0 112 0 0
63 1341 33 12 149 0 0 0 0 0
64 447 0 0 298 0 0 0 0 0
65 447 30 15 149 0 0 0 0 0
66 149 0 0 149 0 0 0 0 0
67 1192 0 0 447 0 0 298 0 0
fl=.//usr/lib/golang/src/runtime/mpallocbits.go
fn=runtime.(*pageAlloc).allocToCache
21 5300 0 0 2263 775 183 0 0 0
345 774 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).free
62 101948 0 0 43692 231 69 29128 9 1
328 44100 18 16 0 0 0 0 0 0
333 976 17 15 0 0 0 976 29 2
338 40 0 0 0 0 0 40 0 0
fn=runtime.(*pageBits).clearAll
91 1160 7 1 40 0 0 0 0 0
92 640 0 0 0 0 0 320 20 20
fn=runtime.(*pageBits).clearRange
62 207 0 0 207 0 0 138 0 0
66 4670 437 100 0 0 0 1202 0 0
67 8414 550 122 2404 0 0 0 0 0
68 3606 0 0 1202 0 0 0 0 0
70 69 54 22 0 0 0 0 0 0
71 207 0 0 138 0 0 0 0 0
74 2266 0 0 0 0 0 0 0 0
75 4532 0 0 0 0 0 0 0 0
76 13832 339 136 1064 38 22 1064 0 0
77 3192 0 0 2128 0 0 0 0 0
79 138 0 0 0 0 0 0 0 0
81 414 30 23 69 23 19 69 0 0
82 723 0 0 0 0 0 0 0 0
83 149 0 0 0 0 0 149 0 0
86 759 8 2 69 0 0 69 0 0
87 207 0 0 138 0 0 0 0 0
fn=runtime.(*pageBits).popcntRange
98 2934 655 95 0 0 0 978 0 0
99 2934 817 111 978 0 0 0 0 0
100 966 54 11 345 1 0 69 0 0
102 6363 0 0 1818 0 0 0 0 0
103 1818 0 0 0 0 0 0 0 0
104 3636 779 118 0 0 0 0 0 0
105 11956 1347 248 2562 65 9 854 0 0
107 110 0 0 0 0 0 0 0 0
108 110 0 0 55 33 19 0 0 0
109 1004 29 17 0 0 0 0 0 0
110 392 0 0 196 0 0 0 0 0
112 605 26 16 55 0 0 0 0 0
113 220 0 0 110 0 0 55 0 0
fn=runtime.(*pageBits).setAll
55 580 0 0 20 0 0 0 0 0
56 320 0 0 0 0 0 160 0 0
fn=runtime.(*pageBits).setRange
26 267 0 0 267 0 0 178 58 8
30 4061 369 113 0 0 0 1069 0 0
31 7483 78 40 2138 0 0 0 0 0
32 3207 0 0 1069 0 0 0 0 0
34 89 38 31 0 0 0 0 0 0
35 267 0 0 178 0 0 0 0 0
38 1960 0 0 0 0 0 0 0 0
39 3920 0 0 0 0 0 0 0 0
40 10248 99 51 854 0 0 854 0 0
41 2562 0 0 1708 0 0 0 0 0
43 252 0 0 0 0 0 0 0 0
45 630 54 37 126 91 91 126 0 0
46 2370 0 0 0 0 0 0 0 0
47 622 0 0 0 0 0 622 0 0
50 1386 18 12 126 0 0 126 0 0
51 378 0 0 252 0 0 0 0 0
fn=runtime.(*pallocBits).find
206 5364 406 81 1788 0 0 894 397 18
207 2682 0 0 894 0 0 0 0 0
208 4866 946 199 2433 0 0 2433 240 21
209 4055 0 0 1622 0 0 1622 19 1
210 166 31 15 0 0 0 0 0 0
211 936 0 0 432 0 0 432 35 1
213 143 3 2 66 0 0 66 1 0
fn=runtime.(*pallocBits).find1
221 7077 283 89 1622 0 0 0 0 0
222 3096 0 0 1548 728 107 0 0 0
223 3096 0 0 0 0 0 0 0 0
226 5677 0 0 811 0 0 811 0 0
fn=runtime.(*pallocBits).findLargeN
280 33 10 5 0 0 0 11 8 2
282 372 9 5 33 0 0 0 0 0
283 142 0 0 71 10 3 0 0 0
284 161 0 0 0 0 0 0 0 0
286 19 0 0 0 0 0 0 0 0
288 145 9 5 0 0 0 0 0 0
291 66 0 0 0 0 0 0 0 0
293 104 0 0 0 0 0 0 0 0
294 21 0 0 0 0 0 0 0 0
295 63 0 0 0 0 0 0 0 0
296 21 0 0 0 0 0 0 0 0
299 93 0 0 0 0 0 0 0 0
301 55 2 0 22 0 0 22 0 0
303 40 0 0 0 0 0 0 0 0
308 40 8 5 0 0 0 0 0 0
311 82 0 0 0 0 0 0 0 0
313 21 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).findSmallN
241 432 26 15 144 0 0 72 19 0
243 947 24 16 194 0 0 108 0 0
244 444 0 0 193 69 3 108 20 1
245 307 0 0 0 0 0 0 0 0
247 21 0 0 0 0 0 0 0 0
251 109 0 0 0 0 0 0 0 0
252 344 0 0 50 0 0 0 0 0
255 541 23 13 0 0 0 0 0 0
257 538 12 8 122 0 0 0 0 0
258 148 8 5 28 0 0 28 0 0
261 590 22 14 108 0 0 324 10 0
262 216 0 0 0 0 0 0 0 0
263 680 9 4 232 0 0 224 2 0
265 50 0 0 0 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
167 1595232 1264 218 16617 0 0 0 0 0
168 398808 511 120 132936 77 77 0 0 0
169 3589272 772 118 0 0 0 0 0 0
170 4253952 0 0 0 0 0 0 0 0
173 1063488 0 0 0 0 0 0 0 0
174 7444416 0 0 0 0 0 0 0 0
175 1063488 0 0 0 0 0 0 0 0
179 3190464 0 0 0 0 0 0 0 0
182 4253952 0 0 1063488 3174 600 0 0 0
187 1063488 0 0 0 0 0 0 0 0
188 500206 0 0 0 0 0 0 0 0
190 813385 0 0 0 0 0 0 0 0
194 49851 0 0 16617 0 0 16617 0 0
fn=runtime.(*pallocData).allocAll
323 40 0 0 0 0 0 40 0 0
384 120 8 8 40 0 0 20 0 0
386 40 0 0 40 17 17 0 0 0
387 80 0 0 20 0 0 40 0 0
388 60 8 8 40 0 0 0 0 0
fn=runtime.(*pallocData).allocRange
318 5748 791 110 1916 0 0 3832 230 20
376 5748 711 104 1916 0 0 958 0 0
378 1916 0 0 1916 19 11 0 0 0
379 7664 0 0 2874 0 0 3832 0 0
380 2874 0 0 1916 0 0 0 0 0
fn=runtime.findBitRange64
353 939 69 19 313 0 0 0 0 0
354 7148 0 0 313 0 0 0 0 0
355 1421 0 0 0 0 0 0 0 0
356 11262 58 20 0 0 0 0 0 0
357 11368 0 0 0 0 0 0 0 0
359 626 0 0 313 0 0 313 0 0
fl=.//usr/lib/golang/src/runtime/mprof.go
fn=runtime.(*bucket).mp
187 11286 664 109 3762 0 0 1881 0 0
188 5643 448 110 3762 991 667 0 0 0
191 1881 0 0 1881 229 151 0 0 0
192 7524 0 0 3762 0 0 1881 0 0
fn=runtime.eqslice
260 2692 672 97 1346 0 0 0 0 0
263 22898 0 0 6061 671 260 0 0 0
264 14145 0 0 4715 0 0 0 0 0
268 1346 0 0 673 0 0 673 0 0
fn=runtime.mProf_Flush
296 120 1 0 40 0 0 20 5 0
297 60 0 0 0 0 0 40 0 0
298 40 20 18 20 4 0 0 0 0
299 20 0 0 0 0 0 20 0 0
300 40 0 0 0 0 0 20 0 0
302 60 0 0 0 0 0 40 0 0
303 60 0 0 40 0 0 0 0 0
fn=runtime.mProf_FlushLocked
127 525 0 0 525 493 482 0 0 0
128 1050 0 0 1050 27 22 0 0 0
129 1050 0 0 1050 23 20 0 0 0
130 1050 0 0 1050 106 98 0 0 0
305 120 20 18 40 0 0 20 0 0
306 40 0 0 20 0 0 20 0 0
307 2765 39 36 1110 40 34 525 0 0
308 1575 17 17 525 0 0 1050 4 0
312 5250 0 0 1050 468 453 0 0 0
313 525 0 0 0 0 0 0 0 0
314 2100 0 0 0 0 0 2100 0 0
fn=runtime.mProf_Free
362 1830 71 29 610 0 0 305 0 0
363 915 0 0 0 0 0 610 20 3
364 610 0 0 305 103 4 305 0 0
365 1220 0 0 610 0 0 610 0 0
366 2745 40 22 305 0 0 0 0 0
367 915 0 0 305 152 22 305 0 0
368 1220 0 0 610 36 1 305 0 0
369 915 40 21 0 0 0 610 0 0
370 915 0 0 610 0 0 0 0 0
fn=runtime.mProf_Malloc
340 5005 870 179 1430 0 0 715 0 0
341 4290 0 0 715 0 0 1430 164 6
342 5720 337 87 715 0 0 4290 3 0
343 2145 0 0 0 0 0 1430 0 0
344 10010 759 168 2145 0 0 5720 0 0
345 1430 0 0 715 704 91 715 0 0
346 2145 0 0 715 0 0 1430 0 0
347 6435 0 0 715 0 0 0 0 0
348 2145 501 93 715 660 285 715 0 0
349 2860 0 0 1430 224 77 715 0 0
350 2145 0 0 0 0 0 1430 0 0
356 8580 1201 198 1430 0 0 5005 0 0
359 2145 0 0 1430 0 0 0 0 0
fn=runtime.mProf_Malloc.func1
356 5720 700 97 2860 0 0 715 0 0
357 2145 594 106 0 0 0 2145 0 0
358 2145 0 0 1430 0 0 0 0 0
fn=runtime.mProf_NextCycle
279 120 20 18 40 0 0 20 0 0
280 60 0 0 0 0 0 40 0 0
284 180 20 18 20 20 10 20 0 0
285 20 0 0 0 0 0 20 0 0
286 60 0 0 0 0 0 40 0 0
287 60 20 18 40 0 0 0 0 0
fn=runtime.mProf_PostSweep
127 336 0 0 336 315 182 0 0 0
128 672 0 0 672 23 15 0 0 0
129 672 0 0 672 17 11 0 0 0
130 672 0 0 672 60 26 0 0 0
322 60 12 10 20 0 0 10 0 0
323 30 0 0 0 0 0 20 0 0
329 20 0 0 10 8 0 10 0 0
330 2056 10 9 682 26 8 336 0 0
331 1008 0 0 336 0 0 672 0 0
332 3360 8 8 1008 291 125 0 0 0
333 336 0 0 0 0 0 0 0 0
334 1344 0 0 0 0 0 1344 0 0
336 30 10 9 0 0 0 20 0 0
337 30 0 0 20 0 0 0 0 0
fn=runtime.newBucket
162 252 34 16 84 0 0 42 0 0
163 84 0 0 42 0 0 0 0 0
167 126 42 25 42 0 0 0 0 0
168 42 0 0 0 0 0 0 0 0
173 294 0 0 42 0 0 210 28 4
174 84 0 0 84 42 14 0 0 0
175 84 40 25 42 0 0 42 42 41
176 84 0 0 42 0 0 42 9 9
177 168 0 0 84 0 0 42 0 0
fn=runtime.stkbucket
182 715 93 59 0 0 0 0 0 0
183 2145 30 23 715 0 0 0 0 0
205 4374 423 105 1472 0 0 715 0 0
206 1430 0 0 715 23 0 0 0 0
207 8 2 2 2 0 0 4 0 0
208 2 0 0 1 0 0 0 0 0
215 24909 57 35 6406 0 0 0 0 0
216 4976 0 0 0 0 0 0 0 0
217 14928 0 0 0 0 0 0 0 0
218 14928 0 0 0 0 0 0 0 0
221 1430 0 0 715 0 0 0 0 0
222 2145 0 0 0 0 0 0 0 0
223 2145 82 48 0 0 0 0 0 0
225 715 0 0 0 0 0 0 0 0
226 2860 0 0 0 0 0 715 0 0
228 5005 0 0 0 0 0 715 0 0
229 7781 55 33 2818 714 281 673 0 0
230 14806 989 174 6057 1002 332 4711 0 0
231 2692 0 0 1346 0 0 673 0 0
235 42 0 0 0 0 0 0 0 0
240 883 34 23 715 0 0 168 0 0
241 504 36 24 84 0 0 168 0 0
242 126 0 0 84 0 0 42 0 0
243 84 0 0 42 0 0 42 0 0
244 883 31 23 799 0 0 42 3 3
245 126 0 0 42 0 0 42 0 0
246 126 0 0 42 0 0 0 0 0
247 84 0 0 42 42 15 42 0 0
248 42 0 0 0 0 0 42 0 0
256 168 0 0 84 0 0 42 0 0
fl=.//usr/lib/golang/src/runtime/mranges.go
fn=runtime.(*addrRanges).add
126 414 138 105 138 0 0 69 0 0
138 415 0 0 207 0 0 208 0 0
139 956 102 77 340 0 0 0 0 0
140 554 140 101 208 0 0 0 0 0
141 69 0 0 0 0 0 0 0 0
148 207 0 0 138 0 0 0 0 0
149 69 0 0 0 0 0 0 0 0
152 546 68 47 69 0 0 68 0 0
153 1 0 0 0 0 0 0 0 0
156 2 0 0 1 0 0 0 0 0
160 3 0 0 0 0 0 0 0 0
175 2 0 0 0 0 0 1 0 0
176 33 3 3 2 0 0 4 0 0
178 12 0 0 6 0 0 2 0 0
fn=runtime.(*addrRanges).contains
34 60 0 0 0 0 0 0 0 0
115 120 16 15 40 0 0 20 0 0
116 120 0 0 60 0 0 60 0 0
117 40 17 15 0 0 0 0 0 0
120 300 17 15 160 0 0 20 0 0
fn=runtime.(*addrRanges).findSucc
87 1787 163 130 652 15 0 0 0 0
88 805 0 0 161 85 68 0 0 0
92 163 0 0 0 0 0 163 0 0
fn=runtime.(*addrRanges).init
72 6 1 1 2 0 0 1 0 0
73 2 0 0 1 0 0 1 0 0
75 1 1 1 0 0 0 1 0 0
76 8 0 0 3 0 0 5 0 0
77 4 1 1 2 0 0 1 0 0
78 3 0 0 2 0 0 0 0 0
fn=runtime.(*pageAlloc).scavengeOne
26 10 0 0 0 0 0 0 0 0
29 10 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow
26 695 1 1 0 0 0 0 0 0
29 690 0 0 0 0 0 0 0 0
fn=runtime.addrRange.subtract
41 2040 29 26 680 0 0 340 0 0
42 2720 0 0 1360 0 0 0 0 0
43 1700 68 51 680 0 0 340 0 0
fl=.//usr/lib/golang/src/runtime/msize.go
fn=runtime.growslice
14 932188 0 0 0 0 0 0 0 0
15 932092 0 0 0 0 0 0 0 0
16 4633090 57 32 926618 11843 138 0 0 0
18 27370 7 7 5474 2191 34 0 0 0
21 144 0 0 0 0 0 0 0 0
24 48 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
14 8 0 0 0 0 0 0 0 0
15 6 0 0 0 0 0 0 0 0
18 30 0 0 6 2 0 0 0 0
21 3 1 1 0 0 0 0 0 0
24 1 0 0 0 0 0 0 0 0
fn=runtime.testdefersizes
14 146 0 0 0 0 0 0 0 0
15 146 1 1 0 0 0 0 0 0
16 730 0 0 146 1 1 0 0 0
fl=.//usr/lib/golang/src/runtime/mstats.go
fn=runtime.ReadMemStats
448 120 20 17 40 0 0 20 0 0
449 80 11 10 0 0 0 60 0 0
451 180 7 0 20 5 0 100 0 0
455 20 0 0 0 0 0 20 0 0
456 60 1 0 40 6 0 0 0 0
fn=runtime.ReadMemStats.func1
451 140 25 21 60 0 0 20 0 0
452 40 0 0 0 0 0 40 14 0
453 60 0 0 40 18 0 0 0 0
fn=runtime.cachestats
591 240 32 28 80 0 0 40 0 0
592 5560 52 46 2720 0 0 720 0 0
593 640 0 0 640 608 98 0 0 0
594 1280 0 0 0 0 0 0 0 0
597 1920 0 0 0 0 0 1280 0 0
fn=runtime.flushallmcaches
621 140 11 10 40 0 0 20 0 0
622 2060 11 9 700 0 0 320 0 0
623 640 0 0 0 0 0 640 0 0
fn=runtime.flushmcache
606 1920 12 10 640 0 0 320 0 0
607 1920 11 10 1280 0 0 0 0 0
608 640 0 0 320 283 214 320 0 0
609 640 0 0 0 0 0 0 0 0
612 640 0 0 0 0 0 640 0 0
613 960 0 0 320 0 0 640 0 0
614 960 0 0 640 0 0 0 0 0
fn=runtime.init.3
429 6 1 1 2 0 0 1 0 0
431 5 0 0 3 0 0 0 0 0
fn=runtime.mSysStatDec
675 269919 911 112 0 0 0 89973 4 0
676 269919 0 0 89973 0 0 0 0 0
683 989703 123 51 449865 14175 139 0 0 0
fn=runtime.mSysStatInc
658 180519 36204 143 0 0 0 60173 0 0
659 180519 0 0 60173 0 0 0 0 0
666 541548 1150 105 300860 8276 81 0 0 0
fn=runtime.purgecachedstats
631 1920 20 18 1920 130 104 0 0 0
632 640 31 27 0 0 0 640 0 0
633 1280 0 0 1280 139 111 0 0 0
634 640 0 0 0 0 0 640 0 0
635 1280 0 0 1280 400 337 0 0 0
636 640 0 0 0 0 0 640 0 0
637 1280 32 28 1280 80 66 0 0 0
638 1280 0 0 0 0 0 640 0 0
639 130560 0 0 0 0 0 0 0 0
640 214400 0 0 85760 5504 4269 42880 0 0
641 42880 0 0 0 0 0 42880 0 0
fn=runtime.readmemstats_m
458 120 11 10 40 0 0 20 0 0
459 20 0 0 0 0 0 20 0 0
464 140 12 11 40 22 0 80 0 0
468 80 0 0 60 0 0 20 0 0
469 60 0 0 40 0 0 0 0 0
fn=runtime.updatememstats
515 120 13 11 40 0 0 20 0 0
516 40 0 0 20 20 14 20 10 6
517 40 0 0 20 17 10 20 15 8
518 100 11 10 80 9 8 20 0 0
519 60 0 0 60 0 0 0 0 0
522 60 12 11 20 0 0 20 0 0
532 40 0 0 0 0 0 20 0 0
534 40 0 0 0 0 0 20 0 0
535 4080 11 10 0 0 0 0 0 0
536 4020 0 0 0 0 0 1340 306 250
537 1340 0 0 0 0 0 1340 151 125
541 60 0 0 0 0 0 40 0 0
544 60 0 0 0 0 0 20 0 0
550 10800 12 11 0 0 0 0 0 0
553 8040 0 0 0 0 0 0 0 0
554 8040 0 0 5360 2655 1909 0 0 0
555 2680 0 0 0 0 0 0 0 0
556 21500 0 0 5360 377 0 2680 0 0
557 13400 0 0 5360 60 33 0 0 0
560 4060 0 0 0 0 0 0 0 0
561 2680 0 0 0 0 0 0 0 0
562 40 0 0 40 0 0 0 0 0
563 40 0 0 20 20 0 0 0 0
564 40 12 11 20 0 0 0 0 0
565 40 0 0 40 0 0 0 0 0
566 20 0 0 0 0 0 0 0 0
570 3960 0 0 2640 0 0 0 0 0
571 5280 12 11 1320 0 0 1320 0 0
572 7920 0 0 2640 0 0 0 0 0
574 20 0 0 0 0 0 0 0 0
576 40 0 0 40 0 0 0 0 0
577 60 0 0 40 0 0 20 0 0
580 20 11 10 0 0 0 20 0 0
581 40 0 0 0 0 0 20 0 0
582 20 0 0 0 0 0 20 0 0
583 60 0 0 20 0 0 20 20 0
584 60 0 0 40 20 0 0 0 0
fl=.//usr/lib/golang/src/runtime/mwbbuf.go
fn=runtime.(*wbBuf).reset
86 91200 385 29 30400 0 0 15200 0 0
87 45600 0 0 15200 0 0 15200 1003 34
89 30400 188 32 15200 1911 7 0 0 0
100 45600 0 0 0 0 0 15200 0 0
103 106400 0 0 60800 0 0 0 0 0
fn=runtime.atomicwb
151 1 0 0 1 0 0 0 0 0
152 1 0 0 0 0 0 1 0 0
153 1 0 0 0 0 0 1 0 0
154 3 0 0 1 0 0 1 0 0
155 1 0 0 1 0 0 0 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
151 1526804 0 0 1526804 158 11 0 0 0
152 1520894 0 0 0 0 0 1520894 3 0
153 1520894 0 0 0 0 0 1520894 20132 675
154 4562682 0 0 1520894 0 0 1520894 0 0
155 1520894 9 9 1520894 0 0 0 0 0
fn=runtime.wbBufFlush
174 41472 25 18 0 0 0 13824 0 0
185 55296 262 33 41472 26 3 0 0 0
193 41472 0 0 13824 115 17 0 0 0
206 124416 143 51 13824 0 0 69120 8 0
221 41472 0 0 27648 3 0 0 0 0
fn=runtime.wbBufFlush.func1
206 82944 290 75 27648 0 0 13824 0 0
218 110592 0 0 69120 755 3 27648 653 5
fn=runtime.wbBufFlush1
243 89184 581 38 29728 0 0 14864 27 2
245 44592 0 0 14864 0 0 0 0 0
246 59456 745 38 14864 1115 291 14864 4 0
247 44592 0 0 0 0 0 0 0 0
251 14864 0 0 0 0 0 14864 0 0
253 59456 0 0 14864 6 0 0 0 0
276 14864 0 0 0 0 0 0 0 0
278 42503143 1318 48 17206632 119634 2300 3837585 0 0
279 13863588 0 0 0 0 0 0 0 0
288 30697935 38 28 11512755 0 0 11512755 846 10
289 7675170 0 0 0 0 0 0 0 0
290 2745 0 0 0 0 0 0 0 0
294 3834840 0 0 0 0 0 0 0 0
295 3834840 0 0 0 0 0 0 0 0
296 3215875 0 0 0 0 0 0 0 0
298 618965 0 0 0 0 0 0 0 0
299 1237930 0 0 618965 0 0 0 0 0
300 52 5 4 39 0 0 13 0 0
301 13 0 0 0 0 0 0 0 0
303 10769930 525 13 5075489 0 0 4456537 68 0
304 1237904 0 0 0 0 0 0 0 0
308 104048 3433 25 0 0 0 74320 2 1
310 59456 3978 43 14864 0 0 29728 0 0
311 44592 0 0 29728 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/nbpipe_pipe2.go
fn=runtime.nonblockingPipe
9 6 2 2 2 0 0 1 0 0
10 5 0 0 3 0 0 2 0 0
11 2 0 0 0 0 0 0 0 0
21 6 0 0 2 0 0 3 0 0
fl=.//usr/lib/golang/src/runtime/netpoll.go
fn=internal/poll.runtime_pollClose
158 12 4 4 4 0 0 2 0 0
159 6 0 0 4 0 0 0 0 0
162 10 0 0 2 0 0 0 0 0
165 10 2 2 2 0 0 0 0 0
168 2 0 0 2 0 0 0 0 0
169 10 2 2 2 0 0 6 0 0
170 6 0 0 4 0 0 0 0 0
fn=internal/poll.runtime_pollOpen
132 12 3 3 4 0 0 2 0 0
133 10 0 0 2 0 0 6 0 0
134 10 0 0 2 0 0 6 0 0
135 12 2 2 4 2 2 0 0 0
138 10 0 0 2 2 2 0 0 0
141 4 0 0 2 0 0 2 0 0
143 2 0 0 0 0 0 2 0 0
144 2 0 0 2 0 0 0 0 0
145 2 2 2 0 0 0 2 0 0
146 2 0 0 0 0 0 2 0 0
147 2 0 0 2 0 0 0 0 0
148 2 0 0 0 0 0 2 0 0
149 2 0 0 0 0 0 2 2 2
150 6 0 0 2 0 0 4 0 0
153 12 2 2 6 0 0 6 0 0
154 12 0 0 6 0 0 4 0 0
fn=internal/poll.runtime_pollServerInit
104 6 1 1 2 0 0 1 0 0
105 1 0 0 0 0 0 1 0 0
106 3 0 0 2 0 0 0 0 0
fn=internal/poll.runtime_pollUnblock
307 12 4 4 4 0 0 2 0 0
308 12 0 0 4 0 0 6 0 0
309 6 0 0 4 0 0 0 0 0
312 2 0 0 0 0 0 2 0 0
313 2 2 2 2 0 0 0 0 0
314 2 0 0 2 0 0 0 0 0
315 2 0 0 0 0 0 2 0 0
316 4 0 0 4 0 0 0 0 0
317 12 0 0 2 0 0 10 0 0
318 14 2 2 4 0 0 10 0 0
319 6 0 0 4 0 0 0 0 0
323 4 0 0 2 0 0 0 0 0
327 6 2 2 2 0 0 4 0 0
328 6 0 0 2 0 0 0 0 0
331 12 0 0 6 0 0 0 0 0
fn=runtime.(*pollCache).alloc
510 12 4 4 4 0 0 2 0 0
511 8 0 0 4 2 1 4 0 0
512 7 0 0 4 0 0 0 0 0
520 6 1 1 1 0 0 4 0 0
521 59 0 0 1 0 0 0 0 0
522 18 0 0 0 0 0 0 0 0
523 36 0 0 18 0 0 18 18 18
524 18 0 0 0 0 0 18 0 0
527 5 3 3 2 0 0 2 0 0
528 4 0 0 2 1 1 2 0 0
529 4 0 0 0 0 0 4 0 0
530 10 0 0 6 0 0 2 0 0
fn=runtime.(*pollCache).free
172 12 2 2 4 0 0 2 0 0
173 8 0 0 4 0 0 4 0 0
174 8 0 0 6 0 0 2 0 0
175 2 2 2 0 0 0 2 0 0
176 4 0 0 0 0 0 4 0 0
177 6 0 0 4 0 0 0 0 0
fn=runtime.findrunnable
120 122431 0 0 61210 4 1 0 0 0
fn=runtime.netpollGenericInit
108 6 1 1 2 0 0 1 0 0
109 6 0 0 3 0 0 0 0 0
110 3 0 0 0 0 0 2 0 0
111 2 0 0 1 0 0 0 0 0
112 1 1 1 0 0 0 1 0 0
113 4 0 0 2 0 0 0 0 0
115 4 0 0 0 0 0 2 0 0
fn=runtime.netpollunblock
429 16 2 2 0 0 0 4 0 0
430 12 0 0 4 0 0 0 0 0
431 12 0 0 4 0 0 0 0 0
432 6 0 0 4 0 0 0 0 0
436 6 2 2 4 0 0 0 0 0
437 8 0 0 0 0 0 0 0 0
440 12 0 0 0 0 0 0 0 0
443 16 0 0 8 0 0 4 0 0
fn=runtime.pollWork
120 2706 0 0 1353 1097 21 0 0 0
fn=runtime.startTheWorldWithSema
120 120 0 0 60 0 0 0 0 0
fn=runtime.sysmon
120 578 0 0 289 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/netpoll_epoll.go
fn=internal/poll.runtime_pollClose
67 4 0 0 0 0 0 4 0 0
68 14 0 0 2 0 0 10 0 0
fn=runtime.netpoll
99 1314 267 114 372 0 0 186 0 0
100 372 0 0 186 183 18 0 0 0
104 577 0 0 188 0 0 0 0 0
106 359 141 47 0 0 0 0 0 0
108 27 0 0 0 0 0 0 0 0
110 36 11 11 0 0 0 0 0 0
111 72 0 0 0 0 0 0 0 0
117 36642 0 0 0 0 0 35712 3816 1635
118 186 0 0 0 0 0 0 0 0
119 2058 164 61 372 0 0 1302 359 171
120 372 0 0 0 0 0 0 0 0
121 2 0 0 0 0 0 0 0 0
127 3 0 0 1 0 0 0 0 0
128 4 0 0 2 0 0 1 0 0
132 185 156 59 0 0 0 185 0 0
133 941 0 0 189 22 13 3 0 0
134 18 2 2 0 0 0 0 0 0
135 9 0 0 3 2 2 0 0 0
139 12 0 0 3 0 0 0 0 0
140 6 0 0 0 0 0 0 0 0
144 3 0 0 0 0 0 0 0 0
148 4 2 2 0 0 0 2 0 0
149 14 2 2 2 1 1 8 0 0
170 925 16 9 555 0 0 185 11 2
fn=runtime.netpollBreak
76 12 4 4 4 0 0 2 0 0
78 2 0 0 0 0 0 2 0 0
79 2 0 0 2 0 0 0 0 0
80 4 2 2 0 0 0 0 0 0
81 6 0 0 4 0 0 0 0 0
fn=runtime.netpollinit
27 6 1 1 2 0 0 1 0 0
28 4 0 0 1 0 0 3 0 0
29 2 0 0 0 0 0 0 0 0
37 6 1 1 3 0 0 3 0 0
38 2 0 0 0 0 0 0 0 0
42 2 0 0 0 0 0 2 0 0
43 1 0 0 0 0 0 1 0 0
45 2 1 1 0 0 0 1 0 0
46 8 0 0 2 0 0 5 0 0
47 2 0 0 0 0 0 0 0 0
51 3 1 1 1 0 0 1 0 0
52 2 0 0 1 0 0 1 0 0
53 3 0 0 2 0 0 0 0 0
fn=runtime.netpollopen
59 12 2 2 4 0 0 2 0 0
60 4 2 2 0 0 0 4 0 0
61 2 0 0 0 0 0 2 0 0
62 4 0 0 2 0 0 2 0 0
63 28 2 2 10 1 0 12 0 0
fl=.//usr/lib/golang/src/runtime/os_linux.go
fn=runtime.futexsleep
38 1408 132 51 0 0 0 425 4 2
44 1275 0 0 425 0 0 0 0 0
45 2628 10 5 584 0 0 1752 55 34
46 864 47 25 576 35 23 0 0 0
49 266 37 20 0 0 0 133 0 0
50 133 0 0 0 0 0 0 0 0
51 1330 21 13 266 0 0 931 16 8
fn=runtime.futexwakeup
56 1230 74 29 0 0 0 410 0 0
57 4100 189 61 1230 0 0 2460 57 8
58 820 0 0 0 0 0 0 0 0
59 1230 0 0 820 38 9 0 0 0
fn=runtime.getHugePageSize
274 6 2 2 2 0 0 1 0 0
275 3 0 0 0 0 0 2 0 0
276 9 0 0 3 1 1 4 0 0
277 2 1 1 0 0 0 0 0 0
280 7 0 0 1 0 0 5 0 0
281 3 0 0 1 0 0 2 0 0
282 3 1 1 1 0 0 0 0 0
285 1 0 0 0 0 0 0 0 0
286 9 0 0 2 0 0 3 0 0
287 3 0 0 0 0 0 0 0 0
290 3 0 0 0 0 0 0 0 0
294 4 1 1 2 0 0 1 0 0
fn=runtime.getRandomData
305 12 1 1 4 0 0 2 0 0
306 8 0 0 4 1 0 0 0 0
307 26 2 2 4 0 0 10 0 0
308 18 0 0 8 0 0 10 0 0
309 6 0 0 4 0 0 0 0 0
fn=runtime.getproccount
72 11 2 2 2 0 0 1 0 0
81 1028 1 1 0 0 0 1024 124 124
82 6 0 0 1 0 0 4 0 0
83 2 0 0 0 0 0 0 0 0
87 40 1 1 8 0 0 0 0 0
88 72 0 0 0 0 0 0 0 0
89 48 0 0 0 0 0 0 0 0
90 16 0 0 0 0 0 0 0 0
93 4 1 1 2 0 0 0 0 0
96 3 0 0 0 0 0 1 0 0
fn=runtime.initsig
437 174 0 0 0 0 0 116 0 0
438 290 1 1 0 0 0 232 0 0
439 58 0 0 58 0 0 0 0 0
fn=runtime.minit
350 36 5 2 12 0 0 6 0 0
351 6 0 0 0 0 0 6 0 0
356 30 5 2 18 0 0 12 0 0
357 18 0 0 12 0 0 0 0 0
fn=runtime.minitSignalMask
385 36 5 2 0 0 0 30 0 0
fn=runtime.mpreinit
338 37 6 4 12 0 0 6 0 0
339 51 1 1 18 0 0 18 4 4
340 27 0 0 6 0 0 6 0 0
341 36 2 1 18 2 1 0 0 0
fn=runtime.newosproc
140 30 5 2 10 0 0 5 0 0
141 20 0 0 15 0 0 5 0 0
151 5 0 0 0 0 0 5 0 0
152 5 0 0 0 0 0 0 0 0
153 60 5 2 25 0 0 35 0 0
154 5 0 0 0 0 0 0 0 0
156 30 0 0 15 0 0 0 0 0
385 65 10 4 0 0 0 50 0 0
fn=runtime.osinit
297 6 1 1 2 0 0 1 0 0
298 3 1 1 1 0 0 2 0 0
299 3 0 0 1 0 0 2 0 0
300 1 0 0 0 0 0 1 0 0
301 3 0 0 2 0 0 0 0 0
fn=runtime.schedinit
318 1 0 0 0 0 0 1 0 0
385 5 1 1 0 0 0 5 0 0
fn=runtime.setsig
401 168 0 0 0 0 0 56 0 0
402 168 0 0 0 0 0 112 0 0
403 56 1 1 0 0 0 56 0 0
404 56 0 0 0 0 0 0 0 0
409 56 0 0 0 0 0 56 0 0
411 56 0 0 0 0 0 0 0 0
412 112 1 1 56 0 0 0 0 0
418 56 0 0 0 0 0 56 0 0
419 336 0 0 56 0 0 224 0 0
420 168 0 0 112 0 0 0 0 0
fn=runtime.signalM
495 294 34 24 98 0 0 49 0 0
496 147 31 22 49 0 0 0 0 0
499 343 31 23 147 21 10 196 12 5
500 147 5 0 98 6 0 0 0 0
fn=runtime.signalstack
445 6 0 0 0 0 0 6 0 0
fn=runtime.sysSigaction
454 342 1 1 0 0 0 114 0 0
455 1482 2 2 684 0 0 570 0 0
467 7 0 0 1 0 0 0 0 0
fn=runtime.sysargs
197 7 2 2 2 0 0 1 0 0
198 2 0 0 1 0 0 0 0 0
201 130 0 0 1 0 0 0 0 0
202 63 0 0 0 0 0 0 0 0
206 1 0 0 0 0 0 0 0 0
209 1 0 0 0 0 0 0 0 0
210 6 1 1 1 0 0 4 1 1
211 3 1 1 2 0 0 0 0 0
fn=runtime.sysauxv
252 6 1 1 2 0 0 1 0 0
254 237 1 1 79 0 0 19 0 0
255 76 1 1 19 5 5 0 0 0
257 36 0 0 0 0 0 0 0 0
260 8 1 1 1 0 0 3 1 1
262 38 0 0 0 0 0 0 0 0
263 2 0 0 0 0 0 1 1 1
267 58 0 0 0 0 0 57 1 1
269 8 0 0 2 0 0 1 0 0
fl=.//usr/lib/golang/src/runtime/os_linux_generic.go
fn=runtime.minitSignalMask
38 1248 0 0 288 0 0 192 5 5
fn=runtime.setsig
42 56 0 0 0 0 0 56 0 0
fl=.//usr/lib/golang/src/runtime/os_linux_x86.go
fn=runtime.osArchInit
17 7 2 2 2 0 0 1 0 0
35 7 0 0 1 0 0 3 0 0
36 5 1 1 1 0 0 2 0 0
42 123 1 1 33 0 0 5 0 0
43 57 0 0 0 0 0 0 0 0
48 2 0 0 0 0 0 0 0 0
51 1 0 0 0 0 0 0 0 0
53 9 1 1 4 0 0 3 0 0
54 1 0 0 0 0 0 0 0 0
58 9 1 1 0 0 0 0 0 0
63 3 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/panic.go
fn=runtime.gorecover
1091 1 1 1 1 0 0 0 0 0
1092 1 0 0 1 0 0 0 0 0
1093 2 0 0 0 0 0 0 0 0
1097 3 1 1 1 0 0 1 0 0
fn=runtime.init.4
373 6 1 1 2 0 0 1 0 0
374 2 1 1 0 0 0 1 0 0
375 3 0 0 0 0 0 2 0 0
376 5 0 0 3 1 1 1 0 0
377 3 0 0 2 0 0 0 0 0
fn=runtime.sighandler
1421 49 0 0 0 0 0 0 0 0
fn=runtime.testdefersizes
321 230 0 0 0 0 0 0 0 0
324 130 1 1 0 0 0 0 0 0
329 82 0 0 0 0 0 0 0 0
332 64 0 0 0 0 0 0 0 0
337 6 2 2 2 0 0 1 1 0
338 4 0 0 0 0 0 2 0 0
340 20 1 1 0 0 0 0 0 0
341 15 0 0 0 0 0 5 0 0
343 73 0 0 0 0 0 0 0 0
344 65 0 0 0 0 0 0 0 0
345 148 0 0 0 0 0 0 0 0
346 3 0 0 2 0 0 0 0 0
348 64 0 0 0 0 0 0 0 0
349 224 1 1 73 0 0 0 0 0
350 5 0 0 0 0 0 5 0 0
351 5 0 0 0 0 0 0 0 0
353 136 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/pprof/elf.go
fn=runtime/pprof.init
15 16 2 2 5 0 0 6 1 0
16 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/runtime/preempt.go
fn=runtime.asyncPreempt2
302 6 2 2 0 0 0 2 1 0
303 4 0 0 2 0 0 2 0 0
304 2 0 0 0 0 0 2 0 0
305 4 0 0 2 0 0 0 0 0
308 6 2 2 0 0 0 4 0 0
310 4 0 0 2 0 0 2 0 0
311 6 0 0 4 0 0 0 0 0
fn=runtime.doSigPreempt
344 535 46 38 181 49 10 0 0 0
fn=runtime.init.5
317 6 1 1 2 0 0 1 0 0
318 4 1 1 2 0 0 2 0 0
319 5 0 0 1 0 0 4 0 0
320 4 0 0 2 0 0 2 0 0
321 5 1 1 2 0 0 3 0 0
323 3 0 0 0 0 0 1 0 0
324 5 0 0 2 0 0 0 0 0
fn=runtime.isAsyncSafePoint
288 16 2 2 9 2 0 0 0 0
359 18 3 3 6 0 0 3 0 0
360 6 0 0 6 0 0 0 0 0
365 6 3 3 3 1 0 0 0 0
370 11 0 0 3 0 0 0 0 0
371 4 0 0 2 0 0 1 0 0
375 14 0 0 6 1 0 0 0 0
380 14 2 2 6 0 0 8 4 4
381 2 0 0 0 0 0 0 0 0
396 16 2 2 4 0 0 12 0 0
397 2 0 0 0 0 0 0 0 0
403 24 2 2 6 0 0 8 0 0
414 18 2 2 8 0 0 10 0 0
415 19 1 1 6 0 0 9 0 0
417 10 1 1 4 0 0 6 0 0
418 2 0 0 0 0 0 0 0 0
419 15 1 1 6 1 1 4 0 0
422 14 2 2 2 0 0 4 0 0
423 4 0 0 0 0 0 0 0 0
424 2 2 2 0 0 0 0 0 0
438 8 0 0 4 0 0 2 0 0
fn=runtime.newstack
288 370 0 0 198 9 0 0 0 0
fn=runtime.resumeG
258 4470 20 18 1788 0 0 447 0 0
259 447 0 0 0 0 0 0 0 0
265 447 0 0 0 0 0 0 0 0
270 2235 20 18 0 0 0 0 0 0
273 2235 20 18 0 0 0 1788 0 0
276 1788 0 0 894 0 0 0 0 0
278 6 0 0 1 0 0 4 0 0
fn=runtime.suspendG
105 2730 50 36 910 0 0 455 0 0
106 7735 20 18 1820 0 0 0 0 0
122 658 0 0 564 4 0 0 0 0
123 1098 0 0 0 0 0 0 0 0
137 18 0 0 0 0 0 0 0 0
143 40 5 5 16 0 0 16 0 0
145 2 0 0 0 0 0 0 0 0
149 2 0 0 0 0 0 0 0 0
153 7 1 1 1 0 0 3 0 0
163 2400 20 18 0 0 0 0 0 0
167 3132 1 0 448 0 0 1788 14 1
175 894 21 18 447 0 0 447 0 0
176 1341 0 0 447 446 245 447 0 0
190 4314 41 36 1342 0 0 2431 0 0
192 1068 0 0 0 0 0 0 0 0
195 1215 2 2 466 0 0 0 0 0
200 6 2 2 1 0 0 3 0 0
206 2 0 0 1 0 0 1 0 0
207 1 0 0 0 0 0 1 1 0
210 2 0 0 1 0 0 1 0 0
211 2 0 0 1 1 1 1 0 0
212 1483 1 1 4 0 0 1287 0 0
216 4 0 0 0 0 0 3 0 0
223 5 0 0 1 1 0 0 0 0
229 1 1 1 0 0 0 0 0 0
230 741 20 18 1 0 0 643 0 0
231 1 0 0 0 0 0 0 0 0
232 1 0 0 0 0 0 0 0 0
244 738 0 0 1 0 0 549 0 0
245 2 0 0 0 0 0 0 0 0
247 1081 0 0 250 0 0 643 5 0
248 183 0 0 0 0 0 122 0 0
250 33 0 0 0 0 0 33 0 0
251 66 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/preempt_amd64.s
fn=runtime.asyncPreempt
7 2 2 2 0 0 0 2 0 0
8 2 0 0 0 0 0 0 0 0
10 2 0 0 0 0 0 2 0 0
12 2 0 0 0 0 0 0 0 0
20 2 0 0 0 0 0 2 1 0
21 2 0 0 0 0 0 2 0 0
22 2 0 0 0 0 0 2 0 0
23 2 0 0 0 0 0 2 0 0
24 2 0 0 0 0 0 2 0 0
25 2 0 0 0 0 0 2 0 0
26 2 0 0 0 0 0 2 0 0
27 2 0 0 0 0 0 2 1 0
28 2 0 0 0 0 0 2 0 0
29 2 0 0 0 0 0 2 0 0
30 2 2 2 0 0 0 2 0 0
31 2 0 0 0 0 0 2 0 0
32 2 0 0 0 0 0 2 0 0
33 2 0 0 0 0 0 2 0 0
34 2 0 0 0 0 0 2 1 0
35 2 0 0 0 0 0 2 0 0
36 2 0 0 0 0 0 2 0 0
37 2 0 0 0 0 0 2 0 0
38 2 0 0 0 0 0 2 1 0
39 2 0 0 0 0 0 2 0 0
40 2 2 2 0 0 0 2 0 0
41 2 0 0 0 0 0 2 0 0
42 2 0 0 0 0 0 2 0 0
43 2 0 0 0 0 0 2 0 0
44 2 0 0 0 0 0 2 0 0
45 2 0 0 0 0 0 2 0 0
46 2 0 0 0 0 0 2 0 0
47 2 2 2 0 0 0 2 0 0
48 2 0 0 0 0 0 2 0 0
49 2 0 0 0 0 0 2 0 0
50 2 0 0 0 0 0 2 0 0
51 2 0 0 2 0 0 0 0 0
52 2 0 0 2 0 0 0 0 0
53 2 0 0 2 0 0 0 0 0
54 2 0 0 2 0 0 0 0 0
55 2 2 2 2 0 0 0 0 0
56 2 0 0 2 0 0 0 0 0
57 2 0 0 2 0 0 0 0 0
58 2 0 0 2 0 0 0 0 0
59 2 0 0 2 0 0 0 0 0
60 2 0 0 2 0 0 0 0 0
61 2 0 0 2 0 0 0 0 0
62 2 2 2 2 0 0 0 0 0
63 2 0 0 2 0 0 0 0 0
64 2 0 0 2 0 0 0 0 0
65 2 0 0 2 0 0 0 0 0
66 2 0 0 2 0 0 0 0 0
67 2 0 0 2 0 0 0 0 0
68 2 0 0 2 0 0 0 0 0
69 2 0 0 2 0 0 0 0 0
70 2 0 0 2 0 0 0 0 0
71 2 0 0 2 0 0 0 0 0
72 2 0 0 2 0 0 0 0 0
73 2 2 2 2 0 0 0 0 0
74 2 0 0 2 0 0 0 0 0
75 2 0 0 2 0 0 0 0 0
76 2 0 0 2 0 0 0 0 0
77 2 0 0 2 0 0 0 0 0
78 2 0 0 2 0 0 0 0 0
79 2 0 0 2 0 0 0 0 0
80 2 0 0 2 0 0 0 0 0
81 2 0 0 0 0 0 0 0 0
82 2 0 0 2 0 0 0 0 0
83 2 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/proc.go
fn=runtime.(*p).init
4086 96 2 2 32 0 0 16 0 0
4087 48 0 0 32 0 0 16 16 16
4088 16 0 0 0 0 0 16 0 0
4089 112 1 1 16 0 0 48 16 16
4090 288 0 0 0 0 0 0 0 0
4091 1040 1 1 80 0 0 240 48 48
4093 48 0 0 0 0 0 32 0 0
4094 96 0 0 64 0 0 0 0 0
4095 48 1 1 16 0 0 0 0 0
4096 5 0 0 3 0 0 0 0 0
4099 2 0 0 0 0 0 1 0 0
4101 75 0 0 30 0 0 30 0 0
fn=runtime.(*randomOrder).reset
5409 366 52 41 122 0 0 61 0 0
5410 183 0 0 122 0 0 61 61 11
5411 122 0 0 0 0 0 61 0 0
5412 5734 52 41 1586 0 0 976 0 0
5413 5368 0 0 976 0 0 2928 2 0
5414 7374 94 77 3434 1 0 1000 37 9
fn=runtime.GC
269 752436 0 0 0 0 0 501624 0 0
fn=runtime.acquireSudog
320 87 24 19 0 0 0 29 0 0
329 29 0 0 0 0 0 0 0 0
330 29 0 0 29 0 0 0 0 0
331 107 25 21 39 20 16 10 0 0
332 30 0 0 0 0 0 20 4 4
334 70 0 0 30 0 0 0 0 0
340 30 9 8 0 0 0 20 0 0
342 30 0 0 20 0 0 0 0 0
343 189 22 20 60 1 0 40 0 0
346 80 35 30 58 0 0 0 0 0
347 174 26 20 29 2 1 0 0 0
348 105 0 0 29 1 1 29 5 4
349 125 0 0 29 0 0 29 0 0
350 58 0 0 29 19 13 0 0 0
353 29 0 0 0 0 0 0 0 0
354 116 12 9 58 0 0 29 0 0
fn=runtime.acquirep
4330 366936 178 65 122312 219 66 61156 0 0
4332 183468 0 0 61156 0 0 122312 38 4
4338 244624 0 0 122312 0 0 122312 0 0
4340 305780 0 0 183468 30 19 0 0 0
fn=runtime.allgadd
465 150 8 4 50 0 0 25 0 0
466 75 8 4 25 0 0 0 0 0
470 75 0 0 0 0 0 50 0 0
471 427 16 6 149 21 4 98 9 3
472 50 0 0 25 0 0 25 0 0
473 75 0 0 0 0 0 50 0 0
474 75 0 0 50 0 0 0 0 0
733 25 0 0 25 0 0 0 0 0
fn=runtime.allocm
1385 30 10 4 10 0 0 5 0 0
1386 10 0 0 5 0 0 5 0 0
1387 5 0 0 0 0 0 0 0 0
1388 15 0 0 10 0 0 0 0 0
1389 8 2 2 2 0 0 4 0 0
1394 10 0 0 5 0 0 0 0 0
1412 26 5 4 5 0 0 15 0 0
1413 22 0 0 10 0 0 5 4 4
1414 21 0 0 5 0 0 15 0 0
1418 10 2 2 5 0 0 0 0 0
1421 40 4 2 15 0 0 15 4 4
1423 29 1 1 10 0 0 5 0 0
1425 32 5 4 22 0 0 0 0 0
1426 4 1 0 0 0 0 2 0 0
1428 7 0 0 7 0 0 0 0 0
1430 22 0 0 12 0 0 5 0 0
fn=runtime.bgscavenge
310 125 14 13 14 14 4 70 0 0
fn=runtime.bgsweep
269 36999 0 0 0 0 0 24666 0 0
310 147 1 1 0 0 0 105 20 16
fn=runtime.casGFromPreempted
852 6 1 1 2 0 0 1 0 0
853 6 0 0 2 0 0 0 0 0
856 9 1 1 4 0 0 1 0 0
fn=runtime.casGToPreemptScan
841 6 1 1 2 0 0 1 0 0
842 7 0 0 3 0 0 0 0 0
845 9 1 1 3 0 0 0 0 0
fn=runtime.casfrom_Gscanstatus
740 2694 40 36 898 0 0 449 0 0
749 2694 20 18 449 0 0 0 0 0
754 2245 0 0 449 0 0 0 0 0
755 1796 0 0 898 0 0 0 0 0
758 2245 0 0 898 0 0 0 0 0
fn=runtime.casgstatus
787 1656174 87 37 0 0 0 552058 1760 40
788 4968522 1768 165 1104116 0 0 0 0 0
789 3312348 226 28 1656174 0 0 0 0 0
801 4416464 0 0 1656174 107 63 0 0 0
805 552058 486 43 0 0 0 0 0 0
fn=runtime.castogscanstatus
767 2688 20 18 896 0 0 448 0 0
769 1792 0 0 448 0 0 0 0 0
773 2240 20 18 448 0 0 0 0 0
774 3584 0 0 1792 0 0 448 0 0
fn=runtime.checkTimers
2634 3519504 277 107 1173168 13 4 586584 26 7
2637 2932920 0 0 1173168 2264 546 0 0 0
2638 647330 10 9 586584 2836 497 60746 1 1
2639 1173168 0 0 0 0 0 0 0 0
2640 3680866 138 41 1577514 0 0 1577514 32 7
2642 182238 0 0 60746 0 0 0 0 0
2643 60746 0 0 0 0 0 0 0 0
2645 182238 1 0 60746 0 0 0 0 0
2650 910934 5 3 364386 0 0 0 0 0
2651 364362 6 6 121454 0 0 182181 1 1
2656 76 0 0 0 0 0 57 0 0
2658 57 13 11 19 0 0 38 0 0
2660 19 8 8 0 0 0 19 0 0
2661 57 0 0 38 0 0 0 0 0
2662 57 0 0 19 0 0 0 0 0
2665 90 0 0 45 0 0 0 0 0
2668 140 0 0 32 0 0 57 0 0
2681 254 7 7 104 0 0 0 0 0
2682 5 1 1 0 0 0 0 0 0
2685 57 0 0 19 0 0 38 0 0
2687 367 40 33 133 0 0 165 2 0
fn=runtime.checkdead
3806 890 153 57 890 0 0 0 0 0
4405 2670 309 102 890 0 0 445 0 0
4409 1780 0 0 890 16 6 0 0 0
4417 890 0 0 445 0 0 0 0 0
4426 2225 69 49 890 0 0 0 0 0
4435 3115 0 0 1335 0 0 0 0 0
4436 890 0 0 0 0 0 0 0 0
4437 1335 78 53 890 0 0 0 0 0
fn=runtime.checkmcount
600 36 5 4 12 0 0 6 0 0
602 36 0 0 18 0 0 0 0 0
3806 12 0 0 12 0 0 0 0 0
fn=runtime.closechan
5265 4 0 0 2 0 0 0 0 0
fn=runtime.cpuinit
484 6 1 1 2 0 0 1 0 0
490 2 0 0 0 0 0 1 0 0
496 260 1 1 64 0 0 1 0 0
497 63 0 0 0 0 0 0 0 0
500 381 0 0 126 0 0 63 0 0
501 189 1 1 63 0 0 0 0 0
502 567 1 1 189 0 0 315 0 0
504 126 0 0 0 0 0 0 0 0
505 62 0 0 62 0 0 0 0 0
511 3 1 1 0 0 0 3 0 0
515 2 0 0 1 0 0 1 0 0
516 2 0 0 1 0 0 1 0 0
517 2 0 0 1 0 0 1 0 0
519 2 0 0 1 1 1 1 0 0
521 2 0 0 1 1 1 1 0 0
522 3 0 0 2 0 0 0 0 0
fn=runtime.doInit
5458 1236 5 1 412 0 0 206 1 1
5459 412 0 0 412 80 40 0 0 0
5460 412 0 0 0 0 0 0 0 0
5461 486 1 0 324 0 0 0 0 0
5462 412 0 0 0 0 0 0 0 0
5465 88 2 1 0 0 0 44 0 0
5466 1444 1 0 656 21 0 204 0 0
5468 204 0 0 204 21 15 0 0 0
5469 408 0 0 0 0 0 408 0 0
5471 340 2 1 170 5 0 42 1 1
5472 126 0 0 42 0 0 0 0 0
5474 84 0 0 42 5 4 42 0 0
5476 176 0 0 88 0 0 44 0 0
fn=runtime.doSigPreempt
416 6 0 0 4 2 1 0 0 0
733 35 0 0 35 0 0 0 0 0
fn=runtime.entersyscall
3027 34713 117 27 0 0 0 11571 0 0
3028 57855 1582 45 11571 0 0 34713 4802 40
fn=runtime.entersyscall_gcwait
3040 12 2 2 4 0 0 2 0 0
3041 2 0 0 2 0 0 0 0 0
3042 4 2 2 4 0 0 0 0 0
3044 6 0 0 0 0 0 4 0 0
3045 18 2 2 6 0 0 0 0 0
3046 4 0 0 2 0 0 0 0 0
3050 2 0 0 2 0 0 0 0 0
3051 10 0 0 2 0 0 2 0 0
3052 4 1 1 0 0 0 2 0 0
3055 6 0 0 0 0 0 4 0 0
3056 6 0 0 4 0 0 0 0 0
fn=runtime.entersyscall_sysmon
3031 6 0 0 2 0 0 1 0 0
3032 3 0 0 0 0 0 2 0 0
3033 3 1 1 1 0 0 0 0 0
3034 3 0 0 2 0 0 0 0 0
3035 4 0 0 0 0 0 2 0 0
3037 3 0 0 0 0 0 2 0 0
3038 3 0 0 2 0 0 0 0 0
fn=runtime.entersyscallblock
3060 48 4 1 0 0 0 16 0 0
3061 32 0 0 16 0 0 16 0 0
3063 32 0 0 32 0 0 0 0 0
3064 16 0 0 0 0 0 16 0 0
3065 16 0 0 0 0 0 16 0 0
3066 64 5 1 48 1 0 16 2 0
3067 16 0 0 0 0 0 16 0 0
3068 48 0 0 48 0 0 0 0 0
3073 80 0 0 16 0 0 48 0 0
3074 48 4 1 32 0 0 16 0 0
3075 32 0 0 16 0 0 16 0 0
3076 32 0 0 16 0 0 0 0 0
3085 80 3 1 16 0 0 48 0 0
3086 112 4 1 64 0 0 0 0 0
3093 48 2 1 0 0 0 32 0 0
3096 80 0 0 16 0 0 48 0 0
3098 48 0 0 48 0 0 0 0 0
3099 48 0 0 32 0 0 0 0 0
fn=runtime.entersyscallblock_handoff
3101 96 1 1 32 0 0 16 0 0
3102 32 0 0 16 0 0 0 0 0
3106 32 0 0 0 0 0 32 0 0
3107 48 0 0 32 0 0 0 0 0
fn=runtime.execute
2087 2106496 102 72 789936 11 4 263312 0 0
2088 526624 0 0 263312 0 0 263312 0 0
2092 1579968 53 44 789936 133 0 263312 2 0
2093 1316704 74 37 526624 0 0 263312 75 57
2094 1053248 0 0 0 0 0 789936 0 0
2095 526624 0 0 263312 0 0 263312 0 0
2096 263312 92 46 0 0 0 263312 0 0
2097 789936 0 0 263312 0 0 263312 0 0
2098 263312 0 0 0 0 0 0 0 0
2099 1316305 31 15 1053044 33 1 0 0 0
2103 263312 0 0 263312 144 11 0 0 0
2104 1053248 0 0 789936 5 1 0 0 0
2108 526624 0 0 263312 0 0 0 0 0
2117 1053248 73 43 263312 0 0 526624 0 0
fn=runtime.exitsyscall
3121 34761 41 24 0 0 0 11587 0 0
3122 23174 0 0 11587 14 4 11587 0 0
3124 23174 0 0 23174 30 7 0 0 0
3125 34761 0 0 11587 18 5 0 0 0
3129 11587 0 0 0 0 0 11587 219 8
3130 11587 0 0 11587 2 1 0 0 0
3131 23174 69 27 11587 0 0 11587 0 0
3132 46348 1 0 11587 0 0 23174 16 3
3133 46344 269 33 34758 1 0 0 0 0
3136 23172 151 34 11586 0 0 0 0 0
3142 46344 0 0 46344 0 0 0 0 0
3144 46344 41 25 0 0 0 34758 0 0
3148 23172 0 0 11586 0 0 11586 2 0
3149 23172 0 0 23172 0 0 0 0 0
3150 23172 0 0 11586 0 0 0 0 0
3155 46344 49 28 11586 0 0 11586 0 0
3157 11586 43 27 0 0 0 11586 0 0
3159 57930 0 0 11586 3442 43 0 0 0
3164 34758 0 0 23172 0 0 0 0 0
3167 2 0 0 1 0 0 1 0 0
3168 3 1 1 1 0 0 0 0 0
3181 3 2 2 2 0 0 0 0 0
3184 3 0 0 0 0 0 2 0 0
3186 4 1 1 3 1 1 0 0 0
3196 1 1 1 0 0 0 1 0 0
3197 3 0 0 3 0 0 0 0 0
3198 1 0 0 0 0 0 1 0 0
3199 3 0 0 2 0 0 0 0 0
fn=runtime.exitsyscall0
2619 1 1 1 1 0 0 0 0 0
2621 3 0 0 2 0 0 1 0 0
2622 2 0 0 1 0 0 1 0 0
3283 6 2 2 2 0 0 1 0 0
3284 2 0 0 1 0 0 1 0 0
3286 5 0 0 1 0 0 3 0 0
3287 1 0 0 0 0 0 0 0 0
3288 3 0 0 0 0 0 2 0 0
3290 5 1 1 2 0 0 2 0 0
3291 1 0 0 0 0 0 0 0 0
3293 5 1 1 1 0 0 1 0 0
3294 1 1 1 0 0 0 0 0 0
3299 4 0 0 0 0 0 2 0 0
3300 1 0 0 0 0 0 0 0 0
3304 4 0 0 3 0 0 0 0 0
3309 1 1 1 0 0 0 1 0 0
3310 1 1 1 0 0 0 1 0 0
4899 1 0 0 0 0 0 0 0 0
4900 1 0 0 1 0 0 0 0 0
4968 1 0 0 1 0 0 0 0 0
4969 2 0 0 0 0 0 0 0 0
5213 2 0 0 1 0 0 1 0 0
5214 3 1 1 1 0 0 0 0 0
5217 1 0 0 0 0 0 0 0 0
5219 1 0 0 0 0 0 0 0 0
fn=runtime.exitsyscallfast
3202 34761 1183 41 0 0 0 11587 0 0
3203 11587 0 0 11587 0 0 0 0 0
3206 23174 0 0 11587 4 1 0 0 0
3211 126832 407 38 34542 46 0 0 0 0
3213 22768 54 24 0 0 0 22768 42 1
3214 11384 0 0 0 0 0 11384 0 0
3215 45723 18 10 22768 0 0 11384 0 0
3219 406 0 0 203 0 0 0 0 0
3220 202 0 0 0 0 0 202 175 4
3221 2424 93 27 0 0 0 1616 0 0
3234 404 1 0 202 0 0 0 0 0
3235 808 1 0 404 0 0 202 2 0
3238 4 0 0 2 0 0 1 0 0
fn=runtime.exitsyscallfast.func1
3221 2424 201 55 1010 0 0 808 89 4
3222 1010 1 0 404 1 0 404 2 0
3223 606 0 0 202 0 0 0 0 0
3231 606 77 27 404 0 0 0 0 0
fn=runtime.exitsyscallfast_pidle
3264 1212 176 27 404 0 0 202 0 0
3265 606 142 27 0 0 0 404 17 0
3266 202 2 0 0 0 0 0 0 0
3267 1212 144 27 202 0 0 0 0 0
3268 48 15 8 32 0 0 0 0 0
3269 64 0 0 0 0 0 32 0 0
3271 606 0 0 0 0 0 404 0 0
3272 202 0 0 0 0 0 0 0 0
3273 404 0 0 0 0 0 404 0 0
3274 808 0 0 404 0 0 202 0 0
4968 202 0 0 202 0 0 0 0 0
4969 1010 0 0 202 0 0 0 0 0
4970 404 0 0 202 47 1 202 0 0
4971 606 0 0 404 0 0 0 0 0
fn=runtime.exitsyscallfast_reacquired
3246 34152 482 40 0 0 0 11384 0 0
3247 11384 0 0 11384 0 0 0 0 0
3248 56920 0 0 45536 2 0 0 0 0
3260 34152 148 37 22768 0 0 0 0 0
fn=runtime.findrunnable
2122 1812657 70 35 517902 0 0 258951 0 0
2123 518930 0 0 258951 0 0 258951 0 0
2129 258951 0 0 0 0 0 0 0 0
2130 716636 265 96 715660 203 64 0 0 0
2131 639780 101 38 319890 18 8 0 0 0
2132 34 0 0 0 0 0 34 0 0
2133 32 0 0 0 0 0 0 0 0
2135 959568 0 0 319856 173 37 0 0 0
2136 98 26 22 0 0 0 49 0 0
2139 2239041 112 44 639761 0 0 1599280 316 88
2141 1279396 0 0 639698 25 2 0 0 0
2142 6 2 2 2 0 0 2 0 0
2143 8 0 0 0 0 0 6 0 0
2146 1279426 0 0 639712 183 6 0 0 0
2151 2238992 145 44 959568 0 0 639712 0 0
2152 115 12 12 46 0 0 46 7 6
2156 639666 0 0 319833 58 11 0 0 0
2157 776574 35 33 0 0 0 517716 0 0
2158 1553148 0 0 517716 0 0 1035432 3 3
2159 776574 0 0 0 0 0 517716 0 0
2160 776574 24 19 258858 0 0 0 0 0
2161 1294290 0 0 517716 0 0 517716 13 7
2172 548725 122 49 60925 0 0 0 0 0
2178 60975 31 26 0 0 0 0 0 0
2185 60975 0 0 60975 0 0 0 0 0
2190 792147 187 97 304699 57 13 0 0 0
2191 242788 1 1 182091 0 0 0 0 0
2193 2502 0 0 1390 0 0 0 0 0
2194 190 50 37 0 0 0 190 0 0
2195 760 0 0 380 0 0 0 0 0
2197 23888 109 57 3408 0 0 1028 171 56
2198 40478 0 0 0 0 0 4112 0 0
2199 32012 0 0 16006 0 0 0 0 0
2200 4 0 0 0 0 0 0 0 0
2202 44916 161 51 14956 7 2 0 0 0
2203 95014 154 49 48006 239 70 15004 0 0
2204 46956 0 0 14952 0 0 0 0 0
2207 105028 6 3 15004 0 0 60016 0 0
2208 240 26 12 96 0 0 96 26 12
2218 14956 0 0 0 0 0 0 0 0
2219 30712 242 96 13648 0 0 10240 0 0
2221 13658 160 52 10 0 0 0 0 0
2224 3412 0 0 0 0 0 0 0 0
2233 28 4 4 12 0 0 8 0 0
2234 20 0 0 8 0 0 8 3 2
2241 48760 161 53 14952 0 0 15004 0 0
2251 365665 328 115 60985 229 20 0 0 0
2252 26 10 10 13 13 0 13 0 0
2253 13 11 10 13 0 0 0 0 0
2254 52 0 0 0 0 0 39 0 0
2255 26 0 0 13 0 0 0 0 0
2256 47 18 14 0 0 0 0 0 0
2258 78 0 0 39 0 0 26 13 11
2262 292569 4 4 15172 0 0 75914 0 0
2264 410137 0 0 133358 0 0 75910 6 1
2270 182714 0 0 0 0 0 60902 0 0
2279 243624 148 46 121812 3 0 121812 0 0
2282 182718 0 0 0 0 0 121812 0 0
2283 304522 146 46 182714 5 2 0 0 0
2284 9 2 2 0 0 0 6 0 0
2285 3 0 0 0 0 0 0 0 0
2287 121806 0 0 60903 1 0 0 0 0
2288 121608 1 1 1 0 0 60910 0 0
2289 3 0 0 0 0 0 2 0 0
2290 6 1 1 3 0 0 2 1 0
2292 243608 78 41 121804 0 0 60902 0 0
2295 121804 0 0 0 0 0 121804 0 0
2296 182706 0 0 0 0 0 121804 0 0
2311 489920 4 3 246528 0 0 60902 0 0
2312 182706 0 0 121804 0 0 0 0 0
2313 205 84 38 0 0 0 205 0 0
2314 1230 0 0 410 0 0 0 0 0
2320 1425162 70 41 682018 3 0 185618 0 0
2321 742472 98 43 185618 0 0 371236 0 0
2322 182034 0 0 0 0 0 121356 0 0
2323 60678 0 0 0 0 0 0 0 0
2324 182034 0 0 0 0 0 121356 0 0
2325 60678 0 0 0 0 0 0 0 0
2326 121356 2 2 0 0 0 121356 0 0
2327 121356 0 0 0 0 0 0 0 0
2338 1292 336 93 224 224 1 0 0 0
2343 52 25 18 0 0 0 0 0 0
2358 2219 143 43 233 0 0 0 0 0
2359 26 12 12 26 0 0 0 0 0
2360 124992 0 0 124979 0 0 0 0 0
2363 26 0 0 13 0 0 0 0 0
2366 26 0 0 13 8 7 0 0 0
2370 91 17 17 26 0 0 39 12 11
2371 39 0 0 26 0 0 0 0 0
2372 26 0 0 26 0 0 0 0 0
2373 13 0 0 13 12 6 0 0 0
2379 39 13 13 0 0 0 26 0 0
2380 13 0 0 0 0 0 0 0 0
2381 39 5 5 0 0 0 26 0 0
2382 13 0 0 0 0 0 0 0 0
2383 15 0 0 0 0 0 10 0 0
2385 16 0 0 0 0 0 16 0 0
2386 8 0 0 0 0 0 0 0 0
2395 9 1 1 0 0 0 0 0 0
2396 21 0 0 14 0 0 7 0 0
2397 21 0 0 14 0 0 0 0 0
2401 1033 140 40 0 0 0 0 0 0
2402 11 0 0 11 0 0 0 0 0
2403 255 0 0 0 0 0 0 0 0
2407 216 25 17 0 0 0 216 0 0
2408 214 0 0 0 0 0 0 0 0
2695 10593 0 0 7062 2286 303 0 0 0
2698 119 0 0 119 0 0 0 0 0
2699 476 1 0 119 51 17 0 0 0
2702 20 0 0 20 6 1 0 0 0
2703 48 0 0 4 1 0 0 0 0
4968 60691 0 0 60691 0 0 0 0 0
4969 242764 0 0 60691 0 0 0 0 0
4970 121372 0 0 60686 4 1 60686 0 0
4971 182058 8 8 121372 0 0 0 0 0
5265 16 0 0 8 0 0 0 0 0
5422 7196 0 0 1028 238 38 0 0 0
5423 11308 241 106 3084 62 30 0 0 0
5428 33956 272 78 33956 0 0 0 0 0
5432 15950 11 5 15950 0 0 0 0 0
5433 143550 5 3 47850 0 0 15950 0 0
5437 16002 0 0 16002 0 0 0 0 0
fn=runtime.forEachP
1256 390 46 21 130 0 0 65 0 0
1257 65 0 0 0 0 0 0 0 0
1258 195 0 0 195 0 0 0 0 0
1260 195 0 0 0 0 0 130 0 0
1261 130 45 21 65 23 13 0 0 0
1264 195 0 0 65 0 0 65 0 0
1265 350 20 18 130 19 0 65 0 0
1268 4615 37 21 1235 34 1 0 0 0
1269 2080 0 0 0 0 0 0 0 0
1270 3900 0 0 2925 1546 133 0 0 0
1273 65 0 0 0 0 0 65 10 0
1281 6644 0 0 1889 248 13 912 0 0
1282 5472 32 21 912 732 0 0 0 0
1283 3648 0 0 1824 2 0 1824 0 0
1284 1824 0 0 912 2 0 0 0 0
1288 325 35 21 130 0 0 65 0 0
1289 195 0 0 0 0 0 130 0 0
1292 325 0 0 195 0 0 130 0 0
1296 8855 61 43 1185 85 0 135 0 0
1297 1040 0 0 1040 982 0 0 0 0
1298 5225 0 0 10 5 0 0 0 0
1299 10 0 0 5 2 1 0 0 0
1303 5 0 0 5 0 0 0 0 0
1304 15 0 0 0 0 0 10 0 0
1309 65 0 0 0 0 0 0 0 0
1315 390 42 29 65 0 0 195 0 0
1316 49 0 0 0 0 0 0 0 0
1319 16 4 3 0 0 0 16 0 0
1322 179 25 13 65 0 0 0 0 0
1325 4550 42 29 1170 8 0 0 0 0
1326 3120 0 0 1040 966 171 0 0 0
1331 195 0 0 0 0 0 130 44 0
1332 330 42 31 65 54 0 65 1 0
1333 195 0 0 0 0 0 130 0 0
1334 65 0 0 0 0 0 0 0 0
fn=runtime.forcegchelper
245 6 1 1 2 0 0 1 0 0
246 4 1 1 2 0 0 1 1 0
247 1 0 0 0 0 0 0 0 0
248 3 1 1 0 0 0 2 1 1
249 2 0 0 1 0 0 0 0 0
252 3 0 0 2 0 0 0 0 0
253 1 0 0 0 0 0 0 0 0
310 7 1 1 0 0 0 5 0 0
fn=runtime.funcPC
416 2 1 1 2 0 0 0 0 0
fn=runtime.gcAssistAlloc
269 6 2 1 0 0 0 4 0 0
fn=runtime.gcWaitOnMark
310 70 0 0 0 0 0 50 0 0
5270 20 0 0 10 0 0 10 0 0
5271 10 0 0 0 0 0 0 0 0
fn=runtime.gcWakeAllAssists
5252 20 0 0 20 0 0 0 0 0
5253 40 0 0 0 0 0 20 0 0
fn=runtime.gcd
5441 10980 46 38 1952 0 0 0 0 0
5442 12200 0 0 0 0 0 0 0 0
5444 4026 0 0 0 0 0 976 0 0
fn=runtime.gcstopm
2053 276 48 44 92 0 0 46 0 0
2054 46 0 0 46 0 0 0 0 0
2056 92 0 0 46 0 0 0 0 0
2059 138 0 0 92 2 1 0 0 0
2060 34 0 0 0 0 0 34 0 0
2063 204 18 17 68 0 0 0 0 0
2067 138 5 5 46 0 0 92 0 0
2068 138 0 0 0 0 0 92 0 0
2069 92 0 0 46 0 0 46 1 0
2070 138 0 0 46 0 0 46 0 0
2071 92 0 0 0 0 0 0 0 0
2072 136 9 7 0 0 0 68 0 0
2074 138 8 8 0 0 0 92 0 0
2075 46 0 0 0 0 0 46 0 0
2076 132 17 12 88 34 23 0 0 0
fn=runtime.gfget
3623 174 13 7 58 0 0 29 0 0
3624 58 0 0 29 0 0 0 0 0
3625 108 15 7 29 13 3 0 0 0
3644 29 4 3 0 0 0 0 0 0
3645 29 0 0 0 0 0 0 0 0
3646 100 9 4 50 0 0 25 0 0
3648 4 0 0 4 0 0 0 0 0
3649 8 0 0 4 2 0 0 0 0
3663 16 4 4 8 0 0 4 0 0
5265 79 22 4 50 22 4 0 0 0
5284 29 0 0 0 0 0 0 0 0
5285 58 0 0 0 0 0 0 0 0
5286 8 0 0 4 2 0 4 0 0
fn=runtime.gfput
733 8 0 0 8 0 0 0 0 0
3588 48 8 7 16 0 0 8 0 0
3589 24 8 7 8 0 0 0 0 0
3593 32 0 0 16 0 0 0 0 0
3595 16 0 0 0 0 0 0 0 0
3597 3 1 0 0 0 0 3 0 0
3599 3 1 1 1 0 0 1 0 0
3600 2 0 0 0 0 0 1 0 0
3603 16 0 0 16 7 4 0 0 0
3604 24 8 7 8 0 0 8 0 0
3605 16 0 0 0 0 0 0 0 0
3617 24 7 7 16 0 0 0 0 0
5270 8 0 0 0 0 0 8 0 0
5271 8 0 0 0 0 0 0 0 0
fn=runtime.globrunqget
4923 1579032 33 24 526344 0 0 263172 0 0
4924 1315860 0 0 263172 0 0 0 0 0
4928 2368548 27 24 263172 73 0 0 0 0
4929 526344 0 0 0 0 0 0 0 0
4932 798142 0 0 263172 0 0 0 0 0
4935 1052688 63 48 0 0 0 0 0 0
4939 1052688 0 0 0 0 0 263172 0 0
4941 263172 0 0 0 0 0 0 0 0
4942 263172 0 0 0 0 0 0 0 0
4943 789516 0 0 0 0 0 0 0 0
4947 1052688 0 0 526344 0 0 263172 0 0
5240 263172 0 0 263172 0 0 0 0 0
5241 263172 0 0 0 0 0 0 0 0
5242 526344 0 0 263172 16 2 263172 0 0
5243 526344 0 0 0 0 0 0 0 0
5244 263168 0 0 0 0 0 263168 0 0
fn=runtime.goexit0
2619 8 8 7 8 0 0 0 0 0
2621 24 0 0 16 0 0 8 0 0
2622 16 0 0 8 0 0 8 0 0
2839 48 8 7 16 0 0 8 0 0
2840 16 0 0 8 0 0 8 0 0
2842 40 8 7 8 0 0 24 0 0
2843 48 0 0 16 0 0 24 0 0
2846 40 8 7 16 0 0 8 0 0
2847 40 8 7 16 7 6 8 0 0
2848 8 0 0 0 0 0 8 0 0
2849 24 8 7 16 0 0 8 7 6
2850 8 0 0 0 0 0 8 0 0
2851 8 0 0 0 0 0 8 0 0
2852 24 0 0 8 0 0 8 0 0
2853 8 0 0 0 0 0 8 0 0
2854 40 8 7 8 0 0 16 0 0
2855 8 0 0 0 0 0 8 0 0
2856 24 0 0 8 0 0 8 0 0
2858 8 0 0 0 0 0 8 7 6
2860 16 8 7 8 7 0 0 0 0
2869 8 0 0 0 0 0 0 0 0
2876 32 0 0 16 7 6 0 0 0
2880 32 0 0 8 0 0 24 0 0
2881 8 0 0 0 0 0 0 0 0
2896 8 0 0 0 0 0 8 0 0
fn=runtime.goexit1
2828 48 8 7 16 0 0 8 0 0
2832 16 8 7 8 0 0 0 0 0
2835 24 0 0 0 0 0 16 0 0
fn=runtime.gopark
287 876 109 77 304 0 0 140 0 0
291 140 0 0 0 0 0 0 0 0
292 140 0 0 140 0 0 0 0 0
293 140 0 0 0 0 0 0 0 0
294 560 51 37 0 0 0 0 0 0
297 628 29 24 280 13 1 140 66 39
298 314 0 0 140 0 0 140 0 0
299 280 0 0 140 0 0 140 0 0
300 280 58 39 140 0 0 140 0 0
301 280 0 0 140 0 0 140 0 0
302 140 0 0 0 0 0 0 0 0
304 420 17 8 0 0 0 280 1 0
305 360 26 19 240 115 80 0 0 0
733 140 0 0 140 0 0 0 0 0
fn=runtime.gopreempt_m
2776 84 14 11 28 0 0 14 5 5
2777 28 0 0 14 2 0 0 0 0
2780 42 0 0 14 0 0 28 2 0
fn=runtime.goready
313 174 39 30 58 0 0 29 0 0
314 348 7 2 58 0 0 203 11 10
317 87 0 0 58 0 0 0 0 0
fn=runtime.goready.func1
314 232 28 22 116 0 0 29 0 0
315 116 0 0 0 0 0 116 1 0
316 87 28 20 58 0 0 0 0 0
fn=runtime.goschedImpl
733 263161 0 0 263161 70 7 0 0 0
2619 263161 0 0 263161 0 0 0 0 0
2621 789483 0 0 526322 66 7 263161 0 0
2622 526322 30 24 263161 0 0 263161 0 0
2740 1578966 32 24 526322 0 0 263161 0 0
2741 263161 0 0 263161 0 0 0 0 0
2742 789483 32 24 0 0 0 0 0 0
2746 1052644 0 0 0 0 0 789483 76 13
2747 263161 0 0 0 0 0 0 0 0
2748 789483 0 0 0 0 0 526322 0 0
2749 263161 0 0 0 0 0 0 0 0
2750 789483 0 0 0 0 0 526322 0 0
2752 263161 0 0 0 0 0 263161 0 0
4899 263161 0 0 0 0 0 0 0 0
4900 263161 0 0 263161 0 0 0 0 0
5213 526322 0 0 263161 0 0 263161 0 0
5214 789483 0 0 263161 73 0 0 0 0
5215 4 0 0 0 0 0 4 0 0
5217 263157 0 0 0 0 0 0 0 0
5219 263161 0 0 0 0 0 0 0 0
fn=runtime.gosched_m
2756 1578882 42 38 526294 0 0 263147 0 0
2757 526294 0 0 263147 63 0 0 0 0
2760 789441 0 0 263147 0 0 526294 74 11
fn=runtime.handoffp
1937 1206 205 58 402 0 0 201 0 0
1942 1373 0 0 586 45 1 402 0 0
1943 72 0 0 18 0 0 54 0 0
1944 54 0 0 36 0 0 0 0 0
1947 920 157 57 183 0 0 0 0 0
1948 365 175 25 175 0 0 15 0 0
1949 18 3 1 10 0 0 0 0 0
1953 1424 120 26 356 0 0 0 0 0
1955 356 63 26 0 0 0 0 0 0
1957 534 0 0 0 0 0 356 0 0
1958 356 0 0 178 0 0 0 0 0
1967 1255 85 25 359 2 0 0 0 0
1968 12 3 3 6 0 0 6 0 0
1969 9 0 0 3 0 0 3 0 0
1970 6 0 0 0 0 0 0 0 0
1971 183 0 0 0 0 0 4 0 0
1974 359 0 0 178 0 0 0 0 0
1981 1460 91 26 463 0 0 0 0 0
1982 321 94 14 0 0 0 214 0 0
1983 428 0 0 107 0 0 321 0 0
1984 392 42 17 214 0 0 0 0 0
1986 142 0 0 0 0 0 0 0 0
1989 142 71 12 0 0 0 142 0 0
1990 213 0 0 0 0 0 142 0 0
1991 213 0 0 142 0 0 0 0 0
fn=runtime.incidlelocked
4393 2160 281 59 720 63 20 360 0 0
4394 1080 0 0 0 0 0 720 0 0
4395 720 0 0 720 19 1 0 0 0
4396 720 0 0 0 0 0 0 0 0
4397 360 23 4 0 0 0 180 0 0
4399 1080 0 0 0 0 0 720 0 0
4400 1080 120 9 720 0 0 0 0 0
fn=runtime.init.5
416 6 0 0 4 1 1 0 0 0
fn=runtime.init.6
241 6 1 1 2 0 0 1 0 0
242 4 0 0 0 0 0 3 0 0
243 3 0 0 2 0 0 0 0 0
fn=runtime.initsig
416 168 0 0 112 1 0 0 0 0
fn=runtime.injectglist
2468 594 91 83 198 0 0 99 0 0
2469 198 0 0 99 0 0 0 0 0
2470 267 19 12 178 0 0 0 0 0
2472 20 0 0 10 0 0 0 0 0
2477 40 10 9 0 0 0 20 0 0
2479 50 0 0 10 0 0 0 0 0
2480 10 0 0 0 0 0 0 0 0
2481 40 10 9 0 0 0 30 0 0
2482 10 0 0 0 0 0 0 0 0
2484 30 0 0 0 0 0 20 0 0
2485 80 10 9 20 0 0 20 0 0
2488 20 0 0 10 0 0 10 0 0
2489 30 0 0 20 0 0 0 0 0
4899 10 0 0 0 0 0 0 0 0
4900 10 0 0 10 0 0 0 0 0
5213 20 0 0 10 0 0 10 0 0
5214 30 0 0 10 0 0 0 0 0
5217 10 10 9 0 0 0 0 0 0
5219 10 0 0 0 0 0 0 0 0
5265 258 0 0 139 0 0 0 0 0
5284 10 0 0 0 0 0 0 0 0
5285 20 0 0 0 0 0 0 0 0
5286 20 0 0 10 8 0 10 0 0
fn=runtime.mReserveID
612 36 11 4 12 0 0 6 0 0
613 30 0 0 6 1 0 6 0 0
617 6 0 0 0 0 0 6 0 0
618 6 0 0 0 0 0 6 0 0
619 30 4 1 18 0 0 6 0 0
fn=runtime.main
113 9 1 1 2 0 0 3 1 1
114 2 1 1 1 0 0 1 0 0
118 3 0 0 2 0 0 1 1 1
124 1 0 0 0 0 0 1 1 0
130 1 0 0 0 0 0 1 0 0
133 3 0 0 0 0 0 2 0 0
144 1 0 0 0 0 0 0 0 0
146 5 1 1 2 0 0 0 0 0
150 3 0 0 0 0 0 2 0 0
151 1 0 0 0 0 0 0 0 0
156 1 0 0 0 0 0 1 0 0
157 5 1 1 0 0 0 3 0 0
164 1 0 0 0 0 0 1 0 0
166 1 0 0 0 0 0 1 0 0
168 8 2 1 2 0 0 4 1 0
169 2 0 0 1 0 0 0 0 0
190 3 2 2 0 0 0 2 0 0
192 3 1 0 1 1 0 2 0 0
194 1 0 0 0 0 0 1 0 0
195 1 0 0 0 0 0 1 0 0
197 4 0 0 2 0 0 0 0 0
203 3 1 1 1 1 0 1 0 0
3695 1 0 0 1 0 0 0 0 0
3696 2 0 0 1 0 0 1 0 0
3697 1 0 0 1 0 0 0 0 0
3734 3 1 1 3 0 0 0 0 0
3735 1 0 0 0 0 0 0 0 0
fn=runtime.main.func1
133 6 2 2 2 0 0 1 0 0
134 5 0 0 0 0 0 4 0 0
135 3 0 0 2 0 0 0 0 0
fn=runtime.malg
3413 216 12 5 72 0 0 36 0 0
3414 180 9 5 36 0 0 108 0 0
3415 108 0 0 36 0 0 0 0 0
3416 108 0 0 36 0 0 72 0 0
3417 396 11 5 36 0 0 288 0 0
3420 144 2 2 72 0 0 36 0 0
3421 36 0 0 0 0 0 36 0 0
3424 108 0 0 36 0 0 36 6 6
3426 144 0 0 72 0 0 36 0 0
fn=runtime.malg.func1
3417 324 27 10 144 0 0 72 0 0
3418 252 0 0 108 0 0 144 32 32
3419 108 0 0 72 0 0 0 0 0
fn=runtime.markroot
733 455 0 0 455 435 102 0 0 0
fn=runtime.markroot.func1
733 20 0 0 20 0 0 0 0 0
fn=runtime.markrootFreeGStacks
5265 20 0 0 20 0 0 0 0 0
fn=runtime.mcommoninit
623 37 8 3 12 0 0 6 0 0
624 6 0 0 6 0 0 0 0 0
627 18 0 0 12 0 0 0 0 0
631 18 0 0 0 0 0 12 0 0
633 18 6 2 6 0 0 0 0 0
634 8 0 0 4 0 0 4 3 3
636 10 2 1 4 0 0 4 1 1
639 30 4 2 18 2 0 12 4 4
640 42 5 2 18 0 0 18 0 0
641 24 0 0 6 0 0 0 0 0
645 12 0 0 0 0 0 12 0 0
646 24 1 0 12 0 0 0 0 0
647 18 0 0 6 0 0 6 0 0
652 27 7 3 12 3 2 6 4 4
656 25 0 0 0 0 0 18 0 0
657 18 0 0 0 0 0 12 0 0
660 30 5 2 18 0 0 0 0 0
fn=runtime.mspinning
1868 6 0 0 4 0 0 2 0 0
fn=runtime.mstart
1056 18 3 2 0 0 0 6 0 0
1057 6 0 0 6 0 0 0 0 0
1059 18 0 0 6 0 0 6 0 0
1060 6 0 0 0 0 0 0 0 0
1073 18 3 2 6 0 0 6 0 0
1076 6 0 0 0 0 0 6 0 0
1077 6 0 0 0 0 0 6 0 0
fn=runtime.mstart1
1090 36 4 2 12 0 0 6 0 0
1091 12 0 0 6 0 0 6 0 0
1093 18 3 2 12 2 0 0 0 0
1101 30 0 0 6 0 0 18 5 5
1102 6 0 0 0 0 0 6 0 0
1103 6 0 0 0 0 0 6 0 0
1107 24 0 0 12 0 0 0 0 0
1108 3 1 1 0 0 0 1 0 0
1111 25 3 2 13 0 0 0 0 0
1112 10 3 0 3 3 1 3 0 0
1115 17 0 0 7 0 0 0 0 0
1116 12 0 0 4 1 0 8 0 0
1117 16 1 1 8 0 0 4 0 0
1119 5 0 0 0 0 0 5 0 0
fn=runtime.mstartm0
1128 6 1 1 2 0 0 1 0 0
1132 2 1 1 1 0 0 0 0 0
1136 2 0 0 0 0 0 2 0 0
1137 3 0 0 2 0 0 0 0 0
fn=runtime.newm
1729 30 4 4 10 0 0 5 0 0
1730 45 0 0 20 0 0 25 0 0
1731 5 4 2 0 0 0 5 0 0
1732 10 0 0 5 2 0 5 0 0
1733 50 0 0 20 3 3 0 0 0
1758 10 3 2 0 0 0 10 0 0
1759 15 0 0 10 0 0 0 0 0
fn=runtime.newm1
1761 30 5 4 10 0 0 5 0 0
1762 10 0 0 5 0 0 0 0 0
1778 15 2 2 0 0 0 10 0 0
1779 15 2 2 5 0 0 10 0 0
1780 15 0 0 0 0 0 10 0 0
1781 15 0 0 10 0 0 0 0 0
fn=runtime.newosproc
416 15 0 0 10 2 1 0 0 0
fn=runtime.newproc
3436 87 26 6 0 0 0 29 0 0
3437 29 13 7 29 0 0 0 0 0
3440 522 12 7 58 0 0 319 0 0
fn=runtime.newproc.func1
3440 319 28 7 203 0 0 29 0 0
3441 203 13 7 29 0 0 174 0 0
3442 87 1 0 58 0 0 0 0 0
fn=runtime.newproc1
416 87 0 0 29 8 2 0 0 0
733 29 0 0 29 0 0 0 0 0
1997 91 0 0 13 0 0 0 0 0
2000 39 5 3 0 0 0 39 0 0
3448 174 13 7 58 0 0 29 0 0
3449 58 0 0 29 0 0 29 0 0
3451 87 0 0 29 0 0 0 0 0
3455 29 0 0 0 0 0 0 0 0
3457 116 0 0 29 0 0 29 0 0
3463 58 13 7 0 0 0 0 0 0
3467 58 0 0 58 0 0 0 0 0
3468 87 0 0 29 0 0 58 0 0
3469 58 0 0 0 0 0 0 0 0
3470 100 18 8 25 0 0 75 0 0
3471 100 0 0 0 0 0 75 0 0
3472 100 0 0 25 0 0 50 0 0
3474 112 15 7 54 0 0 29 0 0
3478 58 0 0 0 0 0 0 0 0
3482 87 0 0 29 0 0 0 0 0
3484 87 0 0 29 0 0 29 0 0
3492 87 0 0 29 0 0 0 0 0
3493 156 21 14 26 0 0 104 0 0
3500 104 0 0 26 0 0 0 0 0
3511 142 27 7 26 0 0 87 0 0
3512 87 0 0 58 0 0 29 0 0
3513 29 0 0 0 0 0 29 0 0
3514 58 0 0 0 0 0 29 0 0
3515 58 15 7 0 0 0 29 0 0
3516 29 0 0 0 0 0 0 0 0
3517 58 23 7 29 0 0 29 24 22
3518 232 0 0 116 0 0 87 0 0
3519 87 16 7 58 0 0 29 0 0
3520 171 4 3 87 0 0 0 0 0
3521 112 0 0 56 6 4 28 23 21
3523 145 11 7 29 0 0 87 0 0
3524 60 0 0 40 2 0 0 0 0
3526 145 0 0 29 0 0 87 0 0
3528 116 15 7 87 25 3 0 0 0
3532 9 0 0 6 2 0 0 0 0
3533 6 0 0 0 0 0 3 0 0
3534 6 0 0 0 0 0 3 0 0
3536 87 11 7 58 0 0 29 0 0
3537 29 0 0 29 0 0 0 0 0
3541 58 0 0 29 0 0 0 0 0
3544 116 0 0 0 0 0 116 0 0
3546 260 11 7 72 5 1 0 0 0
3547 13 0 0 0 0 0 0 0 0
3549 58 0 0 58 0 0 0 0 0
fn=runtime.park_m
2619 140 0 0 140 0 0 0 0 0
2621 420 0 0 280 0 0 140 0 0
2622 280 0 0 140 0 0 140 0 0
2715 840 53 33 280 0 0 140 0 0
2716 314 0 0 140 0 0 140 21 4
2718 280 57 34 140 7 2 0 0 0
2722 700 0 0 140 0 0 420 1 1
2723 140 0 0 0 0 0 0 0 0
2725 700 0 0 420 0 0 0 0 0
2726 1260 54 37 560 31 21 420 0 0
2727 942 26 23 420 0 0 140 0 0
2728 836 79 61 280 0 0 140 0 0
2729 140 0 0 0 0 0 0 0 0
2737 140 0 0 0 0 0 140 0 0
fn=runtime.parkunlock_c
2709 534 41 30 178 0 0 89 0 0
2710 267 0 0 89 0 0 178 0 0
2711 356 0 0 178 0 0 89 0 0
fn=runtime.pidleput
4954 371328 200 55 123776 0 0 61888 0 0
4955 309440 157 58 123776 0 0 123776 24 1
4958 185664 0 0 123776 30 0 61888 0 0
4959 61888 0 0 0 0 0 0 0 0
4960 185664 0 0 123776 0 0 0 0 0
4961 185664 0 0 123776 0 0 0 0 0
fn=runtime.pollWork
2415 8118 6 6 2706 8 0 1353 0 0
2416 2706 0 0 1353 1202 32 0 0 0
2419 4059 6 6 4059 1100 23 0 0 0
2420 5412 0 0 1353 0 0 2706 0 0
2423 8118 0 0 1353 0 0 0 0 0
2429 5412 6 6 2706 0 0 1353 0 0
fn=runtime.preemptPark
733 2 1 1 2 0 0 0 0 0
2619 1 0 0 1 0 0 0 0 0
2621 3 1 1 2 0 0 1 0 0
2622 2 0 0 1 0 0 1 0 0
2786 6 1 1 2 0 0 1 1 1
2787 2 0 0 1 0 0 0 0 0
2790 1 0 0 0 0 0 0 0 0
2791 3 0 0 0 0 0 0 0 0
2795 1 0 0 0 0 0 1 0 0
2802 4 0 0 0 0 0 3 0 0
2803 1 0 0 0 0 0 0 0 0
2804 5 0 0 1 0 0 3 0 0
2805 1 1 1 0 0 0 1 0 0
fn=runtime.preemptall
4703 858 45 30 286 4 1 143 0 0
4705 11107 53 42 3075 36 21 453 0 0
4706 4576 0 0 2288 1582 226 0 0 0
4709 668 58 44 167 0 0 334 0 0
4713 1073 0 0 453 0 0 310 39 16
fn=runtime.preemptone
4726 11760 178 60 3920 2 0 1960 0 0
4727 3920 0 0 3920 0 0 0 0 0
4728 9263 0 0 3562 0 0 0 0 0
4729 1280 101 44 640 0 0 320 0 0
4731 1640 15 11 1640 978 109 0 0 0
4732 5890 0 0 1305 807 89 0 0 0
4733 1340 0 0 670 0 0 335 0 0
4736 1305 0 0 0 0 0 1305 846 76
4742 1305 0 0 0 0 0 1305 841 77
4745 2610 29 24 1305 551 41 0 0 0
4746 1305 0 0 0 0 0 1305 851 84
4747 1305 0 0 0 0 0 0 0 0
4750 5220 3 0 2610 0 0 1305 1 1
fn=runtime.procresize
4214 488 104 88 122 0 0 61 0 0
4215 183 0 0 61 0 0 61 0 0
4216 305 0 0 61 0 0 0 0 0
4219 122 52 44 61 20 0 0 0 0
4225 184 0 0 61 41 13 0 0 0
4226 360 0 0 120 0 0 0 0 0
4228 62 51 42 0 0 0 61 0 0
4231 244 0 0 122 21 0 0 0 0
4234 3 1 1 0 0 0 2 0 0
4235 4 0 0 2 0 0 0 0 0
4238 9 2 2 1 0 0 6 0 0
4241 12 1 1 3 0 0 8 0 0
4242 8 0 0 3 0 0 3 0 0
4244 4 0 0 0 0 0 2 0 0
4248 298 49 44 35 0 0 16 0 0
4249 112 0 0 48 2 2 16 0 0
4250 32 0 0 0 0 0 0 0 0
4251 80 2 2 16 0 0 32 0 0
4253 80 0 0 16 0 0 64 0 0
4254 160 0 0 64 0 0 48 0 0
4257 122 50 43 61 0 0 61 0 0
4258 365 0 0 182 60 0 0 0 0
4260 60 51 44 0 0 0 60 0 0
4261 360 49 40 180 50 0 120 0 0
4268 1 1 1 0 0 0 0 0 0
4278 2 0 0 1 0 0 1 0 0
4279 2 0 0 1 0 0 1 0 0
4280 5 1 1 3 1 0 0 0 0
4281 1 0 0 0 0 0 1 1 0
4282 1 0 0 0 0 0 1 0 0
4283 2 0 0 0 0 0 2 0 0
4284 2 0 0 1 0 0 0 0 0
4290 321 51 44 138 8 3 0 0 0
4297 183 52 44 61 4 0 0 0 0
4304 5124 51 44 976 4 4 915 0 0
4305 6771 0 0 2928 46 0 915 0 0
4306 5734 0 0 2867 4 0 0 0 0
4309 915 0 0 0 0 0 915 716 0
4310 3660 46 40 915 0 0 1830 0 0
4311 3660 52 42 915 0 0 1830 0 0
4314 2867 0 0 915 0 0 1037 0 0
4318 1159 52 44 915 0 0 183 0 0
4320 183 0 0 183 2 0 0 0 0
4321 305 0 0 183 0 0 61 1 0
fn=runtime.ready
673 510 38 30 170 0 0 85 0 0
674 170 0 0 85 0 0 0 0 0
678 85 0 0 0 0 0 0 0 0
681 170 39 31 85 0 0 85 1 1
682 85 0 0 0 0 0 0 0 0
683 255 0 0 0 0 0 0 0 0
689 340 41 31 0 0 0 255 2 2
690 765 0 0 425 0 0 340 0 0
691 588 41 33 124 3 2 0 0 0
692 52 15 12 0 0 0 0 0 0
694 85 0 0 0 0 0 0 0 0
733 170 0 0 170 49 32 0 0 0
1997 42 0 0 6 0 0 0 0 0
2000 18 6 4 0 0 0 18 0 0
fn=runtime.reentersyscall
2960 34713 58 29 0 0 0 11571 0 0
2961 23142 0 0 11571 0 0 11571 1 1
2965 23142 279 44 23142 0 0 0 0 0
2971 11571 0 0 0 0 0 11571 0 0
2972 11571 0 0 0 0 0 11571 1 1
2975 57855 0 0 23142 0 0 34713 0 0
2976 34713 0 0 23142 0 0 11571 0 0
2977 23142 529 47 11571 0 0 11571 0 0
2978 46284 0 0 0 0 0 34713 0 0
2979 46284 0 0 34713 0 0 0 0 0
2986 23142 87 34 11571 286 15 0 0 0
2994 34713 0 0 11571 3724 48 0 0 0
2995 3 1 1 0 0 0 2 0 0
2996 6 1 1 2 0 0 3 0 0
2999 69426 82 28 46284 4198 43 0 0 0
3001 3 1 1 0 0 0 2 0 0
3002 6 0 0 2 0 0 3 0 0
3005 46285 0 0 34714 7576 37 11571 5065 59
3006 11571 0 0 0 0 0 11571 0 0
3007 23142 0 0 11571 0 0 11571 2 1
3008 23142 184 33 23142 0 0 0 0 0
3009 11571 0 0 0 0 0 11571 0 0
3010 23142 0 0 11571 0 0 11571 0 0
3011 23142 0 0 11571 0 0 11571 0 0
3012 23142 0 0 23142 0 0 0 0 0
3013 23142 0 0 11571 0 0 0 0 0
3014 6 2 1 0 0 0 4 0 0
3015 12 0 0 4 0 0 6 0 0
3018 23144 165 38 23144 0 0 0 0 0
3019 34713 0 0 23142 0 0 0 0 0
fn=runtime.releaseSudog
358 87 14 13 0 0 0 29 0 0
359 87 25 22 58 0 0 0 0 0
362 58 0 0 29 5 0 0 0 0
365 58 0 0 29 0 0 0 0 0
368 58 0 0 29 0 0 0 0 0
371 58 0 0 29 2 0 0 0 0
374 58 24 20 29 0 0 0 0 0
377 29 0 0 29 0 0 0 0 0
378 58 0 0 29 0 0 0 0 0
381 29 0 0 0 0 0 0 0 0
382 29 0 0 29 0 0 0 0 0
383 87 26 22 58 19 12 0 0 0
403 406 52 44 174 0 0 58 6 5
404 29 0 0 0 0 0 0 0 0
fn=runtime.releasep
4372 365808 157 58 121936 0 0 60968 0 0
4373 60968 0 0 60968 0 0 0 0 0
4375 548712 128 55 182904 5 2 121936 1 0
4378 60968 0 0 0 0 0 0 0 0
4379 487744 127 58 182904 202 16 60968 0 0
4383 121936 0 0 60968 0 0 0 0 0
4386 121936 0 0 60968 0 0 60968 0 0
4387 121936 0 0 60968 0 0 60968 0 0
4388 60968 0 0 0 0 0 60968 0 0
4389 60968 0 0 0 0 0 60968 0 0
4390 243872 130 57 121936 0 0 60968 0 0
fn=runtime.resetspinning
1997 549 42 27 219 2 1 0 0 0
2000 147 0 0 0 0 0 147 0 0
2448 510 55 36 170 2 0 85 0 0
2449 85 0 0 85 0 0 0 0 0
2450 255 56 37 170 0 0 0 0 0
2453 85 0 0 0 0 0 85 0 0
2454 340 0 0 170 12 4 0 0 0
2455 170 0 0 0 0 0 0 0 0
2461 444 0 0 52 0 0 0 0 0
2462 82 13 10 0 0 0 0 0 0
fn=runtime.resumeG
733 894 0 0 894 0 0 0 0 0
fn=runtime.retake
4629 1734 94 43 578 20 2 289 0 0
4633 867 0 0 0 0 0 578 10 2
4637 29985 123 53 14957 309 3 4624 0 0
4638 9248 0 0 4624 52 9 4624 0 0
4639 9248 0 0 0 0 0 0 0 0
4645 9248 0 0 4624 3292 131 4624 0 0
4647 27062 148 56 0 0 0 0 0 0
4649 341 0 0 341 0 0 0 0 0
4650 1023 35 14 341 0 0 0 0 0
4651 60 0 0 0 0 0 60 0 0
4652 9327 0 0 4603 0 0 60 0 0
4653 2638 53 7 757 5 0 238 0 0
4654 476 0 0 0 0 0 476 0 0
4657 238 0 0 0 0 0 0 0 0
4660 13910 79 36 238 0 0 0 0 0
4662 438 0 0 438 0 0 0 0 0
4663 463 0 0 21 0 0 0 0 0
4664 20 0 0 0 0 0 20 0 0
4665 258 0 0 0 0 0 20 0 0
4666 20 0 0 0 0 0 0 0 0
4671 3060 72 28 1080 16 1 360 0 0
4672 1 0 0 0 0 0 0 0 0
4675 537 75 27 0 0 0 358 0 0
4680 358 0 0 0 0 0 358 0 0
4681 1253 65 20 537 0 0 0 0 0
4682 358 0 0 179 0 0 0 0 0
4686 14895 377 124 597 36 8 5092 0 0
4687 179 0 0 179 0 0 0 0 0
4688 358 0 0 0 0 0 358 0 0
4690 358 0 0 0 0 0 358 0 0
4691 537 0 0 0 0 0 358 0 0
4694 867 0 0 0 0 0 578 0 0
4695 1445 132 29 867 0 0 289 41 8
fn=runtime.runSafePointFn
1348 360 38 23 120 0 0 60 0 0
1349 180 39 23 180 0 0 0 0 0
1353 420 0 0 60 0 0 0 0 0
1356 240 0 0 120 37 5 120 0 0
1357 180 0 0 0 0 0 120 0 0
1358 180 45 23 60 0 0 60 0 0
1359 120 0 0 0 0 0 0 0 0
1360 188 0 0 0 0 0 94 0 0
1362 180 0 0 0 0 0 120 0 0
1363 180 0 0 120 3 0 0 0 0
fn=runtime.runfinq
310 21 2 1 0 0 0 15 0 0
fn=runtime.runqempty
4983 250281 159 60 250281 0 0 0 0 0
4984 250281 0 0 250281 5239 230 0 0 0
4985 250281 68 40 250281 0 0 0 0 0
4986 250281 0 0 250281 5474 261 0 0 0
4987 750843 0 0 250281 0 0 0 0 0
4988 1251401 0 0 0 0 0 250281 0 0
fn=runtime.runqget
5087 1736553 111 43 0 0 0 578851 0 0
5089 578851 90 41 578851 0 0 0 0 0
5090 578903 0 0 578851 295 53 52 0 0
5091 1157702 0 0 0 0 0 0 0 0
5094 52 0 0 0 0 0 0 0 0
5095 260 0 0 104 0 0 104 0 0
5100 578799 140 41 578799 266 44 0 0 0
5101 578799 0 0 578799 0 0 0 0 0
5102 1157598 0 0 0 0 0 0 0 0
5103 578785 141 41 0 0 0 578785 0 0
5105 28 0 0 14 1 0 0 0 0
5106 84 0 0 14 0 0 0 0 0
5107 70 0 0 28 0 0 28 0 0
fn=runtime.runqgrab
5116 105070 156 48 30036 0 0 15004 1 0
5117 60016 0 0 60016 0 0 0 0 0
5118 15024 4 3 15024 5863 600 0 0 0
5119 15024 0 0 15024 0 0 0 0 0
5120 15024 0 0 0 0 0 0 0 0
5121 45072 0 0 0 0 0 0 0 0
5122 30048 0 0 0 0 0 0 0 0
5123 14990 0 0 0 0 0 0 0 0
5125 10729 157 49 3565 3545 694 34 0 0
5126 68 0 0 34 28 7 0 0 0
5138 56 0 0 0 0 0 56 24 3
5146 34 0 0 0 0 0 0 0 0
5149 56 0 0 14 0 0 14 10 6
5150 56 0 0 28 0 0 14 0 0
5153 59824 146 45 29912 0 0 14956 0 0
5155 102 26 20 0 0 0 0 0 0
5156 34 0 0 0 0 0 0 0 0
5158 170 0 0 0 0 0 0 0 0
5159 102 0 0 34 25 10 0 0 0
5160 192 0 0 56 0 0 34 24 18
5162 204 1 1 34 0 0 0 0 0
5163 136 0 0 68 0 0 34 0 0
fn=runtime.runqput
5009 912 62 43 342 0 0 114 0 0
5014 390 0 0 162 0 0 0 0 0
5016 162 0 0 81 60 6 81 0 0
5017 162 0 0 0 0 0 0 0 0
5020 243 0 0 81 0 0 0 0 0
5021 198 30 21 132 0 0 0 0 0
5024 15 0 0 0 0 0 0 0 0
5028 81 8 7 81 23 0 0 0 0
5029 48 0 0 48 0 0 0 0 0
5030 192 0 0 0 0 0 0 0 0
5031 177 37 33 33 0 0 48 0 0
5032 96 0 0 96 0 0 0 0 0
5033 144 4 3 96 0 0 0 0 0
fn=runtime.runqsteal
5171 90024 203 96 30008 5 2 15004 0 0
5172 45012 0 0 30008 8 2 15004 13 8
5173 135036 56 41 45012 0 0 75020 4 2
5174 30008 0 0 0 0 0 0 0 0
5175 59824 62 44 29912 0 0 14956 14 2
5178 288 0 0 144 8 1 0 0 0
5179 96 0 0 0 0 0 0 0 0
5180 192 6 2 96 0 0 48 0 0
fn=runtime.save
2908 11613 335 44 11613 0 0 0 0 0
2910 23226 0 0 11613 0 0 11613 179 15
2911 23226 0 0 11613 0 0 11613 0 0
2912 11613 0 0 0 0 0 11613 0 0
2913 11613 0 0 0 0 0 11613 0 0
2914 23226 6 1 0 0 0 11613 0 0
2918 34839 0 0 23226 0 0 0 0 0
fn=runtime.saveAncestors
3555 203 14 7 58 0 0 29 0 0
3557 87 0 0 29 0 0 0 0 0
3558 116 11 7 58 0 0 29 0 0
fn=runtime.scanstack
733 894 0 0 894 0 0 0 0 0
fn=runtime.scavengeSleep
310 140 0 0 0 0 0 100 0 0
fn=runtime.schedEnableUser
4841 120 20 18 40 0 0 20 0 0
4842 60 20 18 0 0 0 40 0 0
4843 100 0 0 40 2 0 0 0 0
4844 60 20 18 0 0 0 40 0 0
4845 60 20 18 40 0 0 0 0 0
fn=runtime.schedEnabled
4863 6 1 1 2 0 0 1 0 0
4864 2 1 1 1 0 0 0 0 0
4867 4 0 0 2 0 0 1 0 0
fn=runtime.schedinit
416 3 0 0 2 1 1 0 0 0
532 6 2 2 2 0 0 1 0 0
535 2 0 0 1 0 0 1 0 0
540 1 0 0 0 0 0 1 1 1
542 1 0 0 0 0 0 0 0 0
543 1 0 0 0 0 0 1 0 0
544 1 0 0 0 0 0 1 0 0
545 1 0 0 0 0 0 1 0 0
546 1 0 0 0 0 0 0 0 0
547 5 1 1 2 0 0 3 0 0
548 1 0 0 0 0 0 1 0 0
549 1 0 0 0 0 0 1 0 0
550 1 0 0 0 0 0 1 0 0
551 1 0 0 0 0 0 1 0 0
552 1 0 0 0 0 0 1 0 0
554 2 0 0 2 0 0 0 0 0
555 4 0 0 3 0 0 1 0 0
557 1 0 0 0 0 0 1 0 0
558 1 0 0 0 0 0 0 0 0
559 1 0 0 0 0 0 1 0 0
560 1 1 1 0 0 0 1 0 0
562 1 0 0 0 0 0 1 1 0
563 2 0 0 1 0 0 1 0 0
564 13 2 1 2 0 0 3 0 0
567 5 2 2 2 0 0 2 0 0
574 2 0 0 1 0 0 0 0 0
582 2 1 1 1 1 1 0 0 0
587 2 1 1 1 1 1 0 0 0
590 3 0 0 2 1 0 0 0 0
669 5 0 0 0 0 0 4 1 0
fn=runtime.schedule
2493 1579896 107 61 526632 0 0 263316 0 0
2494 526632 0 0 263316 0 0 263316 55 12
2496 789948 0 0 526632 0 0 0 0 0
2500 526632 0 0 263316 99 25 0 0 0
2501 1 1 1 0 0 0 1 0 0
2502 6 0 0 3 0 0 3 0 0
2507 789945 47 27 526630 0 0 0 0 0
2512 526741 3 3 526741 0 0 0 0 0
2513 526656 0 0 0 0 0 263328 149 30
2515 526656 0 0 263328 97 6 0 0 0
2516 12 6 6 0 0 0 12 0 0
2517 24 9 9 12 12 9 0 0 0
2519 526632 59 34 263316 148 29 0 0 0
2520 20 3 2 0 0 0 10 3 3
2526 790023 0 0 526685 16 5 0 0 0
2530 789948 59 35 0 0 0 789948 79 14
2539 1843212 57 32 526632 0 0 0 0 0
2547 1053264 80 38 263316 100 1 0 0 0
2548 424 0 0 212 0 0 159 0 0
2549 212 27 26 0 0 0 0 0 0
2551 526632 19 13 0 0 0 0 0 0
2555 1851773 148 70 1057538 135 20 0 0 0
2556 12939 0 0 0 0 0 8626 0 0
2557 34504 0 0 17252 0 0 17252 0 0
2558 17252 0 0 0 0 0 8626 0 0
2561 535271 0 0 4313 0 0 0 0 0
2562 2071920 26 16 1294950 0 0 517980 0 0
2566 526632 0 0 0 0 0 0 0 0
2567 1035792 43 24 517894 0 0 258951 0 0
2573 1057561 0 0 794249 11 1 0 0 0
2574 170 0 0 0 0 0 85 0 0
2577 1316560 62 38 263312 23 10 0 0 0
2596 1575733 0 0 522388 1 1 263369 0 0
2597 117 0 0 26 1 0 0 0 0
2601 1316645 138 77 263397 218 121 263312 10 6
2604 2 0 0 0 0 0 2 0 0
2605 1 0 0 1 1 0 0 0 0
2608 1053330 39 22 85 0 0 1053245 0 0
fn=runtime.semacquire1
310 140 0 0 20 0 0 100 0 0
fn=runtime.setsig
416 560 1 1 280 0 0 0 0 0
fn=runtime.shrinkstack
733 445 21 18 445 0 0 0 0 0
fn=runtime.sighandler
416 147 0 0 49 31 22 0 0 0
fn=runtime.startTheWorld
880 120 23 21 40 0 0 20 5 1
881 60 0 0 0 0 0 40 14 3
884 20 0 0 0 0 0 0 0 0
885 120 12 11 60 20 5 40 0 0
886 60 0 0 40 0 0 0 0 0
fn=runtime.startTheWorld.func1
881 160 11 10 40 0 0 60 0 0
fn=runtime.startTheWorldWithSema
990 480 101 82 180 0 0 60 0 0
991 60 0 0 0 0 0 0 0 0
992 60 0 0 0 0 0 0 0 0
993 216 39 36 54 0 0 162 0 0
994 216 42 39 0 0 0 108 0 0
996 180 50 42 0 0 0 120 0 0
998 60 0 0 60 0 0 0 0 0
999 240 0 0 60 0 0 0 0 0
1003 300 4 1 60 0 0 180 4 0
1004 60 50 42 0 0 0 60 27 0
1005 120 0 0 60 0 0 0 0 0
1006 12 0 0 0 0 0 12 0 0
1007 48 0 0 0 0 0 24 0 0
1009 180 0 0 0 0 0 120 0 0
1011 240 0 0 60 0 0 0 0 0
1029 60 48 39 0 0 0 0 0 0
1030 60 0 0 0 0 0 0 0 0
1031 20 20 16 0 0 0 0 0 0
1037 500 48 41 120 0 0 0 0 0
1038 60 0 0 0 0 0 0 0 0
1041 60 2 1 0 0 0 0 0 0
1043 320 0 0 200 0 0 60 0 0
1997 420 0 0 60 0 0 0 0 0
2000 180 78 68 0 0 0 180 0 0
fn=runtime.startlockedm
2033 6 1 1 2 0 0 1 0 0
2034 1 0 0 1 0 0 0 0 0
2036 2 1 1 2 0 0 0 0 0
2037 2 0 0 1 0 0 0 0 0
2040 2 0 0 1 0 0 0 0 0
2044 2 0 0 0 0 0 2 0 0
2045 2 0 0 1 0 0 1 0 0
2046 1 0 0 0 0 0 0 0 0
2047 3 1 1 0 0 0 2 0 0
2048 1 0 0 0 0 0 1 0 0
2049 3 1 0 2 0 0 0 0 0
fn=runtime.startm
1877 2176 239 119 815 0 0 273 0 0
1878 819 0 0 0 0 0 546 50 7
1879 819 0 0 273 0 0 0 0 0
1880 143 71 38 0 0 0 0 0 0
1881 143 0 0 0 0 0 0 0 0
1882 24 0 0 0 0 0 16 0 0
1883 8 0 0 0 0 0 0 0 0
1890 24 0 0 16 0 0 0 0 0
1893 265 0 0 0 0 0 0 0 0
1894 265 0 0 0 0 0 0 0 0
1907 12 0 0 4 0 0 8 0 0
1908 12 0 0 0 0 0 8 0 0
1911 12 0 0 8 0 0 0 0 0
1915 44 3 1 12 0 0 16 0 0
1918 783 0 0 0 0 0 522 0 0
1919 783 197 64 522 167 40 0 0 0
1922 522 0 0 261 151 34 0 0 0
1925 1674 0 0 252 0 0 252 0 0
1929 513 0 0 252 0 0 261 0 0
1930 265 3 1 0 0 0 265 0 0
1931 783 0 0 0 0 0 522 0 0
1932 783 21 8 522 42 11 0 0 0
4886 265 0 0 265 0 0 0 0 0
4887 791 167 58 0 0 0 0 0 0
4888 522 0 0 261 152 34 261 0 0
4889 261 0 0 261 0 0 0 0 0
4968 143 87 46 143 0 0 0 0 0
4969 421 0 0 0 0 0 0 0 0
4970 270 0 0 135 43 2 135 0 0
4971 405 0 0 270 0 0 0 0 0
fn=runtime.stopTheWorld
873 120 28 25 40 0 0 20 0 0
874 20 0 0 0 0 0 0 0 0
875 160 16 11 100 3 0 40 8 8
876 60 0 0 0 0 0 40 0 0
877 60 0 0 40 1 0 0 0 0
fn=runtime.stopTheWorldWithSema
914 360 52 40 120 0 0 60 0 0
915 120 0 0 60 0 0 60 0 0
919 180 0 0 120 0 0 0 0 0
923 180 50 41 0 0 0 120 9 8
924 120 0 0 60 8 6 60 20 7
925 180 0 0 120 0 0 0 0 0
926 60 0 0 0 0 0 60 0 0
928 240 51 42 180 2 0 60 19 0
929 60 0 0 60 0 0 0 0 0
931 8158 51 42 1080 1 0 120 0 0
932 960 0 0 960 446 0 0 0 0
933 4803 51 42 1 0 0 0 0 0
934 2 0 0 1 0 0 0 0 0
938 1 0 0 1 0 0 0 0 0
939 2 0 0 1 0 0 0 0 0
944 911 51 40 0 0 0 0 0 0
945 911 0 0 0 0 0 0 0 0
948 851 0 0 0 0 0 851 0 0
949 851 0 0 851 0 0 0 0 0
951 300 51 42 120 0 0 60 0 0
952 180 0 0 0 0 0 120 0 0
955 60 0 0 0 0 0 0 0 0
958 222 26 23 37 0 0 111 0 0
959 35 0 0 0 0 0 0 0 0
962 2 0 0 0 0 0 2 0 0
968 155 0 0 60 0 0 0 0 0
971 4320 50 42 1080 31 0 0 0 0
972 960 0 0 960 650 0 0 0 0
977 180 0 0 60 2 0 0 0 0
985 4140 49 41 120 1 0 0 0 0
4968 911 0 0 911 27 11 0 0 0
4969 2673 0 0 0 0 0 0 0 0
4970 1702 0 0 851 44 0 851 0 0
4971 2553 0 0 1702 0 0 0 0 0
fn=runtime.stoplockedm
733 1 0 0 1 0 0 0 0 0
2005 6 2 2 2 0 0 1 0 0
2006 2 0 0 1 0 0 1 0 0
2008 7 0 0 3 0 0 0 0 0
2011 2 1 1 1 0 0 0 0 0
2013 1 1 1 0 0 0 1 0 0
2014 2 0 0 0 0 0 1 0 0
2016 2 0 0 0 0 0 2 0 0
2018 6 0 0 2 0 0 2 0 0
2019 3 1 0 2 0 0 1 0 0
2020 2 1 1 2 0 0 0 0 0
2021 3 0 0 0 0 0 0 0 0
2026 4 0 0 2 0 0 2 0 0
2027 3 0 0 2 0 0 1 0 0
2028 3 1 0 2 0 0 0 0 0
fn=runtime.stopm
1844 1584 249 112 528 0 0 264 0 0
1845 528 0 0 264 0 0 264 2 0
1847 792 0 0 528 0 0 0 0 0
1850 528 0 0 264 0 0 0 0 0
1853 528 0 0 264 0 0 0 0 0
1857 792 86 57 0 0 0 528 0 0
1858 528 0 0 528 0 0 0 0 0
1859 792 16 9 0 0 0 528 0 0
1860 1584 0 0 528 0 0 528 0 0
1861 780 102 48 520 21 7 260 0 0
1862 1040 194 61 520 159 46 520 0 0
1863 780 0 0 520 0 0 260 0 0
1864 780 0 0 520 201 43 0 0 0
4875 528 0 0 264 0 0 264 7 5
4876 264 0 0 0 0 0 0 0 0
4877 264 0 0 264 0 0 0 0 0
4878 264 0 0 0 0 0 264 0 0
fn=runtime.suspendG
733 1099 0 0 1005 0 0 0 0 0
fn=runtime.sysmon
4515 6 2 2 2 0 0 1 0 0
4516 3 0 0 0 0 0 2 0 0
4517 1 0 0 1 0 0 0 0 0
4518 1 0 0 0 0 0 1 0 0
4519 6 0 0 0 0 0 2 0 0
4524 1 0 0 0 0 0 0 0 0
4525 1894 39 19 0 0 0 579 0 0
4527 266 0 0 0 0 0 0 0 0
4528 1289 146 63 698 1 1 325 0 0
4530 845 0 0 0 0 0 0 0 0
4533 1450 0 0 0 0 0 870 0 0
4534 289 120 38 0 0 0 0 0 0
4535 614 160 69 289 0 0 325 36 7
4536 2810 56 37 1116 154 21 0 0 0
4537 108 0 0 0 0 0 72 0 0
4538 284 45 31 70 3 3 0 0 0
4539 140 0 0 70 1 0 0 0 0
4540 87 23 18 58 0 0 0 0 0
4541 87 24 20 0 0 0 58 0 0
4544 145 0 0 29 3 1 0 0 0
4545 116 0 0 58 0 0 0 0 0
4548 29 0 0 0 0 0 0 0 0
4552 116 25 18 0 0 0 87 0 0
4556 29 9 6 0 0 0 0 0 0
4557 87 0 0 29 0 0 58 0 0
4558 87 0 0 0 0 0 58 0 0
4559 87 0 0 58 0 0 0 0 0
4560 29 0 0 0 0 0 0 0 0
4565 174 14 10 0 0 0 72 0 0
4568 1156 0 0 578 240 13 0 0 0
4572 289 0 0 289 109 10 0 0 0
4573 1584 124 39 0 0 0 0 0 0
4574 1120 235 93 438 0 0 325 0 0
4575 476 10 1 119 0 0 357 11 2
4576 119 0 0 0 0 0 0 0 0
4589 1277 159 62 304 1 1 325 0 0
4593 60 16 12 0 0 0 45 0 0
4597 1171 0 0 304 0 0 578 0 0
4600 1431 46 17 698 295 34 325 29 9
4603 1445 0 0 0 0 0 0 0 0
4609 289 0 0 0 0 0 0 0 0
4611 2056 221 51 594 9 2 290 0 0
5265 119 0 0 0 0 0 0 0 0
fn=runtime.unlockOSThread
3746 1 0 0 1 0 0 0 0 0
3747 5 1 1 3 0 0 0 0 0
3750 1 0 0 0 0 0 1 0 0
3751 1 0 0 0 0 0 1 1 0
3778 3 1 1 0 0 0 1 0 0
3779 1 0 0 1 0 0 0 0 0
3780 3 0 0 2 1 0 0 0 0
3783 2 0 0 2 0 0 0 0 0
3784 4 0 0 2 0 0 0 0 0
fn=runtime.wakeNetPoller
2435 120 34 32 40 0 0 20 0 0
2436 120 0 0 60 1 0 0 0 0
2441 7 0 0 7 0 0 0 0 0
2442 40 0 0 7 0 0 0 0 0
2443 2 0 0 0 0 0 2 0 0
fn=runtime.wirep
4351 217620 72 38 0 0 0 72540 0 0
4352 72540 298 60 72540 0 0 0 0 0
4354 362700 0 0 217620 44 21 0 0 0
4357 435240 0 0 217620 174 17 0 0 0
4365 145080 501 68 72540 1097 84 72540 0 0
4366 145080 0 0 72540 0 0 72540 0 0
4367 72540 0 0 72540 0 0 0 0 0
4368 72540 0 0 0 0 0 72540 0 0
4369 217620 0 0 145080 0 0 0 0 0
fn=sync.runtime_procPin
5330 71 9 8 71 0 0 0 0 0
5331 71 0 0 71 0 0 0 0 0
5333 71 0 0 71 0 0 0 0 0
5334 142 0 0 142 12 1 0 0 0
5346 71 10 8 0 0 0 71 0 0
fn=sync.runtime_procUnpin
5339 71 0 0 71 0 0 0 0 0
5340 142 0 0 142 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/runtime.go
fn=os.runtime_args
59 45 4 4 14 1 0 20 0 0
fn=syscall.Exit
63 3 1 1 0 0 0 1 0 0
64 3 0 0 1 0 0 2 0 0
fn=syscall.runtime_envs
53 45 4 4 14 1 0 20 0 0
fl=.//usr/lib/golang/src/runtime/runtime1.go
fn=runtime.(*mheap).reclaim
447 6626 0 0 6626 0 0 0 0 0
448 13252 0 0 13252 0 0 0 0 0
449 13252 0 0 6626 0 0 6626 0 0
454 6626 0 0 6626 0 0 0 0 0
455 20234 0 0 6813 15 0 6626 0 0
456 13252 100 18 0 0 0 0 0 0
458 19878 0 0 13252 0 0 0 0 0
fn=runtime.(*rwmutex).rlock
447 5 0 0 5 0 0 0 0 0
448 10 0 0 10 0 0 0 0 0
449 5 0 0 5 0 0 0 0 0
fn=runtime.(*rwmutex).runlock
455 15 0 0 5 0 0 5 0 0
456 18 3 2 4 0 0 0 0 0
458 15 0 0 10 0 0 0 0 0
fn=runtime.GC
447 10 10 9 10 0 0 0 0 0
448 20 0 0 20 0 0 0 0 0
449 20 0 0 10 0 0 10 0 0
454 10 0 0 10 0 0 0 0 0
455 40 10 9 20 0 0 10 0 0
456 40 0 0 10 0 0 0 0 0
458 30 0 0 20 1 0 0 0 0
fn=runtime.acquireSudog
447 29 0 0 29 0 0 0 0 0
448 58 26 22 58 0 0 0 0 0
449 87 0 0 29 0 0 29 8 7
454 29 28 22 29 0 0 0 0 0
455 116 0 0 58 0 0 29 0 0
456 98 0 0 20 1 0 0 0 0
fn=runtime.addspecial
447 720 0 0 720 0 0 0 0 0
448 1440 0 0 1440 0 0 0 0 0
449 1440 0 0 720 0 0 720 0 0
454 720 0 0 720 0 0 0 0 0
455 2880 0 0 1440 0 0 720 0 0
456 1450 0 0 5 0 0 0 0 0
fn=runtime.allocm
448 10 0 0 10 0 0 0 0 0
454 5 0 0 5 0 0 0 0 0
455 15 0 0 5 0 0 5 0 0
456 18 1 1 4 0 0 0 0 0
fn=runtime.args
60 6 1 1 2 0 0 1 0 0
61 2 0 0 1 0 0 1 0 0
62 4 0 0 2 1 1 1 1 1
63 3 1 1 0 0 0 3 0 0
64 3 0 0 2 0 0 0 0 0
fn=runtime.check
136 6 2 2 2 0 0 1 0 0
142 1 0 0 0 0 0 1 1 1
146 2 0 0 0 0 0 1 0 0
147 2 0 0 0 0 0 1 0 0
150 1 0 0 0 0 0 1 0 0
208 10 1 1 2 0 0 4 0 0
212 1 0 0 0 0 0 1 0 0
213 1 0 0 0 0 0 1 0 0
214 7 1 1 1 0 0 0 0 0
217 2 0 0 1 0 0 0 0 0
221 1 0 0 0 0 0 1 0 0
222 6 0 0 1 0 0 0 0 0
225 2 1 1 1 0 0 0 0 0
229 1 0 0 0 0 0 1 0 0
230 6 0 0 1 0 0 0 0 0
233 2 0 0 1 0 0 0 0 0
237 2 1 1 0 0 0 2 0 0
238 3 0 0 2 0 0 0 0 0
239 8 0 0 4 0 0 0 0 0
243 2 1 1 0 0 0 2 0 0
244 2 0 0 2 0 0 0 0 0
245 8 1 1 4 0 0 0 0 0
249 1 0 0 0 0 0 1 0 0
258 5 0 0 2 1 1 0 0 0
261 2 0 0 0 0 0 0 0 0
265 1 0 0 0 0 0 1 0 0
274 5 1 1 2 1 1 0 0 0
281 1 0 0 0 0 0 1 0 0
283 4 0 0 1 0 0 2 0 0
287 6 0 0 3 0 0 1 0 0
fn=runtime.cpuinit
57 444 0 0 127 9 0 63 0 0
fn=runtime.deltimer
447 6 0 0 6 0 0 0 0 0
448 12 0 0 12 0 0 0 0 0
449 6 0 0 6 0 0 0 0 0
454 6 0 0 6 0 0 0 0 0
455 18 0 0 6 0 0 6 0 0
456 12 6 6 0 0 0 0 0 0
fn=runtime.forEachP
447 65 0 0 65 0 0 0 0 0
448 130 44 21 130 2 0 0 0 0
449 130 0 0 65 0 0 65 0 0
454 65 0 0 65 0 0 0 0 0
455 260 0 0 130 16 11 65 0 0
456 220 6 5 45 19 3 0 0 0
458 195 0 0 130 18 8 0 0 0
fn=runtime.gcBgMarkWorker
447 64 20 14 64 0 0 0 0 0
448 128 20 15 128 0 0 0 0 0
449 64 21 20 64 0 0 0 0 0
454 22 21 15 22 0 0 0 0 0
455 66 0 0 22 0 0 22 0 0
456 88 0 0 22 0 0 0 0 0
458 2 0 0 0 0 0 2 0 0
fn=runtime.gcBgMarkWorker.func1
454 42 23 20 42 0 0 0 0 0
455 126 0 0 42 0 0 42 0 0
456 168 0 0 42 15 10 0 0 0
fn=runtime.gcMarkTermination
447 20 0 0 20 0 0 0 0 0
448 40 0 0 40 0 0 0 0 0
449 60 0 0 20 0 0 20 0 0
454 20 0 0 20 0 0 0 0 0
455 80 0 0 40 20 11 20 0 0
456 80 0 0 20 9 4 0 0 0
458 74 20 18 40 18 11 14 0 0
fn=runtime.gcStart
447 20 0 0 20 0 0 0 0 0
448 40 0 0 40 0 0 0 0 0
449 40 0 0 20 0 0 0 0 0
455 40 0 0 0 0 0 20 0 0
456 60 0 0 20 0 0 0 0 0
458 80 20 18 60 0 0 0 0 0
fn=runtime.gentraceback
38 1176 0 0 1176 747 87 0 0 0
40 2352 0 0 2352 12 0 0 0 0
41 3072 733 118 0 0 0 0 0 0
44 1176 0 0 0 0 0 0 0 0
fn=runtime.goargs
57 12 1 1 3 0 0 3 0 0
66 6 2 1 2 0 0 1 0 0
70 15 1 1 5 0 0 7 1 1
71 18 1 1 6 0 0 3 0 0
72 39 1 1 12 0 0 6 1 1
fn=runtime.goenvs_unix
57 381 0 0 127 1 0 0 0 0
76 7 1 1 2 0 0 1 0 0
81 258 0 0 64 0 0 1 0 0
82 63 0 0 0 0 0 0 0 0
85 15 1 1 3 0 0 8 1 1
86 322 0 0 66 0 0 63 0 0
87 1260 1 1 441 0 0 252 18 16
fn=runtime.gopark
447 140 0 0 140 0 0 0 0 0
448 280 0 0 280 0 0 0 0 0
449 280 0 0 140 0 0 0 0 0
454 140 0 0 140 0 0 0 0 0
455 420 0 0 140 0 0 140 0 0
456 280 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
447 5868970 1428 83 5868970 0 0 0 0 0
448 11737940 0 0 11737940 1835 82 0 0 0
449 17606195 0 0 5868970 0 0 5868970 974 83
454 5868970 0 0 5868970 21 0 0 0 0
455 17607625 2 0 5869685 1 0 5868970 0 0
456 23475704 546 86 5868882 1938 61 0 0 0
458 2 1 0 0 0 0 2 0 0
464 23473020 0 0 17604765 2840 123 5868255 0 0
fn=runtime.modtimer
447 20 15 15 20 0 0 0 0 0
448 40 0 0 40 0 0 0 0 0
449 20 0 0 20 0 0 0 0 0
454 20 0 0 20 0 0 0 0 0
455 80 17 16 40 0 0 20 0 0
456 40 0 0 0 0 0 0 0 0
458 20 16 15 0 0 0 0 0 0
fn=runtime.newproc1
448 58 0 0 58 0 0 0 0 0
449 29 0 0 0 0 0 0 0 0
454 29 10 6 29 0 0 0 0 0
455 87 0 0 29 0 0 29 0 0
456 116 0 0 29 8 2 0 0 0
458 87 0 0 58 1 0 0 0 0
fn=runtime.parsedebugvars
343 7 2 2 2 0 0 1 0 0
345 1 0 0 0 0 0 1 0 0
346 1 0 0 0 0 0 1 0 0
348 9 1 1 2 0 0 3 0 0
380 9 2 2 2 0 0 6 0 0
381 2 0 0 1 0 0 1 0 0
382 3 0 0 2 0 0 0 0 0
fn=runtime.persistentalloc1
447 556 0 0 556 0 0 0 0 0
448 1112 0 0 1112 1 1 0 0 0
449 1112 0 0 556 0 0 556 0 0
454 556 473 109 556 0 0 0 0 0
455 2234 0 0 1122 0 0 556 0 0
456 1112 0 0 0 0 0 0 0 0
fn=runtime.ready
448 170 0 0 170 0 0 0 0 0
449 170 0 0 85 0 0 85 6 6
454 85 0 0 85 0 0 0 0 0
455 340 0 0 170 1 0 85 0 0
456 208 22 19 19 1 0 0 0 0
458 255 0 0 170 0 0 0 0 0
fn=runtime.releaseSudog
448 58 0 0 58 0 0 0 0 0
449 87 0 0 29 0 0 29 13 7
454 29 0 0 29 0 0 0 0 0
455 116 0 0 58 0 0 29 0 0
456 116 27 21 29 0 0 0 0 0
458 87 0 0 58 0 0 0 0 0
fn=runtime.removespecial
447 2 0 0 2 0 0 0 0 0
448 4 0 0 4 0 0 0 0 0
449 4 0 0 2 0 0 2 0 0
454 2 0 0 2 0 0 0 0 0
455 8 2 2 4 0 0 2 0 0
456 8 0 0 2 0 0 0 0 0
fn=runtime.startTheWorldWithSema
447 60 0 0 60 0 0 0 0 0
448 120 0 0 120 8 0 0 0 0
449 120 0 0 60 0 0 60 0 0
454 60 0 0 60 2 1 0 0 0
455 240 1 0 120 7 0 60 0 0
456 200 0 0 40 20 18 0 0 0
fn=runtime.sysargs
57 128 0 0 64 8 8 0 0 0
fn=runtime.testAtomic64
99 6 1 1 2 0 0 1 1 1
100 1 0 0 0 0 0 1 1 1
101 1 1 1 0 0 0 1 0 0
102 7 0 0 1 0 0 0 0 0
105 2 0 0 1 0 0 0 0 0
108 1 0 0 0 0 0 1 0 0
109 5 1 1 1 0 0 0 0 0
112 4 0 0 2 0 0 0 0 0
115 3 0 0 1 0 0 0 0 0
118 2 1 1 2 0 0 0 0 0
119 4 0 0 1 0 0 0 0 0
122 7 1 1 2 0 0 0 0 0
125 3 0 0 1 0 0 0 0 0
128 4 0 0 2 0 0 0 0 0
131 7 1 1 3 0 0 0 0 0
fn=runtime.timediv
423 100 1 1 2 0 0 0 0 0
424 124 0 0 0 0 0 0 0 0
425 6 0 0 0 0 0 0 0 0
428 12 0 0 12 0 0 6 1 1
431 3 1 1 0 0 0 0 0 0
437 3 0 0 1 0 0 0 0 0
438 1 0 0 0 0 0 1 0 0
440 1 0 0 0 0 0 1 0 0
fn=runtime.traceAcquireBuffer
447 20 0 0 20 0 0 0 0 0
448 40 0 0 40 0 0 0 0 0
449 40 0 0 20 0 0 0 0 0
fn=runtime.traceReleaseBuffer
455 60 0 0 20 0 0 20 0 0
456 40 0 0 0 0 0 0 0 0
458 60 20 19 40 0 0 0 0 0
fn=runtime/debug.SetTraceback
385 6 2 2 2 0 0 1 0 0
387 6 0 0 1 0 0 0 0 0
406 5 1 1 2 0 0 0 0 0
410 1 0 0 1 0 0 0 0 0
412 2 0 0 2 1 1 0 0 0
413 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/runtime2.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
259 13 0 0 0 0 0 13 0 0
fn=runtime.(*mheap).allocMSpanLocked
280 1382 0 0 0 0 0 691 0 0
fn=runtime.(*mheap).allocSpan
280 827 21 9 0 0 0 827 0 0
fn=runtime.acquireSudog
280 22 5 5 0 0 0 10 0 0
fn=runtime.bulkBarrierPreWriteSrcOnly
280 105816 0 0 0 0 0 52908 0 0
fn=runtime.doaddtimer
283 60 0 0 20 0 0 20 0 0
fn=runtime.efaceOf
211 5 1 0 5 0 0 0 0 0
fn=runtime.entersyscall_gcwait
280 2 0 0 0 0 0 2 1 1
fn=runtime.exitsyscall
280 11587 0 0 0 0 0 11587 0 0
fn=runtime.exitsyscall0
262 4 0 0 0 0 0 2 0 0
274 1 0 0 0 0 0 0 0 0
300 1 0 0 0 0 0 0 0 0
307 1 0 0 0 0 0 0 0 0
fn=runtime.exitsyscallfast_pidle
280 202 0 0 0 0 0 202 0 0
fn=runtime.extendRandom
838 12 2 2 4 0 0 2 0 0
839 6 0 0 2 0 0 0 0 0
842 86 3 2 20 0 0 14 0 0
845 42 0 0 14 0 0 0 0 0
848 182 1 0 42 0 0 56 0 0
849 686 0 0 42 0 0 0 0 0
850 224 0 0 0 0 0 112 2 2
851 112 0 0 0 0 0 0 0 0
852 112 0 0 0 0 0 0 0 0
fn=runtime.findrunnable
259 13 0 0 0 0 0 13 0 0
280 380547 0 0 0 0 0 380547 12 11
fn=runtime.forEachP
280 65 0 0 0 0 0 65 0 0
fn=runtime.gcBgMarkWorker
262 44 0 0 0 0 0 22 0 0
283 98 0 0 38 22 15 38 0 0
300 112 0 0 48 22 15 64 52 37
fn=runtime.gcBgMarkWorker.func1
266 152 20 15 38 22 11 0 0 0
283 76 0 0 0 0 0 38 0 0
fn=runtime.gcWaitOnMark
262 10 0 0 0 0 0 10 0 0
fn=runtime.gfput
262 8 0 0 0 0 0 8 0 0
fn=runtime.globrunqget
259 263172 27 23 0 0 0 263172 56 10
fn=runtime.goexit0
262 8 0 0 0 0 0 0 0 0
274 8 0 0 0 0 0 0 0 0
300 8 0 0 0 0 0 0 0 0
307 8 0 0 0 0 0 0 0 0
fn=runtime.goschedImpl
262 1052640 25 23 0 0 0 526318 0 0
274 263161 0 0 0 0 0 0 0 0
300 263161 0 0 0 0 0 0 0 0
307 263161 0 0 0 0 0 0 0 0
fn=runtime.injectglist
259 10 0 0 0 0 0 10 0 0
262 30 0 0 0 0 0 20 0 0
fn=runtime.main
262 1 0 0 0 0 0 0 0 0
300 1 0 0 0 0 0 1 0 0
fn=runtime.modtimer
280 20 0 0 0 0 0 20 0 0
fn=runtime.newm
283 5 0 0 5 0 0 0 0 0
fn=runtime.newproc1
280 29 0 0 0 0 0 29 0 0
fn=runtime.newstack
259 80 0 0 0 0 0 0 0 0
fn=runtime.park_m
262 140 0 0 0 0 0 0 0 0
274 140 0 0 0 0 0 0 0 0
300 140 54 34 0 0 0 0 0 0
307 140 0 0 0 0 0 0 0 0
fn=runtime.pidleput
283 61888 0 0 0 0 0 61888 0 0
fn=runtime.preemptPark
262 1 0 0 0 0 0 0 0 0
274 1 0 0 0 0 0 0 0 0
300 1 0 0 0 0 0 0 0 0
307 1 0 0 0 0 0 0 0 0
fn=runtime.procresize
280 60 0 0 0 0 0 0 0 0
fn=runtime.reentersyscall
283 11571 0 0 0 0 0 0 0 0
fn=runtime.releaseSudog
280 29 0 0 0 0 0 29 0 0
fn=runtime.releasep
280 60968 0 0 0 0 0 60968 0 0
fn=runtime.runqget
259 52 0 0 52 0 0 0 0 0
266 208 0 0 52 0 0 0 0 0
fn=runtime.runqgrab
266 192 10 6 90 20 5 0 0 0
fn=runtime.runqput
262 48 0 0 0 0 0 48 33 26
266 243 42 26 81 0 0 0 0 0
fn=runtime.schedule
280 10 3 3 0 0 0 10 3 3
fn=runtime.sighandler
262 49 35 25 49 0 0 0 0 0
fn=runtime.startlockedm
283 2 0 0 1 0 0 1 0 0
297 1 0 0 0 0 0 1 0 0
fn=runtime.startm
283 522 99 18 261 0 0 261 0 0
297 261 140 62 0 0 0 261 0 0
fn=runtime.stopm
300 264 0 0 0 0 0 264 0 0
fn=runtime.wirep
283 72540 0 0 0 0 0 0 0 0
300 72540 0 0 0 0 0 72540 0 0
fl=.//usr/lib/golang/src/runtime/rwmutex.go
fn=runtime.(*rwmutex).rlock
33 30 10 4 10 0 0 5 0 0
38 5 0 0 0 0 0 0 0 0
39 45 5 2 25 2 1 0 0 0
fn=runtime.(*rwmutex).runlock
62 30 5 2 10 0 0 5 0 0
63 30 0 0 15 0 0 0 0 0
78 10 5 2 10 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/select.go
fn=runtime.init
38 7 0 0 1 0 0 4 0 0
39 10 1 1 3 0 0 4 0 0
fl=.//usr/lib/golang/src/runtime/sema.go
fn=internal/poll.runtime_Semrelease
75 12 2 2 4 0 0 2 0 0
76 8 0 0 6 0 0 0 0 0
156 8 1 1 0 0 0 8 0 0
fn=runtime.(*semaRoot).dequeue
321 120 31 26 40 0 0 20 0 0
322 100 0 0 40 0 0 20 0 0
324 100 0 0 20 0 0 20 0 0
325 66 17 16 20 6 0 0 0 0
338 60 0 0 20 0 0 0 0 0
341 79 0 0 20 1 0 0 0 0
343 13 4 4 3 0 0 3 2 2
344 6 0 0 3 0 0 3 2 1
345 16 2 2 6 0 0 3 1 0
346 16 2 2 6 1 0 3 0 0
347 6 0 0 0 0 0 0 0 0
350 16 0 0 6 0 0 3 0 0
351 6 0 0 0 0 0 0 0 0
354 6 2 2 3 0 0 0 0 0
355 6 1 1 2 0 0 1 0 0
357 10 1 1 2 0 0 2 0 0
359 20 17 16 0 0 0 20 0 0
360 13 0 0 3 0 0 2 0 0
361 6 0 0 0 0 0 3 0 0
364 85 17 16 34 3 0 0 0 0
372 51 0 0 17 0 0 0 0 0
379 76 21 20 17 0 0 17 3 3
382 78 23 22 20 0 0 20 0 0
383 26 0 0 0 0 0 20 0 0
384 18 0 0 0 0 0 6 0 0
385 40 0 0 0 0 0 20 0 0
386 20 0 0 0 0 0 20 0 0
387 100 11 10 40 0 0 40 0 0
fn=runtime.(*semaRoot).queue
234 159 21 20 43 0 0 20 0 0
235 147 18 14 60 0 0 20 3 3
236 58 11 10 20 0 0 20 0 0
237 56 7 7 0 0 0 9 0 0
238 60 0 0 0 0 0 20 0 0
241 80 8 7 40 0 0 0 0 0
242 60 0 0 0 0 0 0 0 0
243 18 0 0 3 2 1 0 0 0
245 3 0 0 0 0 0 0 0 0
247 9 0 0 0 0 0 0 0 0
252 9 0 0 0 0 0 0 0 0
271 12 3 3 3 0 0 0 0 0
272 10 0 0 2 0 0 2 0 0
274 5 2 2 1 0 0 1 0 0
276 12 2 2 3 0 0 3 0 0
277 9 0 0 0 0 0 3 0 0
279 9 3 3 6 0 0 0 0 0
300 34 0 0 0 0 0 17 0 0
301 69 11 10 17 0 0 17 3 2
302 29 0 0 0 0 0 17 0 0
305 119 17 16 51 0 0 0 0 0
fn=runtime.cansemacquire
222 129 58 42 129 0 0 0 0 0
223 129 0 0 129 85 38 0 0 0
224 258 0 0 0 0 0 0 0 0
225 40 0 0 0 0 0 40 0 0
227 534 0 0 89 0 0 0 0 0
228 178 0 0 89 0 0 89 2 0
fn=runtime.gcMarkDone
95 145 0 0 0 0 0 116 27 22
156 145 20 18 0 0 0 116 1 0
fn=runtime.gcMarkTermination
156 100 20 18 0 0 0 80 2 0
fn=runtime.gcStart
95 240 20 18 0 0 0 160 0 0
156 100 0 0 0 0 0 80 0 0
fn=runtime.readyWithTime
79 135 17 16 50 0 0 20 0 0
80 60 17 16 40 0 0 0 0 0
83 100 0 0 40 0 0 60 0 0
84 60 0 0 40 0 0 0 0 0
fn=runtime.semacquire1
98 554 62 47 178 0 0 89 22 20
99 89 0 0 89 0 0 0 0 0
100 267 63 47 178 1 0 0 0 0
105 445 0 0 178 0 0 178 35 29
106 207 47 37 138 0 0 0 0 0
115 80 0 0 20 0 0 40 0 0
116 20 0 0 0 0 0 0 0 0
118 20 18 17 0 0 0 20 0 0
119 20 0 0 0 0 0 20 0 0
120 20 0 0 0 0 0 20 0 0
121 80 0 0 20 0 0 0 0 0
125 40 0 0 0 0 0 0 0 0
132 80 0 0 0 0 0 60 0 0
134 140 18 17 60 0 0 20 0 0
136 100 0 0 40 0 0 40 0 0
143 180 18 17 80 0 0 100 0 0
144 40 18 17 20 0 0 0 0 0
145 200 23 19 80 35 7 40 0 0
149 80 18 17 40 0 0 0 0 0
150 20 0 0 0 0 0 20 0 0
152 40 0 0 0 0 0 40 0 0
153 60 0 0 40 0 0 0 0 0
218 340 36 34 20 0 0 60 0 0
fn=runtime.semrelease1
159 661 133 92 252 0 0 91 11 8
160 91 0 0 91 2 2 0 0 0
161 182 0 0 182 43 2 0 0 0
166 566 0 0 91 73 40 20 0 0
167 213 38 26 142 0 0 0 0 0
171 80 0 0 0 0 0 60 16 10
172 80 17 16 40 0 0 0 0 0
178 160 19 16 60 0 0 100 0 0
179 80 0 0 20 0 0 0 0 0
180 60 0 0 60 0 0 0 0 0
182 60 0 0 20 0 0 40 0 0
183 20 0 0 0 0 0 0 0 0
184 20 0 0 20 0 0 0 0 0
185 40 0 0 0 0 0 0 0 0
188 40 19 16 20 0 0 0 0 0
191 80 0 0 0 0 0 0 0 0
194 100 0 0 20 0 0 60 0 0
195 120 19 16 80 0 0 0 0 0
218 990 70 44 20 0 0 20 0 0
fn=runtime.startTheWorld
156 100 0 0 0 0 0 80 0 0
fn=runtime.stopTheWorld
95 100 0 0 0 0 0 80 0 0
fn=sync.runtime_notifyListCheck
607 6 2 2 2 0 0 1 0 0
608 6 0 0 3 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_amd64.go
fn=runtime.(*sigctxt).pushCall
81 2 0 0 0 0 0 0 0 0
82 2 0 0 0 0 0 0 0 0
83 2 0 0 0 0 0 0 0 0
84 4 0 0 0 0 0 2 0 0
85 2 0 0 0 0 0 0 0 0
fn=runtime.doSigPreempt
41 3 0 0 0 0 0 0 0 0
43 3 0 0 0 0 0 0 0 0
fn=runtime.sighandler
41 49 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_linux_amd64.go
fn=runtime.(*sigctxt).pushCall
20 16 2 2 12 0 0 4 0 0
30 4 2 2 4 0 0 0 0 0
42 2 0 0 0 0 0 0 0 0
51 2 0 0 0 0 0 0 0 0
52 2 0 0 0 0 0 0 0 0
fn=runtime.doSigPreempt
20 9 3 3 9 3 2 0 0 0
30 3 0 0 3 0 0 0 0 0
42 3 0 0 0 0 0 0 0 0
fn=runtime.sighandler
20 98 0 0 98 34 27 0 0 0
42 49 0 0 0 0 0 0 0 0
48 196 34 24 196 37 30 0 0 0
fl=.//usr/lib/golang/src/runtime/signal_unix.go
fn=runtime.adjustSignalStack
487 147 26 20 0 0 0 49 0 0
488 49 0 0 0 0 0 0 0 0
489 294 26 22 196 44 29 0 0 0
490 49 38 24 0 0 0 49 0 0
fn=runtime.doSigPreempt
326 294 30 24 98 0 0 49 0 0
329 312 11 8 52 0 0 15 3 3
331 10 0 0 2 0 0 6 0 0
335 152 0 0 152 10 0 0 0 0
336 147 0 0 147 0 0 0 0 0
338 147 0 0 98 0 0 0 0 0
fn=runtime.initsig
111 5 1 1 1 0 0 1 0 0
112 1 0 0 0 0 0 0 0 0
114 2 1 1 0 0 0 1 0 0
119 6 1 1 2 0 0 0 0 0
123 374 0 0 58 0 0 58 0 0
124 123 0 0 0 0 0 58 0 0
125 390 0 0 65 0 0 0 0 0
131 176 0 0 58 0 0 58 9 9
133 230 0 0 0 0 0 0 0 0
136 10 0 0 2 0 0 0 0 0
138 4 0 0 0 0 0 0 0 0
141 2 0 0 0 0 0 0 0 0
144 112 1 1 0 0 0 56 5 5
145 224 0 0 0 0 0 168 0 0
156 174 0 0 0 0 0 0 0 0
157 6 1 1 2 0 0 0 0 0
163 292 1 1 116 0 0 0 0 0
169 280 1 1 112 0 0 0 0 0
fn=runtime.minitSignalMask
1094 36 9 4 12 0 0 6 0 0
1095 30 0 0 18 0 0 6 0 0
1096 1188 0 0 0 0 0 0 0 0
1097 366 0 0 0 0 0 0 0 0
1098 96 0 0 0 0 0 0 0 0
1101 18 0 0 12 0 0 0 0 0
1131 2340 4 2 390 80 50 0 0 0
1132 780 0 0 0 0 0 0 0 0
1135 1320 4 2 660 0 0 0 0 0
1138 330 0 0 0 0 0 0 0 0
fn=runtime.minitSignalStack
1073 36 4 2 12 0 0 6 5 5
1074 12 0 0 6 0 0 6 0 0
1075 18 3 2 0 0 0 12 0 0
1076 24 0 0 0 0 0 18 0 0
1077 18 0 0 6 0 0 0 0 0
1078 36 5 2 24 4 1 12 0 0
1079 36 0 0 24 0 0 6 3 0
fn=runtime.minitSignals
1058 36 6 2 12 0 0 6 0 0
1059 6 0 0 0 0 0 6 0 0
1060 6 0 0 0 0 0 6 0 0
1061 18 0 0 12 0 0 0 0 0
fn=runtime.preemptone
374 7830 0 0 1305 828 88 0 0 0
384 196 32 24 0 0 0 147 0 0
fn=runtime.schedinit
1018 2 0 0 0 0 0 0 0 0
fn=runtime.sigFetchG
416 49 0 0 49 15 4 0 0 0
fn=runtime.sigfwdgo
948 147 33 24 0 0 0 49 0 0
949 147 0 0 49 0 0 0 0 0
952 147 38 25 49 33 20 0 0 0
953 147 0 0 49 32 18 0 0 0
956 343 38 25 98 52 21 0 0 0
981 98 34 23 0 0 0 0 0 0
982 196 35 25 98 0 0 49 0 0
fn=runtime.sighandler
547 294 37 25 98 0 0 49 0 0
548 98 0 0 49 0 0 49 0 0
549 294 0 0 98 0 0 147 0 0
551 147 33 24 49 0 0 0 0 0
556 294 27 23 0 0 0 0 0 0
560 294 67 49 0 0 0 0 0 0
564 98 0 0 0 0 0 0 0 0
566 294 36 25 49 0 0 147 36 28
573 245 31 25 98 0 0 0 0 0
574 147 0 0 49 0 0 0 0 0
576 147 35 25 0 0 0 0 0 0
581 49 0 0 0 0 0 0 0 0
586 196 0 0 0 0 0 0 0 0
604 147 33 24 0 0 0 0 0 0
605 196 0 0 49 0 0 98 0 0
610 245 0 0 0 0 0 0 0 0
614 294 73 49 49 0 0 49 49 29
618 98 0 0 0 0 0 0 0 0
619 147 0 0 98 0 0 0 0 0
622 49 0 0 49 0 0 0 0 0
fn=runtime.signalstack
1186 18 6 2 0 0 0 6 5 5
1187 42 0 0 18 0 0 18 0 0
1188 6 6 2 6 0 0 0 0 0
1189 24 0 0 0 0 0 18 0 0
fn=runtime.sigtrampgo
430 147 30 25 0 0 0 49 0 0
431 441 30 24 196 0 0 196 76 58
434 294 30 24 98 0 0 147 0 0
435 245 0 0 49 0 0 147 0 0
436 98 0 0 0 0 0 98 0 0
437 147 0 0 49 0 0 0 0 0
460 196 30 24 98 27 8 98 0 0
463 196 29 24 0 0 0 147 0 0
464 637 33 25 245 0 0 245 0 0
465 98 0 0 0 0 0 0 0 0
469 147 0 0 98 0 0 0 0 0
474 392 30 25 147 0 0 245 0 0
475 147 0 0 49 0 0 98 0 0
476 49 0 0 0 0 0 0 0 0
1181 147 28 23 98 0 0 0 0 0
fn=runtime.suspendG
374 7 1 1 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/sigqueue.go
fn=runtime.sigsend
67 294 70 48 98 0 0 49 0 0
69 98 0 0 49 32 20 0 0 0
70 196 28 23 98 0 0 49 0 0
fl=.//usr/lib/golang/src/runtime/slice.go
fn=runtime.growslice
76 2796752 3234 54 932188 0 0 466094 0 0
85 1864376 0 0 932188 0 0 0 0 0
89 1864376 30813 133 932188 3788 117 0 0 0
96 466094 0 0 0 0 0 0 0 0
97 932188 0 0 0 0 0 0 0 0
98 100038 0 0 0 0 0 0 0 0
100 1464174 0 0 366056 0 0 0 0 0
101 366006 65 13 0 0 0 0 0 0
105 450 46 17 0 0 0 0 0 0
106 300 0 0 0 0 0 0 0 0
110 100 0 0 0 0 0 0 0 0
123 932188 28454 86 0 0 0 0 0 0
126 1 0 0 0 0 0 0 0 0
127 108 7 3 0 0 0 0 0 0
129 932116 28233 113 0 0 0 0 0 0
130 64 0 0 0 0 0 0 0 0
131 32 21 11 0 0 0 0 0 0
132 64 0 0 0 0 0 0 0 0
133 96 0 0 0 0 0 0 0 0
134 128 0 0 0 0 0 0 0 0
135 466026 344 45 0 0 0 0 0 0
139 465950 0 0 0 0 0 0 0 0
143 1497888 0 0 100038 0 0 0 0 0
144 932044 320 97 0 0 0 0 0 0
145 1300756 0 0 0 0 0 0 0 0
146 1863800 0 0 0 0 0 0 0 0
147 1863800 8 5 0 0 0 0 0 0
149 152 24 18 0 0 0 0 0 0
150 76 0 0 0 0 0 0 0 0
151 456 0 0 0 0 0 0 0 0
152 60 0 0 0 0 0 0 0 0
153 380 22 16 0 0 0 76 1 1
169 2330326 939 81 0 0 0 0 0 0
174 932188 0 0 466094 0 0 0 0 0
175 282 7 2 47 0 0 235 1 1
178 358 0 0 47 0 0 188 0 0
181 2849216 15858 107 466047 0 0 1917143 165 12
182 2596291 0 0 832075 259 36 466094 7 7
185 317448 3430 22 52908 183 30 211632 0 0
188 3368521 3430 118 985143 360 20 2330470 10 0
190 4661128 43 24 2330546 50 13 1864376 402 55
194 932052 30 22 0 0 0 0 0 0
fn=runtime.makeslice
34 6600303 58 24 2200102 0 0 1100050 0 0
35 5500250 0 0 3300150 276 59 0 0 0
36 11000500 74 28 2200100 0 0 0 0 0
49 9900450 7 1 3300150 0 0 5500250 266 10
fl=.//usr/lib/golang/src/runtime/stack.go
fn=runtime.adjustctxt
541 9 0 0 9 0 0 0 0 0
545 63 0 0 36 0 0 0 0 0
546 36 9 7 18 0 0 9 0 0
715 18 9 7 18 0 0 0 0 0
716 18 0 0 9 6 0 0 0 0
727 9 0 0 0 0 0 0 0 0
fn=runtime.adjustdefers
545 27 9 7 18 0 0 0 0 0
730 54 0 0 18 0 0 9 0 0
734 18 0 0 18 0 0 0 0 0
735 36 0 0 9 0 0 0 0 0
747 45 9 7 0 0 0 36 0 0
748 27 0 0 18 0 0 0 0 0
fn=runtime.adjustframe
541 220 0 0 220 0 0 0 0 0
545 901 3 2 550 0 0 0 0 0
546 315 0 0 105 0 0 105 0 0
547 16 0 0 0 0 0 0 0 0
620 791 18 14 226 0 0 113 0 0
622 339 0 0 226 0 0 0 0 0
626 452 0 0 226 0 0 226 0 0
630 226 9 7 113 0 0 0 0 0
637 2147 9 7 904 0 0 1130 0 0
640 339 9 7 113 0 0 0 0 0
641 158 0 0 0 0 0 0 0 0
642 1106 9 7 395 0 0 474 0 0
646 693 0 0 339 0 0 0 0 0
647 196 0 0 98 0 0 0 0 0
665 98 0 0 0 0 0 0 0 0
669 226 6 5 113 0 0 0 0 0
673 924 15 12 116 0 0 505 0 0
678 327 0 0 214 0 0 0 0 0
679 1638 12 9 496 25 22 134 0 0
681 68 0 0 68 0 0 0 0 0
682 136 1 0 0 0 0 0 0 0
685 68 0 0 0 0 0 0 0 0
686 136 0 0 68 0 0 0 0 0
693 67 9 7 67 33 32 0 0 0
695 268 0 0 67 20 17 0 0 0
700 839 0 0 302 0 0 0 0 0
701 2350 9 7 235 13 10 0 0 0
702 122 0 0 0 0 0 0 0 0
705 268 0 0 0 0 0 0 0 0
711 452 8 7 226 0 0 113 0 0
fn=runtime.adjustpointers
571 1270 9 7 360 0 0 180 0 0
572 360 0 0 360 0 0 0 0 0
573 180 0 0 180 0 0 0 0 0
574 180 0 0 180 0 0 0 0 0
575 540 0 0 360 0 0 180 0 0
581 726 9 7 360 0 0 0 0 0
582 2606 9 7 730 0 0 244 0 0
588 732 0 0 244 19 18 0 0 0
589 1492 9 7 190 0 0 0 0 0
590 190 0 0 0 0 0 0 0 0
591 380 0 0 0 0 0 0 0 0
592 386 0 0 0 0 0 0 0 0
593 190 0 0 0 0 0 0 0 0
594 380 0 0 190 0 0 190 0 0
595 658 3 2 0 0 0 0 0 0
602 760 6 5 0 0 0 0 0 0
606 6 0 0 0 0 0 0 0 0
612 18 0 0 0 0 0 6 0 0
fn=runtime.adjustsudogs
541 3 0 0 3 0 0 0 0 0
545 6 0 0 3 0 0 0 0 0
759 63 9 7 30 6 1 0 0 0
760 3 0 0 0 0 0 0 0 0
fn=runtime.copystack
541 18 0 0 18 0 0 0 0 0
545 18 0 0 9 0 0 0 0 0
753 9 0 0 0 0 0 0 0 0
826 63 18 14 18 0 0 9 0 0
827 27 0 0 18 0 0 0 0 0
830 36 0 0 18 0 0 18 3 0
831 18 9 7 0 0 0 0 0 0
834 54 0 0 18 0 0 18 2 0
837 63 0 0 27 0 0 36 4 0
846 63 9 7 9 0 0 18 0 0
847 36 0 0 18 0 0 18 0 0
848 27 9 7 0 0 0 9 0 0
852 27 0 0 18 0 0 0 0 0
853 48 6 5 6 0 0 0 0 0
860 24 0 0 0 0 0 18 0 0
869 18 6 5 3 0 0 15 0 0
873 33 3 3 12 0 0 12 0 0
877 81 12 9 24 0 0 36 0 0
882 45 0 0 9 0 0 27 0 0
883 45 9 7 9 0 0 27 0 0
884 9 0 0 0 0 0 0 0 0
885 27 9 7 9 0 0 0 0 0
890 36 0 0 18 0 0 18 0 0
891 18 9 7 0 0 0 9 0 0
892 27 0 0 9 0 0 9 0 0
893 18 0 0 18 0 0 0 0 0
896 117 9 7 0 0 0 90 0 0
902 45 0 0 18 0 0 27 0 0
903 33 6 5 18 0 0 0 0 0
fn=runtime.findsghi
772 33 3 2 15 0 0 0 0 0
773 12 3 3 9 9 5 0 0 0
774 21 0 0 0 0 0 0 0 0
778 3 0 0 0 0 0 3 0 0
fn=runtime.freeStackSpans
1157 140 40 36 40 0 0 20 0 0
1160 460 20 18 80 0 0 80 0 0
1161 560 20 18 0 0 0 320 0 0
1162 400 0 0 80 0 0 80 0 0
1163 602 0 0 80 0 0 0 0 0
1164 94 0 0 94 84 40 0 0 0
1165 188 0 0 94 80 69 0 0 0
1173 240 0 0 80 0 0 160 0 0
1177 80 0 0 0 0 0 40 0 0
1178 2860 20 18 0 0 0 700 0 0
1179 6300 0 0 700 170 132 700 0 0
1187 60 18 13 0 0 0 40 0 0
1188 60 0 0 40 0 0 0 0 0
fn=runtime.getStackMap
1192 18090 54 44 3618 0 0 5427 0 0
1193 3618 27 22 3618 0 0 0 0 0
1194 3618 0 0 0 0 0 0 0 0
1199 7236 0 0 3618 0 0 3618 0 0
1201 3638 0 0 1809 0 0 0 0 0
1206 3578 0 0 0 0 0 1789 1 0
1207 16101 26 22 3578 0 0 10734 20 17
1209 4107 0 0 0 0 0 0 0 0
1217 6727 26 22 5407 0 0 1320 0 0
1225 1809 0 0 0 0 0 0 0 0
1228 4429 0 0 3109 0 0 0 0 0
1229 8389 0 0 3109 0 0 5280 0 0
1242 978 0 0 0 0 0 0 0 0
1249 7383 27 22 1320 457 360 783 0 0
1254 4497 0 0 1320 8 8 0 0 0
1255 5235 0 0 1320 0 0 783 0 0
1260 783 0 0 0 0 0 0 0 0
1270 8879 26 22 3618 0 0 0 0 0
1271 3720 0 0 1240 0 0 0 0 0
1281 9920 52 42 3720 0 0 6200 0 0
1282 6200 0 0 1240 329 275 0 0 0
1286 11627 53 42 1240 0 0 1809 0 0
1288 3598 0 0 1789 0 0 1809 0 0
1291 4875 0 0 1240 3 3 0 0 0
1292 1223 0 0 0 0 0 0 0 0
1298 12663 0 0 5427 0 0 7236 0 0
1299 3618 26 22 0 0 0 0 0 0
1300 539 0 0 539 214 186 0 0 0
1301 539 0 0 0 0 0 0 0 0
1302 1617 0 0 0 0 0 1617 0 0
1310 32129 52 42 12111 0 0 14472 0 0
fn=runtime.newproc1
1069 58 0 0 58 13 11 0 0 0
1073 29 0 0 0 0 0 0 0 0
fn=runtime.newstack
926 560 69 54 160 0 0 80 0 0
927 160 0 0 80 0 0 80 1 1
929 320 0 0 240 0 0 0 0 0
932 320 37 29 80 0 0 80 1 1
941 160 0 0 80 7 0 0 0 0
962 640 35 29 320 0 0 320 1 1
963 160 0 0 80 0 0 80 0 0
964 160 0 0 80 0 0 80 0 0
965 160 0 0 80 0 0 80 0 0
966 160 0 0 80 0 0 80 0 0
971 259 35 29 80 0 0 80 0 0
985 80 0 0 0 0 0 0 0 0
986 87 12 9 74 0 0 0 0 0
989 183 26 19 61 0 0 61 0 0
990 183 0 0 0 0 0 122 23 10
994 57 6 5 19 0 0 0 0 0
997 19 0 0 19 0 0 0 0 0
1000 38 0 0 0 0 0 19 6 3
1002 38 0 0 0 0 0 0 0 0
1007 38 0 0 19 0 0 0 0 0
1013 19 0 0 0 0 0 0 0 0
1014 39 12 9 26 0 0 0 0 0
1017 26 0 0 13 0 0 0 0 0
1021 26 0 0 13 0 0 0 0 0
1024 1 1 1 0 0 0 1 0 0
1025 3 1 1 0 0 0 2 0 0
1028 27 0 0 14 0 0 0 0 0
1029 2 1 1 0 0 0 2 0 0
1033 24 0 0 0 0 0 24 0 0
1037 18 6 5 18 0 0 0 0 0
1038 12 0 0 0 0 0 6 0 0
1039 12 0 0 6 1 0 0 0 0
1041 1 0 0 1 0 0 0 0 0
1047 24 0 0 0 0 0 18 1 0
1051 30 6 5 12 0 0 18 0 0
1055 30 0 0 6 3 0 18 0 0
1056 24 6 5 6 0 0 12 0 0
fn=runtime.round2
908 3457 16 5 37 0 0 0 0 0
909 441 0 0 0 0 0 0 0 0
911 37 17 4 0 0 0 37 0 0
fn=runtime.scanstack
1092 3564 21 18 1335 446 238 0 0 0
fn=runtime.shrinkstack
1092 3560 42 36 1335 0 0 0 0 0
1099 2670 31 18 890 0 0 445 0 0
1100 1335 0 0 890 0 0 0 0 0
1103 890 0 0 0 0 0 0 0 0
1107 9 0 0 3 0 0 0 0 0
1112 890 0 0 0 0 0 0 0 0
1118 1843 1 1 1377 21 19 0 0 0
1122 890 19 17 445 20 3 0 0 0
1125 1780 0 0 890 445 250 890 17 7
1126 1335 0 0 445 141 111 0 0 0
1129 960 0 0 640 0 0 0 0 0
1132 625 21 18 375 0 0 0 0 0
1133 250 0 0 0 0 0 0 0 0
1136 250 0 0 0 0 0 0 0 0
1137 264 0 0 176 0 0 0 0 0
1145 222 0 0 37 0 0 0 0 0
1146 102 0 0 68 0 0 0 0 0
1153 9 0 0 0 0 0 9 0 0
1154 9 0 0 6 0 0 0 0 0
fn=runtime.stackalloc
324 348 22 11 90 0 0 45 0 0
328 45 0 0 45 0 0 0 0 0
329 135 18 11 90 0 0 0 0 0
332 180 0 0 45 0 0 0 0 0
339 90 0 0 45 1 0 0 0 0
352 90 0 0 0 0 0 0 0 0
355 163 20 11 0 0 0 0 0 0
356 23 0 0 0 0 0 0 0 0
357 23 0 0 0 0 0 0 0 0
360 58 15 10 39 4 3 19 3 0
361 156 0 0 39 0 0 0 0 0
370 214 15 9 39 18 9 19 0 0
371 78 0 0 0 0 0 0 0 0
372 57 0 0 0 0 0 57 3 0
373 76 0 0 57 0 0 0 0 0
375 78 0 0 39 19 1 39 0 0
376 175 18 9 58 0 0 39 0 0
378 39 0 0 0 0 0 0 0 0
381 12 2 2 0 0 0 6 0 0
382 24 0 0 6 0 0 18 0 0
385 18 0 0 0 0 0 12 0 0
386 36 3 2 6 0 0 0 0 0
390 18 0 0 0 0 0 12 0 0
392 24 0 0 6 0 0 6 0 0
394 48 3 2 12 0 0 24 0 0
395 12 0 0 0 0 0 0 0 0
399 18 0 0 6 0 0 6 0 0
401 6 0 0 0 0 0 0 0 0
413 315 19 13 135 0 0 90 0 0
fn=runtime.stackcache_clear
300 4480 70 60 1280 0 0 640 0 0
301 640 0 0 0 0 0 0 0 0
304 16000 34 30 3840 0 0 2560 0 0
305 20480 35 30 0 0 0 10240 0 0
306 15360 0 0 7680 261 149 2560 0 0
307 7857 0 0 59 0 0 0 0 0
308 118 0 0 59 59 35 59 0 0
309 236 0 0 59 0 0 177 0 0
312 2678 0 0 118 0 0 2560 0 0
313 2560 0 0 0 0 0 2560 269 110
314 7680 0 0 2560 0 0 5120 0 0
fn=runtime.stackcacherefill
259 114 32 20 38 0 0 19 0 0
268 209 16 10 19 0 0 57 3 0
269 428 16 8 0 0 0 107 0 0
270 440 0 0 176 0 0 176 0 0
271 176 0 0 88 0 0 88 0 0
273 440 0 0 176 0 0 0 0 0
275 57 0 0 19 0 0 38 0 0
276 309 0 0 57 0 0 126 0 0
277 38 17 10 19 0 0 19 2 1
278 57 0 0 38 0 0 0 0 0
fn=runtime.stackfree
422 60 10 6 20 0 0 10 0 0
423 10 0 0 10 0 0 0 0 0
424 20 9 7 10 0 0 0 0 0
425 50 0 0 10 0 0 0 0 0
426 30 0 0 0 0 0 0 0 0
429 30 0 0 0 0 0 0 0 0
436 20 0 0 10 1 0 0 0 0
447 20 9 7 0 0 0 0 0 0
450 54 0 0 0 0 0 0 0 0
451 12 0 0 0 0 0 0 0 0
452 12 0 0 0 0 0 0 0 0
455 20 0 0 20 0 0 0 0 0
456 40 0 0 10 0 0 0 0 0
459 30 0 0 20 0 0 0 0 0
461 70 10 7 10 3 1 0 0 0
464 20 10 7 10 1 0 10 10 6
465 10 0 0 0 0 0 10 0 0
466 40 0 0 10 0 0 10 0 0
fn=runtime.stackinit
158 1 1 1 0 0 0 0 0 0
159 1 0 0 0 0 0 0 0 0
162 16 0 0 0 0 0 0 0 0
163 8 0 0 0 0 0 0 0 0
165 107 1 1 0 0 0 0 0 0
166 70 0 0 0 0 0 0 0 0
fn=runtime.stacklog2
173 54 4 1 6 0 0 0 0 0
174 12 0 0 0 0 0 0 0 0
175 12 0 0 0 0 0 0 0 0
177 6 0 0 0 0 0 6 0 0
fn=runtime.stackpoolalloc
182 528 15 9 176 0 0 88 0 0
183 704 17 9 88 0 0 88 0 0
184 88 0 0 88 0 0 0 0 0
185 176 0 0 0 0 0 0 0 0
187 40 0 0 5 0 0 25 1 0
188 10 4 1 0 0 0 0 0 0
191 10 0 0 5 0 0 0 0 0
194 15 0 0 5 0 0 0 0 0
198 25 0 0 5 0 0 5 0 0
199 207 3 1 48 0 0 0 0 0
200 48 0 0 0 0 0 0 0 0
201 96 0 0 48 0 0 48 48 48
202 48 0 0 0 0 0 48 0 0
204 20 0 0 5 0 0 15 0 0
206 104 12 7 93 20 15 11 1 0
207 176 15 9 0 0 0 0 0 0
210 176 0 0 88 64 40 88 0 0
211 264 0 0 88 9 6 88 0 0
212 264 0 0 88 0 0 0 0 0
214 55 11 8 11 0 0 33 0 0
216 363 0 0 187 0 0 88 0 0
fn=runtime.stackpoolfree
220 354 9 8 118 0 0 59 0 0
221 59 0 0 0 0 0 0 0 0
222 177 9 8 59 28 13 0 0 0
225 177 0 0 59 11 6 0 0 0
227 121 9 8 11 0 0 33 0 0
229 129 0 0 70 0 0 59 0 0
230 59 0 0 0 0 0 59 0 0
231 177 0 0 59 0 0 59 0 0
232 236 11 8 59 4 0 0 0 0
251 177 9 8 118 0 0 0 0 0
fn=runtime.syncadjustsudogs
784 18 3 3 6 0 0 3 0 0
785 15 0 0 6 0 0 0 0 0
791 27 0 0 6 0 0 3 0 0
792 9 0 0 3 0 0 0 0 0
793 15 3 3 3 0 0 6 0 0
795 3 0 0 3 0 0 0 0 0
799 15 0 0 6 0 0 9 0 0
805 15 0 0 6 0 0 0 0 0
814 36 6 6 12 0 0 3 0 0
815 9 0 0 3 0 0 0 0 0
816 15 0 0 3 0 0 6 0 0
818 3 0 0 3 0 0 0 0 0
821 18 0 0 9 0 0 6 0 0
fl=.//usr/lib/golang/src/runtime/string.go
fn=runtime.atoi
363 18 2 1 6 0 0 0 0 0
364 2 0 0 0 0 0 2 0 0
368 16 0 0 8 0 0 0 0 0
374 56 1 1 0 0 0 0 0 0
375 12 0 0 12 0 0 0 0 0
376 48 0 0 0 0 0 0 0 0
379 36 0 0 0 0 0 0 0 0
383 36 0 0 0 0 0 0 0 0
384 24 1 1 0 0 0 0 0 0
385 24 0 0 0 0 0 0 0 0
392 40 2 2 0 0 0 0 0 0
395 4 0 0 0 0 0 0 0 0
399 12 0 0 0 0 0 0 0 0
400 4 0 0 4 0 0 0 0 0
401 8 0 0 0 0 0 0 0 0
404 20 0 0 0 0 0 8 0 0
fn=runtime.concatstring3
61 6 1 1 2 0 0 1 0 0
62 14 1 1 5 0 0 7 0 0
fn=runtime.concatstrings
23 12 1 1 2 0 0 1 0 0
27 21 1 1 6 0 0 0 0 0
29 6 0 0 0 0 0 0 0 0
32 9 1 1 0 0 0 0 0 0
36 3 0 0 0 0 0 0 0 0
37 3 1 1 0 0 0 0 0 0
39 2 0 0 0 0 0 0 0 0
46 5 1 1 0 0 0 0 0 0
47 3 0 0 0 0 0 0 0 0
49 15 1 1 6 0 0 5 0 0
50 39 0 0 16 0 0 9 0 0
51 43 3 3 0 0 0 21 0 0
52 39 0 0 12 0 0 0 0 0
54 11 0 0 8 0 0 2 0 0
fn=runtime.cpuinit
351 563 2 1 62 0 0 248 0 0
fn=runtime.findnull
417 510 17 10 0 0 0 170 0 0
418 510 0 0 170 0 0 0 0 0
445 850 0 0 0 0 0 0 0 0
447 170 0 0 0 0 0 0 0 0
448 1204 0 0 172 0 0 860 0 0
450 1204 20 10 172 0 0 688 2 0
451 1192 16 10 510 0 0 342 1 0
454 6 0 0 4 0 0 0 0 0
455 6 0 0 2 0 0 0 0 0
fn=runtime.funcline1
474 8 0 0 2 0 0 5 0 0
475 1 0 0 1 0 0 0 0 0
fn=runtime.funcname
474 304 0 0 76 0 0 190 0 0
475 38 0 0 38 0 0 0 0 0
fn=runtime.funcnameFromNameoff
474 8 1 1 2 0 0 5 0 0
475 1 0 0 1 0 0 0 0 0
fn=runtime.goargs
474 24 0 0 6 0 0 15 0 0
475 3 0 0 3 0 0 0 0 0
fn=runtime.gostring
315 378 1 1 126 0 0 63 0 0
316 315 0 0 126 0 0 189 0 0
317 126 0 0 0 0 0 0 0 0
320 504 1 1 252 0 0 252 0 0
321 504 1 1 126 0 0 252 0 0
322 441 0 0 252 0 0 126 0 0
fn=runtime.intstring
233 304 8 8 76 0 0 76 0 0
234 190 0 0 38 0 0 0 0 0
235 114 4 4 0 0 0 38 0 0
236 38 0 0 0 0 0 38 0 0
237 114 0 0 76 0 0 0 0 0
fn=runtime.isAsyncSafePoint
351 55 3 3 11 0 0 20 0 0
fn=runtime.isSystemGoroutine
351 280 0 0 35 0 0 140 0 0
fn=runtime.osArchInit
474 9 1 1 1 0 0 5 0 0
475 1 0 0 1 0 0 0 0 0
fn=runtime.parseRelease
502 7 1 1 2 0 0 1 0 0
504 32 0 0 16 0 0 0 0 0
505 40 1 1 8 0 0 0 0 0
506 1 0 0 0 0 0 1 0 0
511 6 0 0 0 0 0 3 0 0
523 10 1 1 4 0 0 2 0 0
526 10 1 1 4 0 0 2 0 0
529 5 1 1 3 0 0 1 0 0
530 9 0 0 4 0 0 4 0 0
fn=runtime.parseRelease.func1
511 24 1 1 9 0 0 6 0 0
512 45 1 1 16 0 0 2 0 0
513 21 0 0 7 0 0 0 0 0
514 10 0 0 4 0 0 6 0 0
515 32 1 1 10 0 0 4 0 0
516 10 0 0 4 0 0 4 0 0
519 5 1 1 2 0 0 3 0 0
520 5 0 0 2 0 0 2 0 0
521 5 1 1 2 0 0 2 0 0
fn=runtime.rawstring
258 640 4 4 128 0 0 256 0 0
259 384 0 0 128 0 0 256 0 0
261 64 0 0 0 0 0 64 0 0
262 128 0 0 64 0 0 64 0 0
264 192 2 2 0 0 0 192 0 0
266 192 0 0 128 0 0 0 0 0
fn=runtime.rawstringtmp
118 6 2 2 2 0 0 1 0 0
119 4 1 1 1 0 0 0 0 0
123 9 1 1 6 0 0 2 0 0
125 8 0 0 2 0 0 5 0 0
fn=runtime.readgogc
410 9 0 0 2 0 0 3 0 0
fn=runtime.schedinit
410 9 0 0 2 0 0 3 0 0
fn=runtime.slicebytetostring
75 8800256 327 40 2200064 0 0 2200064 0 0
76 2200064 0 0 2200064 0 0 0 0 0
77 2200064 0 0 0 0 0 0 0 0
92 2200064 74 27 0 0 0 0 0 0
93 4 1 0 1 0 0 1 0 0
94 1 1 1 0 0 0 1 0 0
95 3 0 0 2 0 0 0 0 0
99 5500155 0 0 1100031 0 0 0 0 0
102 6600186 72 28 1100031 0 0 4400124 0 0
104 1100031 1 0 0 0 0 1100031 175 7
105 2200062 0 0 1100031 0 0 1100031 0 0
106 6600186 0 0 2200062 0 0 4400124 0 0
107 3300093 0 0 2200062 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/stubs.go
fn=runtime.(*bucket).mp
12 3762 0 0 0 0 0 0 0 0
fn=runtime.(*gcControllerState).enlistWorker
110 149658 363 39 149658 0 0 0 0 0
116 149658 0 0 149658 5679 193 0 0 0
117 224487 0 0 0 0 0 0 0 0
118 523803 0 0 0 0 0 0 0 0
119 149658 0 0 0 0 0 149658 0 0
120 74829 0 0 0 0 0 0 0 0
127 149658 0 0 0 0 0 0 0 0
fn=runtime.(*gcSweepBuf).block
12 610 20 18 0 0 0 0 0 0
fn=runtime.(*gcSweepBuf).push
12 340227 70 1 286 0 0 0 0 0
fn=runtime.(*hmap).newoverflow
12 12165 3 2 2685 0 0 0 0 0
fn=runtime.(*itab).init
12 2 0 0 0 0 0 1 0 0
fn=runtime.(*itabTableType).add
12 110 0 0 0 0 0 0 0 0
fn=runtime.(*itabTableType).find
12 4 0 0 0 0 0 0 0 0
fn=runtime.(*linearAlloc).alloc
305 60 0 0 12 0 0 0 0 0
fn=runtime.(*mheap).grow
305 507 0 0 69 0 0 0 0 0
fn=runtime.(*mheap).sysAlloc
305 30 0 0 6 0 0 6 1 0
fn=runtime.(*pageAlloc).allocToCache
310 774 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).grow
305 345 65 52 69 0 0 69 0 0
310 276 0 0 69 0 0 69 8 0
fn=runtime.(*pageAlloc).sysGrow
12 690 0 0 0 0 0 0 0 0
305 1035 0 0 0 0 0 0 0 0
310 1035 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func1
305 1370 0 0 0 0 0 0 0 0
310 2055 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysGrow.func2
12 680 0 0 0 0 0 0 0 0
305 1360 0 0 340 0 0 0 0 0
310 1020 0 0 0 0 0 0 0 0
fn=runtime.(*pageAlloc).sysInit
305 20 0 0 0 0 0 0 0 0
fn=runtime.(*pallocData).findScavengeCandidate
305 205 34 30 0 0 0 0 0 0
fn=runtime.(*pollCache).alloc
12 18 0 0 0 0 0 0 0 0
fn=runtime.(*semaRoot).queue
110 34 17 16 34 0 0 0 0 0
116 34 0 0 34 2 0 0 0 0
117 51 0 0 0 0 0 0 0 0
118 119 0 0 0 0 0 0 0 0
119 34 17 16 0 0 0 34 0 0
120 17 0 0 0 0 0 0 0 0
fn=runtime.SetFinalizer
12 5 0 0 0 0 0 0 0 0
305 35 3 2 5 0 0 0 0 0
fn=runtime.adjustpointers
12 190 0 0 0 0 0 0 0 0
fn=runtime.advanceEvacuationMark
12 50 0 0 50 0 0 0 0 0
fn=runtime.chanrecv
12 1 0 0 1 0 0 0 0 0
fn=runtime.chansend
12 1 0 0 1 0 0 0 0 0
fn=runtime.cpuinit
12 127 0 0 127 0 0 0 0 0
fn=runtime.doInit
12 42 0 0 0 0 0 0 0 0
fn=runtime.evacuate_faststr
12 4159 4 2 1138 0 0 0 0 0
fn=runtime.fastexprand
110 1462 623 109 1462 0 0 0 0 0
116 1462 0 0 1462 209 36 0 0 0
117 2193 0 0 0 0 0 0 0 0
118 5117 0 0 0 0 0 0 0 0
119 1462 0 0 0 0 0 1462 0 0
120 731 0 0 0 0 0 0 0 0
fn=runtime.findfunc
12 9543 0 0 9543 0 0 0 0 0
fn=runtime.findrunnable
110 2056 0 0 2056 0 0 0 0 0
116 2056 0 0 2056 5 3 0 0 0
117 3084 105 51 0 0 0 0 0 0
118 7196 0 0 0 0 0 0 0 0
119 2056 0 0 0 0 0 2056 0 0
120 1028 0 0 0 0 0 0 0 0
fn=runtime.funcdata
12 31619 0 0 0 0 0 0 0 0
fn=runtime.getStackMap
12 539 0 0 0 0 0 0 0 0
fn=runtime.goargs
12 3 0 0 3 0 0 0 0 0
fn=runtime.goenvs_unix
12 127 2 2 127 0 0 0 0 0
fn=runtime.growslice
12 94 0 0 47 0 0 0 0 0
305 96 0 0 0 0 0 0 0 0
fn=runtime.makeBucketArray
12 16 0 0 0 0 0 0 0 0
305 2 0 0 0 0 0 0 0 0
fn=runtime.makechan
12 1 0 0 0 0 0 0 0 0
fn=runtime.makemap
110 12 6 5 12 0 0 0 0 0
116 12 0 0 12 2 0 0 0 0
117 18 0 0 0 0 0 0 0 0
118 42 0 0 0 0 0 0 0 0
119 12 0 0 0 0 0 12 0 0
120 6 6 5 0 0 0 0 0 0
fn=runtime.makemap_small
110 28 0 0 28 0 0 0 0 0
116 28 0 0 28 6 0 0 0 0
117 42 0 0 0 0 0 0 0 0
118 98 5 2 0 0 0 0 0 0
119 28 0 0 0 0 0 28 0 0
120 14 0 0 0 0 0 0 0 0
fn=runtime.mallocgc
305 106 0 0 0 0 0 0 0 0
329 5868119 2850 117 0 0 0 0 0 0
fn=runtime.mapaccess1_fast64
12 16565822 0 0 2000000 0 0 0 0 0
fn=runtime.mapaccess2_faststr
12 1087 0 0 73 0 0 0 0 0
fn=runtime.mapassign_fast64
12 1433567 18 8 0 0 0 0 0 0
fn=runtime.mapassign_faststr
12 1961 9 8 0 0 0 0 0 0
fn=runtime.mapiterinit
110 122 8 8 122 0 0 0 0 0
116 122 8 8 122 53 53 0 0 0
117 183 0 0 0 0 0 0 0 0
118 427 0 0 0 0 0 0 0 0
119 122 0 0 0 0 0 122 0 0
120 61 0 0 0 0 0 0 0 0
fn=runtime.mapiternext
12 40923436 16 16 999424 0 0 6100000 0 0
fn=runtime.markrootBlock
12 80 0 0 40 0 0 0 0 0
fn=runtime.name.name
12 2 0 0 0 0 0 0 0 0
fn=runtime.pcdatavalue
12 11276 0 0 0 0 0 0 0 0
fn=runtime.pcvalue
110 29380 0 0 29380 0 0 0 0 0
116 29380 662 108 29380 0 0 0 0 0
117 44070 0 0 0 0 0 0 0 0
118 102830 0 0 0 0 0 0 0 0
119 29380 0 0 0 0 0 29380 0 0
120 14690 732 114 0 0 0 0 0 0
fn=runtime.persistentalloc1
305 2902 1 1 66 0 0 556 0 0
fn=runtime.stkbucket
12 715 0 0 0 0 0 0 0 0
fn=runtime.sysHugePage
305 119684 0 0 0 0 0 0 0 0
310 29921 0 0 0 0 0 0 0 0
fn=runtime.sysUnused
310 120 15 11 0 0 0 0 0 0
fn=runtime.sysargs
12 1 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/symtab.go
fn=runtime.(*Frames).Next
73 14 3 3 3 0 0 3 0 0
74 16 0 0 6 0 0 2 0 0
78 10 1 1 6 0 0 0 0 0
81 2 1 1 1 0 0 1 0 0
82 11 0 0 1 0 0 3 0 0
83 6 0 0 2 0 0 4 0 0
84 1 0 0 0 0 0 0 0 0
94 1 0 0 0 0 0 1 0 0
95 3 0 0 1 0 0 0 0 0
100 2 1 1 1 0 0 0 0 0
102 7 1 1 2 0 0 5 0 0
103 8 0 0 3 0 0 4 0 0
105 1 0 0 0 0 0 0 0 0
114 20 1 1 6 0 0 3 0 0
115 1 0 0 0 0 0 1 0 0
116 2 0 0 1 0 0 1 0 0
117 5 0 0 2 0 0 2 0 0
118 1 1 1 0 0 0 1 0 0
119 10 1 1 3 0 0 4 0 0
127 2 1 1 0 0 0 0 0 0
129 2 0 0 0 0 0 0 0 0
130 5 1 1 1 0 0 2 0 0
131 6 0 0 1 0 0 3 0 0
140 5 1 1 2 0 0 1 0 0
141 2 1 1 1 0 0 0 0 0
145 10 1 1 5 0 0 5 0 0
146 4 0 0 0 0 0 3 0 0
148 4 0 0 2 0 0 1 0 0
591 3 1 1 1 0 0 0 0 0
629 2 0 0 0 0 0 0 0 0
fn=runtime.adjustpointers
629 190 0 0 0 0 0 0 0 0
fn=runtime.findfunc
636 57258 754 124 19086 0 0 9543 3 0
637 38172 0 0 19086 0 0 19086 219 33
638 19086 0 0 0 0 0 0 0 0
643 38172 774 126 19086 0 0 0 0 0
644 19086 0 0 0 0 0 0 0 0
645 19086 0 0 0 0 0 0 0 0
647 19086 0 0 0 0 0 0 0 0
648 47715 0 0 19086 7010 1365 0 0 0
654 38172 698 128 19086 745 124 0 0 0
657 76344 0 0 9543 6585 1400 0 0 0
669 173646 179 73 19294 3368 711 0 0 0
673 47715 613 120 9543 0 0 0 0 0
674 19086 0 0 0 0 0 0 0 0
681 95430 0 0 38172 0 0 19086 0 0
fn=runtime.findmoduledatap
615 47715 748 121 9543 0 0 0 0 0
616 38172 0 0 19086 745 124 0 0 0
617 19086 0 0 9543 0 0 9543 0 0
fn=runtime.funcMaxSPDelta
852 12 2 2 4 0 0 2 0 0
854 32 1 1 12 2 2 0 0 0
855 4 0 0 2 0 0 2 0 0
856 2 0 0 0 0 0 2 0 0
858 2 0 0 0 0 0 0 0 0
860 228 1 1 89 0 0 91 2 2
861 13 0 0 0 0 0 0 0 0
862 45 1 1 6 0 0 15 0 0
864 33 0 0 22 0 0 0 0 0
fn=runtime.funcdata
888 69720 617 123 23240 0 0 11620 0 0
889 77905 589 126 34860 0 0 0 0 0
890 13740 0 0 6870 0 0 3435 0 0
892 8185 0 0 8185 0 0 0 0 0
893 17491 0 0 0 0 0 0 0 0
894 14128 0 0 0 0 0 0 0 0
897 7064 0 0 0 0 0 0 0 0
899 42046 0 0 24555 3069 638 8185 0 0
fn=runtime.funcline1
629 1 0 0 0 0 0 0 0 0
824 6 1 1 2 0 0 1 0 0
826 2 0 0 1 0 0 0 0 0
829 13 2 2 5 0 0 8 0 0
830 14 1 1 6 0 0 8 0 0
831 10 1 1 4 0 0 0 0 0
835 8 1 1 3 1 1 1 0 0
836 7 1 1 3 0 0 3 0 0
fn=runtime.funcname
629 38 0 0 0 0 0 0 0 0
795 152 16 10 38 5 3 0 0 0
798 266 16 10 114 0 0 0 0 0
801 228 16 10 76 0 0 38 0 0
802 304 0 0 114 0 0 114 0 0
fn=runtime.funcnameFromNameoff
629 1 0 0 0 0 0 0 0 0
806 1 0 0 0 0 0 0 0 0
809 8 0 0 4 0 0 0 0 0
812 6 1 1 2 0 0 1 0 0
813 7 0 0 3 0 0 3 0 0
fn=runtime.funcspdelta
843 54330 890 216 18110 0 0 9055 0 0
844 117715 406 110 54330 0 0 63385 730 106
845 18110 0 0 0 0 0 0 0 0
848 36220 0 0 18110 0 0 9055 0 0
fn=runtime.gcMarkRootPrepare
402 40 0 0 40 0 0 0 0 0
403 80 20 18 0 0 0 0 0 0
406 80 0 0 80 20 17 0 0 0
fn=runtime.gentraceback
629 27166 0 0 9055 0 0 0 0 0
fn=runtime.getStackMap
956 8024 0 0 0 0 0 0 0 0
fn=runtime.isAsyncSafePoint
629 2 0 0 0 0 0 0 0 0
fn=runtime.isSystemGoroutine
629 37 0 0 0 0 0 0 0 0
fn=runtime.itabsinit
402 1 0 0 1 0 0 0 0 0
403 2 0 0 0 0 0 0 0 0
406 2 0 0 2 0 0 0 0 0
fn=runtime.markroot
402 40 0 0 40 24 2 0 0 0
403 80 0 0 0 0 0 0 0 0
406 80 0 0 80 40 4 0 0 0
fn=runtime.moduledataverify
489 7 1 1 2 0 0 1 0 0
490 11 1 1 4 1 1 1 0 0
491 2 0 0 0 0 0 2 0 0
fn=runtime.moduledataverify1
497 7 1 1 2 0 0 1 0 0
501 3 0 0 3 1 1 0 0 0
503 12 1 1 5 1 1 1 0 0
509 4 0 0 2 0 0 0 0 0
510 8001 0 0 0 0 0 0 0 0
512 29326 1 1 5332 667 667 0 0 0
530 6 1 1 2 2 1 0 0 0
531 3 1 1 2 0 0 0 0 0
535 7 1 1 4 2 1 0 0 0
fn=runtime.modulesinit
427 6 1 1 2 0 0 1 0 0
428 6 1 1 1 0 0 3 0 0
429 8 0 0 1 1 0 1 0 0
430 2 0 0 1 1 1 0 0 0
433 33 5 4 11 1 1 10 2 1
434 4 0 0 2 0 0 0 0 0
435 13 1 1 7 1 1 5 0 0
436 14 1 1 7 1 1 5 0 0
449 7 0 0 3 0 0 0 0 0
450 2 0 0 1 0 0 0 0 0
451 3 1 1 1 0 0 1 0 0
452 9 0 0 3 0 0 1 0 0
457 4 0 0 0 0 0 3 0 0
458 3 1 1 2 0 0 0 0 0
fn=runtime.pcdatavalue
871 16914 0 0 5638 23 21 0 0 0
874 36582 933 214 12194 0 0 6097 9 8
875 36582 0 0 18291 2 2 0 0 0
876 1836 0 0 918 0 0 459 0 0
878 84570 620 132 33828 0 0 45104 32 24
fn=runtime.pcvalue
629 29390 211 58 14695 0 0 0 0 0
701 117520 182 74 14690 0 0 0 0 0
704 102865 932 192 29390 0 0 14695 4 2
705 44085 0 0 14695 0 0 0 0 0
715 73480 0 0 29390 0 0 0 0 0
716 14690 0 0 0 0 0 0 0 0
717 396630 0 0 0 0 0 0 0 0
723 705120 0 0 0 0 0 0 0 0
724 353442 0 0 117814 0 0 0 0 0
730 14695 0 0 0 0 0 0 0 0
738 220425 600 134 58780 0 0 14695 516 79
739 29390 0 0 14695 1276 304 14695 241 57
740 14695 0 0 0 0 0 14695 5 5
741 14695 0 0 0 0 0 0 0 0
743 2107689 1246 237 822106 0 0 836801 1495 269
744 119543 0 0 0 0 0 0 0 0
747 358634 3 3 239091 0 0 0 0 0
754 14695 0 0 0 0 0 0 0 0
755 14690 0 0 0 0 0 0 0 0
756 29380 0 0 0 0 0 0 0 0
757 14690 0 0 0 0 0 0 0 0
758 102830 0 0 44070 0 0 44070 0 0
759 58760 0 0 14690 0 0 44070 0 0
762 14690 0 0 14690 0 0 0 0 0
766 73475 704 118 44085 0 0 14695 0 0
fn=runtime.readvarint
928 116391 708 120 0 0 0 38797 217 38
930 232782 0 0 77594 0 0 0 0 0
931 271579 719 118 77594 5 5 0 0 0
932 77594 0 0 0 0 0 0 0 0
933 504361 0 0 0 0 0 0 0 0
934 155188 0 0 0 0 0 0 0 0
937 38797 0 0 0 0 0 0 0 0
939 193985 0 0 77594 0 0 77594 0 0
fn=runtime.scanframeworker
629 1696 0 0 0 0 0 0 0 0
fn=runtime.shrinkstack
629 445 0 0 0 0 0 0 0 0
fn=runtime.step
903 728616 1357 224 244752 0 0 119556 1 1
906 597780 0 0 358668 12646 3087 0 0 0
907 244752 0 0 0 0 0 0 0 0
908 14 1 1 4 0 0 6 0 0
911 343618 0 0 0 0 0 0 0 0
912 120352 686 119 45132 0 0 60176 501 74
914 836878 743 120 239108 0 0 0 0 0
915 1296887 0 0 149642 0 0 71259 14 13
917 358662 0 0 119554 2116 498 0 0 0
919 334909 746 117 0 0 0 0 0 0
920 166271 0 0 47506 0 0 95012 35 27
922 1147245 21 7 71259 0 0 0 0 0
923 239108 0 0 239108 0 0 0 0 0
924 836878 684 130 239108 0 0 478216 0 0
fn=testing.callerName
66 11 1 1 4 0 0 5 2 0
67 6 1 1 1 0 0 3 0 0
fl=.//usr/lib/golang/src/runtime/sys_linux_amd64.s
fn=runtime.clone
573 5 2 1 5 0 0 0 0 0
574 5 0 0 5 0 0 0 0 0
575 5 0 0 0 0 0 0 0 0
576 5 0 0 0 0 0 0 0 0
580 5 0 0 5 0 0 0 0 0
581 5 0 0 5 0 0 0 0 0
582 5 0 0 5 0 0 0 0 0
584 5 0 0 0 0 0 0 0 0
585 5 0 0 0 0 0 0 0 0
588 10 5 2 0 0 0 0 0 0
589 10 0 0 0 0 0 0 0 0
590 5 0 0 0 0 0 5 0 0
591 5 0 0 5 0 0 0 0 0
594 5 0 0 0 0 0 0 0 0
597 5 0 0 0 0 0 0 0 0
598 5 0 0 0 0 0 0 0 0
599 5 0 0 0 0 0 0 0 0
600 5 0 0 0 0 0 0 0 0
603 5 0 0 0 0 0 0 0 0
604 5 0 0 0 0 0 0 0 0
605 5 0 0 0 0 0 5 2 0
608 5 0 0 0 0 0 0 0 0
609 5 0 0 0 0 0 5 5 5
613 5 0 0 0 0 0 5 2 0
614 5 0 0 0 0 0 5 3 0
615 5 0 0 0 0 0 5 0 0
619 5 3 1 0 0 0 5 0 0
fn=runtime.closefd
1 1 0 0 1 0 0 0 0 0
87 1 0 0 1 0 0 0 0 0
88 1 0 0 0 0 0 0 0 0
89 1 0 0 0 0 0 0 0 0
90 1 0 0 0 0 0 0 0 0
91 1 0 0 0 0 0 0 0 0
93 1 0 0 0 0 0 1 0 0
fn=runtime.epollcreate1
1 1 0 0 1 0 0 0 0 0
678 1 1 0 1 0 0 0 0 0
679 1 0 0 0 0 0 0 0 0
680 1 0 0 0 0 0 0 0 0
681 1 0 0 0 0 0 1 0 0
fn=runtime.epollctl
1 5 0 0 5 0 0 0 0 0
686 5 1 1 5 0 0 0 0 0
687 5 0 0 5 0 0 0 0 0
688 5 0 0 5 0 0 0 0 0
689 5 2 2 5 0 0 0 0 0
690 5 0 0 0 0 0 0 0 0
691 5 0 0 0 0 0 0 0 0
692 5 0 0 0 0 0 5 0 0
fn=runtime.epollwait
1 186 0 0 186 7 7 0 0 0
698 186 124 45 186 0 0 0 0 0
699 186 0 0 186 0 0 0 0 0
700 186 0 0 186 0 0 0 0 0
701 186 0 0 186 0 0 0 0 0
702 186 0 0 0 0 0 0 0 0
703 186 0 0 0 0 0 0 0 0
704 190 0 0 0 0 0 0 0 0
705 186 16 9 0 0 0 186 23 13
fn=runtime.exit
55 1 1 1 1 0 0 0 0 0
56 1 0 0 0 0 0 0 0 0
57 1 0 0 0 0 0 0 0 0
fn=runtime.futex
1 831 0 0 831 234 82 0 0 0
560 835 184 44 835 0 0 0 0 0
561 835 0 0 835 0 0 0 0 0
562 835 0 0 835 0 0 0 0 0
563 835 0 0 835 0 0 0 0 0
564 835 0 0 835 0 0 0 0 0
565 835 0 0 835 0 0 0 0 0
566 835 95 26 0 0 0 0 0 0
567 855 0 0 0 0 0 0 0 0
568 831 69 28 0 0 0 831 321 104
fn=runtime.getpid
1 49 0 0 49 0 0 0 0 0
177 49 29 23 0 0 0 0 0 0
178 49 0 0 0 0 0 0 0 0
179 49 0 0 0 0 0 49 0 0
fn=runtime.gettid
1 6 0 0 6 0 0 0 0 0
149 6 4 1 0 0 0 0 0 0
150 6 0 0 0 0 0 0 0 0
151 6 0 0 0 0 0 6 0 0
fn=runtime.madvise
1 50 0 0 50 4 2 0 0 0
549 50 9 1 50 0 0 0 0 0
550 50 0 0 50 0 0 0 0 0
551 50 0 0 50 0 0 0 0 0
552 50 0 0 0 0 0 0 0 0
553 50 0 0 0 0 0 0 0 0
554 50 0 0 0 0 0 50 3 2
fn=runtime.nanotime1
1 190962 0 0 127308 0 0 0 0 0
268 190962 52 31 0 0 0 63654 33 22
271 63654 0 0 0 0 0 0 0 0
274 63654 0 0 63654 249 61 0 0 0
275 63654 0 0 63654 226 67 0 0 0
278 63654 0 0 0 0 0 0 0 0
279 63654 0 0 63654 0 0 0 0 0
280 63654 0 0 0 0 0 63654 1961 211
281 63654 0 0 0 0 0 63654 0 0
283 63654 0 0 63654 1044 100 0 0 0
284 63654 0 0 0 0 0 0 0 0
286 227 30 19 227 25 19 0 0 0
287 227 0 0 227 8 6 0 0 0
290 63654 496 46 0 0 0 0 0 0
291 63654 0 0 0 0 0 0 0 0
293 63654 0 0 63654 1960 67 0 0 0
294 63654 0 0 0 0 0 0 0 0
295 63654 0 0 0 0 0 0 0 0
310 63654 550 64 0 0 0 0 0 0
311 63654 0 0 0 0 0 0 0 0
312 63654 0 0 63654 1762 80 0 0 0
313 63654 0 0 0 0 0 63654 170 59
314 63654 0 0 63654 26 20 0 0 0
315 63654 0 0 63654 0 0 0 0 0
316 63654 0 0 0 0 0 0 0 0
317 63654 0 0 0 0 0 63654 0 0
318 63654 275 46 0 0 0 0 0 0
321 63654 0 0 0 0 0 0 0 0
322 63654 0 0 0 0 0 0 0 0
323 63654 0 0 0 0 0 63654 1 1
fn=runtime.open
1 1 0 0 1 0 0 0 0 0
74 1 1 1 0 0 0 0 0 0
75 1 0 0 1 0 0 0 0 0
76 1 0 0 1 0 0 0 0 0
77 1 1 1 1 0 0 0 0 0
78 1 0 0 0 0 0 0 0 0
79 1 0 0 0 0 0 0 0 0
80 1 0 0 0 0 0 0 0 0
81 1 0 0 0 0 0 0 0 0
83 1 0 0 0 0 0 1 0 0
fn=runtime.osyield
1 45 0 0 45 2 0 0 0 0
655 45 7 7 0 0 0 0 0 0
656 46 0 0 0 0 0 0 0 0
fn=runtime.pipe2
1 1 0 0 1 0 0 0 0 0
124 1 1 1 0 0 0 0 0 0
125 1 0 0 1 0 0 0 0 0
126 1 0 0 0 0 0 0 0 0
127 1 0 0 0 0 0 0 0 0
128 1 0 0 0 0 0 1 0 0
fn=runtime.read
1 3 0 0 3 0 0 0 0 0
106 3 2 2 3 0 0 0 0 0
107 3 0 0 3 0 0 0 0 0
108 3 0 0 3 0 0 0 0 0
109 3 0 0 0 0 0 0 0 0
110 3 0 0 0 0 0 0 0 0
111 3 0 0 0 0 0 3 0 0
fn=runtime.rt_sigaction
1 114 0 0 114 0 0 0 0 0
339 114 0 0 114 0 0 0 0 0
340 114 0 0 114 0 0 0 0 0
341 114 0 0 114 0 0 0 0 0
342 114 0 0 114 0 0 0 0 0
343 114 0 0 0 0 0 0 0 0
344 114 0 0 0 0 0 0 0 0
345 114 0 0 0 0 0 114 0 0
fn=runtime.rtsigprocmask
1 17 0 0 17 0 0 0 0 0
327 17 1 0 17 0 0 0 0 0
328 17 0 0 17 0 0 0 0 0
329 17 0 0 17 0 0 0 0 0
330 17 0 0 17 0 0 0 0 0
331 17 0 0 0 0 0 0 0 0
332 17 0 0 0 0 0 0 0 0
333 17 0 0 0 0 0 0 0 0
334 17 3 2 0 0 0 0 0 0
fn=runtime.sched_getaffinity
1 1 0 0 1 0 0 0 0 0
660 1 0 0 1 0 0 0 0 0
661 1 0 0 1 0 0 0 0 0
662 1 0 0 1 0 0 0 0 0
663 1 1 1 0 0 0 0 0 0
664 1 0 0 0 0 0 0 0 0
665 1 0 0 0 0 0 1 0 0
fn=runtime.settls
1 18 4 2 12 0 0 0 0 0
638 18 6 2 0 0 0 6 0 0
643 6 0 0 0 0 0 0 0 0
645 6 0 0 0 0 0 0 0 0
646 6 0 0 0 0 0 0 0 0
647 6 0 0 0 0 0 0 0 0
648 6 0 0 0 0 0 0 0 0
649 6 0 0 0 0 0 0 0 0
650 6 0 0 0 0 0 0 0 0
fn=runtime.sigaltstack
1 12 1 0 12 0 0 0 0 0
628 12 1 1 12 0 0 0 0 0
629 12 0 0 12 0 0 0 0 0
630 12 0 0 0 0 0 0 0 0
631 12 0 0 0 0 0 0 0 0
632 12 0 0 0 0 0 0 0 0
633 12 0 0 0 0 0 0 0 0
fn=runtime.sigreturn
481 49 38 22 0 0 0 0 0 0
482 49 0 0 0 0 0 0 0 0
fn=runtime.sigtramp
1 147 0 0 98 0 0 0 0 0
374 147 28 22 0 0 0 49 38 31
376 49 0 0 0 0 0 49 0 0
377 49 0 0 0 0 0 49 0 0
378 49 0 0 0 0 0 49 0 0
379 49 36 25 0 0 0 49 0 0
380 49 0 0 0 0 0 49 0 0
381 49 0 0 0 0 0 49 0 0
385 49 0 0 0 0 0 49 37 29
386 49 0 0 0 0 0 49 0 0
387 49 0 0 0 0 0 49 0 0
388 49 0 0 0 0 0 0 0 0
389 49 0 0 0 0 0 49 0 0
391 49 0 0 49 0 0 0 0 0
392 49 0 0 49 0 0 0 0 0
393 49 0 0 49 0 0 0 0 0
394 49 0 0 49 0 0 0 0 0
395 49 0 0 0 0 0 0 0 0
396 49 38 24 49 0 0 0 0 0
fn=runtime.sysMmap
1 111 0 0 111 0 0 0 0 0
486 111 71 48 111 0 0 0 0 0
487 111 0 0 111 0 0 0 0 0
488 111 0 0 111 0 0 0 0 0
489 111 0 0 111 0 0 0 0 0
490 111 0 0 111 0 0 0 0 0
491 111 0 0 111 0 0 0 0 0
493 111 68 50 0 0 0 0 0 0
494 111 0 0 0 0 0 0 0 0
495 111 0 0 0 0 0 0 0 0
496 111 0 0 0 0 0 0 0 0
503 111 0 0 0 0 0 111 1 0
504 111 0 0 0 0 0 111 8 5
fn=runtime.sysMunmap
1 5 0 0 5 0 0 0 0 0
526 5 5 5 5 0 0 0 0 0
527 5 0 0 5 0 0 0 0 0
528 5 0 0 0 0 0 0 0 0
529 5 0 0 0 0 0 0 0 0
530 5 0 0 0 0 0 0 0 0
531 5 0 0 0 0 0 0 0 0
fn=runtime.tgkill
1 49 1 0 49 7 1 0 0 0
183 49 32 24 49 0 0 0 0 0
184 49 0 0 49 0 0 0 0 0
185 49 0 0 49 0 0 0 0 0
186 49 0 0 0 0 0 0 0 0
187 51 0 0 0 0 0 0 0 0
fn=runtime.uname
1 1 0 0 1 0 0 0 0 0
775 1 1 1 1 0 0 0 0 0
776 1 0 0 0 0 0 0 0 0
777 1 0 0 0 0 0 0 0 0
778 1 0 0 0 0 0 1 0 0
fn=runtime.usleep
1 951 101 48 634 202 35 0 0 0
131 954 48 29 0 0 0 318 0 0
132 318 0 0 0 0 0 0 0 0
133 318 0 0 318 0 0 0 0 0
134 318 0 0 0 0 0 0 0 0
135 318 0 0 0 0 0 0 0 0
136 318 0 0 0 0 0 318 0 0
137 318 0 0 0 0 0 0 0 0
138 318 0 0 0 0 0 0 0 0
139 318 0 0 0 0 0 318 0 0
142 318 0 0 0 0 0 0 0 0
143 318 0 0 0 0 0 0 0 0
144 318 0 0 0 0 0 0 0 0
145 318 0 0 0 0 0 0 0 0
fn=runtime.walltime1
1 96 0 0 64 0 0 0 0 0
209 96 32 27 0 0 0 32 0 0
217 32 0 0 0 0 0 0 0 0
220 32 0 0 32 0 0 0 0 0
221 32 0 0 32 0 0 0 0 0
224 32 32 27 0 0 0 0 0 0
225 32 0 0 32 0 0 0 0 0
226 32 0 0 0 0 0 32 2 1
227 32 0 0 0 0 0 32 0 0
229 32 0 0 32 0 0 0 0 0
230 32 0 0 0 0 0 0 0 0
232 32 0 0 32 0 0 0 0 0
233 32 0 0 32 0 0 0 0 0
236 32 0 0 0 0 0 0 0 0
237 32 0 0 0 0 0 0 0 0
239 32 0 0 32 2 0 0 0 0
240 32 0 0 0 0 0 0 0 0
241 32 0 0 0 0 0 0 0 0
253 32 28 24 0 0 0 0 0 0
254 32 0 0 0 0 0 0 0 0
255 32 29 25 32 2 0 0 0 0
256 32 0 0 0 0 0 32 0 0
257 32 0 0 32 0 0 0 0 0
258 32 0 0 32 0 0 0 0 0
259 32 0 0 0 0 0 0 0 0
260 32 0 0 0 0 0 0 0 0
261 32 0 0 0 0 0 32 0 0
262 32 0 0 0 0 0 32 0 0
263 32 0 0 0 0 0 32 0 0
fn=runtime.write1
1 2 0 0 2 0 0 0 0 0
97 2 2 2 2 0 0 0 0 0
98 2 0 0 2 0 0 0 0 0
99 2 0 0 2 0 0 0 0 0
100 2 0 0 0 0 0 0 0 0
101 2 0 0 0 0 0 0 0 0
102 2 0 0 0 0 0 2 0 0
fl=.//usr/lib/golang/src/runtime/sys_x86.go
fn=runtime.newproc1
17 29 0 0 29 0 0 0 0 0
22 29 0 0 0 0 0 0 0 0
23 87 0 0 29 0 0 29 3 2
24 29 0 0 0 0 0 29 0 0
25 29 0 0 0 0 0 29 0 0
26 87 0 0 29 0 0 29 0 0
fl=.//usr/lib/golang/src/runtime/time.go
fn=runtime.adjusttimers
615 114 15 12 38 0 0 19 0 0
616 76 0 0 38 0 0 0 0 0
619 57 14 12 19 0 0 0 0 0
623 57 26 23 38 0 0 0 0 0
fn=runtime.deltimer
285 198 52 50 66 0 0 33 0 0
286 33 0 0 33 0 0 0 0 0
287 165 0 0 33 20 10 0 0 0
291 6 6 6 0 0 0 0 0 0
292 36 0 0 6 0 0 0 0 0
296 6 6 6 6 6 0 0 0 0
297 36 0 0 6 0 0 0 0 0
300 6 0 0 0 0 0 0 0 0
301 18 0 0 18 11 0 0 0 0
303 24 0 0 12 0 0 6 0 0
333 66 0 0 0 0 0 0 0 0
336 108 24 23 54 0 0 27 0 0
fn=runtime.doaddtimer
261 120 34 32 40 0 0 20 0 0
264 40 0 0 20 0 0 0 0 0
268 60 0 0 40 0 0 0 0 0
271 20 0 0 0 0 0 0 0 0
272 101 20 19 60 1 0 3 0 0
273 248 12 12 38 0 0 64 14 14
274 163 16 15 63 0 0 100 8 7
275 160 6 6 100 0 0 0 0 0
276 40 0 0 60 3 0 0 0 0
278 40 0 0 40 0 0 0 0 0
279 60 0 0 40 0 0 0 0 0
fn=runtime.dodeltimer0
379 114 31 24 38 0 0 19 1 1
380 190 0 0 95 0 0 0 0 0
383 19 16 12 0 0 0 19 0 0
385 63 6 6 38 0 0 0 0 0
386 57 0 0 0 0 0 0 0 0
389 183 15 12 57 12 3 19 5 5
390 82 6 6 19 0 0 19 0 0
391 19 15 12 0 0 0 0 0 0
394 19 0 0 0 0 0 0 0 0
395 38 0 0 38 0 0 0 0 0
396 57 0 0 38 0 0 0 0 0
948 57 0 0 38 0 0 0 0 0
949 38 0 0 38 0 0 0 0 0
fn=runtime.handoffp
702 216 0 0 74 41 1 0 0 0
705 71 0 0 71 52 1 0 0 0
fn=runtime.modtimer
400 120 34 32 40 0 0 20 0 0
401 60 0 0 40 0 0 0 0 0
410 100 6 6 20 9 9 0 0 0
419 28 0 0 0 0 0 0 0 0
422 20 0 0 0 0 0 0 0 0
426 120 0 0 20 0 0 0 0 0
440 12 0 0 0 0 0 0 0 0
453 40 0 0 20 0 0 20 0 0
454 94 24 23 40 0 0 20 7 7
455 134 0 0 60 0 0 40 0 0
456 40 0 0 20 0 0 20 0 0
458 68 0 0 0 0 0 0 0 0
459 20 12 12 0 0 0 20 0 0
460 60 0 0 60 0 0 0 0 0
461 100 0 0 20 0 0 60 10 9
462 100 17 16 40 0 0 60 0 0
463 60 0 0 20 0 0 40 0 0
464 140 0 0 40 0 0 0 0 0
467 20 0 0 0 0 0 0 0 0
468 80 0 0 20 0 0 40 0 0
475 60 0 0 0 0 0 20 0 0
500 20 0 0 0 0 0 20 0 0
503 60 15 15 40 0 0 0 0 0
fn=runtime.runOneTimer
785 78 20 20 26 0 0 13 0 0
794 39 0 0 26 0 0 13 0 0
795 52 0 0 26 0 0 26 0 0
796 26 0 0 13 0 0 13 0 0
798 39 10 10 13 0 0 0 0 0
809 39 10 10 13 0 0 26 2 2
810 91 0 0 26 0 0 0 0 0
824 91 20 20 13 0 0 39 0 0
826 117 9 9 65 10 10 52 0 0
828 39 0 0 13 0 0 26 0 0
830 39 0 0 26 0 0 0 0 0
fn=runtime.runtimer
716 114 31 24 38 0 0 19 0 0
717 38 0 0 38 0 0 0 0 0
718 133 0 0 57 15 4 19 0 0
719 57 0 0 19 15 5 0 0 0
722 95 15 12 19 15 9 0 0 0
724 39 0 0 13 0 0 0 0 0
729 78 0 0 13 0 0 0 0 0
734 52 0 0 0 0 0 52 0 0
735 52 9 9 26 0 0 13 0 0
738 36 0 0 6 0 0 0 0 0
741 12 0 0 0 0 0 12 0 0
742 42 6 6 12 0 0 0 0 0
745 18 0 0 18 0 0 0 0 0
746 12 0 0 6 0 0 0 0 0
747 24 0 0 12 0 0 6 0 0
768 26 0 0 0 0 0 0 0 0
771 12 12 9 0 0 0 0 0 0
fn=runtime.scavengeSleep
223 20 0 0 0 0 0 0 0 0
514 260 3 3 100 12 7 160 0 0
fn=runtime.siftupTimer
1027 120 23 22 40 0 0 20 0 0
1028 80 0 0 40 0 0 0 0 0
1031 80 0 0 60 0 0 0 0 0
1033 60 16 15 0 0 0 0 0 0
1041 120 15 14 20 0 0 0 0 0
1042 60 0 0 40 0 0 0 0 0
fn=runtime.timeSleepUntil
958 1908 113 48 636 0 0 318 0 0
963 954 0 0 0 0 0 636 194 34
964 23532 150 52 5724 386 24 636 0 0
965 10176 118 52 0 0 0 0 0 0
971 5088 0 0 5088 3762 444 0 0 0
972 10176 0 0 0 0 0 0 0 0
973 5088 0 0 5088 4406 349 0 0 0
974 20352 0 0 0 0 0 0 0 0
978 5046 0 0 0 0 0 0 0 0
989 15540 0 0 0 0 0 5406 0 0
1014 954 201 54 0 0 0 636 0 0
1016 17766 122 43 1272 0 0 6042 0 0
fn=runtime.wakeScavenger
214 66 0 0 0 0 0 66 0 0
fl=.//usr/lib/golang/src/runtime/time_nofake.go
fn=runtime.(*gcControllerState).endCycle
19 20 0 0 10 0 0 10 3 2
fn=runtime.bgscavenge.func2
19 100 0 0 40 0 0 60 0 0
fn=runtime.checkTimers
19 121492 0 0 60746 0 0 60746 11 2
fn=runtime.extendRandom
19 28 0 0 14 0 0 14 0 0
fn=runtime.findrunnable
19 26 0 0 13 0 0 13 0 0
fn=runtime.gcAssistAlloc1
19 4735 0 0 1894 0 0 2841 0 0
fn=runtime.gcBgMarkWorker
19 130 5 2 52 0 0 78 0 0
fn=runtime.gcMarkDone
19 40 0 0 20 0 0 20 0 0
fn=runtime.gcMarkTermination
19 120 20 18 40 0 0 80 44 32
fn=runtime.gcStart
19 40 0 0 20 0 0 20 0 0
fn=runtime.main
19 4 0 0 2 0 0 2 0 0
fn=runtime.nanotime
18 36 11 9 0 0 0 12 0 0
19 12 0 0 0 0 0 12 0 0
fn=runtime.netpollBreak
30 12 0 0 2 0 0 8 0 0
fn=runtime.notetsleep_internal
19 302 0 0 151 0 0 151 0 0
fn=runtime.procresize
19 122 0 0 61 0 0 61 2 0
fn=runtime.scavengeSleep
19 98 31 30 39 0 0 59 0 0
fn=runtime.schedinit
19 2 0 0 1 0 0 1 0 0
fn=runtime.startTheWorldWithSema
19 240 0 0 60 0 0 120 0 0
fn=runtime.suspendG
19 165 0 0 35 0 0 129 0 0
fn=runtime.sysmon
19 954 0 0 318 0 0 636 211 33
fn=time.now
19 64 0 0 32 0 0 32 0 0
23 160 0 0 64 0 0 96 0 0
fl=.//usr/lib/golang/src/runtime/timestub.go
fn=time.now
15 192 32 28 64 0 0 32 0 0
16 32 0 0 0 0 0 0 0 0
17 256 28 26 128 0 0 96 0 0
fl=.//usr/lib/golang/src/runtime/trace.go
fn=runtime.procresize
1066 1 0 0 0 0 0 0 0 0
fn=runtime.startTheWorldWithSema
987 120 0 0 0 0 0 100 0 0
fn=runtime.traceAcquireBuffer
596 120 20 19 40 0 0 20 0 0
597 20 0 0 0 0 0 0 0 0
598 60 20 19 20 0 0 0 0 0
599 160 0 0 60 20 0 60 0 0
fn=runtime.traceEvent
500 120 40 38 40 0 0 20 0 0
501 80 0 0 60 0 0 20 0 0
513 80 20 19 40 20 6 0 0 0
514 40 0 0 0 0 0 40 0 0
515 60 20 19 40 0 0 0 0 0
fn=runtime.traceReleaseBuffer
606 120 40 38 40 0 0 20 0 0
607 60 0 0 20 0 0 0 0 0
610 40 0 0 40 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/traceback.go
fn=runtime.callers
798 4320 636 102 1440 0 0 720 0 0
801 720 0 0 720 0 0 0 0 0
802 720 0 0 0 0 0 720 360 66
803 18720 1362 208 3600 0 0 11520 329 65
806 3600 621 101 2160 0 0 720 0 0
fn=runtime.callers.func1
803 8640 673 107 5040 0 0 1440 95 0
804 12960 1073 195 2880 0 0 7920 222 5
805 2160 0 0 1440 0 0 0 0 0
fn=runtime.gentraceback
98 8232 1207 219 2352 0 0 1176 0 0
99 6144 594 97 1896 0 0 0 0 0
104 4704 27 11 2352 0 0 0 0 0
120 2352 0 0 0 0 0 1176 1 0
124 3720 0 0 1632 0 0 0 0 0
125 1368 0 0 456 0 0 0 0 0
126 6 0 0 3 0 0 0 0 0
132 453 27 21 453 0 0 0 0 0
133 453 0 0 453 0 0 0 0 0
137 906 0 0 453 0 0 0 0 0
142 10128 747 117 1176 0 0 3528 1431 184
143 1896 0 0 0 0 0 1176 0 0
144 3336 389 99 720 0 0 1176 0 0
149 4704 746 115 2352 1056 173 2352 759 59
150 57960 244 83 26988 0 0 1176 726 104
154 2352 684 105 0 0 0 0 0 0
164 5880 0 0 3528 0 0 2352 0 0
165 1176 705 118 0 0 0 0 0 0
175 2352 0 0 0 0 0 2352 0 0
177 7056 0 0 1176 0 0 2352 0 0
181 96439 1586 268 31871 0 0 9055 2 1
188 18110 223 72 18110 0 0 0 0 0
189 18110 0 0 9055 7690 1661 0 0 0
197 18110 96 37 9055 0 0 0 0 0
200 27165 1247 239 9055 0 0 0 0 0
220 108660 656 113 27165 0 0 72440 319 19
223 18110 0 0 0 0 0 9055 0 0
227 120490 1322 224 43695 2 0 18110 0 0
228 3525 0 0 0 0 0 1175 0 0
249 17340 0 0 7880 0 0 0 0 0
250 15760 0 0 7880 0 0 0 0 0
251 23640 0 0 7880 3916 1362 7880 0 0
254 39400 256 81 23640 0 0 15760 0 0
255 7880 0 0 0 0 0 0 0 0
270 7880 0 0 0 0 0 7880 0 0
278 25990 0 0 9055 0 0 9055 0 0
281 18110 0 0 0 0 0 9055 0 0
286 33804 598 113 16902 723 91 0 0 0
287 15694 0 0 0 0 0 7847 0 0
296 52521 705 114 18110 0 0 0 0 0
297 3618 27 11 1809 0 0 1809 0 0
299 3618 0 0 0 0 0 3618 0 0
300 1809 0 0 0 0 0 0 0 0
301 36222 0 0 24815 0 0 10231 0 0
315 18110 654 139 9055 0 0 9055 0 0
316 77336 706 110 25990 0 0 9055 0 0
333 9055 662 112 0 0 0 0 0 0
334 18090 57 32 5427 9 7 5427 0 0
339 9055 0 0 0 0 0 0 0 0
340 7246 463 97 7246 0 0 0 0 0
354 50644 1189 207 10830 0 0 0 0 0
357 14492 0 0 0 0 0 0 0 0
361 56216 459 119 9055 0 0 32669 0 0
363 3685 0 0 0 0 0 0 0 0
364 61847 625 116 16600 0 0 33076 0 0
365 8610 0 0 0 0 0 0 0 0
366 3685 0 0 0 0 0 0 0 0
368 6200 0 0 1240 615 153 0 0 0
370 1860 307 57 620 0 0 0 0 0
371 12 0 0 0 0 0 0 0 0
372 2456 0 0 1228 0 0 0 0 0
373 3070 307 58 1228 0 0 614 0 0
374 614 0 0 0 0 0 0 0 0
376 620 0 0 620 0 0 0 0 0
378 2480 0 0 1860 603 158 0 0 0
379 620 0 0 0 0 0 0 0 0
383 36974 0 0 25423 0 0 4305 0 0
385 14492 0 0 0 0 0 0 0 0
386 2864 0 0 0 0 0 0 0 0
387 29622 659 108 15319 0 0 4305 0 0
388 47876 0 0 15313 0 0 15933 2 2
389 4382 0 0 0 0 0 0 0 0
391 7246 462 107 7246 0 0 0 0 0
392 14492 0 0 0 0 0 0 0 0
395 9055 0 0 0 0 0 0 0 0
405 22406 0 0 22406 0 0 0 0 0
409 7246 0 0 7246 0 0 0 0 0
428 27799 0 0 18744 0 0 9055 0 0
463 9055 0 0 0 0 0 0 0 0
465 62210 989 189 35045 0 0 0 0 0
466 80320 625 111 35045 0 0 36220 0 0
472 69948 975 200 29675 0 0 22415 0 0
473 7246 0 0 7246 0 0 0 0 0
477 33870 0 0 9055 0 0 0 0 0
481 42925 0 0 0 0 0 18110 0 0
486 23640 707 116 7880 0 0 15760 0 0
487 15760 0 0 7880 0 0 7880 0 0
488 7880 0 0 0 0 0 7880 0 0
489 15760 0 0 7880 0 0 7880 0 0
490 7880 0 0 0 0 0 7880 0 0
491 7880 0 0 0 0 0 7880 0 0
512 1176 0 0 0 0 0 0 0 0
513 35045 34 21 25990 0 0 9055 0 0
556 4825 28 12 1825 0 0 0 0 0
558 3530 0 0 1 0 0 0 0 0
562 4704 673 110 2352 0 0 1176 3 0
579 16925 0 0 11498 0 0 0 0 0
866 7122 0 0 0 0 0 0 0 0
999 27165 209 57 9055 878 258 0 0 0
1000 17254 717 116 0 0 0 0 0 0
1001 15760 0 0 0 0 0 0 0 0
1002 15760 0 0 0 0 0 0 0 0
1003 15760 0 0 0 0 0 0 0 0
1004 15760 0 0 0 0 0 0 0 0
1010 15760 0 0 0 0 0 0 0 0
fn=runtime.isSystemGoroutine
1021 224 21 8 75 0 0 37 0 0
1023 222 18 8 148 7 6 74 0 0
1024 37 0 0 0 0 0 0 0 0
1027 185 0 0 37 33 17 0 0 0
1028 4 0 0 2 0 0 1 0 0
1030 72 0 0 0 0 0 0 0 0
1033 1 0 0 0 0 0 0 0 0
1038 6 0 0 3 0 0 1 0 0
1040 315 33 16 140 0 0 140 0 0
fn=runtime.schedinit
45 1 1 1 0 0 0 1 0 0
fn=runtime.tracebackdefers
50 3192 26 20 912 0 0 456 0 0
51 3648 27 20 456 0 0 1368 1 0
52 3648 27 20 1824 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/type.go
fn=runtime.(*_type).uncommon
59 4 2 2 2 0 0 0 0 0
62 6 1 1 1 0 0 0 0 0
74 3 0 0 1 0 0 1 0 0
99 2 0 0 0 0 0 0 0 0
fn=runtime.(*itab).init
216 24 2 2 5 0 0 16 0 0
256 17 1 1 4 0 0 13 0 0
fn=runtime.SetFinalizer
315 20 0 0 5 0 0 0 0 0
324 20 0 0 5 0 0 0 0 0
327 10 3 2 5 0 0 0 0 0
328 65 3 2 5 0 0 0 0 0
332 10 0 0 5 3 3 0 0 0
fn=runtime.mapiternext
381 12200000 0 0 6100000 0 0 0 0 0
384 12200000 8 8 6100000 0 0 0 0 0
fn=runtime.name.name
448 2 0 0 0 0 0 0 0 0
456 6 0 0 2 2 2 0 0 0
467 4 1 1 0 0 0 2 0 0
468 6 0 0 2 0 0 0 0 0
471 2 0 0 0 0 0 0 0 0
472 4 0 0 0 0 0 0 0 0
476 2 0 0 0 0 0 2 0 0
477 2 0 0 0 0 0 2 0 0
478 2 0 0 2 0 0 0 0 0
fn=runtime.name.pkgPath
493 6 1 1 2 0 0 1 0 0
494 6 1 1 2 0 0 0 0 0
495 5 0 0 2 0 0 1 0 0
fn=runtime.resolveNameOff
185 24 2 2 8 0 0 4 0 0
186 12 0 0 4 0 0 0 0 0
189 8 0 0 4 0 0 0 0 0
190 12 0 0 0 0 0 0 0 0
191 24 1 1 8 0 0 0 0 0
192 8 0 0 0 0 0 0 0 0
193 8 0 0 0 0 0 0 0 0
197 16 0 0 8 0 0 4 0 0
fn=runtime.resolveTypeOff
219 24 2 2 8 0 0 4 0 0
220 12 0 0 4 0 0 0 0 0
223 8 0 0 4 0 0 0 0 0
225 12 0 0 0 0 0 0 0 0
226 16 1 1 8 1 0 0 0 0
231 12 0 0 0 0 0 4 0 0
244 40 1 1 12 2 0 16 2 0
247 20 0 0 12 0 0 0 0 0
248 12 0 0 4 0 0 0 0 0
252 16 0 0 8 0 0 4 0 0
fn=runtime.typelinksinit
519 7 1 1 2 0 0 1 0 0
520 2 0 0 1 0 0 0 0 0
521 3 2 2 2 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/typekind.go
fn=runtime.ifaceeq
42 200012 0 0 100006 0 0 0 0 0
fl=.//usr/lib/golang/src/runtime/vdso_linux.go
fn=runtime.vdsoauxv
267 133 1 1 38 0 0 19 0 0
269 57 0 0 19 0 0 0 0 0
279 57 1 1 38 0 0 0 0 0
fl=.//usr/lib/golang/src/sort/sort.go
fn=sort.Sort
216 18 3 3 6 0 0 3 0 0
217 21 0 0 12 3 3 9 0 0
218 36 3 3 12 0 0 24 0 0
219 9 0 0 6 0 0 0 0 0
fn=sort.maxDepth
225 15 3 3 3 0 0 0 0 0
228 3 0 0 0 0 0 0 0 0
fn=sort.quickSort
183 18 6 6 6 0 0 3 0 0
184 36 3 3 15 0 0 6 0 0
201 6 3 3 0 0 0 0 0 0
209 9 3 3 6 0 0 0 0 0
fn=testing.BenchmarkResult.String
314 27 3 3 3 0 0 21 0 0
fl=.//usr/lib/golang/src/strconv/atob.go
fn=flag.(*boolValue).String
22 4 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/atoi.go
fn=strconv.Atoi
224 13800000 34775 236 4600000 0 0 2300000 0 0
228 2300000 0 0 0 0 0 0 0 0
229 9200000 0 0 2300000 0 0 0 0 0
232 17600014 2037 74 4400004 851657 849214 0 0 0
240 69299756 1322 80 13474937 2810 2810 0 0 0
241 13474937 0 0 0 0 0 0 0 0
242 26949874 0 0 0 0 0 0 0 0
243 52 2 2 18 0 0 22 1 0
245 40424805 0 0 0 0 0 0 0 0
247 6600000 42 29 4400000 0 0 0 0 0
248 4400000 471 88 0 0 0 0 0 0
250 8800000 0 0 0 0 0 4400000 0 0
254 999980 1 1 399992 0 0 499990 0 0
255 399992 0 0 0 0 0 0 0 0
256 499990 0 0 99998 0 0 199996 0 0
258 599988 1 1 199996 0 0 299994 3 1
fn=strconv.ParseInt
179 599988 2 2 199996 0 0 99998 0 0
182 299994 0 0 99998 0 0 0 0 0
189 399992 0 0 199996 310 310 0 0 0
191 299994 2 2 0 0 0 0 0 0
198 1599968 6 4 499990 0 0 799984 0 0
199 1899962 0 0 499990 0 0 399992 0 0
200 899982 3 3 299994 0 0 199996 0 0
201 599988 0 0 299994 3 1 199996 0 0
202 599988 1 1 199996 0 0 299994 0 0
210 299994 1 1 99998 0 0 99998 0 0
fn=strconv.ParseUint
14 99998 1 1 0 0 0 0 0 0
37 1899962 2 2 699986 15 5 799984 65971 41373
60 899982 7 4 199996 0 0 99998 0 0
63 299994 0 0 99998 0 0 0 0 0
67 577973 0 0 99998 0 0 0 0 0
70 99998 0 0 0 0 0 0 0 0
71 299994 0 0 0 0 0 0 0 0
98 399992 1 1 99998 0 0 0 0 0
108 299994 0 0 0 0 0 0 0 0
116 1099978 8 4 0 0 0 99998 0 0
120 1611906 0 0 477975 316 316 0 0 0
122 855952 1 1 0 0 0 0 0 0
123 755954 0 0 0 0 0 0 0 0
126 1133931 0 0 0 0 0 0 0 0
127 277979 0 0 0 0 0 0 0 0
128 299994 0 0 0 0 0 0 0 0
131 699986 0 0 199996 0 0 299994 3 1
134 555958 0 0 0 0 0 0 0 0
138 555958 0 0 0 0 0 0 0 0
142 277979 0 0 0 0 0 0 0 0
144 555958 0 0 0 0 0 0 0 0
145 1111916 0 0 0 0 0 0 0 0
149 277979 0 0 0 0 0 0 0 0
156 277979 0 0 0 0 0 0 0 0
fn=strconv.init
18 16 3 3 5 0 0 6 1 1
21 13 1 1 5 0 0 5 0 0
fl=.//usr/lib/golang/src/strconv/decimal.go
fn=strconv.(*decimal).Assign
81 18 6 6 6 0 0 3 0 0
82 9 0 0 0 0 0 6 0 0
86 159 0 0 3 0 0 0 0 0
87 144 3 3 0 0 0 0 0 0
88 144 0 0 0 0 0 0 0 0
89 192 0 0 0 0 0 48 0 0
90 48 0 0 0 0 0 0 0 0
95 6 0 0 3 0 0 3 0 0
96 204 3 3 0 0 0 0 0 0
97 336 0 0 96 0 0 48 0 0
98 48 0 0 48 0 0 0 0 0
100 6 0 0 3 0 0 3 0 0
101 6 3 3 0 0 0 6 3 3
102 9 0 0 6 0 0 0 0 0
fn=strconv.(*decimal).Round
354 18 0 0 6 0 0 3 0 0
355 21 3 3 9 0 0 0 0 0
356 9 0 0 6 0 0 0 0 0
fn=strconv.(*decimal).Shift
315 18 3 3 6 0 0 3 0 0
317 9 0 0 6 0 0 0 0 0
319 12 0 0 3 0 0 0 0 0
324 9 0 0 6 0 0 0 0 0
325 3 3 3 0 0 0 0 0 0
326 6 0 0 0 0 0 0 0 0
330 15 3 3 0 0 0 9 0 0
fn=strconv.rightShift
110 18 3 3 6 0 0 3 0 0
116 239 3 3 6 0 0 0 0 0
117 50 0 0 25 0 0 0 0 0
129 75 0 0 25 0 0 0 0 0
130 75 0 0 0 0 0 0 0 0
132 59 3 3 3 0 0 0 0 0
134 15 0 0 0 0 0 0 0 0
137 60 3 3 20 0 0 0 0 0
138 51 0 0 17 0 0 0 0 0
139 51 0 0 0 0 0 0 0 0
140 17 0 0 0 0 0 0 0 0
141 68 3 3 0 0 0 17 0 0
142 17 0 0 0 0 0 0 0 0
143 51 0 0 0 0 0 0 0 0
147 18 3 3 0 0 0 0 0 0
148 12 0 0 0 0 0 0 0 0
149 3 0 0 0 0 0 0 0 0
150 6 0 0 0 0 0 0 0 0
151 9 0 0 0 0 0 3 0 0
152 6 0 0 0 0 0 0 0 0
156 6 0 0 0 0 0 0 0 0
159 6 0 0 0 0 0 3 0 0
160 6 0 0 0 0 0 6 0 0
161 9 0 0 6 0 0 0 0 0
fn=strconv.trim
71 18 3 3 0 0 0 6 0 0
72 126 0 0 30 0 0 0 0 0
73 6 0 0 0 0 0 6 0 0
75 6 0 0 0 0 0 0 0 0
76 18 0 0 12 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/ftoa.go
fn=fmt.(*fmt).fmtFloat
54 42 3 3 18 0 0 24 1 1
fn=strconv.bigFtoa
161 33 6 6 12 0 0 3 0 0
162 24 0 0 3 0 0 9 6 6
163 15 3 3 3 0 0 9 3 3
164 24 0 0 9 0 0 9 0 0
165 12 3 3 0 0 0 9 0 0
166 15 3 3 6 0 0 0 0 0
167 3 0 0 0 0 0 0 0 0
181 6 0 0 3 0 0 0 0 0
182 6 3 3 0 0 0 0 0 0
184 6 0 0 0 0 0 0 0 0
185 21 0 0 3 0 0 9 0 0
186 3 0 0 0 0 0 0 0 0
192 36 9 9 6 0 0 24 0 0
194 84 6 6 39 0 0 42 0 0
fn=strconv.fmtF
433 27 6 6 9 0 0 3 0 0
435 6 3 3 0 0 0 0 0 0
440 9 0 0 3 0 0 0 0 0
441 9 3 3 3 0 0 3 3 3
442 54 6 6 15 0 0 24 3 3
443 42 3 3 21 0 0 0 0 0
444 24 0 0 0 0 0 6 0 0
451 12 3 3 3 0 0 0 0 0
452 9 3 3 0 0 0 0 0 0
462 21 9 9 6 0 0 9 0 0
572 6 3 3 0 0 0 0 0 0
fn=strconv.formatDigits
197 18 0 0 6 0 0 3 0 0
198 6 0 0 3 0 0 0 0 0
199 6 3 3 0 0 0 0 0 0
201 6 0 0 0 0 0 0 0 0
202 78 6 6 39 0 0 36 3 3
203 3 3 3 0 0 0 0 0 0
fn=strconv.genericFtoa
57 21 6 6 6 0 0 3 1 1
61 9 0 0 3 0 0 0 0 0
64 6 3 3 0 0 0 0 0 0
65 3 0 0 0 0 0 0 0 0
66 3 0 0 0 0 0 0 0 0
71 42 6 6 3 0 0 6 4 4
72 45 6 6 6 3 3 0 0 0
73 27 0 0 0 0 0 0 0 0
76 6 3 3 0 0 0 0 0 0
89 6 3 3 0 0 0 0 0 0
95 6 3 3 0 0 0 0 0 0
97 9 0 0 3 0 0 3 3 3
100 9 0 0 3 0 0 0 0 0
103 12 3 3 0 0 0 0 0 0
107 6 0 0 3 3 0 0 0 0
111 12 0 0 0 0 0 9 0 0
114 12 3 3 3 0 0 0 0 0
115 3 3 3 0 0 0 0 0 0
134 9 0 0 0 0 0 0 0 0
154 6 0 0 0 0 0 0 0 0
155 69 9 9 24 0 0 42 6 6
fl=.//usr/lib/golang/src/strconv/itoa.go
fn=flag.(*intValue).String
35 20 1 1 8 0 0 12 0 0
fn=strconv.FormatInt
25 24 2 2 8 0 0 4 0 0
26 32 0 0 8 0 0 0 0 0
27 21 0 0 8 0 0 8 0 0
60 8 0 0 0 0 0 0 0 0
61 18 1 1 0 0 0 0 0 0
63 11 1 1 0 0 0 0 0 0
fn=strconv.FormatUint
14 6 2 2 2 0 0 1 0 0
15 6 0 0 2 0 0 0 0 0
16 5 1 1 2 0 0 2 0 0
60 2 0 0 0 0 0 0 0 0
61 6 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/strconv/quote.go
fn=strconv.IsPrint
483 228 4 4 76 0 0 38 0 0
485 114 0 0 38 0 0 0 0 0
486 152 4 4 0 0 0 0 0 0
488 152 4 4 76 0 0 38 0 0
fl=.//usr/lib/golang/src/strings/builder.go
fn=strings.(*Builder).Write
34 18 0 0 6 0 0 0 0 0
40 12 3 3 3 0 0 3 0 0
41 6 0 0 0 0 0 0 0 0
88 36 12 6 12 0 0 6 0 0
89 6 0 0 6 0 0 0 0 0
90 228 21 9 84 0 0 102 0 0
91 42 0 0 18 0 0 12 0 0
fn=testing.BenchmarkResult.String
34 12 0 0 6 0 0 0 0 0
41 6 0 0 0 0 0 0 0 0
48 9 3 3 9 0 0 0 0 0
97 3 0 0 0 0 0 0 0 0
98 81 9 9 24 0 0 30 0 0
fl=.//usr/lib/golang/src/strings/strings.go
fn=strings.Count
78 42 12 8 14 0 0 7 0 0
80 21 0 0 7 0 0 0 0 0
83 14 0 0 0 0 0 0 0 0
84 91 7 4 49 6 3 35 1 0
fn=strings.Index
151 21 3 3 9 0 0 12 0 0
1028 18 3 3 6 0 0 3 0 0
1031 9 3 3 3 0 0 0 0 0
1033 6 0 0 0 0 0 0 0 0
1034 18 3 3 12 0 0 3 0 0
fn=strings.TrimSpace
871 7 1 1 2 0 0 1 0 0
874 7 1 1 2 0 0 0 0 0
879 1 1 1 0 0 0 0 0 0
888 3 0 0 0 0 0 0 0 0
901 15 2 2 2 0 0 2 0 0
fn=strings.genSplit
245 36 6 4 12 0 0 6 0 0
246 24 6 4 6 0 0 0 0 0
249 18 0 0 6 0 0 0 0 0
252 6 0 0 0 0 0 0 0 0
253 66 12 8 24 0 0 30 1 0
256 48 6 4 6 0 0 36 0 0
257 24 0 0 6 0 0 6 0 0
259 39 6 4 3 0 0 9 0 0
260 24 3 3 9 0 0 15 0 0
261 6 0 0 0 0 0 0 0 0
264 54 3 3 21 0 0 6 0 0
265 30 0 0 3 0 0 0 0 0
266 3 0 0 0 0 0 0 0 0
268 120 6 4 48 0 0 30 0 0
269 42 0 0 12 0 0 18 0 0
fn=testing.(*matcher).fullName
308 55 5 4 10 0 0 40 1 0
fn=testing.parseCpuList
308 12 1 1 2 0 0 8 0 0
fl=.//usr/lib/golang/src/sync/atomic/asm.s
fn=sync/atomic.StoreUint32
1 5 4 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/atomic/value.go
fn=internal/testlog.Open
30 2 0 0 2 2 1 0 0 0
31 10 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/map.go
fn=sync.init
70 16 2 2 6 0 0 4 1 1
fl=.//usr/lib/golang/src/sync/mutex.go
fn=sync.(*Mutex).Lock
72 24 3 3 8 0 0 4 0 0
74 28 3 3 8 3 0 0 0 0
78 12 0 0 8 0 0 0 0 0
fn=sync.(*Mutex).Unlock
179 228 18 11 76 0 0 38 0 0
186 152 0 0 114 14 0 0 0 0
187 190 0 0 76 0 0 0 0 0
fn=sync.(*Once).doSlow
74 10 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pinSlow
74 91 11 8 13 3 1 0 0 0
fn=sync.(*RWMutex).Lock
74 22 0 0 0 0 0 0 0 0
fn=sync.(*RWMutex).Unlock
186 33 10 9 22 0 0 0 0 0
187 55 0 0 22 0 0 0 0 0
fn=testing.(*B).Run
186 16 4 4 8 1 1 0 0 0
187 8 0 0 0 0 0 0 0 0
fn=testing.(*B).runN
74 70 0 0 10 2 0 0 0 0
fn=testing.(*matcher).fullName
74 40 2 1 5 1 0 0 0 0
fl=.//usr/lib/golang/src/sync/once.go
fn=internal/poll.(*pollDesc).init
55 4 0 0 0 0 0 0 0 0
57 6 1 1 0 0 0 3 0 0
fn=sync.(*Once).doSlow
61 50 8 8 10 0 0 20 1 1
62 30 0 0 10 0 0 0 0 0
63 20 0 0 0 0 0 15 0 0
64 10 0 0 5 0 0 0 0 0
65 30 8 8 0 0 0 20 0 0
66 20 0 0 10 2 2 5 0 0
68 115 5 4 30 1 0 40 0 0
fn=syscall.Getenv
55 3 0 0 1 0 0 0 0 0
57 6 2 2 0 0 0 3 0 0
fn=testing.(*B).run
55 9 0 0 3 3 3 0 0 0
57 6 1 1 0 0 0 3 1 1
fn=testing.(*M).after
55 6 1 1 3 1 1 0 0 0
57 5 0 0 0 0 0 3 0 0
fn=time.(*Location).get
55 3000000 0 0 1000000 1932 49 0 0 0
57 6 0 0 0 0 0 3 0 0
fl=.//usr/lib/golang/src/sync/pool.go
fn=sync.(*Pool).Get
124 174 11 8 58 0 0 29 0 0
128 158 22 16 87 0 0 71 2 1
129 58 0 0 58 9 6 0 0 0
130 116 0 0 29 0 0 58 0 0
131 58 0 0 0 0 0 0 0 0
135 65 0 0 26 0 0 26 0 0
136 26 0 0 0 0 0 0 0 0
137 104 10 8 52 0 0 39 0 0
140 42 0 0 0 0 0 29 0 0
147 211 14 8 49 10 9 58 0 0
148 25 0 0 15 5 4 5 0 0
150 169 0 0 82 0 0 58 0 0
fn=sync.(*Pool).Put
90 174 14 8 58 0 0 29 0 0
91 87 0 0 29 0 0 0 0 0
102 116 10 8 58 0 0 58 0 0
103 58 0 0 29 4 0 0 0 0
104 232 11 8 87 0 0 58 0 0
105 29 0 0 0 0 0 0 0 0
107 58 0 0 0 0 0 0 0 0
110 29 0 0 0 0 0 29 0 0
111 87 0 0 58 0 0 0 0 0
fn=sync.(*Pool).getSlow
153 78 11 8 26 0 0 13 0 0
155 39 0 0 26 0 0 13 0 0
156 39 0 0 13 0 0 13 0 0
158 1287 11 8 416 0 0 208 0 0
159 2080 0 0 208 0 0 0 0 0
160 1872 12 8 624 0 0 416 0 0
168 223 2 2 221 0 0 2 0 0
169 39 0 0 13 0 0 0 0 0
170 40 6 5 16 0 0 8 0 0
172 9 0 0 5 0 0 2 0 0
173 5 5 5 0 0 0 0 0 0
174 22 0 0 10 5 3 0 0 0
175 18 0 0 3 0 0 6 0 0
176 15 3 3 6 0 0 6 0 0
178 196 2 2 64 0 0 32 0 0
179 288 0 0 32 0 0 0 0 0
180 288 2 1 96 0 0 64 0 0
187 36 0 0 36 0 0 0 0 0
189 10 0 0 4 0 0 2 0 0
277 250 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pin
195 348 14 8 116 0 0 58 0 0
196 116 13 8 58 0 0 58 2 1
201 116 0 0 116 17 11 0 0 0
202 58 0 0 58 0 0 0 0 0
203 116 0 0 0 0 0 0 0 0
204 225 0 0 90 0 0 90 0 0
206 117 0 0 52 0 0 52 0 0
277 135 0 0 0 0 0 0 0 0
fn=sync.(*Pool).pinSlow
209 143 22 16 26 0 0 65 2 1
212 13 0 0 0 0 0 13 2 1
214 65 0 0 0 0 0 39 0 0
215 39 0 0 13 0 0 26 0 0
217 39 11 8 39 0 0 0 0 0
219 13 0 0 0 0 0 0 0 0
222 26 0 0 0 0 0 0 0 0
223 403 45 32 117 12 8 130 0 0
226 52 0 0 13 0 0 39 0 0
227 78 11 8 13 0 0 52 0 0
228 91 0 0 26 0 0 39 0 0
229 52 11 8 52 0 0 0 0 0
230 221 0 0 78 0 0 65 0 0
fn=sync.init.0
272 6 1 1 2 0 0 1 0 0
273 3 0 0 0 0 0 2 0 0
274 3 0 0 2 0 0 0 0 0
fn=sync.poolCleanup
233 120 20 19 40 0 0 20 0 0
241 168 20 19 52 24 15 0 0 0
242 60 0 0 12 8 0 12 8 6
243 12 0 0 0 0 0 12 0 0
247 168 20 19 52 8 0 0 0 0
248 48 0 0 24 7 0 12 0 0
249 24 0 0 12 0 0 12 0 0
250 48 8 7 12 0 0 12 0 0
251 12 0 0 0 0 0 12 0 0
256 260 52 50 100 9 2 100 0 0
257 60 0 0 40 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/poolqueue.go
fn=sync.(*poolChain).popHead
258 78 22 16 26 0 0 13 0 0
259 26 0 0 26 0 0 0 0 0
260 39 0 0 0 0 0 0 0 0
268 78 11 8 26 0 0 26 0 0
fn=sync.(*poolChain).popTail
271 1440 11 8 480 0 0 240 0 0
272 480 0 0 480 150 102 0 0 0
273 480 11 8 0 0 0 0 0 0
274 1440 22 15 480 0 0 480 0 0
fl=.//usr/lib/golang/src/sync/runtime.go
fn=sync.init.1
55 6 1 1 2 0 0 1 0 0
57 2 1 1 0 0 0 2 0 0
58 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/sync/rwmutex.go
fn=sync.(*RWMutex).Lock
92 66 10 9 22 0 0 11 0 0
98 55 10 9 22 0 0 0 0 0
100 33 0 0 22 0 0 0 0 0
102 88 0 0 22 0 0 0 0 0
103 11 10 9 0 0 0 0 0 0
fn=sync.(*RWMutex).RUnlock
62 6 1 1 2 0 0 1 0 0
68 9 1 1 5 0 0 0 0 0
fn=sync.(*RWMutex).Unlock
118 66 10 9 22 0 0 11 0 0
126 55 0 0 33 0 0 11 0 0
127 22 0 0 0 0 0 0 0 0
132 33 0 0 0 0 0 0 0 0
136 22 10 9 0 0 0 0 0 0
fn=syscall.Getenv
48 6 1 1 2 1 1 0 0 0
fn=testing.(*common).Failed
48 6 1 1 0 0 0 0 0 0
68 10 0 0 4 0 0 0 0 0
fl=.//usr/lib/golang/src/syscall/asm_linux_amd64.s
fn=syscall.Syscall
1 11567 2 1 11567 0 0 0 0 0
18 11567 255 43 0 0 0 11567 0 0
19 11567 0 0 11567 0 0 0 0 0
20 11567 0 0 11567 0 0 0 0 0
21 11567 0 0 11567 0 0 0 0 0
22 11567 0 0 11567 0 0 0 0 0
23 11567 0 0 0 0 0 0 0 0
24 11567 3 0 0 0 0 0 0 0
25 11567 0 0 0 0 0 0 0 0
33 11567 8030 49 0 0 0 11567 14 3
34 11567 0 0 0 0 0 11567 0 0
35 11567 0 0 0 0 0 11567 0 0
36 11567 0 0 0 0 0 11567 14 4
fn=syscall.Syscall6
1 4 0 0 4 0 0 0 0 0
41 4 4 2 0 0 0 4 0 0
42 4 0 0 4 0 0 0 0 0
43 4 0 0 4 0 0 0 0 0
44 4 4 3 4 0 0 0 0 0
45 4 0 0 4 0 0 0 0 0
46 4 0 0 4 0 0 0 0 0
47 4 0 0 4 0 0 0 0 0
48 4 0 0 4 0 0 0 0 0
49 4 0 0 0 0 0 0 0 0
50 4 0 0 0 0 0 0 0 0
51 4 0 0 0 0 0 0 0 0
59 4 4 3 0 0 0 4 0 0
60 4 0 0 0 0 0 4 0 0
61 4 0 0 0 0 0 4 0 0
62 4 0 0 0 0 0 4 0 0
fl=.//usr/lib/golang/src/syscall/env_unix.go
fn=syscall.Getenv
71 13 2 2 2 0 0 5 0 0
72 1 0 0 0 0 0 0 0 0
73 3 0 0 1 0 0 0 0 0
77 1 0 0 0 0 0 0 0 0
78 5 0 0 0 0 0 3 0 0
80 11 1 1 5 1 1 5 0 0
81 1 0 0 0 0 0 0 0 0
82 10 1 1 3 0 0 5 0 0
fn=syscall.copyenv
36 6 2 2 2 0 0 1 0 0
37 5 0 0 2 0 0 2 1 1
38 950 3 3 317 17 17 190 0 0
39 2484 0 0 0 0 0 63 0 0
40 2421 0 0 807 37 37 0 0 0
42 567 1 1 126 0 0 315 0 0
43 819 1 1 315 0 0 378 0 0
fn=syscall.init
26 15 2 2 6 0 0 5 1 1
fl=.//usr/lib/golang/src/syscall/syscall.go
fn=syscall.ByteSliceFromString
47 24 4 3 8 0 0 4 0 0
48 174 4 3 8 0 0 0 0 0
49 150 0 0 50 3 2 0 0 0
53 36 4 3 4 0 0 24 2 2
54 52 8 6 12 0 0 16 0 0
55 40 0 0 16 0 0 16 1 1
fn=syscall.openat
69 24 0 0 15 0 0 9 3 3
70 6 0 0 0 0 0 0 0 0
73 6 3 3 0 0 0 0 0 0
fn=syscall.readlinkat
69 8 1 1 5 0 0 3 0 0
70 2 0 0 0 0 0 0 0 0
73 4 1 1 0 0 0 0 0 0
fl=.//usr/lib/golang/src/syscall/syscall_linux.go
fn=os.Readlink
150 12 0 0 6 0 0 6 0 0
fn=os.openFileNolog
138 20 0 0 10 0 0 10 0 0
fn=syscall.init
979 8 1 1 4 0 0 2 1 1
fn=time.open
138 10 1 1 5 0 0 5 1 1
fl=.//usr/lib/golang/src/syscall/syscall_unix.go
fn=internal/poll.(*FD).Read
189 115500 33 20 57750 0 0 57750 0 0
fn=internal/poll.(*FD).Write
214 72 0 0 27 0 0 45 0 0
fn=time.readFile
189 22 2 2 7 0 0 13 0 0
fl=.//usr/lib/golang/src/syscall/zsyscall_linux_amd64.go
fn=syscall.Close
284 18 3 3 6 0 0 3 0 0
285 21 4 4 6 1 1 12 1 1
286 9 0 0 0 0 0 0 0 0
287 6 3 3 0 0 0 0 0 0
289 15 3 3 6 0 0 6 1 1
fn=syscall.openat
62 18 6 6 6 0 0 3 0 0
64 21 0 0 3 0 0 6 0 0
65 6 3 3 0 0 0 0 0 0
68 45 3 3 18 0 0 24 0 0
70 9 0 0 0 0 0 0 0 0
73 24 6 6 12 0 0 9 0 0
fn=syscall.read
679 69312 987 39 23104 0 0 11552 0 0
681 34656 0 0 11552 0 0 0 0 0
686 115520 283 35 46208 1 0 69312 254 17
688 34656 0 0 0 0 0 0 0 0
689 23104 538 41 0 0 0 0 0 0
691 69312 233 33 23104 0 0 34656 18 5
fn=syscall.readlinkat
78 6 1 1 2 0 0 1 0 0
80 4 1 1 1 0 0 2 0 0
81 2 0 0 0 0 0 0 0 0
85 3 0 0 1 0 0 0 0 0
90 15 1 1 5 0 0 9 0 0
92 3 0 0 0 0 0 0 0 0
95 8 2 2 4 0 0 3 0 0
fn=syscall.write
907 54 15 12 18 0 0 9 0 0
909 27 0 0 9 0 0 0 0 0
914 90 8 6 36 0 0 54 0 0
916 27 0 0 0 0 0 0 0 0
917 18 7 6 0 0 0 0 0 0
919 54 8 6 18 0 0 27 0 0
fl=.//usr/lib/golang/src/testing/benchmark.go
fn=testing.(*B).ResetTimer
146 60 10 9 20 0 0 10 0 0
147 40 0 0 20 0 0 0 0 0
150 55 10 8 15 0 0 25 0 0
152 20 5 5 0 0 0 15 0 0
156 30 5 4 20 10 8 0 0 0
162 10 0 0 0 0 0 10 10 8
164 20 0 0 0 0 0 10 0 0
165 30 0 0 20 0 0 0 0 0
fn=testing.(*B).Run
606 44 6 6 8 0 0 16 1 0
609 12 0 0 12 4 3 0 0 0
610 4 0 0 0 0 0 0 0 0
611 20 0 0 0 0 0 12 0 0
613 8 4 4 8 3 3 0 0 0
614 12 0 0 4 3 3 0 0 0
615 52 8 8 28 4 3 20 1 0
617 8 4 0 0 0 0 0 0 0
620 20 4 4 4 0 0 12 1 0
621 4 0 0 0 0 0 0 0 0
622 20 4 4 4 0 0 12 0 0
624 40 8 8 12 0 0 20 3 2
625 32 0 0 12 0 0 16 4 2
626 12 8 8 8 2 0 4 0 0
627 12 0 0 4 2 0 4 0 0
628 40 4 4 16 0 0 12 0 0
629 24 0 0 12 4 3 8 3 2
630 16 0 0 8 4 0 4 3 2
631 4 0 0 0 0 0 4 0 0
633 24 4 4 12 2 0 8 3 2
634 8 0 0 4 1 0 4 0 0
635 16 4 4 8 4 1 8 3 2
636 16 0 0 8 0 0 4 0 0
638 16 0 0 4 0 0 4 0 0
644 8 0 0 4 0 0 0 0 0
656 20 11 11 8 0 0 8 0 0
657 12 6 6 3 3 3 6 0 0
659 64 6 6 32 5 1 32 3 2
660 44 0 0 20 0 0 16 2 1
fn=testing.(*B).StartTimer
120 60 20 18 20 0 0 10 0 0
121 60 0 0 40 0 0 0 0 0
122 30 0 0 0 0 0 20 0 0
123 30 10 0 20 7 0 10 10 0
124 20 10 9 10 0 0 10 0 0
125 100 0 0 50 0 0 40 20 8
126 20 10 9 0 0 0 10 10 0
fn=testing.(*B).StopTimer
133 60 10 8 20 0 0 10 0 0
134 60 0 0 40 8 8 0 0 0
135 110 9 8 60 20 20 50 0 0
136 30 0 0 0 0 0 20 0 0
137 40 10 8 40 21 10 0 0 0
138 30 0 0 30 0 0 0 0 0
139 20 0 0 0 0 0 10 10 0
fn=testing.(*B).add
360 48 3 3 16 1 0 20 0 0
363 12 3 3 4 0 0 0 0 0
366 12 0 0 4 0 0 0 0 0
383 48 4 3 16 0 0 20 0 0
386 12 0 0 4 0 0 0 0 0
389 12 0 0 4 0 0 0 0 0
395 48 3 3 16 0 0 20 0 0
398 12 3 3 4 0 0 0 0 0
401 12 0 0 4 0 0 0 0 0
666 28 6 6 8 0 0 4 0 0
667 8 0 0 4 0 0 4 4 4
671 36 3 3 20 0 0 12 1 1
672 8 0 0 4 0 0 0 0 0
675 4 0 0 0 0 0 4 0 0
676 4 3 3 0 0 0 4 0 0
678 8 0 0 4 0 0 0 0 0
681 36 4 3 20 0 0 12 1 1
682 36 0 0 20 0 0 12 0 0
683 12 0 0 8 0 0 0 0 0
fn=testing.(*B).doBench
275 30 6 6 6 0 0 12 0 0
276 18 0 0 3 0 0 12 0 0
277 15 3 3 6 0 0 9 0 0
278 30 3 3 18 3 3 9 0 0
fn=testing.(*B).launch
202 25 5 5 15 10 10 0 0 0
209 5 0 0 0 0 0 0 0 0
285 27 3 3 6 0 0 9 2 2
288 15 3 3 3 0 0 9 0 0
293 9 0 0 3 0 0 0 0 0
296 9 0 0 3 1 0 3 0 0
297 74 8 8 16 0 0 0 0 0
301 5 0 0 5 0 0 0 0 0
303 10 0 0 0 0 0 0 0 0
312 60 7 7 0 0 0 0 0 0
314 40 0 0 0 0 0 0 0 0
316 10 0 0 0 0 0 0 0 0
318 10 3 3 0 0 0 0 0 0
320 15 0 0 0 0 0 5 0 0
321 15 0 0 0 0 0 15 0 0
324 78 9 9 39 6 6 36 0 0
325 21 0 0 9 0 0 9 0 0
fn=testing.(*B).launch.func1
288 18 3 3 6 0 0 3 0 0
289 18 3 3 6 0 0 9 0 0
290 9 0 0 6 0 0 0 0 0
fn=testing.(*B).run
258 18 6 6 6 0 0 3 0 0
259 18 0 0 3 0 0 9 0 0
266 10 1 0 4 0 0 0 0 0
268 18 5 5 6 1 0 9 2 2
fn=testing.(*B).run.func1
259 8 1 1 3 0 0 2 0 0
260 18 1 1 2 0 0 11 0 0
261 19 2 2 3 0 0 11 0 0
262 8 0 0 5 0 0 0 0 0
fn=testing.(*B).run1
217 28 8 8 8 0 0 4 0 0
218 16 0 0 8 0 0 0 0 0
220 20 0 0 12 2 0 0 0 0
221 2 0 0 0 0 0 1 0 0
224 20 4 4 0 0 0 16 0 0
233 20 0 0 8 0 0 12 0 0
234 12 4 4 8 4 4 0 0 0
240 18 3 3 7 0 0 0 0 0
242 2 0 0 1 0 0 0 0 0
245 1 0 0 1 0 0 0 0 0
249 4 1 1 2 0 0 1 0 0
251 12 3 3 6 3 3 3 0 0
fn=testing.(*B).run1.func1
224 36 4 4 8 0 0 12 4 3
227 20 4 4 4 0 0 12 0 0
231 12 0 0 0 0 0 12 0 0
232 28 8 8 12 4 3 12 0 0
fn=testing.(*B).run1.func1.1
227 24 4 4 8 0 0 4 0 0
228 24 0 0 8 0 0 12 0 0
229 12 4 4 8 0 0 0 0 0
fn=testing.(*B).runN
179 100 20 18 20 0 0 40 5 4
181 50 10 9 0 0 0 30 0 0
182 70 0 0 20 0 0 40 0 0
185 10 0 0 0 0 0 10 5 4
186 20 20 17 10 10 8 10 10 8
187 20 0 0 10 1 0 10 10 8
188 10 0 0 0 0 0 10 10 8
189 20 0 0 0 0 0 20 0 0
190 30 0 0 10 0 0 20 0 0
191 50 19 9 30 30 8 20 0 0
192 30 1 0 10 9 9 20 0 0
193 30 1 1 20 11 1 10 10 2
194 20 0 0 10 10 0 10 0 0
196 20 0 0 10 10 10 0 0 0
199 130 9 8 50 0 0 70 9 8
fn=testing.(*benchContext).processBench
479 9 0 0 3 0 0 0 0 0
480 87 9 9 18 0 0 54 2 2
547 21 3 3 6 0 0 3 0 0
548 66 12 12 27 6 6 12 0 0
549 30 6 6 15 9 9 3 0 0
550 15 3 3 9 0 0 6 0 0
551 24 3 3 12 3 0 9 0 0
554 9 0 0 6 0 0 0 0 0
555 108 12 12 30 3 3 60 0 0
558 21 0 0 6 0 0 0 0 0
572 30 9 9 12 0 0 18 6 6
573 9 0 0 6 0 0 0 0 0
577 6 0 0 6 0 0 0 0 0
580 33 9 6 15 0 0 18 0 0
581 9 0 0 6 3 0 0 0 0
584 18 3 3 9 7 6 0 0 0
587 63 12 12 15 1 0 36 0 0
590 9 1 0 6 0 0 0 0 0
594 18 3 3 6 0 0 6 0 0
fn=testing.(*benchTimeFlag).String
42 6 1 1 2 0 0 1 0 0
43 4 0 0 2 1 1 0 0 0
46 10 2 2 5 0 0 4 0 0
fn=testing.BenchmarkResult.String
371 36 3 3 12 0 0 15 0 0
374 12 3 3 3 0 0 0 0 0
411 21 6 6 6 0 0 3 0 0
412 15 0 0 3 0 0 9 3 3
413 63 6 6 9 0 0 39 0 0
416 33 5 3 12 3 3 15 0 0
417 3 0 0 0 0 0 0 0 0
418 24 3 3 6 0 0 0 0 0
420 12 3 3 0 0 0 3 0 0
421 3 0 0 0 0 0 0 0 0
422 27 3 3 3 0 0 18 0 0
425 33 3 3 9 0 0 9 0 0
432 63 3 3 9 0 0 18 0 0
438 6 6 6 0 0 0 6 0 0
440 3 0 0 0 0 0 0 0 0
441 9 0 0 3 0 0 0 0 0
445 15 0 0 6 0 0 6 0 0
fn=testing.initBenchmarkFlags
24 6 2 2 2 0 0 1 0 0
25 4 0 0 2 0 0 1 0 0
26 3 0 0 1 0 0 1 0 0
27 3 0 0 2 0 0 0 0 0
fn=testing.prettyPrint
448 21 3 3 6 0 0 3 0 0
452 6 3 3 3 0 0 0 0 0
453 21 3 3 3 3 0 0 0 0
468 102 6 6 27 0 0 63 0 0
469 9 0 0 6 0 0 0 0 0
fn=testing.runBenchmarks
479 7 0 0 3 1 0 0 0 0
480 56 7 7 10 0 0 35 1 0
498 7 2 2 2 0 0 1 0 0
500 5 0 0 3 0 0 0 0 0
505 11 1 1 3 0 0 0 0 0
506 1 0 0 0 0 0 0 0 0
510 5 0 0 1 0 0 3 0 0
511 14 3 2 4 0 0 8 2 0
512 6 0 0 1 0 0 3 0 0
515 22 1 1 7 3 1 5 0 0
516 8 1 1 2 0 0 5 0 0
517 40 5 5 14 0 0 15 1 0
518 1 0 0 0 0 0 0 0 0
519 5 1 1 3 0 0 0 0 0
520 1 0 0 0 0 0 1 0 0
524 5 0 0 1 0 0 3 0 0
526 3 0 0 0 0 0 2 0 0
527 6 1 1 2 1 0 2 0 0
528 1 0 0 0 0 0 1 0 0
530 6 1 1 3 0 0 2 0 0
531 19 2 2 6 0 0 10 0 0
536 4 1 1 2 1 0 2 0 0
537 4 0 0 2 0 0 1 0 0
539 1 0 0 0 0 0 0 0 0
542 3 0 0 0 0 0 3 0 0
543 7 1 1 4 2 2 1 1 1
fn=testing.runBenchmarks.func1
531 6 2 2 2 0 0 1 0 0
532 20 1 1 9 1 1 3 0 0
533 6 1 1 1 0 0 5 0 0
fl=.//usr/lib/golang/src/testing/example.go
fn=testing.runExamples
29 7 1 1 2 0 0 1 0 0
32 4 1 1 0 0 0 3 0 0
34 4 0 0 1 0 0 0 0 0
38 2 1 1 0 0 0 0 0 0
49 5 1 1 2 0 0 2 0 0
fl=.//usr/lib/golang/src/testing/internal/testdeps/deps.go
fn=testing/internal/testdeps.TestDeps.MatchString
30 42 12 8 12 0 0 6 0 0
31 90 14 11 36 10 6 20 0 0
32 12 1 1 8 0 0 2 0 0
33 3 0 0 1 0 0 1 1 0
34 2 0 0 0 0 0 0 0 0
38 42 5 3 18 0 0 12 5 0
fl=.//usr/lib/golang/src/testing/match.go
fn=testing.(*matcher).fullName
50 75 15 11 10 0 0 35 2 0
51 20 0 0 10 0 0 10 0 0
53 30 5 4 10 4 3 0 0 0
54 20 0 0 0 0 0 15 0 0
56 23 4 3 9 0 0 0 0 0
57 60 9 9 24 0 0 33 0 0
61 20 0 0 0 0 0 15 0 0
65 10 5 4 10 0 0 0 0 0
66 91 11 4 37 4 0 10 0 0
67 44 0 0 19 5 3 0 0 0
68 3 0 0 0 0 0 0 0 0
70 70 5 4 25 2 0 25 0 0
74 78 13 8 30 2 0 40 1 0
fn=testing.(*matcher).unique
114 21 6 6 6 0 0 3 0 0
115 96 9 9 27 0 0 57 0 0
116 9 0 0 3 0 0 0 0 0
117 3 0 0 0 0 0 0 0 0
118 48 6 6 15 1 1 24 0 0
119 15 0 0 3 0 0 3 0 0
120 36 3 3 15 0 0 18 2 2
121 21 3 3 12 0 0 6 0 0
fn=testing.newMatcher
28 14 4 2 4 0 0 2 0 0
30 7 0 0 2 0 0 0 0 0
31 10 1 1 4 0 0 6 0 0
32 15 1 1 2 0 0 2 0 0
33 17 2 2 6 0 0 5 0 0
36 14 1 1 4 1 0 4 0 0
37 12 1 0 4 0 0 5 0 0
43 18 2 1 6 0 0 8 1 0
44 24 5 3 10 0 0 12 4 0
45 4 0 0 2 1 0 2 0 0
46 12 0 0 6 0 0 4 0 0
fn=testing.rewrite
135 28 4 4 8 0 0 4 0 0
136 4 0 0 0 0 0 0 0 0
137 471 12 12 163 4 4 79 0 0
139 41 0 0 0 0 0 0 0 0
140 15 0 0 0 0 0 3 0 0
141 152 0 0 38 0 0 76 0 0
143 278 0 0 114 0 0 123 0 0
145 979 12 12 263 0 0 436 0 0
148 48 8 8 16 0 0 28 0 0
152 82 0 0 0 0 0 0 0 0
153 44 0 0 0 0 0 0 0 0
155 319 8 8 0 0 0 0 0 0
fn=testing.splitRegexp
77 6 2 2 2 0 0 1 0 0
78 16 1 1 4 0 0 10 0 0
81 15 0 0 3 0 0 4 0 0
82 4 0 0 1 0 0 0 0 0
89 2 0 0 0 0 0 0 0 0
93 2 1 1 0 0 0 0 0 0
99 2 0 0 0 0 0 0 0 0
100 2 0 0 0 0 0 0 0 0
101 2 1 1 0 0 0 2 0 0
107 2 0 0 0 0 0 0 0 0
109 31 4 4 9 0 0 11 0 0
fl=.//usr/lib/golang/src/testing/testing.go
fn=main.main
1213 1 0 0 0 0 0 1 0 0
1214 32 2 2 13 0 0 13 0 0
fn=testing.(*M).Run
1223 11 2 2 2 0 0 4 0 0
1228 2 0 0 2 0 0 0 0 0
1231 1 0 0 0 0 0 0 0 0
1232 1 1 1 0 0 0 0 0 0
1235 4 0 0 2 0 0 0 0 0
1241 3 1 1 2 0 0 0 0 0
1242 1 0 0 1 0 0 0 0 0
1246 1 0 0 0 0 0 1 0 0
1248 3 0 0 1 0 0 2 0 0
1249 5 1 1 1 0 0 3 0 0
1250 2 0 0 0 0 0 2 0 0
1251 3 0 0 2 0 0 1 0 0
1252 36 4 4 15 1 0 14 1 0
1253 30 4 3 10 1 0 12 0 0
1254 3 0 0 1 0 0 2 0 0
1255 6 0 0 2 1 0 0 0 0
1258 48 6 6 21 0 0 18 1 0
1263 6 2 2 0 0 0 3 1 1
1264 8 1 1 3 0 0 4 1 1
fn=testing.(*M).after
1417 6 1 1 2 0 0 1 0 0
1418 8 0 0 1 0 0 3 0 0
fn=testing.(*M).after.func1
1418 7 2 2 3 0 0 1 0 0
1419 2 0 0 0 0 0 2 0 0
1420 3 0 0 2 0 0 0 0 0
fn=testing.(*M).before
1354 7 2 2 2 0 0 1 0 0
1355 4 0 0 2 0 0 0 0 0
1358 5 0 0 3 0 0 0 0 0
1371 5 1 1 3 0 0 0 0 0
1384 3 0 0 2 0 0 0 0 0
1387 3 1 1 2 0 0 0 0 0
1390 3 0 0 2 0 0 0 0 0
1394 5 1 1 3 0 0 0 0 0
1412 3 1 1 2 0 0 0 0 0
fn=testing.(*M).startAlarm
1509 6 1 1 2 0 0 1 0 0
1510 6 1 1 4 0 0 0 0 0
fn=testing.(*M).stopAlarm
1520 6 1 1 2 0 0 1 0 0
1521 3 1 1 2 0 0 0 0 0
fn=testing.(*M).writeProfiles
1423 7 1 1 2 0 0 1 0 0
1424 3 0 0 2 2 2 0 0 0
1434 3 1 1 2 2 2 0 0 0
1437 3 0 0 2 1 1 0 0 0
1440 5 0 0 3 0 0 0 0 0
1453 5 0 0 3 1 0 0 0 0
1465 5 1 1 3 0 0 0 0 0
1477 5 1 1 3 1 1 0 0 0
fn=testing.(*T).report
1267 7 2 2 2 0 0 1 0 0
1268 3 0 0 2 0 0 0 0 0
1269 3 2 2 2 0 0 0 0 0
fn=testing.(*common).Failed
677 12 1 1 4 0 0 2 0 0
678 6 0 0 6 0 0 0 0 0
679 6 0 0 2 0 0 0 0 0
680 2 0 0 0 0 0 0 0 0
681 16 0 0 6 0 0 2 0 0
fn=testing.(*common).runCleanup
869 121 20 18 22 0 0 44 0 0
870 44 0 0 22 11 10 22 0 0
871 33 10 9 22 0 0 11 0 0
872 33 0 0 11 0 0 11 0 0
873 22 0 0 0 0 0 22 0 0
874 33 0 0 11 0 0 0 0 0
875 55 10 9 22 0 0 11 0 0
fn=testing.Init
259 6 2 2 2 0 0 1 0 0
260 2 0 0 1 0 0 0 0 0
263 1 0 0 0 0 0 1 0 0
269 3 0 0 1 0 0 1 1 1
272 3 0 0 1 0 0 1 1 1
278 3 0 0 1 0 0 1 0 0
280 3 1 1 1 0 0 1 1 0
281 3 0 0 1 0 0 1 0 0
282 3 0 0 1 0 0 1 0 0
283 3 0 0 1 0 0 1 0 0
284 3 0 0 1 0 0 1 0 0
285 3 1 1 1 0 0 1 0 0
286 3 0 0 1 0 0 1 0 0
287 3 1 1 1 0 0 1 0 0
288 3 0 0 1 0 0 1 0 0
289 3 0 0 1 0 0 1 0 0
290 3 0 0 1 0 0 1 0 0
291 3 0 0 1 0 0 1 0 0
292 3 1 1 1 0 0 1 1 0
293 3 0 0 1 0 0 1 0 0
294 3 1 1 1 0 0 1 0 0
295 6 0 0 2 0 0 3 0 0
296 3 1 1 1 0 0 1 0 0
298 1 0 0 0 0 0 1 0 0
299 3 0 0 2 0 0 0 0 0
fn=testing.callerName
890 7 2 2 2 0 0 1 0 0
892 5 0 0 1 0 0 3 0 0
893 2 0 0 1 0 0 0 0 0
894 2 0 0 0 0 0 0 0 0
897 2 0 0 0 0 0 0 0 0
898 8 0 0 0 0 0 4 0 0
899 7 1 1 4 0 0 2 0 0
fn=testing.init
950 16 2 2 5 0 0 6 1 0
1160 13 1 1 5 0 0 5 1 0
fn=testing.parseCpuList
1526 7 2 2 2 0 0 1 0 0
1527 15 1 1 7 0 0 2 0 0
1528 5 0 0 2 0 0 3 0 0
1529 2 0 0 0 0 0 0 0 0
1539 5 1 1 3 1 0 0 0 0
1540 30 2 2 9 0 0 13 0 0
fn=testing.runBenchmarks
431 3 0 0 1 1 0 0 0 0
434 1 0 0 0 0 0 0 0 0
437 1 1 1 1 1 0 0 0 0
fn=testing.runTests
431 3 1 1 1 0 0 0 0 0
434 1 0 0 0 0 0 0 0 0
437 1 0 0 1 0 0 0 0 0
1126 5 1 1 1 0 0 3 0 0
1127 4 0 0 2 0 0 1 1 0
1128 8 0 0 2 0 0 5 0 0
1129 2 0 0 1 0 0 1 1 0
1130 1 1 1 0 0 0 1 0 0
1317 7 1 1 2 0 0 1 0 0
1319 19 3 2 6 0 0 3 0 0
1320 2 0 0 0 0 0 2 0 0
1321 16 1 1 9 1 0 1 0 0
1322 2 0 0 0 0 0 0 0 0
1325 16 2 2 6 0 0 8 0 0
1326 5 0 0 1 0 0 3 0 0
1328 10 0 0 3 0 0 5 0 0
1329 8 2 2 2 0 0 5 0 0
1330 6 0 0 2 1 0 2 0 0
1332 2 0 0 1 0 0 1 0 0
1334 1 0 0 0 0 0 0 0 0
1337 15 2 2 3 0 0 9 0 0
1346 13 2 1 3 0 0 4 0 0
1347 9 1 1 3 0 0 2 0 0
1350 5 2 1 2 0 0 2 0 0
1545 4 0 0 2 0 0 0 0 0
fn=testing.runTests.func1
1337 6 2 2 2 0 0 1 0 0
1338 4 0 0 2 0 0 0 0 0
1344 6 2 2 1 0 0 4 0 0
1345 3 0 0 2 0 0 0 0 0
fn=testing.runTests.func1.1
1344 11 1 1 4 0 0 4 1 1
fn=testing.tRunner
952 10 1 1 2 0 0 4 0 0
953 9 1 1 4 0 0 4 0 0
959 4 0 0 0 0 0 3 0 0
1042 4 1 1 0 0 0 3 0 0
1048 10 1 1 5 0 0 4 0 0
1049 1 0 0 0 0 0 1 0 0
1050 4 0 0 2 0 0 2 0 0
1053 2 0 0 1 0 0 1 0 0
1054 11 1 1 4 0 0 6 0 0
fn=testing.tRunner.func1
959 7 2 2 2 0 0 1 0 0
960 8 0 0 3 0 0 3 0 0
964 4 1 1 2 0 0 0 0 0
969 5 0 0 2 0 0 2 0 0
971 11 2 2 3 0 0 1 0 0
983 6 1 1 1 0 0 3 0 0
1001 5 0 0 0 0 0 0 0 0
1005 11 1 1 6 0 0 5 0 0
1007 2 0 0 1 0 0 0 0 0
1027 2 1 1 1 0 0 0 0 0
1032 2 1 1 0 0 0 2 0 0
1036 2 0 0 1 0 0 1 0 0
1037 6 1 1 2 0 0 1 0 0
1040 8 1 1 2 0 0 5 0 0
1041 3 1 1 2 0 0 0 0 0
fn=testing.tRunner.func2
1042 6 2 2 2 0 0 1 0 0
1043 6 0 0 4 0 0 0 0 0
1044 4 0 0 0 0 0 3 0 0
fn=testing.testDeps.MatchString-fm
1201 168 18 12 84 6 4 60 3 0
fl=.//usr/lib/golang/src/time/format.go
fn=_/home/alex/Documents/bradfield/csi/intro_to_computer_systems/07_memory_hierarchy_2/metrics.LoadData
815 16000000 376 105 5000000 1934 46 10000000 3215 154
fn=time.atoi
397 24000000 1189 77 8000000 0 0 4000000 0 0
399 40000000 98 33 12000000 1866 52 0 0 0
403 44000000 1756 74 12000000 0 0 12000000 734 31
405 8000000 0 0 0 0 0 0 0 0
408 16000000 192 58 8000000 0 0 4000000 0 0
409 8000000 0 0 0 0 0 0 0 0
411 28000000 0 0 4000000 0 0 8000000 0 0
fn=time.getnum
708 20000000 0 0 0 0 0 0 0 0
711 15000000 640 121 15000000 0 0 0 0 0
712 30000000 222 64 0 0 0 0 0 0
719 10000000 40 10 5000000 0 0 0 0 0
722 5000000 0 0 0 0 0 0 0 0
728 5000000 0 0 0 0 0 0 0 0
fn=time.init
394 16 2 2 5 0 0 6 1 1
678 10 1 1 3 0 0 5 1 1
1304 10 1 1 3 0 0 5 0 0
1358 7 0 0 3 0 0 3 1 1
1359 9 1 1 1 0 0 6 0 0
1360 10 1 1 2 0 0 6 0 0
1361 10 1 1 2 0 0 6 0 0
1362 10 1 1 2 0 0 6 0 0
1363 10 1 1 2 0 0 6 0 0
1364 10 1 1 2 0 0 6 0 0
1365 11 1 1 2 0 0 6 0 0
1366 11 1 1 2 0 0 6 0 0
fn=time.leadingInt
1307 12000000 3463 73 0 0 0 4000000 0 0
1309 58000000 256 37 8000000 0 0 0 0 0
1310 10000000 0 0 10000000 0 0 0 0 0
1311 40000000 0 0 0 0 0 0 0 0
1314 30000000 0 0 0 0 0 0 0 0
1318 30000000 0 0 0 0 0 0 0 0
1319 20000000 28893 80 0 0 0 0 0 0
1324 70000000 6664 143 8000000 0 0 16000000 0 0
fn=time.nextStdChunk
151 24000000 18576 84 0 0 0 8000000 885 31
152 63000000 0 0 16000000 0 0 0 0 0
153 51000000 23500 194 12000000 3461 58 0 0 0
154 4000000 0 0 0 0 0 0 0 0
164 6000000 29898 201 0 0 0 0 0 0
179 12000000 9 6 0 0 0 0 0 0
180 44000000 0 0 4000000 0 0 0 0 0
181 91000000 18 13 12000000 3045 58 20000000 0 0
187 4000000 0 0 0 0 0 0 0 0
188 9000000 33 8 1000000 0 0 0 0 0
189 16000000 151 61 2000000 0 0 5000000 0 0
193 2000000 0 0 0 0 0 0 0 0
194 10000000 6886 79 1000000 0 0 0 0 0
195 14000000 17905 124 2000000 0 0 5000000 0 0
214 12000000 0 0 0 0 0 0 0 0
217 4000000 0 0 0 0 0 0 0 0
220 4000000 54 32 0 0 0 0 0 0
230 12000000 29118 85 0 0 0 0 0 0
231 20000000 0 0 2000000 0 0 0 0 0
234 22000000 26901 75 2000000 2467 62 0 0 0
237 20000000 591 79 2000000 0 0 0 0 0
240 20000000 4460 84 2000000 0 0 0 0 0
243 26000000 6 5 4000000 0 0 0 0 0
247 4000000 1475 74 0 0 0 0 0 0
248 3000000 0 0 0 0 0 0 0 0
251 4000000 2433 66 0 0 0 0 0 0
252 1000000 26564 87 0 0 0 0 0 0
254 10000000 450 45 1000000 0 0 0 0 0
257 13000000 2053 73 2000000 0 0 0 0 0
258 14000000 36591 179 2000000 0 0 5000000 0 0
264 8000000 512 71 0 0 0 0 0 0
283 8000000 5 4 2000000 0 0 4000000 0 0
fn=time.parse
711 1000000 29118 87 1000000 0 0 0 0 0
712 3000000 0 0 0 0 0 0 0 0
827 7000000 17911 124 2000000 0 0 1000000 0 0
849 1000000 0 0 0 0 0 0 0 0
851 104000000 12 7 40000000 0 0 64000000 290 15
852 150000000 0 0 32000000 0 0 22000000 0 0
853 80000000 67 50 40000000 0 0 40000000 0 0
854 16000000 0 0 0 0 0 0 0 0
857 24000000 0 0 8000000 0 0 0 0 0
858 2000000 26564 75 0 0 0 0 0 0
865 85000000 3098 245 16000000 0 0 16000000 0 0
866 2000000 0 0 0 0 0 0 0 0
874 6000000 0 0 6000000 0 0 0 0 0
881 4000000 2699 64 0 0 0 0 0 0
882 3000000 0 0 0 0 0 0 0 0
886 8000000 0 0 2000000 0 0 0 0 0
887 6000000 26901 79 2000000 0 0 3000000 0 0
890 7000000 591 61 6000000 0 0 0 0 0
894 3000000 2998 132 0 0 0 0 0 0
895 9000000 13 8 4000000 0 0 4000000 0 0
896 10000000 0 0 2000000 0 0 0 0 0
904 3000000 0 0 0 0 0 0 0 0
905 5000000 130 52 0 0 0 0 0 0
906 2000000 51 38 0 0 0 0 0 0
908 16000000 27141 134 10000000 0 0 4000000 0 0
917 7000000 0 0 7000000 0 0 0 0 0
920 1000000 0 0 0 0 0 0 0 0
921 8000000 0 0 4000000 0 0 4000000 0 0
922 15000000 236 73 8000000 0 0 0 0 0
925 3000000 0 0 0 0 0 0 0 0
930 3000000 0 0 0 0 0 0 0 0
931 9000000 48 24 4000000 0 0 4000000 0 0
932 15000000 33 20 8000000 0 0 0 0 0
935 3000000 17905 82 0 0 0 0 0 0
936 9000000 2024 40 4000000 0 0 4000000 0 0
937 11000000 1243 7 6000000 0 0 0 0 0
943 5000000 0 0 1000000 0 0 0 0 0
955 3000000 30049 83 3000000 0 0 0 0 0
977 7000000 19439 75 7000000 0 0 0 0 0
985 3000000 14 8 0 0 0 0 0 0
986 10000000 6700 85 1000000 0 0 0 0 0
989 7000000 0 0 7000000 0 0 0 0 0
992 4000000 82 53 0 0 0 0 0 0
993 2000000 0 0 0 0 0 0 0 0
997 2000000 89 57 1000000 0 0 0 0 0
1001 13000000 34582 115 0 0 0 4000000 0 0
1015 5000000 0 0 0 0 0 0 0 0
1032 6000000 0 0 2000000 0 0 4000000 0 0
1033 2000000 0 0 0 0 0 0 0 0
1034 8000000 4460 79 3000000 0 0 4000000 0 0
1036 2000000 29118 106 0 0 0 0 0 0
1037 7000000 0 0 3000000 0 0 3000000 0 0
1039 7000000 0 0 3000000 0 0 0 0 0
1040 16000000 326 74 8000000 0 0 7000000 0 0
1041 2000000 0 0 0 0 0 0 0 0
1047 2000000 0 0 0 0 0 0 0 0
1059 28000000 605 95 14000000 0 0 14000000 0 0
1084 34000000 2467 98 2000000 0 0 23000000 0 0
1086 256000000 32561 231 46000000 0 0 130000000 4909 191
1087 15000000 50 36 10000000 0 0 0 0 0
1089 14000000 24 15 0 0 0 0 0 0
1093 2000000 0 0 0 0 0 0 0 0
1095 4000000 8 6 1000000 0 0 0 0 0
1100 5000000 45 24 1000000 0 0 0 0 0
1127 1021745 0 0 0 0 0 0 0 0
1132 4000000 183 25 1000000 0 0 0 0 0
1135 4000000 0 0 1000000 0 0 0 0 0
1141 6978255 31299 117 0 0 0 0 0 0
1145 3000000 0 0 1000000 0 0 0 0 0
1149 3000000 0 0 1000000 0 0 0 0 0
1150 19000000 6878 160 7000000 0 0 12000000 0 0
1151 6000000 192 15 1000000 0 0 3000000 0 0
1155 8000000 1 0 5000000 1 0 3000000 0 0
1156 4000000 3462 71 0 0 0 0 0 0
1162 2000000 15676 68 0 0 0 0 0 0
1163 10000000 2 2 4000000 0 0 4000000 2033 182
1167 2978255 0 0 0 0 0 0 0 0
fn=time.skip
754 48000000 10 8 16000000 0 0 8000000 0 0
755 71000000 0 0 32000000 0 0 0 0 0
756 15000000 0 0 5000000 0 0 0 0 0
757 5000000 0 0 0 0 0 0 0 0
764 20000000 5 4 5000000 0 0 0 0 0
767 30000000 0 0 0 0 0 0 0 0
768 35000000 0 0 0 0 0 0 0 0
770 56000000 480 86 16000000 0 0 24000000 0 0
fl=.//usr/lib/golang/src/time/sleep.go
fn=testing.(*M).stopAlarm
78 3 0 0 2 0 0 0 0 0
fl=.//usr/lib/golang/src/time/sys_unix.go
fn=time.closefd
31 6 0 0 2 0 0 1 0 0
32 3 1 1 1 0 0 2 0 0
33 3 0 0 2 0 0 0 0 0
fn=time.open
19 6 2 2 2 0 0 1 0 0
20 1 0 0 0 0 0 1 1 1
21 2 0 0 0 0 0 0 0 0
24 6 1 1 2 0 0 2 0 0
fn=time.readFile
28 2 0 0 0 0 0 0 0 0
fl=.//usr/lib/golang/src/time/time.go
fn=time.(*Time).addSec
180 4000000 6 4 2000000 0 0 0 0 0
193 2000000 22 19 2000000 0 0 0 0 0
194 1000000 0 0 1000000 0 0 0 0 0
fn=time.Date
198 4000000 6 5 1000000 0 0 0 0 0
201 1000000 0 0 0 0 0 0 0 0
202 3000000 4 3 0 0 0 1000000 0 0
207 1000000 0 0 0 0 0 0 0 0
1081 3000000 2699 84 0 0 0 0 0 0
1084 5000000 0 0 0 0 0 0 0 0
1085 2000000 0 0 0 0 0 0 0 0
1086 2000000 0 0 0 0 0 0 0 0
1089 5000000 0 0 0 0 0 0 0 0
1090 2000000 0 0 0 0 0 0 0 0
1091 2000000 0 0 0 0 0 0 0 0
1094 2000000 31883 80 0 0 0 0 0 0
1095 3000000 0 0 0 0 0 0 0 0
1096 2000000 0 0 0 0 0 0 0 0
1100 2273111 0 0 0 0 0 0 0 0
1132 5000000 4460 69 2000000 0 0 0 0 0
1361 4731110 0 0 0 0 0 0 0 0
1368 16000000 305 95 1000000 0 0 0 0 0
1373 19000000 207 116 0 0 0 0 0 0
1375 5000000 466 79 5000000 0 0 0 0 0
1397 6000000 5 3 2000000 0 0 1000000 0 0
1398 3000000 0 0 1000000 0 0 0 0 0
1403 2000000 0 0 1000000 0 0 0 0 0
1404 2000000 0 0 0 0 0 0 0 0
1405 273111 0 0 0 0 0 0 0 0
1408 3000000 0 0 0 0 0 1000000 0 0
1409 2000000 128 46 0 0 0 0 0 0
1410 2000000 0 0 0 0 0 0 0 0
1411 2000000 0 0 0 0 0 0 0 0
1414 1000000 51 4 0 0 0 0 0 0
1417 6000000 29118 80 1000000 42 2 0 0 0
1418 1317703 7332 18 0 0 0 0 0 0
1419 457038 0 0 0 0 0 0 0 0
1423 2771481 33 10 0 0 0 0 0 0
1426 1000000 0 0 0 0 0 0 0 0
1427 5000000 0 0 0 0 0 0 0 0
1429 3000000 591 75 0 0 0 1000000 0 0
1435 7000000 20081 125 3000000 0 0 3000000 0 0
1436 3000000 0 0 0 0 0 0 0 0
1446 4000000 10 6 1000000 0 0 3000000 0 0
1447 1000000 0 0 0 0 0 0 0 0
1448 8000000 0 0 4000000 0 0 3000000 0 0
fn=time.Duration.String
669 12 1 1 4 0 0 2 0 0
671 6 0 0 0 0 0 4 0 0
675 4 1 1 1 0 0 0 0 0
676 2 0 0 0 0 0 0 0 0
677 6 0 0 2 0 0 0 0 0
680 6 1 1 0 0 0 0 0 0
685 1 0 0 0 0 0 1 0 0
688 2 0 0 0 0 0 0 0 0
689 6 1 1 2 0 0 2 0 0
709 1 0 0 0 0 0 1 0 0
711 10 1 1 2 0 0 6 0 0
714 13 2 2 1 0 0 5 0 0
715 2 0 0 0 0 0 1 0 0
718 4 0 0 1 0 0 0 0 0
734 2 1 1 0 0 0 0 0 0
735 1 0 0 0 0 0 0 0 0
739 21 2 2 4 0 0 7 0 0
fn=time.Now
1121 66 11 9 22 0 0 11 0 0
1122 44 0 0 33 0 0 11 0 0
1123 11 0 0 11 11 8 0 0 0
1124 22 11 9 0 0 0 0 0 0
1125 44 0 0 0 0 0 0 0 0
1128 121 11 9 33 11 9 33 0 0
fn=time.Since
923 66 10 9 22 0 0 11 0 0
925 33 0 0 11 0 0 0 0 0
927 55 10 9 22 8 6 11 0 0
931 165 10 9 66 0 0 88 0 0
fn=time.Time.Sub
896 66 10 9 22 0 0 11 0 0
897 66 11 9 22 0 0 0 0 0
898 11 0 0 11 0 0 0 0 0
899 11 0 0 11 0 0 0 0 0
900 22 0 0 0 0 0 0 0 0
901 22 0 0 0 0 0 0 0 0
904 33 0 0 0 0 0 0 0 0
907 44 0 0 22 0 0 11 0 0
fn=time.fmtFrac
746 24 2 2 0 0 0 1 0 0
750 43 1 1 4 0 0 0 0 0
751 54 0 0 0 0 0 0 0 0
752 45 1 1 0 0 0 0 0 0
753 18 0 0 0 0 0 0 0 0
755 9 0 0 0 0 0 0 0 0
759 21 0 0 0 0 0 0 0 0
760 18 0 0 0 0 0 0 0 0
763 15 0 0 2 0 0 2 0 0
fn=time.fmtInt
768 5 1 1 0 0 0 1 0 0
770 6 0 0 3 0 0 0 0 0
774 5 1 1 0 0 0 0 0 0
775 2 0 0 0 0 0 0 0 0
776 11 0 0 0 0 0 1 0 0
780 4 1 1 2 0 0 1 0 0
fn=time.init
1118 4 1 1 1 0 0 2 1 1
fn=time.parse
169 3000000 0 0 1000000 0 0 0 0 0
172 1000000 64 41 1000000 0 0 0 0 0
176 3000000 3007 91 0 0 0 0 0 0
198 3000000 0 0 0 0 0 0 0 0
201 3000000 0 0 0 0 0 0 0 0
202 1000000 0 0 0 0 0 1000000 0 0
207 2000000 39 21 1000000 943 53 0 0 0
1071 2922239 2750 79 0 0 0 0 0 0
1074 9782550 50295 157 1956510 1897 43 0 0 0
1361 1450733 661 29 1000000 0 0 0 0 0
fl=.//usr/lib/golang/src/time/zoneinfo.go
fn=time.(*Location).get
87 12000000 216 66 4000000 0 0 2000000 0 0
88 6000000 0 0 2000000 0 0 0 0 0
91 6000000 0 0 0 0 0 0 0 0
92 1000000 0 0 0 0 0 0 0 0
94 8000001 79 44 4000001 1 0 2000000 0 0
fn=time.(*Location).lookup
124 12000000 55 29 4000000 0 0 2000000 0 0
125 8000000 1 0 4000000 0 0 4000000 1620 47
127 8000000 0 0 4000000 5008 111 0 0 0
132 11000000 6664 166 2000000 0 0 5000000 0 0
135 7000000 17 10 3000000 5372 93 0 0 0
143 9000000 5 4 3000000 2569 46 0 0 0
162 52292403 0 0 0 0 0 0 0 0
163 34437325 0 0 0 0 0 0 0 0
164 34437325 32 20 6887465 14129 227 0 0 0
165 13774930 0 0 0 0 0 0 0 0
169 6427539 0 0 0 0 0 0 0 0
172 8000000 0 0 1000000 0 0 0 0 0
173 3124046 3834 103 2000000 5740 116 1124046 0 0
174 1562023 0 0 1000000 0 0 562023 0 0
175 1562023 0 0 1000000 0 0 562023 0 0
180 5248092 0 0 1124046 0 0 0 0 0
181 20621303 337 75 3372138 0 0 3372138 0 0
182 4496184 28975 89 1124046 0 0 2810115 0 0
186 3503816 3009 88 875954 1 0 2189885 0 0
fn=time.init
610 10 0 0 3 0 0 5 0 0
fn=time.parse
106 5000000 4703 63 1000000 0 0 3000000 255 23
107 8115746 1953 30 4000000 289 56 2000000 235865 205993
108 19578730 1302 77 7000000 721 40 9000000 901568 786016
109 14231492 20 19 3000000 214 14 8000000 474894 394166
110 1000000 0 0 0 0 0 1000000 463127 401148
111 2000000 0 0 0 0 0 1000000 0 0
113 7231492 477 69 3000000 50 0 1000000 196561 166648
fn=time.tzset
247 3934168 3547 27 1124048 0 0 562024 0 0
253 6744288 622 95 3934168 0 0 2810120 1692 56
254 562024 0 0 0 0 0 0 0 0
255 4496192 34442 81 2248096 0 0 1686072 0 0
257 1124048 3185 76 0 0 0 0 0 0
264 562024 0 0 0 0 0 0 0 0
266 1124048 0 0 0 0 0 0 0 0
268 7306312 2654 82 2810120 0 0 3372144 0 0
fn=time.tzsetName
337 3372144 65611 167 1124048 0 0 562024 3922 86
338 1686072 0 0 562024 0 0 0 0 0
341 2248096 0 0 1124048 2072 100 0 0 0
342 15736672 0 0 2248096 0 0 0 0 0
344 13488576 977 39 0 0 0 0 0 0
345 1124048 0 0 0 0 0 0 0 0
348 7868336 8034 86 1124048 0 0 2810120 0 0
fn=time.tzsetNum
501 3372144 2055 74 1124048 0 0 562024 0 0
502 1686072 0 0 562024 0 0 0 0 0
506 7868336 22984 76 1686072 0 0 0 0 0
507 2248096 0 0 0 0 0 0 0 0
513 562024 0 0 0 0 0 0 0 0
514 1686072 0 0 0 0 0 0 0 0
515 1124048 0 0 0 0 0 0 0 0
519 1686072 103 32 562024 0 0 0 0 0
522 3934168 12 7 1124048 0 0 1686072 0 0
fn=time.tzsetOffset
368 3372144 644 72 1124048 0 0 562024 0 0
369 1686072 0 0 562024 0 0 0 0 0
373 2248096 460 74 1124048 0 0 0 0 0
375 1124048 11856 87 0 0 0 0 0 0
376 3934168 0 0 0 0 0 0 0 0
377 562024 0 0 0 0 0 0 0 0
381 5058216 121 44 2248096 0 0 2810120 2283 78
382 562024 0 0 0 0 0 0 0 0
385 562024 0 0 0 0 0 0 0 0
386 1124048 0 0 0 0 0 0 0 0
387 1686072 0 0 1124048 0 0 0 0 0
388 1124048 0 0 0 0 0 0 0 0
390 4496192 40 20 562024 0 0 2248096 0 0
413 562024 0 0 0 0 0 562024 0 0
fl=.//usr/lib/golang/src/time/zoneinfo_read.go
fn=time.(*dataIO).big4
43 935 1 1 561 0 0 0 0 0
49 2244 2 2 187 1 0 561 0 0
53 1122 1 1 374 0 0 187 0 0
54 561 0 0 187 0 0 0 0 0
55 374 0 0 0 0 0 0 0 0
59 1309 0 0 561 0 0 374 0 0
fn=time.(*dataIO).big8
62 474 1 1 158 0 0 79 0 0
63 790 0 0 316 0 0 316 0 0
64 553 1 1 237 0 0 158 0 0
65 158 0 0 0 0 0 0 0 0
69 632 0 0 237 0 0 158 0 0
fn=time.LoadLocationFromTZData
43 219 7 7 132 0 0 0 0 0
48 16 8 8 0 0 0 0 0 0
49 417 7 7 0 0 0 132 0 0
73 68 0 0 0 0 0 0 0 0
74 68 1 1 0 0 0 0 0 0
78 68 0 0 34 0 0 0 0 0
83 3 1 1 3 0 0 0 0 0
84 2 0 0 0 0 0 2 0 0
104 7 1 1 2 0 0 1 0 0
105 58 2 2 3 0 0 7 0 0
108 6 1 1 1 0 0 0 0 0
115 5 0 0 0 0 0 0 0 0
118 1 0 0 1 0 0 0 0 0
119 2 0 0 0 0 0 0 0 0
121 3 1 1 0 0 0 0 0 0
122 1 0 0 0 0 0 0 0 0
145 4 0 0 0 0 0 3 0 0
146 27 1 1 0 0 0 6 0 0
147 30 0 0 12 0 0 12 0 0
148 6 0 0 0 0 0 0 0 0
154 24 0 0 6 0 0 6 0 0
163 9 2 2 6 0 0 1 0 0
165 1 0 0 0 0 0 0 0 0
166 2 0 0 1 0 0 0 0 0
167 3 1 1 2 0 0 0 0 0
168 1 0 0 0 0 0 0 0 0
169 2 0 0 2 0 0 0 0 0
170 1 0 0 1 0 0 0 0 0
173 1 0 0 0 0 0 0 0 0
174 2 0 0 0 0 0 0 0 0
179 26 1 1 0 0 0 6 0 0
180 30 0 0 12 0 0 12 0 0
181 6 0 0 0 0 0 0 0 0
182 1 1 1 0 0 0 0 0 0
187 24 0 0 6 0 0 6 0 0
192 161 2 2 80 0 0 1 0 0
197 18 3 3 1 0 0 7 0 0
200 5 0 0 1 0 0 2 0 0
203 14 1 1 1 0 0 7 0 0
206 7 0 0 1 0 0 3 0 0
209 4 1 1 1 0 0 0 0 0
213 5 1 1 1 0 0 2 0 0
217 5 1 1 1 0 0 2 0 0
219 2 1 1 1 0 0 0 0 0
224 1 0 0 0 0 0 0 0 0
225 7 0 0 2 0 0 0 0 0
226 11 2 2 2 0 0 5 0 0
232 2 1 1 1 0 0 1 0 0
233 2 0 0 0 0 0 0 0 0
238 8 1 1 1 0 0 5 0 0
239 106 0 0 35 0 0 17 0 0
242 102 1 1 34 0 0 34 0 0
248 119 0 0 34 0 0 34 0 0
250 51 0 0 0 0 0 0 0 0
253 68 0 0 0 0 0 17 0 0
254 120 1 1 18 0 0 0 0 0
257 393 2 2 121 0 0 102 0 0
269 11 2 2 3 0 0 6 0 0
270 398 0 0 79 0 0 79 0 0
272 79 0 0 0 0 0 0 0 0
279 474 0 0 158 0 0 158 0 0
285 395 1 1 158 0 0 79 0 0
286 634 1 1 318 0 0 0 0 0
289 79 0 0 0 0 0 79 0 0
290 300 0 0 80 0 0 0 0 0
291 165 1 1 97 0 0 17 0 0
293 300 0 0 80 0 0 0 0 0
294 182 1 1 97 0 0 17 0 0
298 2 1 1 0 0 0 0 0 0
305 118 5 5 14 0 0 18 0 0
309 2 0 0 1 0 0 1 0 0
310 240 1 1 2 0 0 0 0 0
311 1179 1 1 157 0 0 0 0 0
312 2 0 0 1 0 0 1 0 0
313 2 0 0 0 0 0 1 0 0
314 2 0 0 1 0 0 1 0 0
315 3 1 1 0 0 0 0 0 0
317 4 1 1 2 0 0 0 0 0
320 14 0 0 5 0 0 7 0 0
321 2 1 1 1 0 0 1 0 0
322 1 0 0 0 0 0 1 0 0
325 77 3 3 31 0 0 13 0 0
326 65 0 0 16 0 0 24 0 0
328 1 0 0 0 0 0 0 0 0
333 17 1 1 10 0 0 1 0 0
338 6 0 0 2 0 0 2 1 0
fn=time.byteString
89 102 2 2 34 0 0 17 0 0
90 261 0 0 34 0 0 0 0 0
91 210 0 0 70 0 0 0 0 0
92 221 1 1 85 0 0 119 0 0
fn=time.init
98 13 2 2 5 0 0 5 0 0
fn=time.loadLocation
507 6 2 2 2 0 0 1 0 0
508 12 1 1 4 0 0 2 0 0
509 12 1 1 7 0 0 5 0 0
510 2 0 0 0 0 0 0 0 0
511 13 2 2 5 0 0 6 0 0
512 6 0 0 2 1 0 2 1 0
515 2 0 0 0 0 0 2 0 0
fn=time.loadTzinfo
496 6 1 1 2 0 0 1 0 0
497 4 0 0 1 0 0 0 0 0
500 22 3 3 10 0 0 10 0 0
fn=time.loadTzinfoFromDirOrZip
343 6 2 2 2 0 0 1 0 0
344 16 1 1 3 1 1 0 0 0
347 2 0 0 0 0 0 0 0 0
348 14 2 2 4 0 0 8 0 0
350 16 0 0 7 0 0 8 0 0
fn=time.readFile
529 26 3 3 4 0 0 6 1 1
530 10 1 1 5 0 0 4 1 1
531 2 0 0 0 0 0 0 0 0
534 4 0 0 0 0 0 3 1 1
536 519 1 1 0 0 0 512 63 63
540 1 0 0 0 0 0 0 0 0
541 2 0 0 0 0 0 0 0 0
542 6 0 0 1 0 0 0 0 0
543 30 3 3 7 0 0 13 0 0
545 7 1 1 1 0 0 0 0 0
548 15 0 0 6 0 0 6 0 0
552 13 1 1 4 0 0 8 0 0
fl=.//usr/lib/golang/src/time/zoneinfo_unix.go
fn=time.initLocal
26 6 2 2 2 0 0 1 0 0
32 7 0 0 3 0 0 3 0 0
33 1 0 0 0 0 0 0 0 0
35 15 2 2 2 0 0 9 0 0
36 1 0 0 0 0 0 0 0 0
37 11 1 1 3 0 0 3 1 1
38 5 0 0 1 0 0 2 0 0
39 3 1 1 2 1 0 0 0 0
fl=.//usr/lib/golang/src/unicode/tables.go
fn=unicode.init
9 514 45 45 147 14 14 220 3 0
3586 2 0 0 1 0 0 1 0 0
5626 494 43 43 141 7 1 213 6 0
7593 88 7 7 25 1 1 39 3 0
7880 49 4 4 15 0 0 21 2 0
fl=.//usr/lib/golang/src/unicode/utf8/utf8.go
fn=encoding/csv.(*Reader).readRecord
41 2200000 41 24 0 0 0 0 0 0
323 2200000 0 0 0 0 0 0 0 0
325 1100000 53 27 0 0 0 0 0 0
516 1100002 0 0 0 0 0 0 0 0
517 2200004 0 0 0 0 0 0 0 0
fn=unicode/utf8.DecodeRune
151 300000 10 7 0 0 0 100000 0 0
153 300000 12 7 100000 0 0 0 0 0
156 200000 0 0 200000 0 0 0 0 0
157 200000 0 0 100000 121 8 0 0 0
158 200000 0 0 0 0 0 0 0 0
162 200000 18 7 0 0 0 0 0 0
163 1000000 0 0 200000 0 0 200000 0 0
fn=unicode/utf8.RuneCount
373 18 3 3 0 0 0 6 0 0
376 135 3 3 12 0 0 0 0 0
377 31 0 0 0 0 0 0 0 0
378 62 0 0 31 0 0 0 0 0
379 62 0 0 0 0 0 0 0 0
381 31 0 0 0 0 0 0 0 0
382 31 0 0 0 0 0 0 0 0
406 24 9 6 12 0 0 6 0 0
fn=unicode/utf8.RuneCountInString
410 9 3 3 0 0 0 3 0 0
412 421 0 0 6 0 0 0 0 0
413 200 0 0 100 0 0 0 0 0
414 200 0 0 0 0 0 0 0 0
416 100 3 3 0 0 0 0 0 0
417 100 0 0 0 0 0 0 0 0
441 12 3 3 6 0 0 3 0 0
fl=./<autogenerated>
fn=flag.(*boolValue).String
1 8 0 0 0 0 0 0 0 0
fn=flag.(*stringValue).String
1 60 0 0 36 0 0 24 0 0
fn=hash/crc32.simplePopulateTable
1 1 0 0 1 0 0 0 0 0
fn=os.errClosed
1 4 0 0 2 0 0 2 0 0
fn=os.errExist
1 4 0 0 2 0 0 2 0 0
fn=os.errInvalid
1 4 0 0 2 0 0 2 0 0
fn=os.errNoDeadline
1 4 0 0 2 0 0 2 0 0
fn=os.errNotExist
1 4 0 0 2 0 0 2 0 0
fn=os.errPermission
1 4 0 0 2 0 0 2 0 0
fn=os.runtime_beforeExit
1 1 1 1 1 0 0 0 0 0
fn=regexp.init.0
1 1 0 0 1 0 0 0 0 0
fn=runtime.(*addrRanges).findSucc
1 163 0 0 163 0 0 0 0 0
fn=runtime.(*gcControllerState).endCycle
1 20 6 5 0 0 0 10 0 0
fn=runtime.(*hmap).incrnoverflow
1 2685 0 0 2685 0 0 0 0 0
fn=runtime.(*itabTableType).find
1 2 0 0 2 0 0 0 0 0
fn=runtime.(*lfstack).pop
1 616 0 0 616 0 0 0 0 0
fn=runtime.(*mcache).nextFree
1 2 1 0 0 0 0 1 0 0
fn=runtime.(*mspan).countAlloc
1 133523 0 0 0 0 0 0 0 0
fn=runtime.(*mspan).refillAllocCache
1 759552 0 0 759552 0 0 0 0 0
fn=runtime.(*pageBits).clearAll
1 40 0 0 40 0 0 0 0 0
fn=runtime.(*pageBits).setAll
1 20 0 0 20 0 0 0 0 0
fn=runtime.(*pallocBits).summarize
1 16617 0 0 0 0 0 0 0 0
fn=runtime.(*sigctxt).pushCall
1 2 0 0 2 0 0 0 0 0
fn=runtime.(*stackScanState).findObject
1 20 0 0 20 0 0 0 0 0
fn=runtime.adjustSignalStack
1 147 0 0 98 0 0 0 0 0
fn=runtime.adjustsudogs
1 9 6 5 9 0 0 0 0 0
fn=runtime.asyncPreempt2
1 2 0 0 0 0 0 0 0 0
fn=runtime.atoi
1 4 0 0 2 0 0 2 0 0
fn=runtime.atomicstorep
1 1 0 0 0 0 0 0 0 0
fn=runtime.cansemacquire
1 40 0 0 40 0 0 0 0 0
fn=runtime.chanrecv.func1
1 3 0 0 2 0 0 0 0 0
fn=runtime.chanrecv1
1 30 8 6 20 1 1 0 0 0
fn=runtime.chansend.func1
1 24 0 0 16 0 0 0 0 0
fn=runtime.chansend1
1 30 0 0 20 0 0 0 0 0
fn=runtime.efaceOf
1 10 0 0 5 0 0 5 0 0
fn=runtime.entersyscall
1 34713 0 0 23142 0 0 0 0 0
fn=runtime.entersyscallblock
1 48 1 1 16 0 0 0 0 0
fn=runtime.findBitRange64
1 307 0 0 0 0 0 0 0 0
fn=runtime.findObject
1 556428 0 0 0 0 0 0 0 0
fn=runtime.findsghi
1 3 0 0 3 0 0 0 0 0
fn=runtime.float64frombits
1 2 0 0 1 0 0 1 0 0
fn=runtime.funcPC
1 6 0 0 4 1 1 2 0 0
fn=runtime.futexsleep
1 399 14 8 266 30 13 0 0 0
fn=runtime.gcMarkDone
1 4 2 2 0 0 0 2 0 0
fn=runtime.gcMarkTermination.func3
1 60 1 0 40 4 0 0 0 0
fn=runtime.gcWakeAllAssists
1 20 10 10 0 0 0 10 1 0
fn=runtime.gcd
1 976 0 0 976 0 0 0 0 0
fn=runtime.gopark
1 24 5 4 0 0 0 12 0 0
fn=runtime.heapBits.forwardOrBoundary
1 2 0 0 0 0 0 1 1 1
fn=runtime.init.0
1 2 0 0 0 0 0 0 0 0
fn=runtime.mSysStatInc
1 3 1 1 2 0 0 0 0 0
fn=runtime.makeslice
1 2 1 1 0 0 0 1 0 0
fn=runtime.mapaccess1_fast64
1 2 2 2 0 0 0 1 0 0
fn=runtime.memclrHasPointers
1 210 0 0 140 0 0 0 0 0
fn=runtime.memhash64Fallback
1 2 0 0 2 0 0 0 0 0
fn=runtime.mmap
1 777 71 49 444 0 0 222 0 0
fn=runtime.mspinning
1 2 0 0 2 0 0 0 0 0
fn=runtime.nanotime
1 60 0 0 36 0 0 12 0 0
fn=runtime.netpollunblock
1 2 0 0 0 0 0 0 0 0
fn=runtime.newproc
1 87 0 0 58 0 0 0 0 0
fn=runtime.notetsleep_internal
1 6 0 0 4 0 0 0 0 0
fn=runtime.purgecachedstats
1 640 9 3 640 0 0 0 0 0
fn=runtime.readyWithTime
1 10 2 0 0 0 0 5 0 0
fn=runtime.reentersyscall
1 34713 0 0 11571 0 0 0 0 0
fn=runtime.reflectcallmove
1 1 0 0 0 0 0 0 0 0
fn=runtime.round2
1 37 0 0 37 0 0 0 0 0
fn=runtime.runqempty
1 250285 0 0 250281 0 0 0 0 0
fn=runtime.runqget
1 2315140 0 0 1157570 0 0 578785 0 0
fn=runtime.scavengeSleep
1 12 1 1 0 0 0 6 0 0
fn=runtime.semrelease1
1 50 26 21 0 0 0 25 10 6
fn=runtime.setsig
1 56 0 0 0 0 0 0 0 0
fn=runtime.sigFetchG
1 98 0 0 49 0 0 49 0 0
fn=runtime.signalstack
1 18 0 0 12 0 0 0 0 0
fn=runtime.stackinit
1 1 0 0 1 0 0 0 0 0
fn=runtime.stacklog2
1 6 0 0 6 0 0 0 0 0
fn=runtime.startTheWorld.func1
1 60 2 1 40 0 0 0 0 0
fn=runtime.sysAlloc
1 356 0 0 178 0 0 89 0 0
fn=runtime.sysFree
1 15 0 0 10 0 0 0 0 0
fn=runtime.timediv
1 1 0 0 1 0 0 0 0 0
fn=runtime.typedslicecopy
1 3 0 0 2 0 0 0 0 0
fn=runtime.unlock
1 2 1 1 0 0 0 1 0 0
fn=sort.(*StringSlice).Len
1 45 6 6 18 0 0 6 0 0
fn=sort.maxDepth
1 6 0 0 3 0 0 3 0 0
fn=strconv.bigFtoa
1 6 3 3 0 0 0 3 0 0
fn=sync.runtime_procPin
1 71 0 0 71 0 0 0 0 0
fn=sync.runtime_procUnpin
1 71 0 0 71 0 0 0 0 0
fn=testing.runTests.func1.1
1 3 0 0 2 0 0 0 0 0
fn=testing/internal/testdeps.(*TestDeps).ImportPath
1 16 2 2 7 0 0 3 0 0
fn=testing/internal/testdeps.(*TestDeps).MatchString
1 174 18 11 78 0 0 54 3 0
fn=time.(*Time).addSec
1 1000000 0 0 0 0 0 0 0 0
fn=time.getnum
1 85000000 53 39 5000000 0 0 20000000 0 0
fn=time.readFile
1 2 0 0 0 0 0 1 0 0
fl=./_testmain.go
fn=main.init.0
34 6 1 1 2 0 0 1 0 0
35 4 1 1 1 0 0 2 1 0
36 3 0 0 2 0 0 0 0 0
fn=main.main
40 6 1 1 2 0 0 1 0 0
42 18 2 2 9 2 2 9 0 0
44 5 2 2 1 0 0 4 0 0
fl=???
fn=???
0 191058 884 81 63686 0 0 0 0 0
fn=_rt0_amd64_linux
0 1 1 1 0 0 0 0 0 0
fn=indexbytebody
0 2496793 0 0 2496793 0 0 0 0 0
fn=internal/cpu.xgetbv
0 1 0 0 1 0 0 0 0 0
fn=internal/testlog.Open
0 2 2 1 0 0 0 1 0 0
fn=memeqbody
0 16 0 0 16 0 0 0 0 0
fn=runtime.asyncPreempt
0 2 0 0 2 0 0 0 0 0
fn=runtime.duffcopy
0 8 0 0 8 0 0 0 0 0
fn=runtime.memclrNoHeapPointers
0 45078 0 0 45078 0 0 0 0 0
fn=runtime/internal/atomic.Store64
0 13 0 0 13 0 0 0 0 0
fn=sync/atomic.StoreUintptr
0 13 11 8 0 0 0 0 0 0
fn=unicode.init
0 2130 183 183 608 26 13 914 6 1
summary: 24710054113 3092277 103798 5589899226 225130909 116094853 3071566364 11327933 9229195
